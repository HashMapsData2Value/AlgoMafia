/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { AlgorandClientInterface } from '@algorandfoundation/algokit-utils/types/algorand-client-interface'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"TownHall","desc":"","methods":[{"name":"createApplication","args":[],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"dummyOpUp","desc":"Dummy Op Up\nDummy operation to get more opcode budget\n - The number to return, necssary to deduplicate the name","args":[{"name":"i","type":"uint64"}],"returns":{"type":"uint64","desc":"the number (but we do nothing with it)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dlog","args":[{"name":"g","type":"byte[]"},{"name":"x","type":"byte[]"},{"name":"v","type":"byte[]"},{"name":"z","type":"byte[]"}],"returns":{"type":"bool"},"actions":{"create":[],"call":["NoOp"]}},{"name":"hashPointToPoint","args":[{"name":"point","type":"byte[]"}],"returns":{"type":"byte[]"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getGameState","args":[],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setLSIGFunderAddress","args":[{"name":"funderLSigAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"joinGameLobby","args":[{"name":"depositTxn","type":"pay"},{"name":"NIZK_DLOG","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"assignRole","args":[{"name":"msg","type":"byte[]"},{"name":"pkAll","type":"byte[]"},{"name":"keyImage","type":"byte[]"},{"name":"sig","type":"byte[]"},{"name":"challenges","type":"byte[]"},{"name":"funderLSigTxn","type":"pay"},{"name":"ringLSigTxn0","type":"pay"},{"name":"ringLSigTxn1","type":"pay"},{"name":"ringLSigTxn2","type":"pay"},{"name":"ringLSigTxn3","type":"pay"},{"name":"ringLSigTxn4","type":"pay"},{"name":"ringLSigTxn5","type":"pay"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageVote","args":[{"name":"vote","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageEliminate","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageUnmasking","args":[{"name":"blsSk","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"nightStageMafiaCommit","args":[{"name":"commitment","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"nightStageDoctorCommit","args":[{"name":"commitment","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageMafiaReveal","args":[{"name":"victimAim","type":"address"},{"name":"blinder","type":"byte[32]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageDoctorReveal","args":[{"name":"patientAim","type":"address"},{"name":"blinder","type":"byte[32]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageDeadOrSaved","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageUnmasking","args":[{"name":"blsSk","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"gameOver","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"handleAssignRolesTimeout","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"triggerTimeoutState","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"deleteApplication","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["DeleteApplication"]}}],"arcs":[4,56],"structs":{},"state":{"schema":{"global":{"bytes":25,"ints":17},"local":{"bytes":0,"ints":0}},"keys":{"global":{"creatorAddress":{"key":"Y3JlYXRvckFkZHJlc3M=","keyType":"AVMBytes","valueType":"address"},"player1AlgoAddr":{"key":"cGxheWVyMUFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player2AlgoAddr":{"key":"cGxheWVyMkFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player3AlgoAddr":{"key":"cGxheWVyM0FsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player4AlgoAddr":{"key":"cGxheWVyNEFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player5AlgoAddr":{"key":"cGxheWVyNUFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player6AlgoAddr":{"key":"cGxheWVyNkFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"mafia":{"key":"bWFmaWE=","keyType":"AVMBytes","valueType":"address"},"mafiaKeyImage":{"key":"bWFmaWFLZXlJbWFnZQ==","keyType":"AVMBytes","valueType":"AVMBytes"},"doctor":{"key":"ZG9jdG9y","keyType":"AVMBytes","valueType":"address"},"doctorKeyImage":{"key":"ZG9jdG9yS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"farmer":{"key":"ZmFybWVy","keyType":"AVMBytes","valueType":"address"},"farmerKeyImage":{"key":"ZmFybWVyS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"butcher":{"key":"YnV0Y2hlcg==","keyType":"AVMBytes","valueType":"address"},"butcherKeyImage":{"key":"YnV0Y2hlcktleUltYWdl","keyType":"AVMBytes","valueType":"AVMBytes"},"innkeep":{"key":"aW5ua2VlcA==","keyType":"AVMBytes","valueType":"address"},"innkeepKeyImage":{"key":"aW5ua2VlcEtleUltYWdl","keyType":"AVMBytes","valueType":"AVMBytes"},"grocer":{"key":"Z3JvY2Vy","keyType":"AVMBytes","valueType":"address"},"grocerKeyImage":{"key":"Z3JvY2VyS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"lsigFunderAddress":{"key":"bHNpZ0Z1bmRlckFkZHJlc3M=","keyType":"AVMBytes","valueType":"address"},"player1HasVoted":{"key":"cGxheWVyMUhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player1ReceivedVotes":{"key":"cGxheWVyMVJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player2HasVoted":{"key":"cGxheWVyMkhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player2ReceivedVotes":{"key":"cGxheWVyMlJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player3HasVoted":{"key":"cGxheWVyM0hhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player3ReceivedVotes":{"key":"cGxheWVyM1JlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player4HasVoted":{"key":"cGxheWVyNEhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player4ReceivedVotes":{"key":"cGxheWVyNFJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player5HasVoted":{"key":"cGxheWVyNUhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player5ReceivedVotes":{"key":"cGxheWVyNVJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player6HasVoted":{"key":"cGxheWVyNkhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player6ReceivedVotes":{"key":"cGxheWVyNlJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"playersVoted":{"key":"cGxheWVyc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"playersAlive":{"key":"cGxheWVyc0FsaXZl","keyType":"AVMBytes","valueType":"uint64"},"justEliminatedPlayer":{"key":"anVzdEVsaW1pbmF0ZWRQbGF5ZXI=","keyType":"AVMBytes","valueType":"address"},"mafiaCommitment":{"key":"bWFmaWFDb21taXRtZW50","keyType":"AVMBytes","valueType":"AVMBytes"},"doctorCommitment":{"key":"ZG9jdG9yQ29tbWl0bWVudA==","keyType":"AVMBytes","valueType":"AVMBytes"},"mafiaVictim":{"key":"bWFmaWFWaWN0aW0=","keyType":"AVMBytes","valueType":"address"},"doctorPatient":{"key":"ZG9jdG9yUGF0aWVudA==","keyType":"AVMBytes","valueType":"address"},"playersJoined":{"key":"cGxheWVyc0pvaW5lZA==","keyType":"AVMBytes","valueType":"uint64"},"gameState":{"key":"Z2FtZVN0YXRl","keyType":"AVMBytes","valueType":"uint64"},"lastCommitedRound":{"key":"bGFzdENvbW1pdGVkUm91bmQ=","keyType":"AVMBytes","valueType":"uint64"}},"local":{},"box":{}},"maps":{"global":{},"local":{},"box":{"quickAccessPKBoxes":{"keyType":"uint64","valueType":"AVMBytes"},"hashFilter":{"keyType":"AVMBytes","valueType":"AVMBytes"}}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/TownHall.algo.ts:36","pc":[0]},{"teal":2,"source":"contracts/TownHall.algo.ts:36","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]},{"teal":3,"source":"contracts/TownHall.algo.ts:36","pc":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822]},{"teal":15,"source":"contracts/TownHall.algo.ts:36","pc":[823,824]},{"teal":16,"source":"contracts/TownHall.algo.ts:36","pc":[825]},{"teal":17,"source":"contracts/TownHall.algo.ts:36","pc":[826]},{"teal":18,"source":"contracts/TownHall.algo.ts:36","pc":[827]},{"teal":19,"source":"contracts/TownHall.algo.ts:36","pc":[828,829]},{"teal":20,"source":"contracts/TownHall.algo.ts:36","pc":[830]},{"teal":21,"source":"contracts/TownHall.algo.ts:36","pc":[831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856]},{"teal":25,"source":"contracts/TownHall.algo.ts:36","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[857]},{"teal":30,"source":"contracts/TownHall.algo.ts:138","pc":[858,859,860]},{"teal":31,"source":"contracts/TownHall.algo.ts:138","pc":[861]},{"teal":32,"source":"contracts/TownHall.algo.ts:138","pc":[862]},{"teal":36,"source":"contracts/TownHall.algo.ts:138","pc":[863,864,865]},{"teal":40,"source":"contracts/TownHall.algo.ts:139","pc":[866,867]},{"teal":41,"source":"contracts/TownHall.algo.ts:139","pc":[868,869]},{"teal":42,"source":"contracts/TownHall.algo.ts:139","pc":[870]},{"teal":46,"source":"contracts/TownHall.algo.ts:141","pc":[871,872]},{"teal":47,"source":"contracts/TownHall.algo.ts:141","pc":[873,874]},{"teal":48,"source":"contracts/TownHall.algo.ts:141","pc":[875]},{"teal":52,"source":"contracts/TownHall.algo.ts:143","pc":[876]},{"teal":53,"source":"contracts/TownHall.algo.ts:143","pc":[877,878]},{"teal":54,"source":"contracts/TownHall.algo.ts:143","pc":[879,880]},{"teal":55,"source":"contracts/TownHall.algo.ts:143","pc":[881]},{"teal":56,"source":"contracts/TownHall.algo.ts:143","pc":[882]},{"teal":60,"source":"contracts/TownHall.algo.ts:144","pc":[883,884]},{"teal":61,"source":"contracts/TownHall.algo.ts:144","pc":[885,886]},{"teal":62,"source":"contracts/TownHall.algo.ts:144","pc":[887,888]},{"teal":63,"source":"contracts/TownHall.algo.ts:144","pc":[889]},{"teal":64,"source":"contracts/TownHall.algo.ts:144","pc":[890]},{"teal":68,"source":"contracts/TownHall.algo.ts:145","pc":[891,892]},{"teal":69,"source":"contracts/TownHall.algo.ts:145","pc":[893,894]},{"teal":70,"source":"contracts/TownHall.algo.ts:145","pc":[895,896]},{"teal":71,"source":"contracts/TownHall.algo.ts:145","pc":[897]},{"teal":72,"source":"contracts/TownHall.algo.ts:145","pc":[898]},{"teal":76,"source":"contracts/TownHall.algo.ts:146","pc":[899,900]},{"teal":77,"source":"contracts/TownHall.algo.ts:146","pc":[901,902]},{"teal":78,"source":"contracts/TownHall.algo.ts:146","pc":[903,904]},{"teal":79,"source":"contracts/TownHall.algo.ts:146","pc":[905]},{"teal":80,"source":"contracts/TownHall.algo.ts:146","pc":[906]},{"teal":84,"source":"contracts/TownHall.algo.ts:147","pc":[907,908]},{"teal":85,"source":"contracts/TownHall.algo.ts:147","pc":[909,910]},{"teal":86,"source":"contracts/TownHall.algo.ts:147","pc":[911,912]},{"teal":87,"source":"contracts/TownHall.algo.ts:147","pc":[913]},{"teal":88,"source":"contracts/TownHall.algo.ts:147","pc":[914]},{"teal":92,"source":"contracts/TownHall.algo.ts:148","pc":[915,916]},{"teal":93,"source":"contracts/TownHall.algo.ts:148","pc":[917,918]},{"teal":94,"source":"contracts/TownHall.algo.ts:148","pc":[919,920]},{"teal":95,"source":"contracts/TownHall.algo.ts:148","pc":[921]},{"teal":96,"source":"contracts/TownHall.algo.ts:148","pc":[922]},{"teal":100,"source":"contracts/TownHall.algo.ts:150","pc":[923,924]},{"teal":101,"source":"contracts/TownHall.algo.ts:150","pc":[925,926]},{"teal":102,"source":"contracts/TownHall.algo.ts:150","pc":[927]},{"teal":106,"source":"contracts/TownHall.algo.ts:151","pc":[928,929]},{"teal":107,"source":"contracts/TownHall.algo.ts:151","pc":[930,931]},{"teal":108,"source":"contracts/TownHall.algo.ts:151","pc":[932]},{"teal":112,"source":"contracts/TownHall.algo.ts:152","pc":[933,934]},{"teal":113,"source":"contracts/TownHall.algo.ts:152","pc":[935,936]},{"teal":114,"source":"contracts/TownHall.algo.ts:152","pc":[937]},{"teal":118,"source":"contracts/TownHall.algo.ts:153","pc":[938,939]},{"teal":119,"source":"contracts/TownHall.algo.ts:153","pc":[940,941]},{"teal":120,"source":"contracts/TownHall.algo.ts:153","pc":[942]},{"teal":124,"source":"contracts/TownHall.algo.ts:154","pc":[943,944]},{"teal":125,"source":"contracts/TownHall.algo.ts:154","pc":[945,946]},{"teal":126,"source":"contracts/TownHall.algo.ts:154","pc":[947]},{"teal":130,"source":"contracts/TownHall.algo.ts:155","pc":[948,949]},{"teal":131,"source":"contracts/TownHall.algo.ts:155","pc":[950,951]},{"teal":132,"source":"contracts/TownHall.algo.ts:155","pc":[952]},{"teal":136,"source":"contracts/TownHall.algo.ts:157","pc":[953,954]},{"teal":137,"source":"contracts/TownHall.algo.ts:157","pc":[955]},{"teal":138,"source":"contracts/TownHall.algo.ts:157","pc":[956]},{"teal":142,"source":"contracts/TownHall.algo.ts:158","pc":[957,958]},{"teal":143,"source":"contracts/TownHall.algo.ts:158","pc":[959]},{"teal":144,"source":"contracts/TownHall.algo.ts:158","pc":[960]},{"teal":148,"source":"contracts/TownHall.algo.ts:159","pc":[961,962]},{"teal":149,"source":"contracts/TownHall.algo.ts:159","pc":[963]},{"teal":150,"source":"contracts/TownHall.algo.ts:159","pc":[964]},{"teal":154,"source":"contracts/TownHall.algo.ts:160","pc":[965,966]},{"teal":155,"source":"contracts/TownHall.algo.ts:160","pc":[967]},{"teal":156,"source":"contracts/TownHall.algo.ts:160","pc":[968]},{"teal":160,"source":"contracts/TownHall.algo.ts:161","pc":[969,970]},{"teal":161,"source":"contracts/TownHall.algo.ts:161","pc":[971]},{"teal":162,"source":"contracts/TownHall.algo.ts:161","pc":[972]},{"teal":166,"source":"contracts/TownHall.algo.ts:162","pc":[973,974]},{"teal":167,"source":"contracts/TownHall.algo.ts:162","pc":[975]},{"teal":168,"source":"contracts/TownHall.algo.ts:162","pc":[976]},{"teal":172,"source":"contracts/TownHall.algo.ts:163","pc":[977,978]},{"teal":173,"source":"contracts/TownHall.algo.ts:163","pc":[979]},{"teal":174,"source":"contracts/TownHall.algo.ts:163","pc":[980]},{"teal":178,"source":"contracts/TownHall.algo.ts:165","pc":[981,982]},{"teal":179,"source":"contracts/TownHall.algo.ts:165","pc":[983]},{"teal":180,"source":"contracts/TownHall.algo.ts:165","pc":[984]},{"teal":184,"source":"contracts/TownHall.algo.ts:166","pc":[985,986]},{"teal":185,"source":"contracts/TownHall.algo.ts:166","pc":[987]},{"teal":186,"source":"contracts/TownHall.algo.ts:166","pc":[988]},{"teal":190,"source":"contracts/TownHall.algo.ts:167","pc":[989,990]},{"teal":191,"source":"contracts/TownHall.algo.ts:167","pc":[991]},{"teal":192,"source":"contracts/TownHall.algo.ts:167","pc":[992]},{"teal":196,"source":"contracts/TownHall.algo.ts:168","pc":[993,994]},{"teal":197,"source":"contracts/TownHall.algo.ts:168","pc":[995]},{"teal":198,"source":"contracts/TownHall.algo.ts:168","pc":[996]},{"teal":202,"source":"contracts/TownHall.algo.ts:169","pc":[997,998]},{"teal":203,"source":"contracts/TownHall.algo.ts:169","pc":[999]},{"teal":204,"source":"contracts/TownHall.algo.ts:169","pc":[1000]},{"teal":208,"source":"contracts/TownHall.algo.ts:170","pc":[1001,1002]},{"teal":209,"source":"contracts/TownHall.algo.ts:170","pc":[1003]},{"teal":210,"source":"contracts/TownHall.algo.ts:170","pc":[1004]},{"teal":214,"source":"contracts/TownHall.algo.ts:171","pc":[1005,1006]},{"teal":215,"source":"contracts/TownHall.algo.ts:171","pc":[1007]},{"teal":216,"source":"contracts/TownHall.algo.ts:171","pc":[1008]},{"teal":220,"source":"contracts/TownHall.algo.ts:173","pc":[1009,1010]},{"teal":221,"source":"contracts/TownHall.algo.ts:173","pc":[1011]},{"teal":222,"source":"contracts/TownHall.algo.ts:173","pc":[1012]},{"teal":226,"source":"contracts/TownHall.algo.ts:174","pc":[1013,1014]},{"teal":227,"source":"contracts/TownHall.algo.ts:174","pc":[1015]},{"teal":228,"source":"contracts/TownHall.algo.ts:174","pc":[1016]},{"teal":232,"source":"contracts/TownHall.algo.ts:176","pc":[1017]},{"teal":233,"source":"contracts/TownHall.algo.ts:176","pc":[1018,1019]},{"teal":234,"source":"contracts/TownHall.algo.ts:176","pc":[1020]},{"teal":238,"source":"contracts/TownHall.algo.ts:177","pc":[1021,1022]},{"teal":239,"source":"contracts/TownHall.algo.ts:177","pc":[1023,1024]},{"teal":240,"source":"contracts/TownHall.algo.ts:177","pc":[1025]},{"teal":244,"source":"contracts/TownHall.algo.ts:178","pc":[1026,1027]},{"teal":245,"source":"contracts/TownHall.algo.ts:178","pc":[1028,1029]},{"teal":246,"source":"contracts/TownHall.algo.ts:178","pc":[1030]},{"teal":250,"source":"contracts/TownHall.algo.ts:180","pc":[1031]},{"teal":251,"source":"contracts/TownHall.algo.ts:180","pc":[1032]},{"teal":252,"source":"contracts/TownHall.algo.ts:180","pc":[1033]},{"teal":256,"source":"contracts/TownHall.algo.ts:181","pc":[1034,1035]},{"teal":257,"source":"contracts/TownHall.algo.ts:181","pc":[1036]},{"teal":258,"source":"contracts/TownHall.algo.ts:181","pc":[1037]},{"teal":259,"source":"contracts/TownHall.algo.ts:138","pc":[1038]},{"teal":264,"source":"contracts/TownHall.algo.ts:189","pc":[1039,1040]},{"teal":267,"source":"contracts/TownHall.algo.ts:189","pc":[1041,1042,1043]},{"teal":268,"source":"contracts/TownHall.algo.ts:189","pc":[1044]},{"teal":271,"source":"contracts/TownHall.algo.ts:189","pc":[1045,1046,1047]},{"teal":272,"source":"contracts/TownHall.algo.ts:189","pc":[1048]},{"teal":273,"source":"contracts/TownHall.algo.ts:189","pc":[1049]},{"teal":274,"source":"contracts/TownHall.algo.ts:189","pc":[1050]},{"teal":275,"source":"contracts/TownHall.algo.ts:189","pc":[1051]},{"teal":276,"source":"contracts/TownHall.algo.ts:189","pc":[1052]},{"teal":285,"source":"contracts/TownHall.algo.ts:189","pc":[1053,1054,1055]},{"teal":289,"source":"contracts/TownHall.algo.ts:190","pc":[1056,1057]},{"teal":290,"source":"contracts/TownHall.algo.ts:189","pc":[1058]},{"teal":295,"source":"contracts/TownHall.algo.ts:211","pc":[1059,1060]},{"teal":298,"source":"contracts/TownHall.algo.ts:211","pc":[1061,1062,1063]},{"teal":299,"source":"contracts/TownHall.algo.ts:211","pc":[1064,1065,1066]},{"teal":302,"source":"contracts/TownHall.algo.ts:211","pc":[1067,1068,1069]},{"teal":303,"source":"contracts/TownHall.algo.ts:211","pc":[1070,1071,1072]},{"teal":306,"source":"contracts/TownHall.algo.ts:211","pc":[1073,1074,1075]},{"teal":307,"source":"contracts/TownHall.algo.ts:211","pc":[1076,1077,1078]},{"teal":310,"source":"contracts/TownHall.algo.ts:211","pc":[1079,1080,1081]},{"teal":311,"source":"contracts/TownHall.algo.ts:211","pc":[1082,1083,1084]},{"teal":314,"source":"contracts/TownHall.algo.ts:211","pc":[1085,1086,1087]},{"teal":315,"source":"contracts/TownHall.algo.ts:211","pc":[1088,1089]},{"teal":316,"source":"contracts/TownHall.algo.ts:211","pc":[1090]},{"teal":317,"source":"contracts/TownHall.algo.ts:211","pc":[1091,1092]},{"teal":318,"source":"contracts/TownHall.algo.ts:211","pc":[1093]},{"teal":319,"source":"contracts/TownHall.algo.ts:211","pc":[1094]},{"teal":320,"source":"contracts/TownHall.algo.ts:211","pc":[1095]},{"teal":321,"source":"contracts/TownHall.algo.ts:211","pc":[1096]},{"teal":322,"source":"contracts/TownHall.algo.ts:211","pc":[1097]},{"teal":326,"source":"contracts/TownHall.algo.ts:211","pc":[1098,1099,1100]},{"teal":329,"source":"contracts/TownHall.algo.ts:211","pc":[1101]},{"teal":330,"source":"contracts/TownHall.algo.ts:211","pc":[1102]},{"teal":334,"source":"contracts/TownHall.algo.ts:213","pc":[1103,1104]},{"teal":335,"source":"contracts/TownHall.algo.ts:213","pc":[1105,1106]},{"teal":336,"source":"contracts/TownHall.algo.ts:213","pc":[1107,1108]},{"teal":337,"source":"contracts/TownHall.algo.ts:213","pc":[1109]},{"teal":338,"source":"contracts/TownHall.algo.ts:213","pc":[1110]},{"teal":339,"source":"contracts/TownHall.algo.ts:213","pc":[1111]},{"teal":340,"source":"contracts/TownHall.algo.ts:213","pc":[1112,1113]},{"teal":344,"source":"contracts/TownHall.algo.ts:214","pc":[1114,1115]},{"teal":345,"source":"contracts/TownHall.algo.ts:214","pc":[1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149]},{"teal":346,"source":"contracts/TownHall.algo.ts:214","pc":[1150]},{"teal":347,"source":"contracts/TownHall.algo.ts:214","pc":[1151,1152]},{"teal":353,"source":"contracts/TownHall.algo.ts:217","pc":[1153,1154]},{"teal":354,"source":"contracts/TownHall.algo.ts:217","pc":[1155,1156]},{"teal":355,"source":"contracts/TownHall.algo.ts:217","pc":[1157,1158]},{"teal":356,"source":"contracts/TownHall.algo.ts:217","pc":[1159,1160]},{"teal":357,"source":"contracts/TownHall.algo.ts:217","pc":[1161,1162]},{"teal":358,"source":"contracts/TownHall.algo.ts:217","pc":[1163,1164]},{"teal":359,"source":"contracts/TownHall.algo.ts:217","pc":[1165,1166]},{"teal":360,"source":"contracts/TownHall.algo.ts:217","pc":[1167,1168]},{"teal":361,"source":"contracts/TownHall.algo.ts:217","pc":[1169]},{"teal":364,"source":"contracts/TownHall.algo.ts:211","pc":[1170,1171]},{"teal":367,"source":"contracts/TownHall.algo.ts:211","pc":[1172,1173]},{"teal":368,"source":"contracts/TownHall.algo.ts:211","pc":[1174]},{"teal":373,"source":"contracts/TownHall.algo.ts:221","pc":[1175,1176]},{"teal":376,"source":"contracts/TownHall.algo.ts:221","pc":[1177,1178,1179]},{"teal":377,"source":"contracts/TownHall.algo.ts:221","pc":[1180,1181,1182]},{"teal":380,"source":"contracts/TownHall.algo.ts:221","pc":[1183,1184,1185]},{"teal":381,"source":"contracts/TownHall.algo.ts:221","pc":[1186]},{"teal":382,"source":"contracts/TownHall.algo.ts:221","pc":[1187]},{"teal":383,"source":"contracts/TownHall.algo.ts:221","pc":[1188]},{"teal":384,"source":"contracts/TownHall.algo.ts:221","pc":[1189,1190,1191]},{"teal":385,"source":"contracts/TownHall.algo.ts:221","pc":[1192]},{"teal":386,"source":"contracts/TownHall.algo.ts:221","pc":[1193]},{"teal":387,"source":"contracts/TownHall.algo.ts:221","pc":[1194]},{"teal":388,"source":"contracts/TownHall.algo.ts:221","pc":[1195]},{"teal":389,"source":"contracts/TownHall.algo.ts:221","pc":[1196]},{"teal":390,"source":"contracts/TownHall.algo.ts:221","pc":[1197]},{"teal":394,"source":"contracts/TownHall.algo.ts:221","pc":[1198,1199,1200]},{"teal":397,"source":"contracts/TownHall.algo.ts:221","pc":[1201]},{"teal":398,"source":"contracts/TownHall.algo.ts:221","pc":[1202,1203]},{"teal":404,"source":"contracts/TownHall.algo.ts:224","pc":[1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269]},{"teal":405,"source":"contracts/TownHall.algo.ts:223","pc":[1270,1271]},{"teal":409,"source":"contracts/TownHall.algo.ts:226","pc":[1272,1273]},{"teal":410,"source":"contracts/TownHall.algo.ts:226","pc":[1274,1275]},{"teal":414,"source":"contracts/TownHall.algo.ts:227","pc":[1276,1277]},{"teal":415,"source":"contracts/TownHall.algo.ts:227","pc":[1278,1279]},{"teal":419,"source":"contracts/TownHall.algo.ts:228","pc":[1280,1281]},{"teal":420,"source":"contracts/TownHall.algo.ts:228","pc":[1282,1283]},{"teal":421,"source":"contracts/TownHall.algo.ts:228","pc":[1284]},{"teal":422,"source":"contracts/TownHall.algo.ts:228","pc":[1285,1286]},{"teal":423,"source":"contracts/TownHall.algo.ts:228","pc":[1287]},{"teal":424,"source":"contracts/TownHall.algo.ts:228","pc":[1288,1289]},{"teal":425,"source":"contracts/TownHall.algo.ts:228","pc":[1290]},{"teal":426,"source":"contracts/TownHall.algo.ts:228","pc":[1291,1292]},{"teal":427,"source":"contracts/TownHall.algo.ts:228","pc":[1293]},{"teal":428,"source":"contracts/TownHall.algo.ts:228","pc":[1294,1295]},{"teal":432,"source":"contracts/TownHall.algo.ts:231","pc":[1296,1297]},{"teal":433,"source":"contracts/TownHall.algo.ts:231","pc":[1298]},{"teal":434,"source":"contracts/TownHall.algo.ts:231","pc":[1299,1300]},{"teal":438,"source":"contracts/TownHall.algo.ts:233","pc":[1301,1302]},{"teal":439,"source":"contracts/TownHall.algo.ts:233","pc":[1303,1304,1305]},{"teal":440,"source":"contracts/TownHall.algo.ts:233","pc":[1306]},{"teal":441,"source":"contracts/TownHall.algo.ts:233","pc":[1307,1308]},{"teal":442,"source":"contracts/TownHall.algo.ts:233","pc":[1309]},{"teal":443,"source":"contracts/TownHall.algo.ts:233","pc":[1310]},{"teal":444,"source":"contracts/TownHall.algo.ts:233","pc":[1311,1312]},{"teal":448,"source":"contracts/TownHall.algo.ts:235","pc":[1313,1314]},{"teal":449,"source":"contracts/TownHall.algo.ts:235","pc":[1315,1316]},{"teal":450,"source":"contracts/TownHall.algo.ts:235","pc":[1317]},{"teal":451,"source":"contracts/TownHall.algo.ts:235","pc":[1318,1319,1320]},{"teal":452,"source":"contracts/TownHall.algo.ts:235","pc":[1321]},{"teal":453,"source":"contracts/TownHall.algo.ts:235","pc":[1322,1323]},{"teal":454,"source":"contracts/TownHall.algo.ts:235","pc":[1324]},{"teal":455,"source":"contracts/TownHall.algo.ts:235","pc":[1325]},{"teal":456,"source":"contracts/TownHall.algo.ts:235","pc":[1326,1327]},{"teal":460,"source":"contracts/TownHall.algo.ts:238","pc":[1328,1329]},{"teal":461,"source":"contracts/TownHall.algo.ts:238","pc":[1330,1331,1332]},{"teal":462,"source":"contracts/TownHall.algo.ts:238","pc":[1333,1334]},{"teal":463,"source":"contracts/TownHall.algo.ts:238","pc":[1335,1336,1337]},{"teal":464,"source":"contracts/TownHall.algo.ts:238","pc":[1338]},{"teal":465,"source":"contracts/TownHall.algo.ts:238","pc":[1339,1340]},{"teal":469,"source":"contracts/TownHall.algo.ts:241","pc":[1341,1342]},{"teal":470,"source":"contracts/TownHall.algo.ts:241","pc":[1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392]},{"teal":471,"source":"contracts/TownHall.algo.ts:241","pc":[1393]},{"teal":472,"source":"contracts/TownHall.algo.ts:241","pc":[1394,1395]},{"teal":476,"source":"contracts/TownHall.algo.ts:242","pc":[1396,1397]},{"teal":477,"source":"contracts/TownHall.algo.ts:242","pc":[1398,1399]},{"teal":478,"source":"contracts/TownHall.algo.ts:242","pc":[1400,1401]},{"teal":482,"source":"contracts/TownHall.algo.ts:244","pc":[1402,1403]},{"teal":485,"source":"contracts/TownHall.algo.ts:221","pc":[1404,1405]},{"teal":488,"source":"contracts/TownHall.algo.ts:221","pc":[1406,1407]},{"teal":489,"source":"contracts/TownHall.algo.ts:221","pc":[1408]},{"teal":494,"source":"contracts/TownHall.algo.ts:249","pc":[1409,1410]},{"teal":497,"source":"contracts/TownHall.algo.ts:249","pc":[1411,1412,1413]},{"teal":498,"source":"contracts/TownHall.algo.ts:249","pc":[1414]},{"teal":499,"source":"contracts/TownHall.algo.ts:249","pc":[1415]},{"teal":500,"source":"contracts/TownHall.algo.ts:249","pc":[1416]},{"teal":501,"source":"contracts/TownHall.algo.ts:249","pc":[1417]},{"teal":502,"source":"contracts/TownHall.algo.ts:249","pc":[1418]},{"teal":506,"source":"contracts/TownHall.algo.ts:249","pc":[1419,1420,1421]},{"teal":510,"source":"contracts/TownHall.algo.ts:250","pc":[1422]},{"teal":511,"source":"contracts/TownHall.algo.ts:250","pc":[1423]},{"teal":512,"source":"contracts/TownHall.algo.ts:249","pc":[1424]},{"teal":517,"source":"contracts/TownHall.algo.ts:253","pc":[1425,1426,1427]},{"teal":518,"source":"contracts/TownHall.algo.ts:253","pc":[1428]},{"teal":519,"source":"contracts/TownHall.algo.ts:253","pc":[1429]},{"teal":520,"source":"contracts/TownHall.algo.ts:253","pc":[1430]},{"teal":521,"source":"contracts/TownHall.algo.ts:253","pc":[1431]},{"teal":524,"source":"contracts/TownHall.algo.ts:253","errorMessage":"argument 0 (funderLSigAddress) for setLSIGFunderAddress must be a address","pc":[1432]},{"teal":527,"source":"contracts/TownHall.algo.ts:253","pc":[1433,1434,1435]},{"teal":528,"source":"contracts/TownHall.algo.ts:253","pc":[1436]},{"teal":529,"source":"contracts/TownHall.algo.ts:253","pc":[1437]},{"teal":533,"source":"contracts/TownHall.algo.ts:253","pc":[1438,1439,1440]},{"teal":540,"source":"contracts/TownHall.algo.ts:255","pc":[1441]},{"teal":541,"source":"contracts/TownHall.algo.ts:255","pc":[1442]},{"teal":542,"source":"contracts/TownHall.algo.ts:255","pc":[1443]},{"teal":543,"source":"contracts/TownHall.algo.ts:255","pc":[1444]},{"teal":546,"source":"contracts/TownHall.algo.ts:254","errorMessage":"Invalid method call: Contract is not in Set LSig Funder Address state.","pc":[1445]},{"teal":553,"source":"contracts/TownHall.algo.ts:260","pc":[1446,1447]},{"teal":554,"source":"contracts/TownHall.algo.ts:260","pc":[1448,1449]},{"teal":555,"source":"contracts/TownHall.algo.ts:260","pc":[1450]},{"teal":556,"source":"contracts/TownHall.algo.ts:260","pc":[1451]},{"teal":559,"source":"contracts/TownHall.algo.ts:259","errorMessage":"Error state: Only the creator can set the LSig Funder Address!","pc":[1452]},{"teal":563,"source":"contracts/TownHall.algo.ts:264","pc":[1453,1454]},{"teal":564,"source":"contracts/TownHall.algo.ts:264","pc":[1455]},{"teal":565,"source":"contracts/TownHall.algo.ts:264","pc":[1456,1457]},{"teal":566,"source":"contracts/TownHall.algo.ts:264","pc":[1458]},{"teal":569,"source":"contracts/TownHall.algo.ts:264","errorMessage":"Error state: LSig Funder Address already set!","pc":[1459]},{"teal":573,"source":"contracts/TownHall.algo.ts:266","pc":[1460,1461]},{"teal":574,"source":"contracts/TownHall.algo.ts:266","pc":[1462,1463]},{"teal":575,"source":"contracts/TownHall.algo.ts:266","pc":[1464]},{"teal":578,"source":"contracts/TownHall.algo.ts:266","errorMessage":"Error state: LSig Funder Address cannot be the zero address.","pc":[1465]},{"teal":582,"source":"contracts/TownHall.algo.ts:269","pc":[1466,1467]},{"teal":583,"source":"contracts/TownHall.algo.ts:269","pc":[1468,1469]},{"teal":584,"source":"contracts/TownHall.algo.ts:269","pc":[1470]},{"teal":588,"source":"contracts/TownHall.algo.ts:271","pc":[1471]},{"teal":589,"source":"contracts/Constants.ts:17","pc":[1472]},{"teal":590,"source":"contracts/TownHall.algo.ts:271","pc":[1473]},{"teal":591,"source":"contracts/TownHall.algo.ts:253","pc":[1474]},{"teal":596,"source":"contracts/TownHall.algo.ts:274","pc":[1475,1476,1477]},{"teal":597,"source":"contracts/TownHall.algo.ts:274","pc":[1478,1479,1480]},{"teal":600,"source":"contracts/TownHall.algo.ts:274","pc":[1481,1482]},{"teal":601,"source":"contracts/TownHall.algo.ts:274","pc":[1483]},{"teal":602,"source":"contracts/TownHall.algo.ts:274","pc":[1484]},{"teal":603,"source":"contracts/TownHall.algo.ts:274","pc":[1485]},{"teal":604,"source":"contracts/TownHall.algo.ts:274","pc":[1486,1487]},{"teal":605,"source":"contracts/TownHall.algo.ts:274","pc":[1488]},{"teal":606,"source":"contracts/TownHall.algo.ts:274","pc":[1489]},{"teal":609,"source":"contracts/TownHall.algo.ts:274","errorMessage":"argument 1 (depositTxn) for joinGameLobby must be a pay transaction","pc":[1490]},{"teal":612,"source":"contracts/TownHall.algo.ts:274","pc":[1491,1492,1493]},{"teal":613,"source":"contracts/TownHall.algo.ts:274","pc":[1494]},{"teal":614,"source":"contracts/TownHall.algo.ts:274","pc":[1495]},{"teal":618,"source":"contracts/TownHall.algo.ts:274","pc":[1496,1497,1498]},{"teal":621,"source":"contracts/TownHall.algo.ts:274","pc":[1499]},{"teal":622,"source":"contracts/TownHall.algo.ts:274","pc":[1500,1501]},{"teal":626,"source":"contracts/TownHall.algo.ts:275","pc":[1502]},{"teal":627,"source":"contracts/TownHall.algo.ts:275","pc":[1503]},{"teal":628,"source":"contracts/Constants.ts:17","pc":[1504]},{"teal":629,"source":"contracts/TownHall.algo.ts:275","pc":[1505]},{"teal":632,"source":"contracts/TownHall.algo.ts:275","errorMessage":"Invalid method call: Game is not in Join Game Lobby state.","pc":[1506]},{"teal":639,"source":"contracts/TownHall.algo.ts:278","pc":[1507,1508]},{"teal":640,"source":"contracts/TownHall.algo.ts:278","pc":[1509]},{"teal":641,"source":"contracts/TownHall.algo.ts:278","pc":[1510]},{"teal":642,"source":"contracts/TownHall.algo.ts:278","pc":[1511]},{"teal":645,"source":"contracts/TownHall.algo.ts:277","errorMessage":"Max players already joined! Error, game should have moved to the next stage already.","pc":[1512]},{"teal":655,"source":"contracts/TownHall.algo.ts:283","pc":[1513]},{"teal":656,"source":"contracts/TownHall.algo.ts:283","pc":[1514]},{"teal":657,"source":"contracts/TownHall.algo.ts:283","pc":[1515,1516,1517]},{"teal":658,"source":"contracts/TownHall.algo.ts:283","pc":[1518,1519]},{"teal":659,"source":"contracts/TownHall.algo.ts:283","pc":[1520]},{"teal":660,"source":"contracts/TownHall.algo.ts:283","pc":[1521]},{"teal":661,"source":"contracts/TownHall.algo.ts:283","pc":[1522,1523,1524]},{"teal":662,"source":"contracts/TownHall.algo.ts:284","pc":[1525,1526]},{"teal":663,"source":"contracts/TownHall.algo.ts:284","pc":[1527]},{"teal":664,"source":"contracts/TownHall.algo.ts:284","pc":[1528,1529,1530]},{"teal":665,"source":"contracts/TownHall.algo.ts:284","pc":[1531,1532]},{"teal":666,"source":"contracts/TownHall.algo.ts:284","pc":[1533]},{"teal":667,"source":"contracts/TownHall.algo.ts:283","pc":[1534]},{"teal":670,"source":"contracts/TownHall.algo.ts:284","pc":[1535]},{"teal":671,"source":"contracts/TownHall.algo.ts:284","pc":[1536,1537,1538]},{"teal":672,"source":"contracts/TownHall.algo.ts:285","pc":[1539,1540]},{"teal":673,"source":"contracts/TownHall.algo.ts:285","pc":[1541]},{"teal":674,"source":"contracts/TownHall.algo.ts:285","pc":[1542,1543,1544]},{"teal":675,"source":"contracts/TownHall.algo.ts:285","pc":[1545,1546]},{"teal":676,"source":"contracts/TownHall.algo.ts:285","pc":[1547]},{"teal":677,"source":"contracts/TownHall.algo.ts:284","pc":[1548]},{"teal":680,"source":"contracts/TownHall.algo.ts:285","pc":[1549]},{"teal":681,"source":"contracts/TownHall.algo.ts:285","pc":[1550,1551,1552]},{"teal":682,"source":"contracts/TownHall.algo.ts:286","pc":[1553,1554]},{"teal":683,"source":"contracts/TownHall.algo.ts:286","pc":[1555]},{"teal":684,"source":"contracts/TownHall.algo.ts:286","pc":[1556,1557,1558]},{"teal":685,"source":"contracts/TownHall.algo.ts:286","pc":[1559,1560]},{"teal":686,"source":"contracts/TownHall.algo.ts:286","pc":[1561]},{"teal":687,"source":"contracts/TownHall.algo.ts:285","pc":[1562]},{"teal":690,"source":"contracts/TownHall.algo.ts:286","pc":[1563]},{"teal":691,"source":"contracts/TownHall.algo.ts:286","pc":[1564,1565,1566]},{"teal":692,"source":"contracts/TownHall.algo.ts:287","pc":[1567,1568]},{"teal":693,"source":"contracts/TownHall.algo.ts:287","pc":[1569]},{"teal":694,"source":"contracts/TownHall.algo.ts:287","pc":[1570,1571,1572]},{"teal":695,"source":"contracts/TownHall.algo.ts:287","pc":[1573,1574]},{"teal":696,"source":"contracts/TownHall.algo.ts:287","pc":[1575]},{"teal":697,"source":"contracts/TownHall.algo.ts:286","pc":[1576]},{"teal":700,"source":"contracts/TownHall.algo.ts:287","pc":[1577]},{"teal":701,"source":"contracts/TownHall.algo.ts:287","pc":[1578,1579,1580]},{"teal":702,"source":"contracts/TownHall.algo.ts:288","pc":[1581,1582]},{"teal":703,"source":"contracts/TownHall.algo.ts:288","pc":[1583]},{"teal":704,"source":"contracts/TownHall.algo.ts:288","pc":[1584,1585,1586]},{"teal":705,"source":"contracts/TownHall.algo.ts:288","pc":[1587,1588]},{"teal":706,"source":"contracts/TownHall.algo.ts:288","pc":[1589]},{"teal":707,"source":"contracts/TownHall.algo.ts:287","pc":[1590]},{"teal":710,"source":"contracts/TownHall.algo.ts:282","pc":[1591,1592,1593]},{"teal":714,"source":"contracts/TownHall.algo.ts:290","errorMessage":"Error state: Player already joined the game!","pc":[1594]},{"teal":719,"source":"contracts/TownHall.algo.ts:295","pc":[1595,1596]},{"teal":720,"source":"contracts/TownHall.algo.ts:295","pc":[1597,1598]},{"teal":721,"source":"contracts/TownHall.algo.ts:295","pc":[1599,1600,1601,1602]},{"teal":722,"source":"contracts/TownHall.algo.ts:295","pc":[1603]},{"teal":725,"source":"contracts/TownHall.algo.ts:295","errorMessage":"Invalid FunderLSig amount!","pc":[1604]},{"teal":729,"source":"contracts/TownHall.algo.ts:297","pc":[1605,1606]},{"teal":730,"source":"contracts/TownHall.algo.ts:297","pc":[1607,1608,1609]},{"teal":731,"source":"contracts/TownHall.algo.ts:297","pc":[1610,1611]},{"teal":735,"source":"contracts/TownHall.algo.ts:298","pc":[1612,1613]},{"teal":736,"source":"contracts/TownHall.algo.ts:298","pc":[1614,1615,1616]},{"teal":737,"source":"contracts/TownHall.algo.ts:298","pc":[1617,1618]},{"teal":741,"source":"contracts/TownHall.algo.ts:299","pc":[1619,1620]},{"teal":742,"source":"contracts/TownHall.algo.ts:299","pc":[1621,1622,1623]},{"teal":743,"source":"contracts/TownHall.algo.ts:299","pc":[1624,1625]},{"teal":747,"source":"contracts/TownHall.algo.ts:300","pc":[1626,1627]},{"teal":748,"source":"contracts/TownHall.algo.ts:300","pc":[1628,1629,1630]},{"teal":749,"source":"contracts/TownHall.algo.ts:300","pc":[1631]},{"teal":750,"source":"contracts/TownHall.algo.ts:300","pc":[1632]},{"teal":751,"source":"contracts/TownHall.algo.ts:300","pc":[1633,1634]},{"teal":755,"source":"contracts/TownHall.algo.ts:305","pc":[1635,1636]},{"teal":756,"source":"contracts/TownHall.algo.ts:305","pc":[1637,1638]},{"teal":757,"source":"contracts/TownHall.algo.ts:305","pc":[1639,1640]},{"teal":758,"source":"contracts/TownHall.algo.ts:305","pc":[1641,1642]},{"teal":759,"source":"contracts/TownHall.algo.ts:305","pc":[1643,1644,1645]},{"teal":762,"source":"contracts/TownHall.algo.ts:305","errorMessage":"DLOG NIZK Proof failed!","pc":[1646]},{"teal":767,"source":"contracts/TownHall.algo.ts:307","pc":[1647,1648]},{"teal":768,"source":"contracts/TownHall.algo.ts:307","pc":[1649]},{"teal":769,"source":"contracts/TownHall.algo.ts:307","pc":[1650]},{"teal":770,"source":"contracts/TownHall.algo.ts:307","pc":[1651]},{"teal":771,"source":"contracts/TownHall.algo.ts:307","pc":[1652]},{"teal":772,"source":"contracts/TownHall.algo.ts:307","pc":[1653,1654,1655]},{"teal":777,"source":"contracts/TownHall.algo.ts:308","pc":[1656,1657]},{"teal":778,"source":"contracts/TownHall.algo.ts:308","pc":[1658,1659]},{"teal":779,"source":"contracts/TownHall.algo.ts:308","pc":[1660]},{"teal":780,"source":"contracts/TownHall.algo.ts:308","pc":[1661]},{"teal":781,"source":"contracts/TownHall.algo.ts:307","pc":[1662,1663,1664]},{"teal":786,"source":"contracts/TownHall.algo.ts:310","pc":[1665,1666]},{"teal":787,"source":"contracts/TownHall.algo.ts:310","pc":[1667]},{"teal":788,"source":"contracts/TownHall.algo.ts:310","pc":[1668]},{"teal":791,"source":"contracts/TownHall.algo.ts:310","errorMessage":"box value does not exist: this.quickAccessPKBoxes(0).size","pc":[1669]},{"teal":792,"source":"contracts/TownHall.algo.ts:310","pc":[1670,1671]},{"teal":793,"source":"contracts/TownHall.algo.ts:310","pc":[1672]},{"teal":794,"source":"contracts/TownHall.algo.ts:310","pc":[1673]},{"teal":799,"source":"contracts/TownHall.algo.ts:314","pc":[1674,1675]},{"teal":800,"source":"contracts/TownHall.algo.ts:314","pc":[1676]},{"teal":801,"source":"contracts/TownHall.algo.ts:314","pc":[1677]},{"teal":802,"source":"contracts/TownHall.algo.ts:314","pc":[1678]},{"teal":805,"source":"contracts/TownHall.algo.ts:314","errorMessage":"PK Box failed to be created.","pc":[1679]},{"teal":809,"source":"contracts/TownHall.algo.ts:316","pc":[1680,1681]},{"teal":810,"source":"contracts/TownHall.algo.ts:316","pc":[1682,1683]},{"teal":811,"source":"contracts/TownHall.algo.ts:316","pc":[1684]},{"teal":812,"source":"contracts/TownHall.algo.ts:316","pc":[1685,1686]},{"teal":813,"source":"contracts/TownHall.algo.ts:316","pc":[1687]},{"teal":814,"source":"contracts/TownHall.algo.ts:316","pc":[1688,1689]},{"teal":815,"source":"contracts/TownHall.algo.ts:316","pc":[1690]},{"teal":819,"source":"contracts/TownHall.algo.ts:317","pc":[1691,1692]},{"teal":820,"source":"contracts/TownHall.algo.ts:317","pc":[1693]},{"teal":821,"source":"contracts/TownHall.algo.ts:317","pc":[1694]},{"teal":822,"source":"contracts/TownHall.algo.ts:317","pc":[1695]},{"teal":823,"source":"contracts/TownHall.algo.ts:317","pc":[1696,1697]},{"teal":824,"source":"contracts/TownHall.algo.ts:317","pc":[1698]},{"teal":825,"source":"contracts/TownHall.algo.ts:317","pc":[1699]},{"teal":829,"source":"contracts/TownHall.algo.ts:319","pc":[1700,1701]},{"teal":830,"source":"contracts/TownHall.algo.ts:319","pc":[1702]},{"teal":831,"source":"contracts/TownHall.algo.ts:319","pc":[1703,1704]},{"teal":832,"source":"contracts/TownHall.algo.ts:319","pc":[1705]},{"teal":835,"source":"contracts/TownHall.algo.ts:319","errorMessage":"Error state: LSig Funder Address not set!","pc":[1706]},{"teal":842,"source":"contracts/TownHall.algo.ts:321","pc":[1707,1708]},{"teal":843,"source":"contracts/TownHall.algo.ts:321","pc":[1709]},{"teal":844,"source":"contracts/TownHall.algo.ts:321","pc":[1710]},{"teal":845,"source":"contracts/TownHall.algo.ts:321","pc":[1711]},{"teal":848,"source":"contracts/TownHall.algo.ts:320","errorMessage":"Last commited round should not be set until all players have joined the game","pc":[1712]},{"teal":855,"source":"contracts/TownHall.algo.ts:326","pc":[1713]},{"teal":856,"source":"contracts/TownHall.algo.ts:326","pc":[1714]},{"teal":857,"source":"contracts/TownHall.algo.ts:326","pc":[1715,1716]},{"teal":861,"source":"contracts/TownHall.algo.ts:327","pc":[1717,1718]},{"teal":862,"source":"contracts/TownHall.algo.ts:327","pc":[1719,1720]},{"teal":866,"source":"contracts/TownHall.algo.ts:328","pc":[1721,1722]},{"teal":867,"source":"contracts/TownHall.algo.ts:328","pc":[1723]},{"teal":868,"source":"contracts/TownHall.algo.ts:328","pc":[1724,1725]},{"teal":871,"source":"contracts/TownHall.algo.ts:326","pc":[1726]},{"teal":872,"source":"contracts/TownHall.algo.ts:326","pc":[1727,1728]},{"teal":875,"source":"contracts/TownHall.algo.ts:326","pc":[1729]},{"teal":880,"source":"contracts/TownHall.algo.ts:331","pc":[1730]},{"teal":881,"source":"contracts/TownHall.algo.ts:331","pc":[1731]},{"teal":882,"source":"contracts/TownHall.algo.ts:331","pc":[1732,1733,1734]},{"teal":883,"source":"contracts/TownHall.algo.ts:331","pc":[1735,1736]},{"teal":884,"source":"contracts/TownHall.algo.ts:331","pc":[1737]},{"teal":885,"source":"contracts/TownHall.algo.ts:331","pc":[1738,1739,1740]},{"teal":890,"source":"contracts/TownHall.algo.ts:332","pc":[1741]},{"teal":891,"source":"contracts/TownHall.algo.ts:332","pc":[1742]},{"teal":892,"source":"contracts/TownHall.algo.ts:332","pc":[1743]},{"teal":893,"source":"contracts/TownHall.algo.ts:332","pc":[1744,1745]},{"teal":894,"source":"contracts/TownHall.algo.ts:332","pc":[1746]},{"teal":895,"source":"contracts/TownHall.algo.ts:332","pc":[1747]},{"teal":896,"source":"contracts/TownHall.algo.ts:332","pc":[1748]},{"teal":897,"source":"contracts/TownHall.algo.ts:332","pc":[1749]},{"teal":901,"source":"contracts/TownHall.algo.ts:333","pc":[1750]},{"teal":907,"source":"contracts/TownHall.algo.ts:335","pc":[1751,1752]},{"teal":908,"source":"contracts/TownHall.algo.ts:335","pc":[1753]},{"teal":909,"source":"contracts/TownHall.algo.ts:335","pc":[1754,1755,1756]},{"teal":910,"source":"contracts/TownHall.algo.ts:335","pc":[1757,1758]},{"teal":911,"source":"contracts/TownHall.algo.ts:335","pc":[1759]},{"teal":912,"source":"contracts/TownHall.algo.ts:335","pc":[1760,1761,1762]},{"teal":917,"source":"contracts/TownHall.algo.ts:336","pc":[1763,1764]},{"teal":918,"source":"contracts/TownHall.algo.ts:336","pc":[1765]},{"teal":919,"source":"contracts/TownHall.algo.ts:336","pc":[1766]},{"teal":920,"source":"contracts/TownHall.algo.ts:336","pc":[1767,1768]},{"teal":921,"source":"contracts/TownHall.algo.ts:336","pc":[1769]},{"teal":922,"source":"contracts/TownHall.algo.ts:336","pc":[1770,1771]},{"teal":923,"source":"contracts/TownHall.algo.ts:336","pc":[1772]},{"teal":924,"source":"contracts/TownHall.algo.ts:336","pc":[1773]},{"teal":928,"source":"contracts/TownHall.algo.ts:337","pc":[1774]},{"teal":934,"source":"contracts/TownHall.algo.ts:339","pc":[1775,1776]},{"teal":935,"source":"contracts/TownHall.algo.ts:339","pc":[1777]},{"teal":936,"source":"contracts/TownHall.algo.ts:339","pc":[1778,1779,1780]},{"teal":937,"source":"contracts/TownHall.algo.ts:339","pc":[1781,1782]},{"teal":938,"source":"contracts/TownHall.algo.ts:339","pc":[1783]},{"teal":939,"source":"contracts/TownHall.algo.ts:339","pc":[1784,1785,1786]},{"teal":944,"source":"contracts/TownHall.algo.ts:340","pc":[1787,1788]},{"teal":945,"source":"contracts/TownHall.algo.ts:340","pc":[1789]},{"teal":946,"source":"contracts/TownHall.algo.ts:340","pc":[1790]},{"teal":947,"source":"contracts/TownHall.algo.ts:340","pc":[1791,1792]},{"teal":948,"source":"contracts/TownHall.algo.ts:340","pc":[1793]},{"teal":949,"source":"contracts/TownHall.algo.ts:340","pc":[1794,1795]},{"teal":950,"source":"contracts/TownHall.algo.ts:340","pc":[1796]},{"teal":951,"source":"contracts/TownHall.algo.ts:340","pc":[1797]},{"teal":955,"source":"contracts/TownHall.algo.ts:341","pc":[1798]},{"teal":961,"source":"contracts/TownHall.algo.ts:343","pc":[1799,1800]},{"teal":962,"source":"contracts/TownHall.algo.ts:343","pc":[1801]},{"teal":963,"source":"contracts/TownHall.algo.ts:343","pc":[1802,1803,1804]},{"teal":964,"source":"contracts/TownHall.algo.ts:343","pc":[1805,1806]},{"teal":965,"source":"contracts/TownHall.algo.ts:343","pc":[1807]},{"teal":966,"source":"contracts/TownHall.algo.ts:343","pc":[1808,1809,1810]},{"teal":971,"source":"contracts/TownHall.algo.ts:344","pc":[1811,1812]},{"teal":972,"source":"contracts/TownHall.algo.ts:344","pc":[1813]},{"teal":973,"source":"contracts/TownHall.algo.ts:344","pc":[1814]},{"teal":974,"source":"contracts/TownHall.algo.ts:344","pc":[1815,1816]},{"teal":975,"source":"contracts/TownHall.algo.ts:344","pc":[1817]},{"teal":976,"source":"contracts/TownHall.algo.ts:344","pc":[1818,1819]},{"teal":977,"source":"contracts/TownHall.algo.ts:344","pc":[1820]},{"teal":978,"source":"contracts/TownHall.algo.ts:344","pc":[1821]},{"teal":982,"source":"contracts/TownHall.algo.ts:345","pc":[1822]},{"teal":988,"source":"contracts/TownHall.algo.ts:347","pc":[1823,1824]},{"teal":989,"source":"contracts/TownHall.algo.ts:347","pc":[1825]},{"teal":990,"source":"contracts/TownHall.algo.ts:347","pc":[1826,1827,1828]},{"teal":991,"source":"contracts/TownHall.algo.ts:347","pc":[1829,1830]},{"teal":992,"source":"contracts/TownHall.algo.ts:347","pc":[1831]},{"teal":993,"source":"contracts/TownHall.algo.ts:347","pc":[1832,1833,1834]},{"teal":998,"source":"contracts/TownHall.algo.ts:348","pc":[1835,1836]},{"teal":999,"source":"contracts/TownHall.algo.ts:348","pc":[1837]},{"teal":1000,"source":"contracts/TownHall.algo.ts:348","pc":[1838]},{"teal":1001,"source":"contracts/TownHall.algo.ts:348","pc":[1839,1840]},{"teal":1002,"source":"contracts/TownHall.algo.ts:348","pc":[1841]},{"teal":1003,"source":"contracts/TownHall.algo.ts:348","pc":[1842,1843]},{"teal":1004,"source":"contracts/TownHall.algo.ts:348","pc":[1844]},{"teal":1005,"source":"contracts/TownHall.algo.ts:348","pc":[1845]},{"teal":1009,"source":"contracts/TownHall.algo.ts:349","pc":[1846]},{"teal":1015,"source":"contracts/TownHall.algo.ts:351","pc":[1847,1848]},{"teal":1016,"source":"contracts/TownHall.algo.ts:351","pc":[1849]},{"teal":1017,"source":"contracts/TownHall.algo.ts:351","pc":[1850,1851,1852]},{"teal":1018,"source":"contracts/TownHall.algo.ts:351","pc":[1853,1854]},{"teal":1019,"source":"contracts/TownHall.algo.ts:351","pc":[1855]},{"teal":1020,"source":"contracts/TownHall.algo.ts:351","pc":[1856,1857,1858]},{"teal":1025,"source":"contracts/TownHall.algo.ts:352","pc":[1859,1860]},{"teal":1026,"source":"contracts/TownHall.algo.ts:352","pc":[1861]},{"teal":1027,"source":"contracts/TownHall.algo.ts:352","pc":[1862]},{"teal":1028,"source":"contracts/TownHall.algo.ts:352","pc":[1863,1864]},{"teal":1029,"source":"contracts/TownHall.algo.ts:352","pc":[1865]},{"teal":1030,"source":"contracts/TownHall.algo.ts:352","pc":[1866,1867]},{"teal":1031,"source":"contracts/TownHall.algo.ts:352","pc":[1868]},{"teal":1032,"source":"contracts/TownHall.algo.ts:352","pc":[1869]},{"teal":1036,"source":"contracts/TownHall.algo.ts:353","pc":[1870]},{"teal":1037,"source":"contracts/Constants.ts:18","pc":[1871,1872]},{"teal":1038,"source":"contracts/TownHall.algo.ts:353","pc":[1873]},{"teal":1042,"source":"contracts/TownHall.algo.ts:354","pc":[1874,1875]},{"teal":1043,"source":"contracts/TownHall.algo.ts:354","pc":[1876,1877]},{"teal":1044,"source":"contracts/TownHall.algo.ts:354","pc":[1878]},{"teal":1048,"source":"contracts/TownHall.algo.ts:355","pc":[1879]},{"teal":1052,"source":"contracts/TownHall.algo.ts:358","errorMessage":"Invalid state! Error, game should have moved to the next stage already.","pc":[1880]},{"teal":1053,"source":"contracts/TownHall.algo.ts:274","pc":[1881]},{"teal":1058,"source":"contracts/TownHall.algo.ts:373","pc":[1882,1883]},{"teal":1059,"source":"contracts/TownHall.algo.ts:373","pc":[1884]},{"teal":1060,"source":"contracts/TownHall.algo.ts:373","pc":[1885]},{"teal":1061,"source":"contracts/TownHall.algo.ts:373","pc":[1886]},{"teal":1062,"source":"contracts/TownHall.algo.ts:373","pc":[1887,1888]},{"teal":1063,"source":"contracts/TownHall.algo.ts:373","pc":[1889]},{"teal":1064,"source":"contracts/TownHall.algo.ts:373","pc":[1890]},{"teal":1067,"source":"contracts/TownHall.algo.ts:373","errorMessage":"argument 0 (ringLSigTxn5) for assignRole must be a pay transaction","pc":[1891]},{"teal":1070,"source":"contracts/TownHall.algo.ts:372","pc":[1892,1893]},{"teal":1071,"source":"contracts/TownHall.algo.ts:372","pc":[1894,1895]},{"teal":1072,"source":"contracts/TownHall.algo.ts:372","pc":[1896]},{"teal":1073,"source":"contracts/TownHall.algo.ts:372","pc":[1897]},{"teal":1074,"source":"contracts/TownHall.algo.ts:372","pc":[1898,1899]},{"teal":1075,"source":"contracts/TownHall.algo.ts:372","pc":[1900]},{"teal":1076,"source":"contracts/TownHall.algo.ts:372","pc":[1901]},{"teal":1079,"source":"contracts/TownHall.algo.ts:372","errorMessage":"argument 1 (ringLSigTxn4) for assignRole must be a pay transaction","pc":[1902]},{"teal":1082,"source":"contracts/TownHall.algo.ts:371","pc":[1903,1904]},{"teal":1083,"source":"contracts/TownHall.algo.ts:371","pc":[1905,1906]},{"teal":1084,"source":"contracts/TownHall.algo.ts:371","pc":[1907]},{"teal":1085,"source":"contracts/TownHall.algo.ts:371","pc":[1908]},{"teal":1086,"source":"contracts/TownHall.algo.ts:371","pc":[1909,1910]},{"teal":1087,"source":"contracts/TownHall.algo.ts:371","pc":[1911]},{"teal":1088,"source":"contracts/TownHall.algo.ts:371","pc":[1912]},{"teal":1091,"source":"contracts/TownHall.algo.ts:371","errorMessage":"argument 2 (ringLSigTxn3) for assignRole must be a pay transaction","pc":[1913]},{"teal":1094,"source":"contracts/TownHall.algo.ts:370","pc":[1914,1915]},{"teal":1095,"source":"contracts/TownHall.algo.ts:370","pc":[1916,1917]},{"teal":1096,"source":"contracts/TownHall.algo.ts:370","pc":[1918]},{"teal":1097,"source":"contracts/TownHall.algo.ts:370","pc":[1919]},{"teal":1098,"source":"contracts/TownHall.algo.ts:370","pc":[1920,1921]},{"teal":1099,"source":"contracts/TownHall.algo.ts:370","pc":[1922]},{"teal":1100,"source":"contracts/TownHall.algo.ts:370","pc":[1923]},{"teal":1103,"source":"contracts/TownHall.algo.ts:370","errorMessage":"argument 3 (ringLSigTxn2) for assignRole must be a pay transaction","pc":[1924]},{"teal":1106,"source":"contracts/TownHall.algo.ts:369","pc":[1925,1926]},{"teal":1107,"source":"contracts/TownHall.algo.ts:369","pc":[1927,1928]},{"teal":1108,"source":"contracts/TownHall.algo.ts:369","pc":[1929]},{"teal":1109,"source":"contracts/TownHall.algo.ts:369","pc":[1930]},{"teal":1110,"source":"contracts/TownHall.algo.ts:369","pc":[1931,1932]},{"teal":1111,"source":"contracts/TownHall.algo.ts:369","pc":[1933]},{"teal":1112,"source":"contracts/TownHall.algo.ts:369","pc":[1934]},{"teal":1115,"source":"contracts/TownHall.algo.ts:369","errorMessage":"argument 4 (ringLSigTxn1) for assignRole must be a pay transaction","pc":[1935]},{"teal":1118,"source":"contracts/TownHall.algo.ts:368","pc":[1936,1937]},{"teal":1119,"source":"contracts/TownHall.algo.ts:368","pc":[1938]},{"teal":1120,"source":"contracts/TownHall.algo.ts:368","pc":[1939]},{"teal":1121,"source":"contracts/TownHall.algo.ts:368","pc":[1940]},{"teal":1122,"source":"contracts/TownHall.algo.ts:368","pc":[1941,1942]},{"teal":1123,"source":"contracts/TownHall.algo.ts:368","pc":[1943]},{"teal":1124,"source":"contracts/TownHall.algo.ts:368","pc":[1944]},{"teal":1127,"source":"contracts/TownHall.algo.ts:368","errorMessage":"argument 5 (ringLSigTxn0) for assignRole must be a pay transaction","pc":[1945]},{"teal":1130,"source":"contracts/TownHall.algo.ts:367","pc":[1946,1947]},{"teal":1131,"source":"contracts/TownHall.algo.ts:367","pc":[1948,1949]},{"teal":1132,"source":"contracts/TownHall.algo.ts:367","pc":[1950]},{"teal":1133,"source":"contracts/TownHall.algo.ts:367","pc":[1951]},{"teal":1134,"source":"contracts/TownHall.algo.ts:367","pc":[1952,1953]},{"teal":1135,"source":"contracts/TownHall.algo.ts:367","pc":[1954]},{"teal":1136,"source":"contracts/TownHall.algo.ts:367","pc":[1955]},{"teal":1139,"source":"contracts/TownHall.algo.ts:367","errorMessage":"argument 6 (funderLSigTxn) for assignRole must be a pay transaction","pc":[1956]},{"teal":1142,"source":"contracts/TownHall.algo.ts:366","pc":[1957,1958,1959]},{"teal":1143,"source":"contracts/TownHall.algo.ts:366","pc":[1960,1961,1962]},{"teal":1146,"source":"contracts/TownHall.algo.ts:365","pc":[1963,1964,1965]},{"teal":1147,"source":"contracts/TownHall.algo.ts:365","pc":[1966,1967,1968]},{"teal":1150,"source":"contracts/TownHall.algo.ts:364","pc":[1969,1970,1971]},{"teal":1151,"source":"contracts/TownHall.algo.ts:364","pc":[1972,1973,1974]},{"teal":1154,"source":"contracts/TownHall.algo.ts:363","pc":[1975,1976,1977]},{"teal":1155,"source":"contracts/TownHall.algo.ts:363","pc":[1978,1979,1980]},{"teal":1158,"source":"contracts/TownHall.algo.ts:362","pc":[1981,1982,1983]},{"teal":1159,"source":"contracts/TownHall.algo.ts:362","pc":[1984,1985,1986]},{"teal":1162,"source":"contracts/TownHall.algo.ts:361","pc":[1987,1988,1989]},{"teal":1163,"source":"contracts/TownHall.algo.ts:361","pc":[1990]},{"teal":1164,"source":"contracts/TownHall.algo.ts:361","pc":[1991]},{"teal":1168,"source":"contracts/TownHall.algo.ts:361","pc":[1992,1993,1994]},{"teal":1172,"source":"contracts/TownHall.algo.ts:375","pc":[1995]},{"teal":1173,"source":"contracts/TownHall.algo.ts:375","pc":[1996]},{"teal":1174,"source":"contracts/Constants.ts:18","pc":[1997,1998]},{"teal":1175,"source":"contracts/TownHall.algo.ts:375","pc":[1999]},{"teal":1178,"source":"contracts/TownHall.algo.ts:375","errorMessage":"Invalid method call: Game is not in Assign Role state.","pc":[2000]},{"teal":1185,"source":"contracts/TownHall.algo.ts:385","pc":[2001,2002]},{"teal":1186,"source":"contracts/TownHall.algo.ts:385","pc":[2003]},{"teal":1187,"source":"contracts/TownHall.algo.ts:385","pc":[2004]},{"teal":1188,"source":"contracts/TownHall.algo.ts:385","pc":[2005]},{"teal":1189,"source":"contracts/TownHall.algo.ts:385","pc":[2006]},{"teal":1190,"source":"contracts/TownHall.algo.ts:385","pc":[2007]},{"teal":1193,"source":"contracts/TownHall.algo.ts:384","errorMessage":"KeyImage already in store. Are you trying to double-dip with your ring signature?","pc":[2008]},{"teal":1197,"source":"contracts/TownHall.algo.ts:388","pc":[2009,2010]},{"teal":1198,"source":"contracts/TownHall.algo.ts:388","pc":[2011]},{"teal":1199,"source":"contracts/TownHall.algo.ts:388","pc":[2012]},{"teal":1200,"source":"contracts/TownHall.algo.ts:388","pc":[2013]},{"teal":1201,"source":"contracts/TownHall.algo.ts:388","pc":[2014]},{"teal":1205,"source":"contracts/TownHall.algo.ts:392","pc":[2015,2016]},{"teal":1206,"source":"contracts/TownHall.algo.ts:392","pc":[2017,2018]},{"teal":1207,"source":"contracts/TownHall.algo.ts:392","pc":[2019,2020]},{"teal":1208,"source":"contracts/TownHall.algo.ts:392","pc":[2021]},{"teal":1209,"source":"contracts/TownHall.algo.ts:392","pc":[2022]},{"teal":1210,"source":"contracts/TownHall.algo.ts:392","pc":[2023]},{"teal":1217,"source":"contracts/TownHall.algo.ts:396","pc":[2024,2025]},{"teal":1218,"source":"contracts/TownHall.algo.ts:396","pc":[2026]},{"teal":1219,"source":"contracts/TownHall.algo.ts:396","pc":[2027,2028,2029]},{"teal":1220,"source":"contracts/TownHall.algo.ts:396","pc":[2030]},{"teal":1221,"source":"contracts/TownHall.algo.ts:396","pc":[2031,2032]},{"teal":1222,"source":"contracts/TownHall.algo.ts:396","pc":[2033]},{"teal":1225,"source":"contracts/TownHall.algo.ts:395","errorMessage":"Invalid PKs! Are you trying to pass in a different ring of PKs?","pc":[2034]},{"teal":1230,"source":"contracts/TownHall.algo.ts:402","pc":[2035,2036]},{"teal":1231,"source":"contracts/TownHall.algo.ts:402","pc":[2037,2038]},{"teal":1232,"source":"contracts/TownHall.algo.ts:402","pc":[2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072]},{"teal":1233,"source":"contracts/TownHall.algo.ts:402","pc":[2073]},{"teal":1236,"source":"contracts/TownHall.algo.ts:402","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn0\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig0.address())\"}","pc":[2074]},{"teal":1241,"source":"contracts/TownHall.algo.ts:403","pc":[2075,2076]},{"teal":1242,"source":"contracts/TownHall.algo.ts:403","pc":[2077,2078]},{"teal":1243,"source":"contracts/TownHall.algo.ts:403","pc":[2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112]},{"teal":1244,"source":"contracts/TownHall.algo.ts:403","pc":[2113]},{"teal":1247,"source":"contracts/TownHall.algo.ts:403","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn1\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig1.address())\"}","pc":[2114]},{"teal":1252,"source":"contracts/TownHall.algo.ts:404","pc":[2115,2116]},{"teal":1253,"source":"contracts/TownHall.algo.ts:404","pc":[2117,2118]},{"teal":1254,"source":"contracts/TownHall.algo.ts:404","pc":[2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152]},{"teal":1255,"source":"contracts/TownHall.algo.ts:404","pc":[2153]},{"teal":1258,"source":"contracts/TownHall.algo.ts:404","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn2\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig2.address())\"}","pc":[2154]},{"teal":1263,"source":"contracts/TownHall.algo.ts:405","pc":[2155,2156]},{"teal":1264,"source":"contracts/TownHall.algo.ts:405","pc":[2157,2158]},{"teal":1265,"source":"contracts/TownHall.algo.ts:405","pc":[2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192]},{"teal":1266,"source":"contracts/TownHall.algo.ts:405","pc":[2193]},{"teal":1269,"source":"contracts/TownHall.algo.ts:405","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn3\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig3.address())\"}","pc":[2194]},{"teal":1274,"source":"contracts/TownHall.algo.ts:406","pc":[2195,2196]},{"teal":1275,"source":"contracts/TownHall.algo.ts:406","pc":[2197,2198]},{"teal":1276,"source":"contracts/TownHall.algo.ts:406","pc":[2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232]},{"teal":1277,"source":"contracts/TownHall.algo.ts:406","pc":[2233]},{"teal":1280,"source":"contracts/TownHall.algo.ts:406","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn4\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig4.address())\"}","pc":[2234]},{"teal":1285,"source":"contracts/TownHall.algo.ts:407","pc":[2235,2236]},{"teal":1286,"source":"contracts/TownHall.algo.ts:407","pc":[2237,2238]},{"teal":1287,"source":"contracts/TownHall.algo.ts:407","pc":[2239,2240,2241,2242,2243,2244,2245,2246,2247,2248,2249,2250,2251,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272]},{"teal":1288,"source":"contracts/TownHall.algo.ts:407","pc":[2273]},{"teal":1291,"source":"contracts/TownHall.algo.ts:407","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn5\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig5.address())\"}","pc":[2274]},{"teal":1300,"source":"contracts/TownHall.algo.ts:410","pc":[2275,2276]},{"teal":1301,"source":"contracts/TownHall.algo.ts:411","pc":[2277,2278]},{"teal":1302,"source":"contracts/TownHall.algo.ts:411","pc":[2279,2280]},{"teal":1303,"source":"contracts/TownHall.algo.ts:411","pc":[2281]},{"teal":1304,"source":"contracts/TownHall.algo.ts:411","pc":[2282]},{"teal":1307,"source":"contracts/TownHall.algo.ts:411","errorMessage":"transaction verification failed: {\"txn\":\"funderLSigTxn\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(this.lsigFunderAddress.value)\"}","pc":[2283]},{"teal":1310,"source":"contracts/TownHall.algo.ts:410","pc":[2284,2285]},{"teal":1311,"source":"contracts/TownHall.algo.ts:412","pc":[2286,2287]},{"teal":1312,"source":"contracts/TownHall.algo.ts:412","pc":[2288,2289]},{"teal":1313,"source":"contracts/TownHall.algo.ts:412","pc":[2290]},{"teal":1316,"source":"contracts/TownHall.algo.ts:412","errorMessage":"transaction verification failed: {\"txn\":\"funderLSigTxn\",\"field\":\"receiver\",\"expected\":\"this.txn.sender\"}","pc":[2291]},{"teal":1319,"source":"contracts/TownHall.algo.ts:410","pc":[2292,2293]},{"teal":1320,"source":"contracts/TownHall.algo.ts:413","pc":[2294,2295]},{"teal":1321,"source":"contracts/TownHall.algo.ts:413","pc":[2296,2297]},{"teal":1322,"source":"contracts/TownHall.algo.ts:413","pc":[2298]},{"teal":1325,"source":"contracts/TownHall.algo.ts:413","errorMessage":"transaction verification failed: {\"txn\":\"funderLSigTxn\",\"field\":\"amount\",\"expected\":\"LSIG_FUND_AMOUNT\"}","pc":[2299]},{"teal":1330,"source":"contracts/TownHall.algo.ts:416","pc":[2300,2301]},{"teal":1331,"source":"contracts/TownHall.algo.ts:416","pc":[2302,2303]},{"teal":1332,"source":"contracts/TownHall.algo.ts:416","pc":[2304]},{"teal":1333,"source":"contracts/TownHall.algo.ts:416","pc":[2305,2306]},{"teal":1334,"source":"contracts/TownHall.algo.ts:416","pc":[2307]},{"teal":1335,"source":"contracts/TownHall.algo.ts:416","pc":[2308]},{"teal":1336,"source":"contracts/TownHall.algo.ts:416","pc":[2309,2310,2311]},{"teal":1341,"source":"contracts/TownHall.algo.ts:417","pc":[2312]},{"teal":1342,"source":"contracts/Constants.ts:29","pc":[2313,2314]},{"teal":1343,"source":"contracts/TownHall.algo.ts:417","pc":[2315]},{"teal":1347,"source":"contracts/TownHall.algo.ts:418","pc":[2316]},{"teal":1353,"source":"contracts/TownHall.algo.ts:420","pc":[2317,2318]},{"teal":1354,"source":"contracts/TownHall.algo.ts:420","pc":[2319]},{"teal":1355,"source":"contracts/TownHall.algo.ts:420","pc":[2320,2321]},{"teal":1356,"source":"contracts/TownHall.algo.ts:420","pc":[2322]},{"teal":1357,"source":"contracts/TownHall.algo.ts:420","pc":[2323,2324,2325]},{"teal":1362,"source":"contracts/TownHall.algo.ts:426","pc":[2326,2327]},{"teal":1363,"source":"contracts/TownHall.algo.ts:426","pc":[2328,2329]},{"teal":1364,"source":"contracts/TownHall.algo.ts:426","pc":[2330]},{"teal":1368,"source":"contracts/TownHall.algo.ts:427","pc":[2331,2332]},{"teal":1369,"source":"contracts/TownHall.algo.ts:427","pc":[2333,2334]},{"teal":1370,"source":"contracts/TownHall.algo.ts:427","pc":[2335]},{"teal":1374,"source":"contracts/TownHall.algo.ts:428","pc":[2336,2337]},{"teal":1375,"source":"contracts/TownHall.algo.ts:428","pc":[2338,2339]},{"teal":1376,"source":"contracts/TownHall.algo.ts:428","pc":[2340]},{"teal":1380,"source":"contracts/TownHall.algo.ts:429","pc":[2341]},{"teal":1386,"source":"contracts/TownHall.algo.ts:431","pc":[2342,2343]},{"teal":1387,"source":"contracts/TownHall.algo.ts:431","pc":[2344]},{"teal":1388,"source":"contracts/TownHall.algo.ts:431","pc":[2345,2346]},{"teal":1389,"source":"contracts/TownHall.algo.ts:431","pc":[2347]},{"teal":1390,"source":"contracts/TownHall.algo.ts:431","pc":[2348,2349,2350]},{"teal":1395,"source":"contracts/TownHall.algo.ts:432","pc":[2351,2352]},{"teal":1396,"source":"contracts/TownHall.algo.ts:432","pc":[2353,2354]},{"teal":1397,"source":"contracts/TownHall.algo.ts:432","pc":[2355]},{"teal":1401,"source":"contracts/TownHall.algo.ts:433","pc":[2356,2357]},{"teal":1402,"source":"contracts/TownHall.algo.ts:433","pc":[2358,2359]},{"teal":1403,"source":"contracts/TownHall.algo.ts:433","pc":[2360]},{"teal":1407,"source":"contracts/TownHall.algo.ts:434","pc":[2361,2362]},{"teal":1408,"source":"contracts/TownHall.algo.ts:434","pc":[2363,2364]},{"teal":1409,"source":"contracts/TownHall.algo.ts:434","pc":[2365]},{"teal":1413,"source":"contracts/TownHall.algo.ts:435","pc":[2366]},{"teal":1419,"source":"contracts/TownHall.algo.ts:437","pc":[2367,2368]},{"teal":1420,"source":"contracts/TownHall.algo.ts:437","pc":[2369]},{"teal":1421,"source":"contracts/TownHall.algo.ts:437","pc":[2370,2371]},{"teal":1422,"source":"contracts/TownHall.algo.ts:437","pc":[2372]},{"teal":1423,"source":"contracts/TownHall.algo.ts:437","pc":[2373,2374,2375]},{"teal":1428,"source":"contracts/TownHall.algo.ts:438","pc":[2376,2377]},{"teal":1429,"source":"contracts/TownHall.algo.ts:438","pc":[2378,2379]},{"teal":1430,"source":"contracts/TownHall.algo.ts:438","pc":[2380]},{"teal":1434,"source":"contracts/TownHall.algo.ts:439","pc":[2381,2382]},{"teal":1435,"source":"contracts/TownHall.algo.ts:439","pc":[2383,2384]},{"teal":1436,"source":"contracts/TownHall.algo.ts:439","pc":[2385]},{"teal":1440,"source":"contracts/TownHall.algo.ts:440","pc":[2386,2387]},{"teal":1441,"source":"contracts/TownHall.algo.ts:440","pc":[2388,2389]},{"teal":1442,"source":"contracts/TownHall.algo.ts:440","pc":[2390]},{"teal":1446,"source":"contracts/TownHall.algo.ts:441","pc":[2391]},{"teal":1452,"source":"contracts/TownHall.algo.ts:443","pc":[2392,2393]},{"teal":1453,"source":"contracts/TownHall.algo.ts:443","pc":[2394]},{"teal":1454,"source":"contracts/TownHall.algo.ts:443","pc":[2395,2396]},{"teal":1455,"source":"contracts/TownHall.algo.ts:443","pc":[2397]},{"teal":1456,"source":"contracts/TownHall.algo.ts:443","pc":[2398,2399,2400]},{"teal":1461,"source":"contracts/TownHall.algo.ts:444","pc":[2401,2402]},{"teal":1462,"source":"contracts/TownHall.algo.ts:444","pc":[2403,2404]},{"teal":1463,"source":"contracts/TownHall.algo.ts:444","pc":[2405]},{"teal":1467,"source":"contracts/TownHall.algo.ts:445","pc":[2406,2407]},{"teal":1468,"source":"contracts/TownHall.algo.ts:445","pc":[2408,2409]},{"teal":1469,"source":"contracts/TownHall.algo.ts:445","pc":[2410]},{"teal":1473,"source":"contracts/TownHall.algo.ts:446","pc":[2411,2412]},{"teal":1474,"source":"contracts/TownHall.algo.ts:446","pc":[2413,2414]},{"teal":1475,"source":"contracts/TownHall.algo.ts:446","pc":[2415]},{"teal":1479,"source":"contracts/TownHall.algo.ts:447","pc":[2416]},{"teal":1485,"source":"contracts/TownHall.algo.ts:449","pc":[2417,2418]},{"teal":1486,"source":"contracts/TownHall.algo.ts:449","pc":[2419]},{"teal":1487,"source":"contracts/TownHall.algo.ts:449","pc":[2420,2421]},{"teal":1488,"source":"contracts/TownHall.algo.ts:449","pc":[2422]},{"teal":1489,"source":"contracts/TownHall.algo.ts:449","pc":[2423,2424,2425]},{"teal":1494,"source":"contracts/TownHall.algo.ts:450","pc":[2426,2427]},{"teal":1495,"source":"contracts/TownHall.algo.ts:450","pc":[2428,2429]},{"teal":1496,"source":"contracts/TownHall.algo.ts:450","pc":[2430]},{"teal":1500,"source":"contracts/TownHall.algo.ts:451","pc":[2431,2432]},{"teal":1501,"source":"contracts/TownHall.algo.ts:451","pc":[2433,2434]},{"teal":1502,"source":"contracts/TownHall.algo.ts:451","pc":[2435]},{"teal":1506,"source":"contracts/TownHall.algo.ts:452","pc":[2436,2437]},{"teal":1507,"source":"contracts/TownHall.algo.ts:452","pc":[2438,2439]},{"teal":1508,"source":"contracts/TownHall.algo.ts:452","pc":[2440]},{"teal":1512,"source":"contracts/TownHall.algo.ts:453","pc":[2441]},{"teal":1518,"source":"contracts/TownHall.algo.ts:455","pc":[2442,2443]},{"teal":1519,"source":"contracts/TownHall.algo.ts:455","pc":[2444]},{"teal":1520,"source":"contracts/TownHall.algo.ts:455","pc":[2445,2446]},{"teal":1521,"source":"contracts/TownHall.algo.ts:455","pc":[2447]},{"teal":1522,"source":"contracts/TownHall.algo.ts:455","pc":[2448,2449,2450]},{"teal":1527,"source":"contracts/TownHall.algo.ts:456","pc":[2451,2452]},{"teal":1528,"source":"contracts/TownHall.algo.ts:456","pc":[2453,2454]},{"teal":1529,"source":"contracts/TownHall.algo.ts:456","pc":[2455]},{"teal":1533,"source":"contracts/TownHall.algo.ts:457","pc":[2456,2457]},{"teal":1534,"source":"contracts/TownHall.algo.ts:457","pc":[2458,2459]},{"teal":1535,"source":"contracts/TownHall.algo.ts:457","pc":[2460]},{"teal":1539,"source":"contracts/TownHall.algo.ts:458","pc":[2461]},{"teal":1540,"source":"contracts/Constants.ts:19","pc":[2462,2463]},{"teal":1541,"source":"contracts/TownHall.algo.ts:458","pc":[2464]},{"teal":1545,"source":"contracts/TownHall.algo.ts:459","pc":[2465,2466]},{"teal":1546,"source":"contracts/TownHall.algo.ts:459","pc":[2467,2468]},{"teal":1547,"source":"contracts/TownHall.algo.ts:459","pc":[2469]},{"teal":1551,"source":"contracts/TownHall.algo.ts:460","pc":[2470]},{"teal":1555,"source":"contracts/TownHall.algo.ts:462","errorMessage":"Invalid state! Error, game should have moved to the next stage already.","pc":[2471]},{"teal":1556,"source":"contracts/TownHall.algo.ts:361","pc":[2472]},{"teal":1561,"source":"contracts/TownHall.algo.ts:465","pc":[2473,2474,2475]},{"teal":1562,"source":"contracts/TownHall.algo.ts:465","pc":[2476]},{"teal":1565,"source":"contracts/TownHall.algo.ts:465","pc":[2477,2478,2479]},{"teal":1566,"source":"contracts/TownHall.algo.ts:465","pc":[2480]},{"teal":1567,"source":"contracts/TownHall.algo.ts:465","pc":[2481]},{"teal":1571,"source":"contracts/TownHall.algo.ts:465","pc":[2482,2483,2484]},{"teal":1575,"source":"contracts/TownHall.algo.ts:466","pc":[2485]},{"teal":1576,"source":"contracts/TownHall.algo.ts:466","pc":[2486]},{"teal":1577,"source":"contracts/Constants.ts:19","pc":[2487,2488]},{"teal":1578,"source":"contracts/TownHall.algo.ts:466","pc":[2489]},{"teal":1581,"source":"contracts/TownHall.algo.ts:466","errorMessage":"Invalid method call: Game is not in Day Stage Vote state.","pc":[2490]},{"teal":1585,"source":"contracts/TownHall.algo.ts:468","pc":[2491,2492]},{"teal":1586,"source":"contracts/TownHall.algo.ts:468","pc":[2493]},{"teal":1587,"source":"contracts/TownHall.algo.ts:468","pc":[2494]},{"teal":1588,"source":"contracts/TownHall.algo.ts:468","pc":[2495]},{"teal":1589,"source":"contracts/TownHall.algo.ts:468","pc":[2496,2497,2498]},{"teal":1590,"source":"contracts/TownHall.algo.ts:468","pc":[2499,2500]},{"teal":1591,"source":"contracts/TownHall.algo.ts:468","pc":[2501,2502]},{"teal":1592,"source":"contracts/TownHall.algo.ts:468","pc":[2503]},{"teal":1593,"source":"contracts/TownHall.algo.ts:468","pc":[2504]},{"teal":1597,"source":"contracts/TownHall.algo.ts:468","errorMessage":"Invalid vote: Vote must be int 1 <= n <= 6.","pc":[2505]},{"teal":1609,"source":"contracts/TownHall.algo.ts:472","pc":[2506,2507]},{"teal":1610,"source":"contracts/TownHall.algo.ts:472","pc":[2508]},{"teal":1611,"source":"contracts/TownHall.algo.ts:472","pc":[2509]},{"teal":1612,"source":"contracts/TownHall.algo.ts:472","pc":[2510,2511,2512]},{"teal":1613,"source":"contracts/TownHall.algo.ts:472","pc":[2513]},{"teal":1614,"source":"contracts/TownHall.algo.ts:472","pc":[2514]},{"teal":1615,"source":"contracts/TownHall.algo.ts:472","pc":[2515,2516,2517]},{"teal":1616,"source":"contracts/TownHall.algo.ts:473","pc":[2518,2519]},{"teal":1617,"source":"contracts/TownHall.algo.ts:473","pc":[2520,2521]},{"teal":1618,"source":"contracts/TownHall.algo.ts:473","pc":[2522]},{"teal":1619,"source":"contracts/TownHall.algo.ts:473","pc":[2523,2524,2525]},{"teal":1620,"source":"contracts/TownHall.algo.ts:473","pc":[2526]},{"teal":1621,"source":"contracts/TownHall.algo.ts:472","pc":[2527]},{"teal":1624,"source":"contracts/TownHall.algo.ts:473","pc":[2528]},{"teal":1625,"source":"contracts/TownHall.algo.ts:473","pc":[2529,2530,2531]},{"teal":1626,"source":"contracts/TownHall.algo.ts:474","pc":[2532,2533]},{"teal":1627,"source":"contracts/TownHall.algo.ts:474","pc":[2534,2535]},{"teal":1628,"source":"contracts/TownHall.algo.ts:474","pc":[2536]},{"teal":1629,"source":"contracts/TownHall.algo.ts:474","pc":[2537,2538,2539]},{"teal":1630,"source":"contracts/TownHall.algo.ts:474","pc":[2540]},{"teal":1631,"source":"contracts/TownHall.algo.ts:473","pc":[2541]},{"teal":1634,"source":"contracts/TownHall.algo.ts:474","pc":[2542]},{"teal":1635,"source":"contracts/TownHall.algo.ts:474","pc":[2543,2544,2545]},{"teal":1636,"source":"contracts/TownHall.algo.ts:475","pc":[2546,2547]},{"teal":1637,"source":"contracts/TownHall.algo.ts:475","pc":[2548,2549]},{"teal":1638,"source":"contracts/TownHall.algo.ts:475","pc":[2550]},{"teal":1639,"source":"contracts/TownHall.algo.ts:475","pc":[2551,2552,2553]},{"teal":1640,"source":"contracts/TownHall.algo.ts:475","pc":[2554]},{"teal":1641,"source":"contracts/TownHall.algo.ts:474","pc":[2555]},{"teal":1644,"source":"contracts/TownHall.algo.ts:475","pc":[2556]},{"teal":1645,"source":"contracts/TownHall.algo.ts:475","pc":[2557,2558,2559]},{"teal":1646,"source":"contracts/TownHall.algo.ts:476","pc":[2560,2561]},{"teal":1647,"source":"contracts/TownHall.algo.ts:476","pc":[2562,2563]},{"teal":1648,"source":"contracts/TownHall.algo.ts:476","pc":[2564]},{"teal":1649,"source":"contracts/TownHall.algo.ts:476","pc":[2565,2566,2567]},{"teal":1650,"source":"contracts/TownHall.algo.ts:476","pc":[2568]},{"teal":1651,"source":"contracts/TownHall.algo.ts:475","pc":[2569]},{"teal":1654,"source":"contracts/TownHall.algo.ts:476","pc":[2570]},{"teal":1655,"source":"contracts/TownHall.algo.ts:476","pc":[2571,2572,2573]},{"teal":1656,"source":"contracts/TownHall.algo.ts:477","pc":[2574,2575]},{"teal":1657,"source":"contracts/TownHall.algo.ts:477","pc":[2576,2577]},{"teal":1658,"source":"contracts/TownHall.algo.ts:477","pc":[2578]},{"teal":1659,"source":"contracts/TownHall.algo.ts:477","pc":[2579,2580,2581]},{"teal":1660,"source":"contracts/TownHall.algo.ts:477","pc":[2582]},{"teal":1661,"source":"contracts/TownHall.algo.ts:476","pc":[2583]},{"teal":1664,"source":"contracts/TownHall.algo.ts:471","pc":[2584]},{"teal":1665,"source":"contracts/TownHall.algo.ts:470","pc":[2585,2586,2587]},{"teal":1669,"source":"contracts/TownHall.algo.ts:480","errorMessage":"Illegal call: Address sender not allowed to vote.","pc":[2588]},{"teal":1675,"source":"contracts/TownHall.algo.ts:483","pc":[2589,2590]},{"teal":1676,"source":"contracts/TownHall.algo.ts:483","pc":[2591]},{"teal":1677,"source":"contracts/TownHall.algo.ts:483","pc":[2592]},{"teal":1678,"source":"contracts/TownHall.algo.ts:483","pc":[2593]},{"teal":1679,"source":"contracts/TownHall.algo.ts:483","pc":[2594,2595,2596]},{"teal":1680,"source":"contracts/TownHall.algo.ts:483","pc":[2597]},{"teal":1681,"source":"contracts/TownHall.algo.ts:483","pc":[2598]},{"teal":1682,"source":"contracts/TownHall.algo.ts:483","pc":[2599,2600,2601]},{"teal":1683,"source":"contracts/TownHall.algo.ts:483","pc":[2602,2603]},{"teal":1684,"source":"contracts/TownHall.algo.ts:483","pc":[2604]},{"teal":1685,"source":"contracts/TownHall.algo.ts:483","pc":[2605]},{"teal":1688,"source":"contracts/TownHall.algo.ts:483","pc":[2606,2607,2608]},{"teal":1693,"source":"contracts/TownHall.algo.ts:484","pc":[2609,2610]},{"teal":1694,"source":"contracts/TownHall.algo.ts:484","pc":[2611]},{"teal":1695,"source":"contracts/TownHall.algo.ts:484","pc":[2612]},{"teal":1696,"source":"contracts/TownHall.algo.ts:484","pc":[2613]},{"teal":1697,"source":"contracts/TownHall.algo.ts:484","pc":[2614,2615]},{"teal":1698,"source":"contracts/TownHall.algo.ts:484","pc":[2616]},{"teal":1699,"source":"contracts/TownHall.algo.ts:484","pc":[2617]},{"teal":1700,"source":"contracts/TownHall.algo.ts:483","pc":[2618,2619,2620]},{"teal":1705,"source":"contracts/TownHall.algo.ts:485","pc":[2621,2622]},{"teal":1706,"source":"contracts/TownHall.algo.ts:485","pc":[2623,2624]},{"teal":1707,"source":"contracts/TownHall.algo.ts:485","pc":[2625]},{"teal":1708,"source":"contracts/TownHall.algo.ts:485","pc":[2626]},{"teal":1709,"source":"contracts/TownHall.algo.ts:485","pc":[2627,2628,2629]},{"teal":1710,"source":"contracts/TownHall.algo.ts:485","pc":[2630,2631]},{"teal":1711,"source":"contracts/TownHall.algo.ts:485","pc":[2632]},{"teal":1712,"source":"contracts/TownHall.algo.ts:485","pc":[2633,2634,2635]},{"teal":1713,"source":"contracts/TownHall.algo.ts:485","pc":[2636,2637]},{"teal":1714,"source":"contracts/TownHall.algo.ts:485","pc":[2638]},{"teal":1715,"source":"contracts/TownHall.algo.ts:485","pc":[2639]},{"teal":1718,"source":"contracts/TownHall.algo.ts:485","pc":[2640,2641,2642]},{"teal":1723,"source":"contracts/TownHall.algo.ts:486","pc":[2643,2644]},{"teal":1724,"source":"contracts/TownHall.algo.ts:486","pc":[2645]},{"teal":1725,"source":"contracts/TownHall.algo.ts:486","pc":[2646]},{"teal":1726,"source":"contracts/TownHall.algo.ts:486","pc":[2647]},{"teal":1727,"source":"contracts/TownHall.algo.ts:486","pc":[2648,2649]},{"teal":1728,"source":"contracts/TownHall.algo.ts:486","pc":[2650]},{"teal":1729,"source":"contracts/TownHall.algo.ts:486","pc":[2651]},{"teal":1730,"source":"contracts/TownHall.algo.ts:485","pc":[2652,2653,2654]},{"teal":1735,"source":"contracts/TownHall.algo.ts:487","pc":[2655,2656]},{"teal":1736,"source":"contracts/TownHall.algo.ts:487","pc":[2657,2658]},{"teal":1737,"source":"contracts/TownHall.algo.ts:487","pc":[2659]},{"teal":1738,"source":"contracts/TownHall.algo.ts:487","pc":[2660]},{"teal":1739,"source":"contracts/TownHall.algo.ts:487","pc":[2661,2662,2663]},{"teal":1740,"source":"contracts/TownHall.algo.ts:487","pc":[2664,2665]},{"teal":1741,"source":"contracts/TownHall.algo.ts:487","pc":[2666]},{"teal":1742,"source":"contracts/TownHall.algo.ts:487","pc":[2667,2668,2669]},{"teal":1743,"source":"contracts/TownHall.algo.ts:487","pc":[2670,2671]},{"teal":1744,"source":"contracts/TownHall.algo.ts:487","pc":[2672]},{"teal":1745,"source":"contracts/TownHall.algo.ts:487","pc":[2673]},{"teal":1748,"source":"contracts/TownHall.algo.ts:487","pc":[2674,2675,2676]},{"teal":1753,"source":"contracts/TownHall.algo.ts:488","pc":[2677,2678]},{"teal":1754,"source":"contracts/TownHall.algo.ts:488","pc":[2679]},{"teal":1755,"source":"contracts/TownHall.algo.ts:488","pc":[2680]},{"teal":1756,"source":"contracts/TownHall.algo.ts:488","pc":[2681]},{"teal":1757,"source":"contracts/TownHall.algo.ts:488","pc":[2682,2683]},{"teal":1758,"source":"contracts/TownHall.algo.ts:488","pc":[2684]},{"teal":1759,"source":"contracts/TownHall.algo.ts:488","pc":[2685]},{"teal":1760,"source":"contracts/TownHall.algo.ts:487","pc":[2686,2687,2688]},{"teal":1765,"source":"contracts/TownHall.algo.ts:489","pc":[2689,2690]},{"teal":1766,"source":"contracts/TownHall.algo.ts:489","pc":[2691,2692]},{"teal":1767,"source":"contracts/TownHall.algo.ts:489","pc":[2693]},{"teal":1768,"source":"contracts/TownHall.algo.ts:489","pc":[2694]},{"teal":1769,"source":"contracts/TownHall.algo.ts:489","pc":[2695,2696,2697]},{"teal":1770,"source":"contracts/TownHall.algo.ts:489","pc":[2698,2699]},{"teal":1771,"source":"contracts/TownHall.algo.ts:489","pc":[2700]},{"teal":1772,"source":"contracts/TownHall.algo.ts:489","pc":[2701,2702,2703]},{"teal":1773,"source":"contracts/TownHall.algo.ts:489","pc":[2704,2705]},{"teal":1774,"source":"contracts/TownHall.algo.ts:489","pc":[2706]},{"teal":1775,"source":"contracts/TownHall.algo.ts:489","pc":[2707]},{"teal":1778,"source":"contracts/TownHall.algo.ts:489","pc":[2708,2709,2710]},{"teal":1783,"source":"contracts/TownHall.algo.ts:490","pc":[2711,2712]},{"teal":1784,"source":"contracts/TownHall.algo.ts:490","pc":[2713]},{"teal":1785,"source":"contracts/TownHall.algo.ts:490","pc":[2714]},{"teal":1786,"source":"contracts/TownHall.algo.ts:490","pc":[2715]},{"teal":1787,"source":"contracts/TownHall.algo.ts:490","pc":[2716,2717]},{"teal":1788,"source":"contracts/TownHall.algo.ts:490","pc":[2718]},{"teal":1789,"source":"contracts/TownHall.algo.ts:490","pc":[2719]},{"teal":1790,"source":"contracts/TownHall.algo.ts:489","pc":[2720,2721,2722]},{"teal":1795,"source":"contracts/TownHall.algo.ts:491","pc":[2723,2724]},{"teal":1796,"source":"contracts/TownHall.algo.ts:491","pc":[2725,2726]},{"teal":1797,"source":"contracts/TownHall.algo.ts:491","pc":[2727]},{"teal":1798,"source":"contracts/TownHall.algo.ts:491","pc":[2728]},{"teal":1799,"source":"contracts/TownHall.algo.ts:491","pc":[2729,2730,2731]},{"teal":1800,"source":"contracts/TownHall.algo.ts:491","pc":[2732,2733]},{"teal":1801,"source":"contracts/TownHall.algo.ts:491","pc":[2734]},{"teal":1802,"source":"contracts/TownHall.algo.ts:491","pc":[2735,2736,2737]},{"teal":1803,"source":"contracts/TownHall.algo.ts:491","pc":[2738,2739]},{"teal":1804,"source":"contracts/TownHall.algo.ts:491","pc":[2740]},{"teal":1805,"source":"contracts/TownHall.algo.ts:491","pc":[2741]},{"teal":1808,"source":"contracts/TownHall.algo.ts:491","pc":[2742,2743,2744]},{"teal":1813,"source":"contracts/TownHall.algo.ts:492","pc":[2745,2746]},{"teal":1814,"source":"contracts/TownHall.algo.ts:492","pc":[2747]},{"teal":1815,"source":"contracts/TownHall.algo.ts:492","pc":[2748]},{"teal":1816,"source":"contracts/TownHall.algo.ts:492","pc":[2749]},{"teal":1817,"source":"contracts/TownHall.algo.ts:492","pc":[2750,2751]},{"teal":1818,"source":"contracts/TownHall.algo.ts:492","pc":[2752]},{"teal":1819,"source":"contracts/TownHall.algo.ts:492","pc":[2753]},{"teal":1820,"source":"contracts/TownHall.algo.ts:491","pc":[2754,2755,2756]},{"teal":1825,"source":"contracts/TownHall.algo.ts:493","pc":[2757,2758]},{"teal":1826,"source":"contracts/TownHall.algo.ts:493","pc":[2759]},{"teal":1827,"source":"contracts/TownHall.algo.ts:493","pc":[2760]},{"teal":1828,"source":"contracts/TownHall.algo.ts:493","pc":[2761]},{"teal":1829,"source":"contracts/TownHall.algo.ts:493","pc":[2762,2763,2764]},{"teal":1830,"source":"contracts/TownHall.algo.ts:493","pc":[2765,2766]},{"teal":1831,"source":"contracts/TownHall.algo.ts:493","pc":[2767]},{"teal":1832,"source":"contracts/TownHall.algo.ts:493","pc":[2768,2769,2770]},{"teal":1833,"source":"contracts/TownHall.algo.ts:493","pc":[2771,2772]},{"teal":1834,"source":"contracts/TownHall.algo.ts:493","pc":[2773]},{"teal":1835,"source":"contracts/TownHall.algo.ts:493","pc":[2774]},{"teal":1838,"source":"contracts/TownHall.algo.ts:493","pc":[2775,2776,2777]},{"teal":1843,"source":"contracts/TownHall.algo.ts:494","pc":[2778,2779]},{"teal":1844,"source":"contracts/TownHall.algo.ts:494","pc":[2780]},{"teal":1845,"source":"contracts/TownHall.algo.ts:494","pc":[2781]},{"teal":1846,"source":"contracts/TownHall.algo.ts:494","pc":[2782]},{"teal":1847,"source":"contracts/TownHall.algo.ts:494","pc":[2783,2784]},{"teal":1848,"source":"contracts/TownHall.algo.ts:494","pc":[2785]},{"teal":1849,"source":"contracts/TownHall.algo.ts:494","pc":[2786]},{"teal":1850,"source":"contracts/TownHall.algo.ts:493","pc":[2787,2788,2789]},{"teal":1854,"source":"contracts/TownHall.algo.ts:496","errorMessage":"Invalid vote: Is player still alive?","pc":[2790]},{"teal":1860,"source":"contracts/TownHall.algo.ts:499","pc":[2791,2792]},{"teal":1861,"source":"contracts/TownHall.algo.ts:499","pc":[2793]},{"teal":1862,"source":"contracts/TownHall.algo.ts:499","pc":[2794]},{"teal":1863,"source":"contracts/TownHall.algo.ts:499","pc":[2795,2796,2797]},{"teal":1864,"source":"contracts/TownHall.algo.ts:499","pc":[2798]},{"teal":1865,"source":"contracts/TownHall.algo.ts:499","pc":[2799]},{"teal":1866,"source":"contracts/TownHall.algo.ts:499","pc":[2800,2801,2802]},{"teal":1867,"source":"contracts/TownHall.algo.ts:499","pc":[2803,2804]},{"teal":1868,"source":"contracts/TownHall.algo.ts:499","pc":[2805]},{"teal":1869,"source":"contracts/TownHall.algo.ts:499","pc":[2806]},{"teal":1870,"source":"contracts/TownHall.algo.ts:499","pc":[2807]},{"teal":1871,"source":"contracts/TownHall.algo.ts:499","pc":[2808]},{"teal":1874,"source":"contracts/TownHall.algo.ts:499","pc":[2809,2810,2811]},{"teal":1879,"source":"contracts/TownHall.algo.ts:500","pc":[2812,2813]},{"teal":1880,"source":"contracts/TownHall.algo.ts:500","pc":[2814]},{"teal":1881,"source":"contracts/TownHall.algo.ts:500","pc":[2815]},{"teal":1882,"source":"contracts/TownHall.algo.ts:499","pc":[2816,2817,2818]},{"teal":1887,"source":"contracts/TownHall.algo.ts:501","pc":[2819,2820]},{"teal":1888,"source":"contracts/TownHall.algo.ts:501","pc":[2821,2822]},{"teal":1889,"source":"contracts/TownHall.algo.ts:501","pc":[2823]},{"teal":1890,"source":"contracts/TownHall.algo.ts:501","pc":[2824,2825,2826]},{"teal":1891,"source":"contracts/TownHall.algo.ts:501","pc":[2827]},{"teal":1892,"source":"contracts/TownHall.algo.ts:501","pc":[2828]},{"teal":1893,"source":"contracts/TownHall.algo.ts:501","pc":[2829,2830,2831]},{"teal":1894,"source":"contracts/TownHall.algo.ts:501","pc":[2832,2833]},{"teal":1895,"source":"contracts/TownHall.algo.ts:501","pc":[2834]},{"teal":1896,"source":"contracts/TownHall.algo.ts:501","pc":[2835]},{"teal":1897,"source":"contracts/TownHall.algo.ts:501","pc":[2836]},{"teal":1898,"source":"contracts/TownHall.algo.ts:501","pc":[2837]},{"teal":1901,"source":"contracts/TownHall.algo.ts:501","pc":[2838,2839,2840]},{"teal":1906,"source":"contracts/TownHall.algo.ts:502","pc":[2841,2842]},{"teal":1907,"source":"contracts/TownHall.algo.ts:502","pc":[2843]},{"teal":1908,"source":"contracts/TownHall.algo.ts:502","pc":[2844]},{"teal":1909,"source":"contracts/TownHall.algo.ts:501","pc":[2845,2846,2847]},{"teal":1914,"source":"contracts/TownHall.algo.ts:503","pc":[2848,2849]},{"teal":1915,"source":"contracts/TownHall.algo.ts:503","pc":[2850,2851]},{"teal":1916,"source":"contracts/TownHall.algo.ts:503","pc":[2852]},{"teal":1917,"source":"contracts/TownHall.algo.ts:503","pc":[2853,2854,2855]},{"teal":1918,"source":"contracts/TownHall.algo.ts:503","pc":[2856]},{"teal":1919,"source":"contracts/TownHall.algo.ts:503","pc":[2857]},{"teal":1920,"source":"contracts/TownHall.algo.ts:503","pc":[2858,2859,2860]},{"teal":1921,"source":"contracts/TownHall.algo.ts:503","pc":[2861,2862]},{"teal":1922,"source":"contracts/TownHall.algo.ts:503","pc":[2863]},{"teal":1923,"source":"contracts/TownHall.algo.ts:503","pc":[2864]},{"teal":1924,"source":"contracts/TownHall.algo.ts:503","pc":[2865]},{"teal":1925,"source":"contracts/TownHall.algo.ts:503","pc":[2866]},{"teal":1928,"source":"contracts/TownHall.algo.ts:503","pc":[2867,2868,2869]},{"teal":1933,"source":"contracts/TownHall.algo.ts:504","pc":[2870,2871]},{"teal":1934,"source":"contracts/TownHall.algo.ts:504","pc":[2872]},{"teal":1935,"source":"contracts/TownHall.algo.ts:504","pc":[2873]},{"teal":1936,"source":"contracts/TownHall.algo.ts:503","pc":[2874,2875,2876]},{"teal":1941,"source":"contracts/TownHall.algo.ts:505","pc":[2877,2878]},{"teal":1942,"source":"contracts/TownHall.algo.ts:505","pc":[2879,2880]},{"teal":1943,"source":"contracts/TownHall.algo.ts:505","pc":[2881]},{"teal":1944,"source":"contracts/TownHall.algo.ts:505","pc":[2882,2883,2884]},{"teal":1945,"source":"contracts/TownHall.algo.ts:505","pc":[2885]},{"teal":1946,"source":"contracts/TownHall.algo.ts:505","pc":[2886]},{"teal":1947,"source":"contracts/TownHall.algo.ts:505","pc":[2887,2888,2889]},{"teal":1948,"source":"contracts/TownHall.algo.ts:505","pc":[2890,2891]},{"teal":1949,"source":"contracts/TownHall.algo.ts:505","pc":[2892]},{"teal":1950,"source":"contracts/TownHall.algo.ts:505","pc":[2893]},{"teal":1951,"source":"contracts/TownHall.algo.ts:505","pc":[2894]},{"teal":1952,"source":"contracts/TownHall.algo.ts:505","pc":[2895]},{"teal":1955,"source":"contracts/TownHall.algo.ts:505","pc":[2896,2897,2898]},{"teal":1960,"source":"contracts/TownHall.algo.ts:506","pc":[2899,2900]},{"teal":1961,"source":"contracts/TownHall.algo.ts:506","pc":[2901]},{"teal":1962,"source":"contracts/TownHall.algo.ts:506","pc":[2902]},{"teal":1963,"source":"contracts/TownHall.algo.ts:505","pc":[2903,2904,2905]},{"teal":1968,"source":"contracts/TownHall.algo.ts:507","pc":[2906,2907]},{"teal":1969,"source":"contracts/TownHall.algo.ts:507","pc":[2908,2909]},{"teal":1970,"source":"contracts/TownHall.algo.ts:507","pc":[2910]},{"teal":1971,"source":"contracts/TownHall.algo.ts:507","pc":[2911,2912,2913]},{"teal":1972,"source":"contracts/TownHall.algo.ts:507","pc":[2914]},{"teal":1973,"source":"contracts/TownHall.algo.ts:507","pc":[2915]},{"teal":1974,"source":"contracts/TownHall.algo.ts:507","pc":[2916,2917,2918]},{"teal":1975,"source":"contracts/TownHall.algo.ts:507","pc":[2919,2920]},{"teal":1976,"source":"contracts/TownHall.algo.ts:507","pc":[2921]},{"teal":1977,"source":"contracts/TownHall.algo.ts:507","pc":[2922]},{"teal":1978,"source":"contracts/TownHall.algo.ts:507","pc":[2923]},{"teal":1979,"source":"contracts/TownHall.algo.ts:507","pc":[2924]},{"teal":1982,"source":"contracts/TownHall.algo.ts:507","pc":[2925,2926,2927]},{"teal":1987,"source":"contracts/TownHall.algo.ts:508","pc":[2928,2929]},{"teal":1988,"source":"contracts/TownHall.algo.ts:508","pc":[2930]},{"teal":1989,"source":"contracts/TownHall.algo.ts:508","pc":[2931]},{"teal":1990,"source":"contracts/TownHall.algo.ts:507","pc":[2932,2933,2934]},{"teal":1995,"source":"contracts/TownHall.algo.ts:509","pc":[2935,2936]},{"teal":1996,"source":"contracts/TownHall.algo.ts:509","pc":[2937,2938]},{"teal":1997,"source":"contracts/TownHall.algo.ts:509","pc":[2939]},{"teal":1998,"source":"contracts/TownHall.algo.ts:509","pc":[2940,2941,2942]},{"teal":1999,"source":"contracts/TownHall.algo.ts:509","pc":[2943]},{"teal":2000,"source":"contracts/TownHall.algo.ts:509","pc":[2944]},{"teal":2001,"source":"contracts/TownHall.algo.ts:509","pc":[2945,2946,2947]},{"teal":2002,"source":"contracts/TownHall.algo.ts:509","pc":[2948,2949]},{"teal":2003,"source":"contracts/TownHall.algo.ts:509","pc":[2950]},{"teal":2004,"source":"contracts/TownHall.algo.ts:509","pc":[2951]},{"teal":2005,"source":"contracts/TownHall.algo.ts:509","pc":[2952]},{"teal":2006,"source":"contracts/TownHall.algo.ts:509","pc":[2953]},{"teal":2009,"source":"contracts/TownHall.algo.ts:509","pc":[2954,2955,2956]},{"teal":2014,"source":"contracts/TownHall.algo.ts:510","pc":[2957,2958]},{"teal":2015,"source":"contracts/TownHall.algo.ts:510","pc":[2959]},{"teal":2016,"source":"contracts/TownHall.algo.ts:510","pc":[2960]},{"teal":2017,"source":"contracts/TownHall.algo.ts:509","pc":[2961,2962,2963]},{"teal":2021,"source":"contracts/TownHall.algo.ts:512","errorMessage":"Address not allowed to vote.","pc":[2964]},{"teal":2026,"source":"contracts/TownHall.algo.ts:515","pc":[2965,2966]},{"teal":2027,"source":"contracts/TownHall.algo.ts:515","pc":[2967]},{"teal":2028,"source":"contracts/TownHall.algo.ts:515","pc":[2968]},{"teal":2029,"source":"contracts/TownHall.algo.ts:515","pc":[2969]},{"teal":2030,"source":"contracts/TownHall.algo.ts:515","pc":[2970,2971]},{"teal":2031,"source":"contracts/TownHall.algo.ts:515","pc":[2972]},{"teal":2032,"source":"contracts/TownHall.algo.ts:515","pc":[2973]},{"teal":2037,"source":"contracts/TownHall.algo.ts:517","pc":[2974,2975]},{"teal":2038,"source":"contracts/TownHall.algo.ts:517","pc":[2976]},{"teal":2039,"source":"contracts/TownHall.algo.ts:517","pc":[2977,2978]},{"teal":2040,"source":"contracts/TownHall.algo.ts:517","pc":[2979]},{"teal":2041,"source":"contracts/TownHall.algo.ts:517","pc":[2980]},{"teal":2042,"source":"contracts/TownHall.algo.ts:517","pc":[2981,2982,2983]},{"teal":2047,"source":"contracts/TownHall.algo.ts:519","pc":[2984]},{"teal":2048,"source":"contracts/Constants.ts:20","pc":[2985,2986]},{"teal":2049,"source":"contracts/TownHall.algo.ts:519","pc":[2987]},{"teal":2053,"source":"contracts/TownHall.algo.ts:522","pc":[2988,2989]},{"teal":2054,"source":"contracts/TownHall.algo.ts:522","pc":[2990]},{"teal":2055,"source":"contracts/TownHall.algo.ts:522","pc":[2991]},{"teal":2059,"source":"contracts/TownHall.algo.ts:523","pc":[2992,2993]},{"teal":2060,"source":"contracts/TownHall.algo.ts:523","pc":[2994]},{"teal":2061,"source":"contracts/TownHall.algo.ts:523","pc":[2995]},{"teal":2065,"source":"contracts/TownHall.algo.ts:524","pc":[2996,2997]},{"teal":2066,"source":"contracts/TownHall.algo.ts:524","pc":[2998]},{"teal":2067,"source":"contracts/TownHall.algo.ts:524","pc":[2999]},{"teal":2071,"source":"contracts/TownHall.algo.ts:525","pc":[3000,3001]},{"teal":2072,"source":"contracts/TownHall.algo.ts:525","pc":[3002]},{"teal":2073,"source":"contracts/TownHall.algo.ts:525","pc":[3003]},{"teal":2077,"source":"contracts/TownHall.algo.ts:526","pc":[3004,3005]},{"teal":2078,"source":"contracts/TownHall.algo.ts:526","pc":[3006]},{"teal":2079,"source":"contracts/TownHall.algo.ts:526","pc":[3007]},{"teal":2083,"source":"contracts/TownHall.algo.ts:527","pc":[3008,3009]},{"teal":2084,"source":"contracts/TownHall.algo.ts:527","pc":[3010]},{"teal":2085,"source":"contracts/TownHall.algo.ts:527","pc":[3011]},{"teal":2089,"source":"contracts/TownHall.algo.ts:528","pc":[3012,3013]},{"teal":2090,"source":"contracts/TownHall.algo.ts:528","pc":[3014]},{"teal":2091,"source":"contracts/TownHall.algo.ts:528","pc":[3015]},{"teal":2094,"source":"contracts/TownHall.algo.ts:465","pc":[3016]},{"teal":2099,"source":"contracts/TownHall.algo.ts:534","pc":[3017,3018,3019]},{"teal":2100,"source":"contracts/TownHall.algo.ts:534","pc":[3020]},{"teal":2101,"source":"contracts/TownHall.algo.ts:534","pc":[3021]},{"teal":2105,"source":"contracts/TownHall.algo.ts:534","pc":[3022,3023,3024]},{"teal":2108,"source":"contracts/TownHall.algo.ts:534","pc":[3025]},{"teal":2109,"source":"contracts/TownHall.algo.ts:534","pc":[3026]},{"teal":2116,"source":"contracts/TownHall.algo.ts:536","pc":[3027]},{"teal":2117,"source":"contracts/TownHall.algo.ts:536","pc":[3028]},{"teal":2118,"source":"contracts/Constants.ts:20","pc":[3029,3030]},{"teal":2119,"source":"contracts/TownHall.algo.ts:536","pc":[3031]},{"teal":2122,"source":"contracts/TownHall.algo.ts:535","errorMessage":"Invalid method call: Game is not in Day Stage Eliminate state.","pc":[3032]},{"teal":2126,"source":"contracts/TownHall.algo.ts:540","pc":[3033]},{"teal":2127,"source":"contracts/TownHall.algo.ts:540","pc":[3034,3035]},{"teal":2128,"source":"contracts/TownHall.algo.ts:540","pc":[3036]},{"teal":2132,"source":"contracts/TownHall.algo.ts:541","pc":[3037]},{"teal":2133,"source":"contracts/TownHall.algo.ts:541","pc":[3038,3039]},{"teal":2137,"source":"contracts/TownHall.algo.ts:547","pc":[3040,3041]},{"teal":2138,"source":"contracts/TownHall.algo.ts:547","pc":[3042,3043]},{"teal":2139,"source":"contracts/TownHall.algo.ts:547","pc":[3044]},{"teal":2140,"source":"contracts/TownHall.algo.ts:547","pc":[3045]},{"teal":2141,"source":"contracts/TownHall.algo.ts:547","pc":[3046]},{"teal":2142,"source":"contracts/TownHall.algo.ts:547","pc":[3047,3048]},{"teal":2147,"source":"contracts/TownHall.algo.ts:549","pc":[3049,3050]},{"teal":2148,"source":"contracts/TownHall.algo.ts:549","pc":[3051]},{"teal":2149,"source":"contracts/TownHall.algo.ts:549","pc":[3052,3053]},{"teal":2150,"source":"contracts/TownHall.algo.ts:549","pc":[3054]},{"teal":2151,"source":"contracts/TownHall.algo.ts:549","pc":[3055]},{"teal":2152,"source":"contracts/TownHall.algo.ts:549","pc":[3056,3057,3058]},{"teal":2153,"source":"contracts/TownHall.algo.ts:549","pc":[3059,3060]},{"teal":2154,"source":"contracts/TownHall.algo.ts:549","pc":[3061]},{"teal":2155,"source":"contracts/TownHall.algo.ts:549","pc":[3062,3063]},{"teal":2156,"source":"contracts/TownHall.algo.ts:549","pc":[3064]},{"teal":2157,"source":"contracts/TownHall.algo.ts:549","pc":[3065]},{"teal":2158,"source":"contracts/TownHall.algo.ts:549","pc":[3066,3067,3068]},{"teal":2159,"source":"contracts/TownHall.algo.ts:549","pc":[3069,3070]},{"teal":2160,"source":"contracts/TownHall.algo.ts:549","pc":[3071]},{"teal":2163,"source":"contracts/TownHall.algo.ts:549","pc":[3072]},{"teal":2166,"source":"contracts/TownHall.algo.ts:549","pc":[3073,3074,3075]},{"teal":2171,"source":"contracts/TownHall.algo.ts:550","pc":[3076]},{"teal":2172,"source":"contracts/TownHall.algo.ts:550","pc":[3077]},{"teal":2173,"source":"contracts/TownHall.algo.ts:550","pc":[3078]},{"teal":2174,"source":"contracts/TownHall.algo.ts:550","pc":[3079,3080,3081]},{"teal":2175,"source":"contracts/TownHall.algo.ts:550","pc":[3082]},{"teal":2179,"source":"contracts/TownHall.algo.ts:551","pc":[3083,3084]},{"teal":2180,"source":"contracts/TownHall.algo.ts:551","pc":[3085]},{"teal":2181,"source":"contracts/TownHall.algo.ts:551","pc":[3086,3087]},{"teal":2187,"source":"contracts/TownHall.algo.ts:554","pc":[3088,3089]},{"teal":2188,"source":"contracts/TownHall.algo.ts:554","pc":[3090]},{"teal":2189,"source":"contracts/TownHall.algo.ts:554","pc":[3091,3092]},{"teal":2190,"source":"contracts/TownHall.algo.ts:554","pc":[3093]},{"teal":2191,"source":"contracts/TownHall.algo.ts:554","pc":[3094]},{"teal":2192,"source":"contracts/TownHall.algo.ts:554","pc":[3095,3096,3097]},{"teal":2193,"source":"contracts/TownHall.algo.ts:554","pc":[3098,3099]},{"teal":2194,"source":"contracts/TownHall.algo.ts:554","pc":[3100]},{"teal":2195,"source":"contracts/TownHall.algo.ts:554","pc":[3101,3102]},{"teal":2196,"source":"contracts/TownHall.algo.ts:554","pc":[3103]},{"teal":2197,"source":"contracts/TownHall.algo.ts:554","pc":[3104]},{"teal":2198,"source":"contracts/TownHall.algo.ts:554","pc":[3105,3106,3107]},{"teal":2199,"source":"contracts/TownHall.algo.ts:554","pc":[3108,3109]},{"teal":2200,"source":"contracts/TownHall.algo.ts:554","pc":[3110]},{"teal":2203,"source":"contracts/TownHall.algo.ts:554","pc":[3111]},{"teal":2206,"source":"contracts/TownHall.algo.ts:554","pc":[3112,3113,3114]},{"teal":2211,"source":"contracts/TownHall.algo.ts:555","pc":[3115]},{"teal":2212,"source":"contracts/TownHall.algo.ts:555","pc":[3116,3117]},{"teal":2213,"source":"contracts/TownHall.algo.ts:555","pc":[3118]},{"teal":2214,"source":"contracts/TownHall.algo.ts:555","pc":[3119,3120,3121]},{"teal":2215,"source":"contracts/TownHall.algo.ts:555","pc":[3122]},{"teal":2219,"source":"contracts/TownHall.algo.ts:556","pc":[3123,3124]},{"teal":2220,"source":"contracts/TownHall.algo.ts:556","pc":[3125]},{"teal":2221,"source":"contracts/TownHall.algo.ts:556","pc":[3126,3127]},{"teal":2227,"source":"contracts/TownHall.algo.ts:559","pc":[3128,3129]},{"teal":2228,"source":"contracts/TownHall.algo.ts:559","pc":[3130]},{"teal":2229,"source":"contracts/TownHall.algo.ts:559","pc":[3131,3132]},{"teal":2230,"source":"contracts/TownHall.algo.ts:559","pc":[3133]},{"teal":2231,"source":"contracts/TownHall.algo.ts:559","pc":[3134]},{"teal":2232,"source":"contracts/TownHall.algo.ts:559","pc":[3135,3136,3137]},{"teal":2233,"source":"contracts/TownHall.algo.ts:559","pc":[3138,3139]},{"teal":2234,"source":"contracts/TownHall.algo.ts:559","pc":[3140]},{"teal":2235,"source":"contracts/TownHall.algo.ts:559","pc":[3141,3142]},{"teal":2236,"source":"contracts/TownHall.algo.ts:559","pc":[3143]},{"teal":2237,"source":"contracts/TownHall.algo.ts:559","pc":[3144]},{"teal":2238,"source":"contracts/TownHall.algo.ts:559","pc":[3145,3146,3147]},{"teal":2239,"source":"contracts/TownHall.algo.ts:559","pc":[3148,3149]},{"teal":2240,"source":"contracts/TownHall.algo.ts:559","pc":[3150]},{"teal":2243,"source":"contracts/TownHall.algo.ts:559","pc":[3151]},{"teal":2246,"source":"contracts/TownHall.algo.ts:559","pc":[3152,3153,3154]},{"teal":2251,"source":"contracts/TownHall.algo.ts:560","pc":[3155]},{"teal":2252,"source":"contracts/TownHall.algo.ts:560","pc":[3156,3157]},{"teal":2253,"source":"contracts/TownHall.algo.ts:560","pc":[3158]},{"teal":2254,"source":"contracts/TownHall.algo.ts:560","pc":[3159,3160,3161]},{"teal":2255,"source":"contracts/TownHall.algo.ts:560","pc":[3162]},{"teal":2259,"source":"contracts/TownHall.algo.ts:561","pc":[3163,3164]},{"teal":2260,"source":"contracts/TownHall.algo.ts:561","pc":[3165]},{"teal":2261,"source":"contracts/TownHall.algo.ts:561","pc":[3166,3167]},{"teal":2267,"source":"contracts/TownHall.algo.ts:564","pc":[3168,3169]},{"teal":2268,"source":"contracts/TownHall.algo.ts:564","pc":[3170]},{"teal":2269,"source":"contracts/TownHall.algo.ts:564","pc":[3171,3172]},{"teal":2270,"source":"contracts/TownHall.algo.ts:564","pc":[3173]},{"teal":2271,"source":"contracts/TownHall.algo.ts:564","pc":[3174]},{"teal":2272,"source":"contracts/TownHall.algo.ts:564","pc":[3175,3176,3177]},{"teal":2273,"source":"contracts/TownHall.algo.ts:564","pc":[3178,3179]},{"teal":2274,"source":"contracts/TownHall.algo.ts:564","pc":[3180]},{"teal":2275,"source":"contracts/TownHall.algo.ts:564","pc":[3181,3182]},{"teal":2276,"source":"contracts/TownHall.algo.ts:564","pc":[3183]},{"teal":2277,"source":"contracts/TownHall.algo.ts:564","pc":[3184]},{"teal":2278,"source":"contracts/TownHall.algo.ts:564","pc":[3185,3186,3187]},{"teal":2279,"source":"contracts/TownHall.algo.ts:564","pc":[3188,3189]},{"teal":2280,"source":"contracts/TownHall.algo.ts:564","pc":[3190]},{"teal":2283,"source":"contracts/TownHall.algo.ts:564","pc":[3191]},{"teal":2286,"source":"contracts/TownHall.algo.ts:564","pc":[3192,3193,3194]},{"teal":2291,"source":"contracts/TownHall.algo.ts:565","pc":[3195]},{"teal":2292,"source":"contracts/TownHall.algo.ts:565","pc":[3196,3197]},{"teal":2293,"source":"contracts/TownHall.algo.ts:565","pc":[3198]},{"teal":2294,"source":"contracts/TownHall.algo.ts:565","pc":[3199,3200,3201]},{"teal":2295,"source":"contracts/TownHall.algo.ts:565","pc":[3202]},{"teal":2299,"source":"contracts/TownHall.algo.ts:566","pc":[3203,3204]},{"teal":2300,"source":"contracts/TownHall.algo.ts:566","pc":[3205]},{"teal":2301,"source":"contracts/TownHall.algo.ts:566","pc":[3206,3207]},{"teal":2307,"source":"contracts/TownHall.algo.ts:569","pc":[3208,3209]},{"teal":2308,"source":"contracts/TownHall.algo.ts:569","pc":[3210]},{"teal":2309,"source":"contracts/TownHall.algo.ts:569","pc":[3211,3212]},{"teal":2310,"source":"contracts/TownHall.algo.ts:569","pc":[3213]},{"teal":2311,"source":"contracts/TownHall.algo.ts:569","pc":[3214]},{"teal":2312,"source":"contracts/TownHall.algo.ts:569","pc":[3215,3216,3217]},{"teal":2313,"source":"contracts/TownHall.algo.ts:569","pc":[3218,3219]},{"teal":2314,"source":"contracts/TownHall.algo.ts:569","pc":[3220]},{"teal":2315,"source":"contracts/TownHall.algo.ts:569","pc":[3221,3222]},{"teal":2316,"source":"contracts/TownHall.algo.ts:569","pc":[3223]},{"teal":2317,"source":"contracts/TownHall.algo.ts:569","pc":[3224]},{"teal":2318,"source":"contracts/TownHall.algo.ts:569","pc":[3225,3226,3227]},{"teal":2319,"source":"contracts/TownHall.algo.ts:569","pc":[3228,3229]},{"teal":2320,"source":"contracts/TownHall.algo.ts:569","pc":[3230]},{"teal":2323,"source":"contracts/TownHall.algo.ts:569","pc":[3231]},{"teal":2326,"source":"contracts/TownHall.algo.ts:569","pc":[3232,3233,3234]},{"teal":2331,"source":"contracts/TownHall.algo.ts:570","pc":[3235]},{"teal":2332,"source":"contracts/TownHall.algo.ts:570","pc":[3236,3237]},{"teal":2333,"source":"contracts/TownHall.algo.ts:570","pc":[3238]},{"teal":2334,"source":"contracts/TownHall.algo.ts:570","pc":[3239,3240,3241]},{"teal":2335,"source":"contracts/TownHall.algo.ts:570","pc":[3242]},{"teal":2339,"source":"contracts/TownHall.algo.ts:571","pc":[3243,3244]},{"teal":2340,"source":"contracts/TownHall.algo.ts:571","pc":[3245]},{"teal":2341,"source":"contracts/TownHall.algo.ts:571","pc":[3246,3247]},{"teal":2347,"source":"contracts/TownHall.algo.ts:574","pc":[3248,3249]},{"teal":2348,"source":"contracts/TownHall.algo.ts:574","pc":[3250]},{"teal":2349,"source":"contracts/TownHall.algo.ts:574","pc":[3251,3252]},{"teal":2350,"source":"contracts/TownHall.algo.ts:574","pc":[3253]},{"teal":2351,"source":"contracts/TownHall.algo.ts:574","pc":[3254]},{"teal":2352,"source":"contracts/TownHall.algo.ts:574","pc":[3255,3256,3257]},{"teal":2353,"source":"contracts/TownHall.algo.ts:574","pc":[3258,3259]},{"teal":2354,"source":"contracts/TownHall.algo.ts:574","pc":[3260]},{"teal":2355,"source":"contracts/TownHall.algo.ts:574","pc":[3261,3262]},{"teal":2356,"source":"contracts/TownHall.algo.ts:574","pc":[3263]},{"teal":2357,"source":"contracts/TownHall.algo.ts:574","pc":[3264]},{"teal":2358,"source":"contracts/TownHall.algo.ts:574","pc":[3265,3266,3267]},{"teal":2359,"source":"contracts/TownHall.algo.ts:574","pc":[3268,3269]},{"teal":2360,"source":"contracts/TownHall.algo.ts:574","pc":[3270]},{"teal":2363,"source":"contracts/TownHall.algo.ts:574","pc":[3271]},{"teal":2366,"source":"contracts/TownHall.algo.ts:574","pc":[3272,3273,3274]},{"teal":2371,"source":"contracts/TownHall.algo.ts:575","pc":[3275]},{"teal":2372,"source":"contracts/TownHall.algo.ts:575","pc":[3276,3277]},{"teal":2373,"source":"contracts/TownHall.algo.ts:575","pc":[3278]},{"teal":2374,"source":"contracts/TownHall.algo.ts:575","pc":[3279,3280,3281]},{"teal":2375,"source":"contracts/TownHall.algo.ts:575","pc":[3282]},{"teal":2379,"source":"contracts/TownHall.algo.ts:576","pc":[3283,3284]},{"teal":2380,"source":"contracts/TownHall.algo.ts:576","pc":[3285]},{"teal":2381,"source":"contracts/TownHall.algo.ts:576","pc":[3286,3287]},{"teal":2386,"source":"contracts/TownHall.algo.ts:579","pc":[3288]},{"teal":2387,"source":"contracts/TownHall.algo.ts:579","pc":[3289]},{"teal":2388,"source":"contracts/TownHall.algo.ts:579","pc":[3290,3291]},{"teal":2389,"source":"contracts/TownHall.algo.ts:579","pc":[3292]},{"teal":2392,"source":"contracts/TownHall.algo.ts:579","errorMessage":"Error state: Zero Address won vote!","pc":[3293]},{"teal":2396,"source":"contracts/TownHall.algo.ts:580","pc":[3294,3295]},{"teal":2397,"source":"contracts/TownHall.algo.ts:580","pc":[3296]},{"teal":2398,"source":"contracts/TownHall.algo.ts:580","pc":[3297]},{"teal":2401,"source":"contracts/TownHall.algo.ts:580","errorMessage":"Error state: No votes were cast!","pc":[3298]},{"teal":2406,"source":"contracts/TownHall.algo.ts:585","pc":[3299]},{"teal":2407,"source":"contracts/TownHall.algo.ts:585","pc":[3300]},{"teal":2408,"source":"contracts/TownHall.algo.ts:585","pc":[3301]},{"teal":2409,"source":"contracts/TownHall.algo.ts:585","pc":[3302]},{"teal":2410,"source":"contracts/TownHall.algo.ts:585","pc":[3303,3304,3305]},{"teal":2411,"source":"contracts/TownHall.algo.ts:585","pc":[3306]},{"teal":2412,"source":"contracts/TownHall.algo.ts:585","pc":[3307,3308,3309]},{"teal":2417,"source":"contracts/TownHall.algo.ts:586","pc":[3310]},{"teal":2418,"source":"contracts/TownHall.algo.ts:586","pc":[3311]},{"teal":2419,"source":"contracts/TownHall.algo.ts:586","pc":[3312,3313]},{"teal":2420,"source":"contracts/TownHall.algo.ts:586","pc":[3314,3315]},{"teal":2421,"source":"contracts/TownHall.algo.ts:586","pc":[3316]},{"teal":2422,"source":"contracts/TownHall.algo.ts:586","pc":[3317]},{"teal":2423,"source":"contracts/TownHall.algo.ts:586","pc":[3318]},{"teal":2429,"source":"contracts/TownHall.algo.ts:589","pc":[3319]},{"teal":2430,"source":"contracts/TownHall.algo.ts:589","pc":[3320]},{"teal":2431,"source":"contracts/TownHall.algo.ts:589","pc":[3321,3322]},{"teal":2432,"source":"contracts/TownHall.algo.ts:589","pc":[3323]},{"teal":2433,"source":"contracts/TownHall.algo.ts:589","pc":[3324,3325,3326]},{"teal":2434,"source":"contracts/TownHall.algo.ts:589","pc":[3327]},{"teal":2435,"source":"contracts/TownHall.algo.ts:589","pc":[3328,3329,3330]},{"teal":2440,"source":"contracts/TownHall.algo.ts:590","pc":[3331,3332]},{"teal":2441,"source":"contracts/TownHall.algo.ts:590","pc":[3333]},{"teal":2442,"source":"contracts/TownHall.algo.ts:590","pc":[3334,3335]},{"teal":2443,"source":"contracts/TownHall.algo.ts:590","pc":[3336,3337]},{"teal":2444,"source":"contracts/TownHall.algo.ts:590","pc":[3338,3339]},{"teal":2445,"source":"contracts/TownHall.algo.ts:590","pc":[3340]},{"teal":2446,"source":"contracts/TownHall.algo.ts:590","pc":[3341]},{"teal":2452,"source":"contracts/TownHall.algo.ts:593","pc":[3342]},{"teal":2453,"source":"contracts/TownHall.algo.ts:593","pc":[3343]},{"teal":2454,"source":"contracts/TownHall.algo.ts:593","pc":[3344,3345]},{"teal":2455,"source":"contracts/TownHall.algo.ts:593","pc":[3346]},{"teal":2456,"source":"contracts/TownHall.algo.ts:593","pc":[3347,3348,3349]},{"teal":2457,"source":"contracts/TownHall.algo.ts:593","pc":[3350]},{"teal":2458,"source":"contracts/TownHall.algo.ts:593","pc":[3351,3352,3353]},{"teal":2463,"source":"contracts/TownHall.algo.ts:594","pc":[3354,3355]},{"teal":2464,"source":"contracts/TownHall.algo.ts:594","pc":[3356]},{"teal":2465,"source":"contracts/TownHall.algo.ts:594","pc":[3357,3358]},{"teal":2466,"source":"contracts/TownHall.algo.ts:594","pc":[3359,3360]},{"teal":2467,"source":"contracts/TownHall.algo.ts:594","pc":[3361,3362]},{"teal":2468,"source":"contracts/TownHall.algo.ts:594","pc":[3363]},{"teal":2469,"source":"contracts/TownHall.algo.ts:594","pc":[3364]},{"teal":2475,"source":"contracts/TownHall.algo.ts:597","pc":[3365]},{"teal":2476,"source":"contracts/TownHall.algo.ts:597","pc":[3366]},{"teal":2477,"source":"contracts/TownHall.algo.ts:597","pc":[3367,3368]},{"teal":2478,"source":"contracts/TownHall.algo.ts:597","pc":[3369]},{"teal":2479,"source":"contracts/TownHall.algo.ts:597","pc":[3370,3371,3372]},{"teal":2480,"source":"contracts/TownHall.algo.ts:597","pc":[3373]},{"teal":2481,"source":"contracts/TownHall.algo.ts:597","pc":[3374,3375,3376]},{"teal":2486,"source":"contracts/TownHall.algo.ts:598","pc":[3377,3378]},{"teal":2487,"source":"contracts/TownHall.algo.ts:598","pc":[3379]},{"teal":2488,"source":"contracts/TownHall.algo.ts:598","pc":[3380,3381]},{"teal":2489,"source":"contracts/TownHall.algo.ts:598","pc":[3382,3383]},{"teal":2490,"source":"contracts/TownHall.algo.ts:598","pc":[3384,3385]},{"teal":2491,"source":"contracts/TownHall.algo.ts:598","pc":[3386]},{"teal":2492,"source":"contracts/TownHall.algo.ts:598","pc":[3387]},{"teal":2498,"source":"contracts/TownHall.algo.ts:601","pc":[3388]},{"teal":2499,"source":"contracts/TownHall.algo.ts:601","pc":[3389]},{"teal":2500,"source":"contracts/TownHall.algo.ts:601","pc":[3390,3391]},{"teal":2501,"source":"contracts/TownHall.algo.ts:601","pc":[3392]},{"teal":2502,"source":"contracts/TownHall.algo.ts:601","pc":[3393,3394,3395]},{"teal":2503,"source":"contracts/TownHall.algo.ts:601","pc":[3396]},{"teal":2504,"source":"contracts/TownHall.algo.ts:601","pc":[3397,3398,3399]},{"teal":2509,"source":"contracts/TownHall.algo.ts:602","pc":[3400,3401]},{"teal":2510,"source":"contracts/TownHall.algo.ts:602","pc":[3402]},{"teal":2511,"source":"contracts/TownHall.algo.ts:602","pc":[3403,3404]},{"teal":2512,"source":"contracts/TownHall.algo.ts:602","pc":[3405,3406]},{"teal":2513,"source":"contracts/TownHall.algo.ts:602","pc":[3407,3408]},{"teal":2514,"source":"contracts/TownHall.algo.ts:602","pc":[3409]},{"teal":2515,"source":"contracts/TownHall.algo.ts:602","pc":[3410]},{"teal":2521,"source":"contracts/TownHall.algo.ts:605","pc":[3411]},{"teal":2522,"source":"contracts/TownHall.algo.ts:605","pc":[3412]},{"teal":2523,"source":"contracts/TownHall.algo.ts:605","pc":[3413,3414]},{"teal":2524,"source":"contracts/TownHall.algo.ts:605","pc":[3415]},{"teal":2525,"source":"contracts/TownHall.algo.ts:605","pc":[3416,3417,3418]},{"teal":2526,"source":"contracts/TownHall.algo.ts:605","pc":[3419]},{"teal":2527,"source":"contracts/TownHall.algo.ts:605","pc":[3420,3421,3422]},{"teal":2532,"source":"contracts/TownHall.algo.ts:606","pc":[3423,3424]},{"teal":2533,"source":"contracts/TownHall.algo.ts:606","pc":[3425]},{"teal":2534,"source":"contracts/TownHall.algo.ts:606","pc":[3426,3427]},{"teal":2535,"source":"contracts/TownHall.algo.ts:606","pc":[3428,3429]},{"teal":2536,"source":"contracts/TownHall.algo.ts:606","pc":[3430,3431]},{"teal":2537,"source":"contracts/TownHall.algo.ts:606","pc":[3432]},{"teal":2538,"source":"contracts/TownHall.algo.ts:606","pc":[3433]},{"teal":2543,"source":"contracts/TownHall.algo.ts:609","pc":[3434,3435]},{"teal":2544,"source":"contracts/TownHall.algo.ts:609","pc":[3436]},{"teal":2545,"source":"contracts/TownHall.algo.ts:609","pc":[3437]},{"teal":2546,"source":"contracts/TownHall.algo.ts:609","pc":[3438]},{"teal":2547,"source":"contracts/TownHall.algo.ts:609","pc":[3439,3440]},{"teal":2548,"source":"contracts/TownHall.algo.ts:609","pc":[3441]},{"teal":2549,"source":"contracts/TownHall.algo.ts:609","pc":[3442]},{"teal":2553,"source":"contracts/TownHall.algo.ts:613","pc":[3443,3444]},{"teal":2554,"source":"contracts/TownHall.algo.ts:613","pc":[3445]},{"teal":2555,"source":"contracts/TownHall.algo.ts:613","pc":[3446]},{"teal":2559,"source":"contracts/TownHall.algo.ts:614","pc":[3447,3448]},{"teal":2560,"source":"contracts/TownHall.algo.ts:614","pc":[3449]},{"teal":2561,"source":"contracts/TownHall.algo.ts:614","pc":[3450]},{"teal":2565,"source":"contracts/TownHall.algo.ts:615","pc":[3451,3452]},{"teal":2566,"source":"contracts/TownHall.algo.ts:615","pc":[3453]},{"teal":2567,"source":"contracts/TownHall.algo.ts:615","pc":[3454]},{"teal":2571,"source":"contracts/TownHall.algo.ts:616","pc":[3455,3456]},{"teal":2572,"source":"contracts/TownHall.algo.ts:616","pc":[3457]},{"teal":2573,"source":"contracts/TownHall.algo.ts:616","pc":[3458]},{"teal":2577,"source":"contracts/TownHall.algo.ts:617","pc":[3459,3460]},{"teal":2578,"source":"contracts/TownHall.algo.ts:617","pc":[3461]},{"teal":2579,"source":"contracts/TownHall.algo.ts:617","pc":[3462]},{"teal":2583,"source":"contracts/TownHall.algo.ts:618","pc":[3463,3464]},{"teal":2584,"source":"contracts/TownHall.algo.ts:618","pc":[3465]},{"teal":2585,"source":"contracts/TownHall.algo.ts:618","pc":[3466]},{"teal":2589,"source":"contracts/TownHall.algo.ts:620","pc":[3467]},{"teal":2590,"source":"contracts/Constants.ts:21","pc":[3468,3469]},{"teal":2591,"source":"contracts/TownHall.algo.ts:620","pc":[3470]},{"teal":2592,"source":"contracts/TownHall.algo.ts:534","pc":[3471]},{"teal":2597,"source":"contracts/TownHall.algo.ts:623","pc":[3472,3473,3474]},{"teal":2598,"source":"contracts/TownHall.algo.ts:623","pc":[3475,3476,3477]},{"teal":2601,"source":"contracts/TownHall.algo.ts:623","pc":[3478,3479,3480]},{"teal":2602,"source":"contracts/TownHall.algo.ts:623","pc":[3481]},{"teal":2603,"source":"contracts/TownHall.algo.ts:623","pc":[3482]},{"teal":2607,"source":"contracts/TownHall.algo.ts:623","pc":[3483,3484,3485]},{"teal":2610,"source":"contracts/TownHall.algo.ts:623","pc":[3486]},{"teal":2611,"source":"contracts/TownHall.algo.ts:623","pc":[3487,3488]},{"teal":2618,"source":"contracts/TownHall.algo.ts:625","pc":[3489]},{"teal":2619,"source":"contracts/TownHall.algo.ts:625","pc":[3490]},{"teal":2620,"source":"contracts/Constants.ts:21","pc":[3491,3492]},{"teal":2621,"source":"contracts/TownHall.algo.ts:625","pc":[3493]},{"teal":2624,"source":"contracts/TownHall.algo.ts:624","errorMessage":"Invalid method call: Game is not in Day Stage Reveal state.","pc":[3494]},{"teal":2628,"source":"contracts/TownHall.algo.ts:629","pc":[3495]},{"teal":2629,"source":"contracts/TownHall.algo.ts:629","pc":[3496]},{"teal":2630,"source":"contracts/TownHall.algo.ts:629","pc":[3497,3498]},{"teal":2631,"source":"contracts/TownHall.algo.ts:629","pc":[3499]},{"teal":2634,"source":"contracts/TownHall.algo.ts:629","errorMessage":"Error state: Other player called method.","pc":[3500]},{"teal":2638,"source":"contracts/TownHall.algo.ts:632","pc":[3501,3502]},{"teal":2639,"source":"contracts/TownHall.algo.ts:632","pc":[3503,3504]},{"teal":2640,"source":"contracts/TownHall.algo.ts:632","pc":[3505,3506]},{"teal":2641,"source":"contracts/TownHall.algo.ts:632","pc":[3507,3508]},{"teal":2645,"source":"contracts/TownHall.algo.ts:633","pc":[3509,3510]},{"teal":2646,"source":"contracts/TownHall.algo.ts:633","pc":[3511,3512,3513]},{"teal":2647,"source":"contracts/TownHall.algo.ts:633","pc":[3514,3515]},{"teal":2651,"source":"contracts/TownHall.algo.ts:634","pc":[3516,3517]},{"teal":2652,"source":"contracts/TownHall.algo.ts:634","pc":[3518,3519]},{"teal":2653,"source":"contracts/TownHall.algo.ts:634","pc":[3520,3521]},{"teal":2654,"source":"contracts/TownHall.algo.ts:634","pc":[3522,3523]},{"teal":2659,"source":"contracts/TownHall.algo.ts:636","pc":[3524,3525]},{"teal":2660,"source":"contracts/TownHall.algo.ts:636","pc":[3526,3527]},{"teal":2661,"source":"contracts/TownHall.algo.ts:636","pc":[3528]},{"teal":2662,"source":"contracts/TownHall.algo.ts:636","pc":[3529]},{"teal":2663,"source":"contracts/TownHall.algo.ts:636","pc":[3530,3531,3532]},{"teal":2668,"source":"contracts/TownHall.algo.ts:639","pc":[3533,3534]},{"teal":2669,"source":"contracts/TownHall.algo.ts:639","pc":[3535,3536]},{"teal":2670,"source":"contracts/TownHall.algo.ts:639","pc":[3537]},{"teal":2674,"source":"contracts/TownHall.algo.ts:640","pc":[3538]},{"teal":2675,"source":"contracts/Constants.ts:28","pc":[3539,3540]},{"teal":2676,"source":"contracts/TownHall.algo.ts:640","pc":[3541]},{"teal":2680,"source":"contracts/TownHall.algo.ts:641","pc":[3542,3543]},{"teal":2681,"source":"contracts/TownHall.algo.ts:641","pc":[3544,3545]},{"teal":2682,"source":"contracts/TownHall.algo.ts:641","pc":[3546]},{"teal":2686,"source":"contracts/TownHall.algo.ts:642","pc":[3547]},{"teal":2692,"source":"contracts/TownHall.algo.ts:645","pc":[3548,3549]},{"teal":2693,"source":"contracts/TownHall.algo.ts:645","pc":[3550,3551]},{"teal":2694,"source":"contracts/TownHall.algo.ts:645","pc":[3552]},{"teal":2695,"source":"contracts/TownHall.algo.ts:645","pc":[3553]},{"teal":2696,"source":"contracts/TownHall.algo.ts:645","pc":[3554,3555,3556]},{"teal":2701,"source":"contracts/TownHall.algo.ts:647","pc":[3557,3558]},{"teal":2702,"source":"contracts/TownHall.algo.ts:647","pc":[3559,3560]},{"teal":2703,"source":"contracts/TownHall.algo.ts:647","pc":[3561]},{"teal":2708,"source":"contracts/TownHall.algo.ts:650","pc":[3562]},{"teal":2709,"source":"contracts/TownHall.algo.ts:650","pc":[3563,3564]},{"teal":2710,"source":"contracts/TownHall.algo.ts:650","pc":[3565]},{"teal":2715,"source":"contracts/TownHall.algo.ts:652","pc":[3566,3567]},{"teal":2716,"source":"contracts/TownHall.algo.ts:652","pc":[3568]},{"teal":2717,"source":"contracts/TownHall.algo.ts:652","pc":[3569,3570]},{"teal":2718,"source":"contracts/TownHall.algo.ts:652","pc":[3571]},{"teal":2719,"source":"contracts/TownHall.algo.ts:652","pc":[3572,3573,3574]},{"teal":2724,"source":"contracts/TownHall.algo.ts:655","pc":[3575]},{"teal":2725,"source":"contracts/Constants.ts:28","pc":[3576,3577]},{"teal":2726,"source":"contracts/TownHall.algo.ts:655","pc":[3578]},{"teal":2730,"source":"contracts/TownHall.algo.ts:656","pc":[3579,3580]},{"teal":2731,"source":"contracts/TownHall.algo.ts:656","pc":[3581,3582]},{"teal":2732,"source":"contracts/TownHall.algo.ts:656","pc":[3583]},{"teal":2736,"source":"contracts/TownHall.algo.ts:657","pc":[3584]},{"teal":2741,"source":"contracts/TownHall.algo.ts:660","pc":[3585]},{"teal":2742,"source":"contracts/Constants.ts:22","pc":[3586]},{"teal":2743,"source":"contracts/TownHall.algo.ts:660","pc":[3587]},{"teal":2747,"source":"contracts/TownHall.algo.ts:661","pc":[3588,3589]},{"teal":2748,"source":"contracts/TownHall.algo.ts:661","pc":[3590,3591]},{"teal":2749,"source":"contracts/TownHall.algo.ts:661","pc":[3592]},{"teal":2750,"source":"contracts/TownHall.algo.ts:623","pc":[3593]},{"teal":2755,"source":"contracts/TownHall.algo.ts:664","pc":[3594,3595,3596]},{"teal":2756,"source":"contracts/TownHall.algo.ts:664","pc":[3597,3598,3599]},{"teal":2759,"source":"contracts/TownHall.algo.ts:664","pc":[3600,3601,3602]},{"teal":2760,"source":"contracts/TownHall.algo.ts:664","pc":[3603]},{"teal":2761,"source":"contracts/TownHall.algo.ts:664","pc":[3604]},{"teal":2765,"source":"contracts/TownHall.algo.ts:664","pc":[3605,3606,3607]},{"teal":2772,"source":"contracts/TownHall.algo.ts:666","pc":[3608]},{"teal":2773,"source":"contracts/TownHall.algo.ts:666","pc":[3609]},{"teal":2774,"source":"contracts/Constants.ts:22","pc":[3610]},{"teal":2775,"source":"contracts/TownHall.algo.ts:666","pc":[3611]},{"teal":2778,"source":"contracts/TownHall.algo.ts:665","errorMessage":"Invalid method call: Game is not in Night Stage Maffia Commit state.","pc":[3612]},{"teal":2782,"source":"contracts/TownHall.algo.ts:670","pc":[3613,3614]},{"teal":2783,"source":"contracts/TownHall.algo.ts:670","pc":[3615,3616]},{"teal":2784,"source":"contracts/TownHall.algo.ts:670","pc":[3617]},{"teal":2785,"source":"contracts/TownHall.algo.ts:670","pc":[3618]},{"teal":2788,"source":"contracts/TownHall.algo.ts:670","errorMessage":"Error state: Non-mafia player called method.","pc":[3619]},{"teal":2792,"source":"contracts/TownHall.algo.ts:672","pc":[3620,3621]},{"teal":2793,"source":"contracts/TownHall.algo.ts:672","pc":[3622,3623]},{"teal":2794,"source":"contracts/TownHall.algo.ts:672","pc":[3624]},{"teal":2799,"source":"contracts/TownHall.algo.ts:674","pc":[3625,3626]},{"teal":2800,"source":"contracts/TownHall.algo.ts:674","pc":[3627]},{"teal":2801,"source":"contracts/TownHall.algo.ts:674","pc":[3628,3629]},{"teal":2802,"source":"contracts/TownHall.algo.ts:674","pc":[3630]},{"teal":2803,"source":"contracts/TownHall.algo.ts:674","pc":[3631,3632,3633]},{"teal":2808,"source":"contracts/TownHall.algo.ts:676","pc":[3634]},{"teal":2809,"source":"contracts/Constants.ts:24","pc":[3635,3636]},{"teal":2810,"source":"contracts/TownHall.algo.ts:676","pc":[3637]},{"teal":2811,"source":"contracts/TownHall.algo.ts:674","pc":[3638,3639,3640]},{"teal":2816,"source":"contracts/TownHall.algo.ts:678","pc":[3641]},{"teal":2817,"source":"contracts/Constants.ts:23","pc":[3642,3643]},{"teal":2818,"source":"contracts/TownHall.algo.ts:678","pc":[3644]},{"teal":2821,"source":"contracts/TownHall.algo.ts:664","pc":[3645]},{"teal":2826,"source":"contracts/TownHall.algo.ts:682","pc":[3646,3647,3648]},{"teal":2827,"source":"contracts/TownHall.algo.ts:682","pc":[3649,3650,3651]},{"teal":2830,"source":"contracts/TownHall.algo.ts:682","pc":[3652,3653,3654]},{"teal":2831,"source":"contracts/TownHall.algo.ts:682","pc":[3655]},{"teal":2832,"source":"contracts/TownHall.algo.ts:682","pc":[3656]},{"teal":2836,"source":"contracts/TownHall.algo.ts:682","pc":[3657,3658,3659]},{"teal":2843,"source":"contracts/TownHall.algo.ts:684","pc":[3660]},{"teal":2844,"source":"contracts/TownHall.algo.ts:684","pc":[3661]},{"teal":2845,"source":"contracts/Constants.ts:23","pc":[3662,3663]},{"teal":2846,"source":"contracts/TownHall.algo.ts:684","pc":[3664]},{"teal":2849,"source":"contracts/TownHall.algo.ts:683","errorMessage":"Invalid method call: Game is not in Night Stage Doctor Commit state.","pc":[3665]},{"teal":2853,"source":"contracts/TownHall.algo.ts:688","pc":[3666,3667]},{"teal":2854,"source":"contracts/TownHall.algo.ts:688","pc":[3668,3669]},{"teal":2855,"source":"contracts/TownHall.algo.ts:688","pc":[3670]},{"teal":2856,"source":"contracts/TownHall.algo.ts:688","pc":[3671]},{"teal":2859,"source":"contracts/TownHall.algo.ts:688","errorMessage":"Error state: Non-doctor player called method.","pc":[3672]},{"teal":2866,"source":"contracts/TownHall.algo.ts:690","pc":[3673,3674]},{"teal":2867,"source":"contracts/TownHall.algo.ts:690","pc":[3675]},{"teal":2868,"source":"contracts/TownHall.algo.ts:690","pc":[3676,3677]},{"teal":2869,"source":"contracts/TownHall.algo.ts:690","pc":[3678]},{"teal":2872,"source":"contracts/TownHall.algo.ts:689","errorMessage":"Error state: Doctor is dead, should not have entered this state.","pc":[3679]},{"teal":2876,"source":"contracts/TownHall.algo.ts:694","pc":[3680,3681]},{"teal":2877,"source":"contracts/TownHall.algo.ts:694","pc":[3682,3683]},{"teal":2878,"source":"contracts/TownHall.algo.ts:694","pc":[3684]},{"teal":2882,"source":"contracts/TownHall.algo.ts:696","pc":[3685]},{"teal":2883,"source":"contracts/Constants.ts:24","pc":[3686,3687]},{"teal":2884,"source":"contracts/TownHall.algo.ts:696","pc":[3688]},{"teal":2885,"source":"contracts/TownHall.algo.ts:682","pc":[3689]},{"teal":2890,"source":"contracts/TownHall.algo.ts:699","pc":[3690,3691,3692]},{"teal":2891,"source":"contracts/TownHall.algo.ts:699","pc":[3693]},{"teal":2892,"source":"contracts/TownHall.algo.ts:699","pc":[3694]},{"teal":2893,"source":"contracts/TownHall.algo.ts:699","pc":[3695]},{"teal":2894,"source":"contracts/TownHall.algo.ts:699","pc":[3696]},{"teal":2897,"source":"contracts/TownHall.algo.ts:699","errorMessage":"argument 0 (blinder) for dawnStageMafiaReveal must be a byte[32]","pc":[3697]},{"teal":2900,"source":"contracts/TownHall.algo.ts:699","pc":[3698,3699,3700]},{"teal":2901,"source":"contracts/TownHall.algo.ts:699","pc":[3701]},{"teal":2902,"source":"contracts/TownHall.algo.ts:699","pc":[3702]},{"teal":2903,"source":"contracts/TownHall.algo.ts:699","pc":[3703]},{"teal":2904,"source":"contracts/TownHall.algo.ts:699","pc":[3704]},{"teal":2907,"source":"contracts/TownHall.algo.ts:699","errorMessage":"argument 1 (victimAim) for dawnStageMafiaReveal must be a address","pc":[3705]},{"teal":2910,"source":"contracts/TownHall.algo.ts:699","pc":[3706,3707,3708]},{"teal":2911,"source":"contracts/TownHall.algo.ts:699","pc":[3709]},{"teal":2912,"source":"contracts/TownHall.algo.ts:699","pc":[3710]},{"teal":2916,"source":"contracts/TownHall.algo.ts:699","pc":[3711,3712,3713]},{"teal":2919,"source":"contracts/TownHall.algo.ts:699","pc":[3714]},{"teal":2926,"source":"contracts/TownHall.algo.ts:701","pc":[3715]},{"teal":2927,"source":"contracts/TownHall.algo.ts:701","pc":[3716]},{"teal":2928,"source":"contracts/Constants.ts:24","pc":[3717,3718]},{"teal":2929,"source":"contracts/TownHall.algo.ts:701","pc":[3719]},{"teal":2932,"source":"contracts/TownHall.algo.ts:700","errorMessage":"Invalid method call: Game is not in Dawn Stage Maffia Reveal state.","pc":[3720]},{"teal":2936,"source":"contracts/TownHall.algo.ts:705","pc":[3721,3722]},{"teal":2937,"source":"contracts/TownHall.algo.ts:705","pc":[3723,3724]},{"teal":2938,"source":"contracts/TownHall.algo.ts:705","pc":[3725]},{"teal":2939,"source":"contracts/TownHall.algo.ts:705","pc":[3726]},{"teal":2942,"source":"contracts/TownHall.algo.ts:705","errorMessage":"Error state: Non-mafia player called method.","pc":[3727]},{"teal":2946,"source":"contracts/TownHall.algo.ts:707","pc":[3728,3729]},{"teal":2947,"source":"contracts/TownHall.algo.ts:707","pc":[3730,3731]},{"teal":2948,"source":"contracts/TownHall.algo.ts:707","pc":[3732]},{"teal":2951,"source":"contracts/TownHall.algo.ts:707","errorMessage":"Error state: Victim must be a valid address.","pc":[3733]},{"teal":2955,"source":"contracts/TownHall.algo.ts:711","pc":[3734,3735]},{"teal":2956,"source":"contracts/TownHall.algo.ts:711","pc":[3736,3737]},{"teal":2957,"source":"contracts/TownHall.algo.ts:711","pc":[3738]},{"teal":2958,"source":"contracts/TownHall.algo.ts:711","pc":[3739]},{"teal":2959,"source":"contracts/TownHall.algo.ts:711","pc":[3740,3741]},{"teal":2966,"source":"contracts/TownHall.algo.ts:714","pc":[3742,3743]},{"teal":2967,"source":"contracts/TownHall.algo.ts:714","pc":[3744,3745]},{"teal":2968,"source":"contracts/TownHall.algo.ts:714","pc":[3746]},{"teal":2969,"source":"contracts/TownHall.algo.ts:714","pc":[3747]},{"teal":2972,"source":"contracts/TownHall.algo.ts:713","errorMessage":"Error state: Provided address + blinder does NOT match commitment.","pc":[3748]},{"teal":2977,"source":"contracts/TownHall.algo.ts:718","pc":[3749,3750]},{"teal":2978,"source":"contracts/TownHall.algo.ts:718","pc":[3751]},{"teal":2979,"source":"contracts/TownHall.algo.ts:718","pc":[3752]},{"teal":2980,"source":"contracts/TownHall.algo.ts:718","pc":[3753,3754,3755]},{"teal":2981,"source":"contracts/TownHall.algo.ts:718","pc":[3756]},{"teal":2982,"source":"contracts/TownHall.algo.ts:718","pc":[3757,3758,3759]},{"teal":2987,"source":"contracts/TownHall.algo.ts:719","pc":[3760,3761]},{"teal":2988,"source":"contracts/TownHall.algo.ts:719","pc":[3762]},{"teal":2989,"source":"contracts/TownHall.algo.ts:719","pc":[3763]},{"teal":2990,"source":"contracts/TownHall.algo.ts:719","pc":[3764,3765,3766]},{"teal":2991,"source":"contracts/TownHall.algo.ts:719","pc":[3767]},{"teal":2992,"source":"contracts/TownHall.algo.ts:718","pc":[3768,3769,3770]},{"teal":2997,"source":"contracts/TownHall.algo.ts:720","pc":[3771,3772]},{"teal":2998,"source":"contracts/TownHall.algo.ts:720","pc":[3773,3774]},{"teal":2999,"source":"contracts/TownHall.algo.ts:720","pc":[3775]},{"teal":3000,"source":"contracts/TownHall.algo.ts:720","pc":[3776,3777,3778]},{"teal":3001,"source":"contracts/TownHall.algo.ts:720","pc":[3779]},{"teal":3002,"source":"contracts/TownHall.algo.ts:720","pc":[3780,3781,3782]},{"teal":3007,"source":"contracts/TownHall.algo.ts:721","pc":[3783,3784]},{"teal":3008,"source":"contracts/TownHall.algo.ts:721","pc":[3785,3786]},{"teal":3009,"source":"contracts/TownHall.algo.ts:721","pc":[3787]},{"teal":3010,"source":"contracts/TownHall.algo.ts:721","pc":[3788,3789,3790]},{"teal":3011,"source":"contracts/TownHall.algo.ts:721","pc":[3791]},{"teal":3012,"source":"contracts/TownHall.algo.ts:720","pc":[3792,3793,3794]},{"teal":3017,"source":"contracts/TownHall.algo.ts:722","pc":[3795,3796]},{"teal":3018,"source":"contracts/TownHall.algo.ts:722","pc":[3797,3798]},{"teal":3019,"source":"contracts/TownHall.algo.ts:722","pc":[3799]},{"teal":3020,"source":"contracts/TownHall.algo.ts:722","pc":[3800,3801,3802]},{"teal":3021,"source":"contracts/TownHall.algo.ts:722","pc":[3803]},{"teal":3022,"source":"contracts/TownHall.algo.ts:722","pc":[3804,3805,3806]},{"teal":3027,"source":"contracts/TownHall.algo.ts:723","pc":[3807,3808]},{"teal":3028,"source":"contracts/TownHall.algo.ts:723","pc":[3809,3810]},{"teal":3029,"source":"contracts/TownHall.algo.ts:723","pc":[3811]},{"teal":3030,"source":"contracts/TownHall.algo.ts:723","pc":[3812,3813,3814]},{"teal":3031,"source":"contracts/TownHall.algo.ts:723","pc":[3815]},{"teal":3032,"source":"contracts/TownHall.algo.ts:722","pc":[3816,3817,3818]},{"teal":3037,"source":"contracts/TownHall.algo.ts:724","pc":[3819,3820]},{"teal":3038,"source":"contracts/TownHall.algo.ts:724","pc":[3821,3822]},{"teal":3039,"source":"contracts/TownHall.algo.ts:724","pc":[3823]},{"teal":3040,"source":"contracts/TownHall.algo.ts:724","pc":[3824,3825,3826]},{"teal":3041,"source":"contracts/TownHall.algo.ts:724","pc":[3827]},{"teal":3042,"source":"contracts/TownHall.algo.ts:724","pc":[3828,3829,3830]},{"teal":3047,"source":"contracts/TownHall.algo.ts:725","pc":[3831,3832]},{"teal":3048,"source":"contracts/TownHall.algo.ts:725","pc":[3833,3834]},{"teal":3049,"source":"contracts/TownHall.algo.ts:725","pc":[3835]},{"teal":3050,"source":"contracts/TownHall.algo.ts:725","pc":[3836,3837,3838]},{"teal":3051,"source":"contracts/TownHall.algo.ts:725","pc":[3839]},{"teal":3052,"source":"contracts/TownHall.algo.ts:724","pc":[3840,3841,3842]},{"teal":3057,"source":"contracts/TownHall.algo.ts:726","pc":[3843,3844]},{"teal":3058,"source":"contracts/TownHall.algo.ts:726","pc":[3845,3846]},{"teal":3059,"source":"contracts/TownHall.algo.ts:726","pc":[3847]},{"teal":3060,"source":"contracts/TownHall.algo.ts:726","pc":[3848,3849,3850]},{"teal":3061,"source":"contracts/TownHall.algo.ts:726","pc":[3851]},{"teal":3062,"source":"contracts/TownHall.algo.ts:726","pc":[3852,3853,3854]},{"teal":3067,"source":"contracts/TownHall.algo.ts:727","pc":[3855,3856]},{"teal":3068,"source":"contracts/TownHall.algo.ts:727","pc":[3857,3858]},{"teal":3069,"source":"contracts/TownHall.algo.ts:727","pc":[3859]},{"teal":3070,"source":"contracts/TownHall.algo.ts:727","pc":[3860,3861,3862]},{"teal":3071,"source":"contracts/TownHall.algo.ts:727","pc":[3863]},{"teal":3072,"source":"contracts/TownHall.algo.ts:726","pc":[3864,3865,3866]},{"teal":3077,"source":"contracts/TownHall.algo.ts:728","pc":[3867,3868]},{"teal":3078,"source":"contracts/TownHall.algo.ts:728","pc":[3869,3870]},{"teal":3079,"source":"contracts/TownHall.algo.ts:728","pc":[3871]},{"teal":3080,"source":"contracts/TownHall.algo.ts:728","pc":[3872,3873,3874]},{"teal":3081,"source":"contracts/TownHall.algo.ts:728","pc":[3875]},{"teal":3082,"source":"contracts/TownHall.algo.ts:728","pc":[3876,3877,3878]},{"teal":3087,"source":"contracts/TownHall.algo.ts:729","pc":[3879,3880]},{"teal":3088,"source":"contracts/TownHall.algo.ts:729","pc":[3881,3882]},{"teal":3089,"source":"contracts/TownHall.algo.ts:729","pc":[3883]},{"teal":3090,"source":"contracts/TownHall.algo.ts:729","pc":[3884,3885,3886]},{"teal":3091,"source":"contracts/TownHall.algo.ts:729","pc":[3887]},{"teal":3092,"source":"contracts/TownHall.algo.ts:728","pc":[3888,3889,3890]},{"teal":3097,"source":"contracts/TownHall.algo.ts:731","pc":[3891,3892]},{"teal":3098,"source":"contracts/TownHall.algo.ts:731","pc":[3893,3894]},{"teal":3099,"source":"contracts/TownHall.algo.ts:731","pc":[3895]},{"teal":3105,"source":"contracts/TownHall.algo.ts:737","pc":[3896,3897]},{"teal":3106,"source":"contracts/TownHall.algo.ts:737","pc":[3898]},{"teal":3107,"source":"contracts/TownHall.algo.ts:737","pc":[3899,3900]},{"teal":3108,"source":"contracts/TownHall.algo.ts:737","pc":[3901]},{"teal":3109,"source":"contracts/TownHall.algo.ts:737","pc":[3902,3903,3904]},{"teal":3114,"source":"contracts/TownHall.algo.ts:739","pc":[3905]},{"teal":3115,"source":"contracts/Constants.ts:26","pc":[3906,3907]},{"teal":3116,"source":"contracts/TownHall.algo.ts:739","pc":[3908]},{"teal":3117,"source":"contracts/TownHall.algo.ts:737","pc":[3909,3910,3911]},{"teal":3122,"source":"contracts/TownHall.algo.ts:742","pc":[3912]},{"teal":3123,"source":"contracts/Constants.ts:25","pc":[3913,3914]},{"teal":3124,"source":"contracts/TownHall.algo.ts:742","pc":[3915]},{"teal":3127,"source":"contracts/TownHall.algo.ts:699","pc":[3916]},{"teal":3132,"source":"contracts/TownHall.algo.ts:746","pc":[3917,3918,3919]},{"teal":3133,"source":"contracts/TownHall.algo.ts:746","pc":[3920]},{"teal":3134,"source":"contracts/TownHall.algo.ts:746","pc":[3921]},{"teal":3135,"source":"contracts/TownHall.algo.ts:746","pc":[3922]},{"teal":3136,"source":"contracts/TownHall.algo.ts:746","pc":[3923]},{"teal":3139,"source":"contracts/TownHall.algo.ts:746","errorMessage":"argument 0 (blinder) for dawnStageDoctorReveal must be a byte[32]","pc":[3924]},{"teal":3142,"source":"contracts/TownHall.algo.ts:746","pc":[3925,3926,3927]},{"teal":3143,"source":"contracts/TownHall.algo.ts:746","pc":[3928]},{"teal":3144,"source":"contracts/TownHall.algo.ts:746","pc":[3929]},{"teal":3145,"source":"contracts/TownHall.algo.ts:746","pc":[3930]},{"teal":3146,"source":"contracts/TownHall.algo.ts:746","pc":[3931]},{"teal":3149,"source":"contracts/TownHall.algo.ts:746","errorMessage":"argument 1 (patientAim) for dawnStageDoctorReveal must be a address","pc":[3932]},{"teal":3152,"source":"contracts/TownHall.algo.ts:746","pc":[3933,3934,3935]},{"teal":3153,"source":"contracts/TownHall.algo.ts:746","pc":[3936]},{"teal":3154,"source":"contracts/TownHall.algo.ts:746","pc":[3937]},{"teal":3158,"source":"contracts/TownHall.algo.ts:746","pc":[3938,3939,3940]},{"teal":3161,"source":"contracts/TownHall.algo.ts:746","pc":[3941]},{"teal":3168,"source":"contracts/TownHall.algo.ts:748","pc":[3942]},{"teal":3169,"source":"contracts/TownHall.algo.ts:748","pc":[3943]},{"teal":3170,"source":"contracts/Constants.ts:25","pc":[3944,3945]},{"teal":3171,"source":"contracts/TownHall.algo.ts:748","pc":[3946]},{"teal":3174,"source":"contracts/TownHall.algo.ts:747","errorMessage":"Invalid method call: Game is not in Dawn Stage Doctor Reveal state.","pc":[3947]},{"teal":3178,"source":"contracts/TownHall.algo.ts:752","pc":[3948,3949]},{"teal":3179,"source":"contracts/TownHall.algo.ts:752","pc":[3950,3951]},{"teal":3180,"source":"contracts/TownHall.algo.ts:752","pc":[3952]},{"teal":3181,"source":"contracts/TownHall.algo.ts:752","pc":[3953]},{"teal":3184,"source":"contracts/TownHall.algo.ts:752","errorMessage":"Error state: Non-doctor player called method.","pc":[3954]},{"teal":3188,"source":"contracts/TownHall.algo.ts:754","pc":[3955,3956]},{"teal":3189,"source":"contracts/TownHall.algo.ts:754","pc":[3957]},{"teal":3190,"source":"contracts/TownHall.algo.ts:754","pc":[3958,3959]},{"teal":3191,"source":"contracts/TownHall.algo.ts:754","pc":[3960]},{"teal":3194,"source":"contracts/TownHall.algo.ts:754","errorMessage":"Error state: Doctor has already committed to a patient.","pc":[3961]},{"teal":3198,"source":"contracts/TownHall.algo.ts:756","pc":[3962,3963]},{"teal":3199,"source":"contracts/TownHall.algo.ts:756","pc":[3964,3965]},{"teal":3200,"source":"contracts/TownHall.algo.ts:756","pc":[3966]},{"teal":3203,"source":"contracts/TownHall.algo.ts:756","errorMessage":"Error state: Patient must be a valid address.","pc":[3967]},{"teal":3207,"source":"contracts/TownHall.algo.ts:760","pc":[3968,3969]},{"teal":3208,"source":"contracts/TownHall.algo.ts:760","pc":[3970,3971]},{"teal":3209,"source":"contracts/TownHall.algo.ts:760","pc":[3972]},{"teal":3210,"source":"contracts/TownHall.algo.ts:760","pc":[3973]},{"teal":3211,"source":"contracts/TownHall.algo.ts:760","pc":[3974,3975]},{"teal":3218,"source":"contracts/TownHall.algo.ts:763","pc":[3976,3977]},{"teal":3219,"source":"contracts/TownHall.algo.ts:763","pc":[3978,3979]},{"teal":3220,"source":"contracts/TownHall.algo.ts:763","pc":[3980]},{"teal":3221,"source":"contracts/TownHall.algo.ts:763","pc":[3981]},{"teal":3224,"source":"contracts/TownHall.algo.ts:762","errorMessage":"Error state: Provided address + blinder does NOT match commitment.","pc":[3982]},{"teal":3229,"source":"contracts/TownHall.algo.ts:767","pc":[3983,3984]},{"teal":3230,"source":"contracts/TownHall.algo.ts:767","pc":[3985]},{"teal":3231,"source":"contracts/TownHall.algo.ts:767","pc":[3986]},{"teal":3232,"source":"contracts/TownHall.algo.ts:767","pc":[3987,3988,3989]},{"teal":3233,"source":"contracts/TownHall.algo.ts:767","pc":[3990]},{"teal":3234,"source":"contracts/TownHall.algo.ts:767","pc":[3991,3992,3993]},{"teal":3239,"source":"contracts/TownHall.algo.ts:768","pc":[3994,3995]},{"teal":3240,"source":"contracts/TownHall.algo.ts:768","pc":[3996]},{"teal":3241,"source":"contracts/TownHall.algo.ts:768","pc":[3997]},{"teal":3242,"source":"contracts/TownHall.algo.ts:768","pc":[3998,3999,4000]},{"teal":3243,"source":"contracts/TownHall.algo.ts:768","pc":[4001]},{"teal":3244,"source":"contracts/TownHall.algo.ts:767","pc":[4002,4003,4004]},{"teal":3249,"source":"contracts/TownHall.algo.ts:769","pc":[4005,4006]},{"teal":3250,"source":"contracts/TownHall.algo.ts:769","pc":[4007,4008]},{"teal":3251,"source":"contracts/TownHall.algo.ts:769","pc":[4009]},{"teal":3252,"source":"contracts/TownHall.algo.ts:769","pc":[4010,4011,4012]},{"teal":3253,"source":"contracts/TownHall.algo.ts:769","pc":[4013]},{"teal":3254,"source":"contracts/TownHall.algo.ts:769","pc":[4014,4015,4016]},{"teal":3259,"source":"contracts/TownHall.algo.ts:770","pc":[4017,4018]},{"teal":3260,"source":"contracts/TownHall.algo.ts:770","pc":[4019,4020]},{"teal":3261,"source":"contracts/TownHall.algo.ts:770","pc":[4021]},{"teal":3262,"source":"contracts/TownHall.algo.ts:770","pc":[4022,4023,4024]},{"teal":3263,"source":"contracts/TownHall.algo.ts:770","pc":[4025]},{"teal":3264,"source":"contracts/TownHall.algo.ts:769","pc":[4026,4027,4028]},{"teal":3269,"source":"contracts/TownHall.algo.ts:771","pc":[4029,4030]},{"teal":3270,"source":"contracts/TownHall.algo.ts:771","pc":[4031,4032]},{"teal":3271,"source":"contracts/TownHall.algo.ts:771","pc":[4033]},{"teal":3272,"source":"contracts/TownHall.algo.ts:771","pc":[4034,4035,4036]},{"teal":3273,"source":"contracts/TownHall.algo.ts:771","pc":[4037]},{"teal":3274,"source":"contracts/TownHall.algo.ts:771","pc":[4038,4039,4040]},{"teal":3279,"source":"contracts/TownHall.algo.ts:772","pc":[4041,4042]},{"teal":3280,"source":"contracts/TownHall.algo.ts:772","pc":[4043,4044]},{"teal":3281,"source":"contracts/TownHall.algo.ts:772","pc":[4045]},{"teal":3282,"source":"contracts/TownHall.algo.ts:772","pc":[4046,4047,4048]},{"teal":3283,"source":"contracts/TownHall.algo.ts:772","pc":[4049]},{"teal":3284,"source":"contracts/TownHall.algo.ts:771","pc":[4050,4051,4052]},{"teal":3289,"source":"contracts/TownHall.algo.ts:773","pc":[4053,4054]},{"teal":3290,"source":"contracts/TownHall.algo.ts:773","pc":[4055,4056]},{"teal":3291,"source":"contracts/TownHall.algo.ts:773","pc":[4057]},{"teal":3292,"source":"contracts/TownHall.algo.ts:773","pc":[4058,4059,4060]},{"teal":3293,"source":"contracts/TownHall.algo.ts:773","pc":[4061]},{"teal":3294,"source":"contracts/TownHall.algo.ts:773","pc":[4062,4063,4064]},{"teal":3299,"source":"contracts/TownHall.algo.ts:774","pc":[4065,4066]},{"teal":3300,"source":"contracts/TownHall.algo.ts:774","pc":[4067,4068]},{"teal":3301,"source":"contracts/TownHall.algo.ts:774","pc":[4069]},{"teal":3302,"source":"contracts/TownHall.algo.ts:774","pc":[4070,4071,4072]},{"teal":3303,"source":"contracts/TownHall.algo.ts:774","pc":[4073]},{"teal":3304,"source":"contracts/TownHall.algo.ts:773","pc":[4074,4075,4076]},{"teal":3309,"source":"contracts/TownHall.algo.ts:775","pc":[4077,4078]},{"teal":3310,"source":"contracts/TownHall.algo.ts:775","pc":[4079,4080]},{"teal":3311,"source":"contracts/TownHall.algo.ts:775","pc":[4081]},{"teal":3312,"source":"contracts/TownHall.algo.ts:775","pc":[4082,4083,4084]},{"teal":3313,"source":"contracts/TownHall.algo.ts:775","pc":[4085]},{"teal":3314,"source":"contracts/TownHall.algo.ts:775","pc":[4086,4087,4088]},{"teal":3319,"source":"contracts/TownHall.algo.ts:776","pc":[4089,4090]},{"teal":3320,"source":"contracts/TownHall.algo.ts:776","pc":[4091,4092]},{"teal":3321,"source":"contracts/TownHall.algo.ts:776","pc":[4093]},{"teal":3322,"source":"contracts/TownHall.algo.ts:776","pc":[4094,4095,4096]},{"teal":3323,"source":"contracts/TownHall.algo.ts:776","pc":[4097]},{"teal":3324,"source":"contracts/TownHall.algo.ts:775","pc":[4098,4099,4100]},{"teal":3329,"source":"contracts/TownHall.algo.ts:777","pc":[4101,4102]},{"teal":3330,"source":"contracts/TownHall.algo.ts:777","pc":[4103,4104]},{"teal":3331,"source":"contracts/TownHall.algo.ts:777","pc":[4105]},{"teal":3332,"source":"contracts/TownHall.algo.ts:777","pc":[4106,4107,4108]},{"teal":3333,"source":"contracts/TownHall.algo.ts:777","pc":[4109]},{"teal":3334,"source":"contracts/TownHall.algo.ts:777","pc":[4110,4111,4112]},{"teal":3339,"source":"contracts/TownHall.algo.ts:778","pc":[4113,4114]},{"teal":3340,"source":"contracts/TownHall.algo.ts:778","pc":[4115,4116]},{"teal":3341,"source":"contracts/TownHall.algo.ts:778","pc":[4117]},{"teal":3342,"source":"contracts/TownHall.algo.ts:778","pc":[4118,4119,4120]},{"teal":3343,"source":"contracts/TownHall.algo.ts:778","pc":[4121]},{"teal":3344,"source":"contracts/TownHall.algo.ts:777","pc":[4122,4123,4124]},{"teal":3349,"source":"contracts/TownHall.algo.ts:780","pc":[4125,4126]},{"teal":3350,"source":"contracts/TownHall.algo.ts:780","pc":[4127,4128]},{"teal":3351,"source":"contracts/TownHall.algo.ts:780","pc":[4129]},{"teal":3356,"source":"contracts/TownHall.algo.ts:786","pc":[4130]},{"teal":3357,"source":"contracts/Constants.ts:26","pc":[4131,4132]},{"teal":3358,"source":"contracts/TownHall.algo.ts:786","pc":[4133]},{"teal":3359,"source":"contracts/TownHall.algo.ts:746","pc":[4134]},{"teal":3364,"source":"contracts/TownHall.algo.ts:789","pc":[4135,4136,4137]},{"teal":3365,"source":"contracts/TownHall.algo.ts:789","pc":[4138]},{"teal":3366,"source":"contracts/TownHall.algo.ts:789","pc":[4139]},{"teal":3370,"source":"contracts/TownHall.algo.ts:789","pc":[4140,4141,4142]},{"teal":3377,"source":"contracts/TownHall.algo.ts:791","pc":[4143]},{"teal":3378,"source":"contracts/TownHall.algo.ts:791","pc":[4144]},{"teal":3379,"source":"contracts/Constants.ts:26","pc":[4145,4146]},{"teal":3380,"source":"contracts/TownHall.algo.ts:791","pc":[4147]},{"teal":3383,"source":"contracts/TownHall.algo.ts:790","errorMessage":"Invalid method call: Game is not in Dawn Stage DeadOrSaved? state.","pc":[4148]},{"teal":3388,"source":"contracts/TownHall.algo.ts:795","pc":[4149,4150]},{"teal":3389,"source":"contracts/TownHall.algo.ts:795","pc":[4151]},{"teal":3390,"source":"contracts/TownHall.algo.ts:795","pc":[4152,4153]},{"teal":3391,"source":"contracts/TownHall.algo.ts:795","pc":[4154]},{"teal":3392,"source":"contracts/TownHall.algo.ts:795","pc":[4155]},{"teal":3393,"source":"contracts/TownHall.algo.ts:795","pc":[4156,4157,4158]},{"teal":3394,"source":"contracts/TownHall.algo.ts:795","pc":[4159,4160]},{"teal":3395,"source":"contracts/TownHall.algo.ts:795","pc":[4161]},{"teal":3396,"source":"contracts/TownHall.algo.ts:795","pc":[4162,4163]},{"teal":3397,"source":"contracts/TownHall.algo.ts:795","pc":[4164]},{"teal":3398,"source":"contracts/TownHall.algo.ts:795","pc":[4165]},{"teal":3399,"source":"contracts/TownHall.algo.ts:795","pc":[4166]},{"teal":3402,"source":"contracts/TownHall.algo.ts:795","pc":[4167,4168,4169]},{"teal":3407,"source":"contracts/TownHall.algo.ts:800","pc":[4170,4171]},{"teal":3408,"source":"contracts/TownHall.algo.ts:800","pc":[4172,4173]},{"teal":3409,"source":"contracts/TownHall.algo.ts:800","pc":[4174]},{"teal":3413,"source":"contracts/TownHall.algo.ts:801","pc":[4175,4176]},{"teal":3414,"source":"contracts/TownHall.algo.ts:801","pc":[4177,4178]},{"teal":3415,"source":"contracts/TownHall.algo.ts:801","pc":[4179]},{"teal":3419,"source":"contracts/TownHall.algo.ts:802","pc":[4180]},{"teal":3420,"source":"contracts/Constants.ts:19","pc":[4181,4182]},{"teal":3421,"source":"contracts/TownHall.algo.ts:802","pc":[4183]},{"teal":3425,"source":"contracts/TownHall.algo.ts:803","pc":[4184]},{"teal":3431,"source":"contracts/TownHall.algo.ts:808","pc":[4185,4186]},{"teal":3432,"source":"contracts/TownHall.algo.ts:808","pc":[4187]},{"teal":3433,"source":"contracts/TownHall.algo.ts:808","pc":[4188]},{"teal":3434,"source":"contracts/TownHall.algo.ts:808","pc":[4189]},{"teal":3435,"source":"contracts/TownHall.algo.ts:808","pc":[4190,4191,4192]},{"teal":3436,"source":"contracts/TownHall.algo.ts:808","pc":[4193]},{"teal":3437,"source":"contracts/TownHall.algo.ts:808","pc":[4194,4195,4196]},{"teal":3442,"source":"contracts/TownHall.algo.ts:809","pc":[4197]},{"teal":3443,"source":"contracts/TownHall.algo.ts:809","pc":[4198]},{"teal":3444,"source":"contracts/TownHall.algo.ts:809","pc":[4199]},{"teal":3445,"source":"contracts/TownHall.algo.ts:809","pc":[4200,4201,4202]},{"teal":3446,"source":"contracts/TownHall.algo.ts:809","pc":[4203]},{"teal":3450,"source":"contracts/TownHall.algo.ts:810","pc":[4204]},{"teal":3451,"source":"contracts/TownHall.algo.ts:810","pc":[4205]},{"teal":3452,"source":"contracts/TownHall.algo.ts:810","pc":[4206,4207]},{"teal":3453,"source":"contracts/TownHall.algo.ts:810","pc":[4208,4209]},{"teal":3454,"source":"contracts/TownHall.algo.ts:810","pc":[4210]},{"teal":3455,"source":"contracts/TownHall.algo.ts:810","pc":[4211]},{"teal":3456,"source":"contracts/TownHall.algo.ts:810","pc":[4212]},{"teal":3457,"source":"contracts/TownHall.algo.ts:808","pc":[4213,4214,4215]},{"teal":3462,"source":"contracts/TownHall.algo.ts:811","pc":[4216,4217]},{"teal":3463,"source":"contracts/TownHall.algo.ts:811","pc":[4218]},{"teal":3464,"source":"contracts/TownHall.algo.ts:811","pc":[4219,4220]},{"teal":3465,"source":"contracts/TownHall.algo.ts:811","pc":[4221]},{"teal":3466,"source":"contracts/TownHall.algo.ts:811","pc":[4222,4223,4224]},{"teal":3467,"source":"contracts/TownHall.algo.ts:811","pc":[4225]},{"teal":3468,"source":"contracts/TownHall.algo.ts:811","pc":[4226,4227,4228]},{"teal":3473,"source":"contracts/TownHall.algo.ts:812","pc":[4229]},{"teal":3474,"source":"contracts/TownHall.algo.ts:812","pc":[4230,4231]},{"teal":3475,"source":"contracts/TownHall.algo.ts:812","pc":[4232]},{"teal":3476,"source":"contracts/TownHall.algo.ts:812","pc":[4233,4234,4235]},{"teal":3477,"source":"contracts/TownHall.algo.ts:812","pc":[4236]},{"teal":3481,"source":"contracts/TownHall.algo.ts:813","pc":[4237,4238]},{"teal":3482,"source":"contracts/TownHall.algo.ts:813","pc":[4239]},{"teal":3483,"source":"contracts/TownHall.algo.ts:813","pc":[4240,4241]},{"teal":3484,"source":"contracts/TownHall.algo.ts:813","pc":[4242,4243]},{"teal":3485,"source":"contracts/TownHall.algo.ts:813","pc":[4244,4245]},{"teal":3486,"source":"contracts/TownHall.algo.ts:813","pc":[4246]},{"teal":3487,"source":"contracts/TownHall.algo.ts:813","pc":[4247]},{"teal":3488,"source":"contracts/TownHall.algo.ts:811","pc":[4248,4249,4250]},{"teal":3493,"source":"contracts/TownHall.algo.ts:814","pc":[4251,4252]},{"teal":3494,"source":"contracts/TownHall.algo.ts:814","pc":[4253]},{"teal":3495,"source":"contracts/TownHall.algo.ts:814","pc":[4254,4255]},{"teal":3496,"source":"contracts/TownHall.algo.ts:814","pc":[4256]},{"teal":3497,"source":"contracts/TownHall.algo.ts:814","pc":[4257,4258,4259]},{"teal":3498,"source":"contracts/TownHall.algo.ts:814","pc":[4260]},{"teal":3499,"source":"contracts/TownHall.algo.ts:814","pc":[4261,4262,4263]},{"teal":3504,"source":"contracts/TownHall.algo.ts:815","pc":[4264]},{"teal":3505,"source":"contracts/TownHall.algo.ts:815","pc":[4265,4266]},{"teal":3506,"source":"contracts/TownHall.algo.ts:815","pc":[4267]},{"teal":3507,"source":"contracts/TownHall.algo.ts:815","pc":[4268,4269,4270]},{"teal":3508,"source":"contracts/TownHall.algo.ts:815","pc":[4271]},{"teal":3512,"source":"contracts/TownHall.algo.ts:816","pc":[4272,4273]},{"teal":3513,"source":"contracts/TownHall.algo.ts:816","pc":[4274]},{"teal":3514,"source":"contracts/TownHall.algo.ts:816","pc":[4275,4276]},{"teal":3515,"source":"contracts/TownHall.algo.ts:816","pc":[4277,4278]},{"teal":3516,"source":"contracts/TownHall.algo.ts:816","pc":[4279,4280]},{"teal":3517,"source":"contracts/TownHall.algo.ts:816","pc":[4281]},{"teal":3518,"source":"contracts/TownHall.algo.ts:816","pc":[4282]},{"teal":3519,"source":"contracts/TownHall.algo.ts:814","pc":[4283,4284,4285]},{"teal":3524,"source":"contracts/TownHall.algo.ts:817","pc":[4286,4287]},{"teal":3525,"source":"contracts/TownHall.algo.ts:817","pc":[4288]},{"teal":3526,"source":"contracts/TownHall.algo.ts:817","pc":[4289,4290]},{"teal":3527,"source":"contracts/TownHall.algo.ts:817","pc":[4291]},{"teal":3528,"source":"contracts/TownHall.algo.ts:817","pc":[4292,4293,4294]},{"teal":3529,"source":"contracts/TownHall.algo.ts:817","pc":[4295]},{"teal":3530,"source":"contracts/TownHall.algo.ts:817","pc":[4296,4297,4298]},{"teal":3535,"source":"contracts/TownHall.algo.ts:818","pc":[4299]},{"teal":3536,"source":"contracts/TownHall.algo.ts:818","pc":[4300,4301]},{"teal":3537,"source":"contracts/TownHall.algo.ts:818","pc":[4302]},{"teal":3538,"source":"contracts/TownHall.algo.ts:818","pc":[4303,4304,4305]},{"teal":3539,"source":"contracts/TownHall.algo.ts:818","pc":[4306]},{"teal":3543,"source":"contracts/TownHall.algo.ts:819","pc":[4307,4308]},{"teal":3544,"source":"contracts/TownHall.algo.ts:819","pc":[4309]},{"teal":3545,"source":"contracts/TownHall.algo.ts:819","pc":[4310,4311]},{"teal":3546,"source":"contracts/TownHall.algo.ts:819","pc":[4312,4313]},{"teal":3547,"source":"contracts/TownHall.algo.ts:819","pc":[4314,4315]},{"teal":3548,"source":"contracts/TownHall.algo.ts:819","pc":[4316]},{"teal":3549,"source":"contracts/TownHall.algo.ts:819","pc":[4317]},{"teal":3550,"source":"contracts/TownHall.algo.ts:817","pc":[4318,4319,4320]},{"teal":3555,"source":"contracts/TownHall.algo.ts:820","pc":[4321,4322]},{"teal":3556,"source":"contracts/TownHall.algo.ts:820","pc":[4323]},{"teal":3557,"source":"contracts/TownHall.algo.ts:820","pc":[4324,4325]},{"teal":3558,"source":"contracts/TownHall.algo.ts:820","pc":[4326]},{"teal":3559,"source":"contracts/TownHall.algo.ts:820","pc":[4327,4328,4329]},{"teal":3560,"source":"contracts/TownHall.algo.ts:820","pc":[4330]},{"teal":3561,"source":"contracts/TownHall.algo.ts:820","pc":[4331,4332,4333]},{"teal":3566,"source":"contracts/TownHall.algo.ts:821","pc":[4334]},{"teal":3567,"source":"contracts/TownHall.algo.ts:821","pc":[4335,4336]},{"teal":3568,"source":"contracts/TownHall.algo.ts:821","pc":[4337]},{"teal":3569,"source":"contracts/TownHall.algo.ts:821","pc":[4338,4339,4340]},{"teal":3570,"source":"contracts/TownHall.algo.ts:821","pc":[4341]},{"teal":3574,"source":"contracts/TownHall.algo.ts:822","pc":[4342,4343]},{"teal":3575,"source":"contracts/TownHall.algo.ts:822","pc":[4344]},{"teal":3576,"source":"contracts/TownHall.algo.ts:822","pc":[4345,4346]},{"teal":3577,"source":"contracts/TownHall.algo.ts:822","pc":[4347,4348]},{"teal":3578,"source":"contracts/TownHall.algo.ts:822","pc":[4349,4350]},{"teal":3579,"source":"contracts/TownHall.algo.ts:822","pc":[4351]},{"teal":3580,"source":"contracts/TownHall.algo.ts:822","pc":[4352]},{"teal":3581,"source":"contracts/TownHall.algo.ts:820","pc":[4353,4354,4355]},{"teal":3586,"source":"contracts/TownHall.algo.ts:823","pc":[4356,4357]},{"teal":3587,"source":"contracts/TownHall.algo.ts:823","pc":[4358]},{"teal":3588,"source":"contracts/TownHall.algo.ts:823","pc":[4359,4360]},{"teal":3589,"source":"contracts/TownHall.algo.ts:823","pc":[4361]},{"teal":3590,"source":"contracts/TownHall.algo.ts:823","pc":[4362,4363,4364]},{"teal":3591,"source":"contracts/TownHall.algo.ts:823","pc":[4365]},{"teal":3592,"source":"contracts/TownHall.algo.ts:823","pc":[4366,4367,4368]},{"teal":3597,"source":"contracts/TownHall.algo.ts:824","pc":[4369]},{"teal":3598,"source":"contracts/TownHall.algo.ts:824","pc":[4370,4371]},{"teal":3599,"source":"contracts/TownHall.algo.ts:824","pc":[4372]},{"teal":3600,"source":"contracts/TownHall.algo.ts:824","pc":[4373,4374,4375]},{"teal":3601,"source":"contracts/TownHall.algo.ts:824","pc":[4376]},{"teal":3605,"source":"contracts/TownHall.algo.ts:825","pc":[4377,4378]},{"teal":3606,"source":"contracts/TownHall.algo.ts:825","pc":[4379]},{"teal":3607,"source":"contracts/TownHall.algo.ts:825","pc":[4380,4381]},{"teal":3608,"source":"contracts/TownHall.algo.ts:825","pc":[4382,4383]},{"teal":3609,"source":"contracts/TownHall.algo.ts:825","pc":[4384,4385]},{"teal":3610,"source":"contracts/TownHall.algo.ts:825","pc":[4386]},{"teal":3611,"source":"contracts/TownHall.algo.ts:825","pc":[4387]},{"teal":3612,"source":"contracts/TownHall.algo.ts:823","pc":[4388,4389,4390]},{"teal":3616,"source":"contracts/TownHall.algo.ts:827","errorMessage":"Error state: Victim must be a player! Should not have entered this state.","pc":[4391]},{"teal":3621,"source":"contracts/TownHall.algo.ts:830","pc":[4392,4393]},{"teal":3622,"source":"contracts/TownHall.algo.ts:830","pc":[4394]},{"teal":3623,"source":"contracts/TownHall.algo.ts:830","pc":[4395]},{"teal":3624,"source":"contracts/TownHall.algo.ts:830","pc":[4396]},{"teal":3625,"source":"contracts/TownHall.algo.ts:830","pc":[4397,4398]},{"teal":3626,"source":"contracts/TownHall.algo.ts:830","pc":[4399]},{"teal":3627,"source":"contracts/TownHall.algo.ts:830","pc":[4400]},{"teal":3631,"source":"contracts/TownHall.algo.ts:832","pc":[4401,4402]},{"teal":3632,"source":"contracts/TownHall.algo.ts:832","pc":[4403,4404]},{"teal":3633,"source":"contracts/TownHall.algo.ts:832","pc":[4405]},{"teal":3637,"source":"contracts/TownHall.algo.ts:833","pc":[4406,4407]},{"teal":3638,"source":"contracts/TownHall.algo.ts:833","pc":[4408,4409]},{"teal":3639,"source":"contracts/TownHall.algo.ts:833","pc":[4410]},{"teal":3644,"source":"contracts/TownHall.algo.ts:835","pc":[4411,4412]},{"teal":3645,"source":"contracts/TownHall.algo.ts:835","pc":[4413]},{"teal":3646,"source":"contracts/TownHall.algo.ts:835","pc":[4414,4415]},{"teal":3647,"source":"contracts/TownHall.algo.ts:835","pc":[4416]},{"teal":3648,"source":"contracts/TownHall.algo.ts:835","pc":[4417,4418,4419]},{"teal":3653,"source":"contracts/TownHall.algo.ts:838","pc":[4420]},{"teal":3654,"source":"contracts/Constants.ts:28","pc":[4421,4422]},{"teal":3655,"source":"contracts/TownHall.algo.ts:838","pc":[4423]},{"teal":3659,"source":"contracts/TownHall.algo.ts:839","pc":[4424]},{"teal":3664,"source":"contracts/TownHall.algo.ts:842","pc":[4425]},{"teal":3665,"source":"contracts/Constants.ts:27","pc":[4426,4427]},{"teal":3666,"source":"contracts/TownHall.algo.ts:842","pc":[4428]},{"teal":3667,"source":"contracts/TownHall.algo.ts:789","pc":[4429]},{"teal":3672,"source":"contracts/TownHall.algo.ts:845","pc":[4430,4431,4432]},{"teal":3673,"source":"contracts/TownHall.algo.ts:845","pc":[4433,4434,4435]},{"teal":3676,"source":"contracts/TownHall.algo.ts:845","pc":[4436,4437,4438]},{"teal":3677,"source":"contracts/TownHall.algo.ts:845","pc":[4439]},{"teal":3678,"source":"contracts/TownHall.algo.ts:845","pc":[4440]},{"teal":3682,"source":"contracts/TownHall.algo.ts:845","pc":[4441,4442,4443]},{"teal":3685,"source":"contracts/TownHall.algo.ts:845","pc":[4444]},{"teal":3686,"source":"contracts/TownHall.algo.ts:845","pc":[4445,4446]},{"teal":3693,"source":"contracts/TownHall.algo.ts:852","pc":[4447]},{"teal":3694,"source":"contracts/TownHall.algo.ts:852","pc":[4448]},{"teal":3695,"source":"contracts/Constants.ts:27","pc":[4449,4450]},{"teal":3696,"source":"contracts/TownHall.algo.ts:852","pc":[4451]},{"teal":3699,"source":"contracts/TownHall.algo.ts:851","errorMessage":"Invalid method call: Game is not in Dawn Stage Unmasking state.","pc":[4452]},{"teal":3703,"source":"contracts/TownHall.algo.ts:856","pc":[4453]},{"teal":3704,"source":"contracts/TownHall.algo.ts:856","pc":[4454]},{"teal":3705,"source":"contracts/TownHall.algo.ts:856","pc":[4455,4456]},{"teal":3706,"source":"contracts/TownHall.algo.ts:856","pc":[4457]},{"teal":3709,"source":"contracts/TownHall.algo.ts:856","errorMessage":"Error state: Other player called method.","pc":[4458]},{"teal":3713,"source":"contracts/TownHall.algo.ts:859","pc":[4459,4460]},{"teal":3714,"source":"contracts/TownHall.algo.ts:859","pc":[4461,4462]},{"teal":3715,"source":"contracts/TownHall.algo.ts:859","pc":[4463,4464]},{"teal":3716,"source":"contracts/TownHall.algo.ts:859","pc":[4465,4466]},{"teal":3720,"source":"contracts/TownHall.algo.ts:860","pc":[4467,4468]},{"teal":3721,"source":"contracts/TownHall.algo.ts:860","pc":[4469,4470,4471]},{"teal":3722,"source":"contracts/TownHall.algo.ts:860","pc":[4472,4473]},{"teal":3726,"source":"contracts/TownHall.algo.ts:861","pc":[4474,4475]},{"teal":3727,"source":"contracts/TownHall.algo.ts:861","pc":[4476,4477]},{"teal":3728,"source":"contracts/TownHall.algo.ts:861","pc":[4478,4479]},{"teal":3729,"source":"contracts/TownHall.algo.ts:861","pc":[4480,4481]},{"teal":3734,"source":"contracts/TownHall.algo.ts:863","pc":[4482,4483]},{"teal":3735,"source":"contracts/TownHall.algo.ts:863","pc":[4484,4485]},{"teal":3736,"source":"contracts/TownHall.algo.ts:863","pc":[4486]},{"teal":3737,"source":"contracts/TownHall.algo.ts:863","pc":[4487]},{"teal":3738,"source":"contracts/TownHall.algo.ts:863","pc":[4488,4489,4490]},{"teal":3743,"source":"contracts/TownHall.algo.ts:867","pc":[4491]},{"teal":3744,"source":"contracts/Constants.ts:28","pc":[4492,4493]},{"teal":3745,"source":"contracts/TownHall.algo.ts:867","pc":[4494]},{"teal":3749,"source":"contracts/TownHall.algo.ts:868","pc":[4495,4496]},{"teal":3750,"source":"contracts/TownHall.algo.ts:868","pc":[4497,4498]},{"teal":3751,"source":"contracts/TownHall.algo.ts:868","pc":[4499]},{"teal":3755,"source":"contracts/TownHall.algo.ts:869","pc":[4500,4501]},{"teal":3756,"source":"contracts/TownHall.algo.ts:869","pc":[4502,4503]},{"teal":3757,"source":"contracts/TownHall.algo.ts:869","pc":[4504]},{"teal":3761,"source":"contracts/TownHall.algo.ts:870","pc":[4505]},{"teal":3767,"source":"contracts/TownHall.algo.ts:873","pc":[4506,4507]},{"teal":3768,"source":"contracts/TownHall.algo.ts:873","pc":[4508,4509]},{"teal":3769,"source":"contracts/TownHall.algo.ts:873","pc":[4510]},{"teal":3770,"source":"contracts/TownHall.algo.ts:873","pc":[4511]},{"teal":3771,"source":"contracts/TownHall.algo.ts:873","pc":[4512,4513,4514]},{"teal":3776,"source":"contracts/TownHall.algo.ts:875","pc":[4515,4516]},{"teal":3777,"source":"contracts/TownHall.algo.ts:875","pc":[4517,4518]},{"teal":3778,"source":"contracts/TownHall.algo.ts:875","pc":[4519]},{"teal":3783,"source":"contracts/TownHall.algo.ts:879","pc":[4520]},{"teal":3784,"source":"contracts/TownHall.algo.ts:879","pc":[4521,4522]},{"teal":3785,"source":"contracts/TownHall.algo.ts:879","pc":[4523]},{"teal":3789,"source":"contracts/TownHall.algo.ts:881","pc":[4524]},{"teal":3790,"source":"contracts/Constants.ts:19","pc":[4525,4526]},{"teal":3791,"source":"contracts/TownHall.algo.ts:881","pc":[4527]},{"teal":3795,"source":"contracts/TownHall.algo.ts:882","pc":[4528,4529]},{"teal":3796,"source":"contracts/TownHall.algo.ts:882","pc":[4530,4531]},{"teal":3797,"source":"contracts/TownHall.algo.ts:882","pc":[4532]},{"teal":3798,"source":"contracts/TownHall.algo.ts:845","pc":[4533]},{"teal":3803,"source":"contracts/TownHall.algo.ts:886","pc":[4534,4535,4536]},{"teal":3804,"source":"contracts/TownHall.algo.ts:886","pc":[4537]},{"teal":3805,"source":"contracts/TownHall.algo.ts:886","pc":[4538]},{"teal":3809,"source":"contracts/TownHall.algo.ts:886","pc":[4539,4540,4541]},{"teal":3812,"source":"contracts/TownHall.algo.ts:886","pc":[4542]},{"teal":3816,"source":"contracts/TownHall.algo.ts:887","pc":[4543]},{"teal":3817,"source":"contracts/TownHall.algo.ts:887","pc":[4544]},{"teal":3818,"source":"contracts/Constants.ts:28","pc":[4545,4546]},{"teal":3819,"source":"contracts/TownHall.algo.ts:887","pc":[4547]},{"teal":3822,"source":"contracts/TownHall.algo.ts:887","errorMessage":"Invalid method call: Game is not in Game Over state.","pc":[4548]},{"teal":3826,"source":"contracts/TownHall.algo.ts:888","pc":[4549,4550,4551]},{"teal":3830,"source":"contracts/TownHall.algo.ts:890","pc":[4552,4553]},{"teal":3831,"source":"contracts/TownHall.algo.ts:890","pc":[4554,4555]},{"teal":3832,"source":"contracts/TownHall.algo.ts:890","pc":[4556]},{"teal":3833,"source":"contracts/TownHall.algo.ts:890","pc":[4557,4558]},{"teal":3841,"source":"contracts/TownHall.algo.ts:891","pc":[4559]},{"teal":3842,"source":"contracts/TownHall.algo.ts:891","pc":[4560]},{"teal":3843,"source":"contracts/TownHall.algo.ts:891","pc":[4561,4562]},{"teal":3847,"source":"contracts/TownHall.algo.ts:892","pc":[4563,4564]},{"teal":3848,"source":"contracts/TownHall.algo.ts:892","pc":[4565,4566]},{"teal":3852,"source":"contracts/TownHall.algo.ts:893","pc":[4567]},{"teal":3853,"source":"contracts/TownHall.algo.ts:893","pc":[4568]},{"teal":3854,"source":"contracts/TownHall.algo.ts:893","pc":[4569,4570,4571]},{"teal":3855,"source":"contracts/TownHall.algo.ts:893","pc":[4572,4573]},{"teal":3859,"source":"contracts/TownHall.algo.ts:894","pc":[4574,4575]},{"teal":3860,"source":"contracts/TownHall.algo.ts:894","pc":[4576,4577]},{"teal":3863,"source":"contracts/TownHall.algo.ts:891","pc":[4578]},{"teal":3871,"source":"contracts/TownHall.algo.ts:897","pc":[4579]},{"teal":3872,"source":"contracts/TownHall.algo.ts:897","pc":[4580]},{"teal":3873,"source":"contracts/TownHall.algo.ts:897","pc":[4581,4582]},{"teal":3877,"source":"contracts/TownHall.algo.ts:898","pc":[4583,4584]},{"teal":3878,"source":"contracts/TownHall.algo.ts:898","pc":[4585,4586]},{"teal":3882,"source":"contracts/TownHall.algo.ts:899","pc":[4587,4588]},{"teal":3883,"source":"contracts/TownHall.algo.ts:899","pc":[4589]},{"teal":3884,"source":"contracts/TownHall.algo.ts:899","pc":[4590,4591,4592]},{"teal":3885,"source":"contracts/TownHall.algo.ts:899","pc":[4593,4594]},{"teal":3889,"source":"contracts/TownHall.algo.ts:900","pc":[4595,4596]},{"teal":3890,"source":"contracts/TownHall.algo.ts:900","pc":[4597,4598]},{"teal":3893,"source":"contracts/TownHall.algo.ts:897","pc":[4599]},{"teal":3901,"source":"contracts/TownHall.algo.ts:902","pc":[4600]},{"teal":3902,"source":"contracts/TownHall.algo.ts:902","pc":[4601]},{"teal":3903,"source":"contracts/TownHall.algo.ts:902","pc":[4602,4603]},{"teal":3907,"source":"contracts/TownHall.algo.ts:903","pc":[4604,4605]},{"teal":3908,"source":"contracts/TownHall.algo.ts:903","pc":[4606,4607]},{"teal":3912,"source":"contracts/TownHall.algo.ts:904","pc":[4608,4609]},{"teal":3913,"source":"contracts/TownHall.algo.ts:904","pc":[4610]},{"teal":3914,"source":"contracts/TownHall.algo.ts:904","pc":[4611,4612,4613]},{"teal":3915,"source":"contracts/TownHall.algo.ts:904","pc":[4614,4615]},{"teal":3919,"source":"contracts/TownHall.algo.ts:905","pc":[4616,4617]},{"teal":3920,"source":"contracts/TownHall.algo.ts:905","pc":[4618,4619]},{"teal":3923,"source":"contracts/TownHall.algo.ts:902","pc":[4620]},{"teal":3931,"source":"contracts/TownHall.algo.ts:908","pc":[4621]},{"teal":3932,"source":"contracts/TownHall.algo.ts:908","pc":[4622]},{"teal":3933,"source":"contracts/TownHall.algo.ts:908","pc":[4623,4624]},{"teal":3937,"source":"contracts/TownHall.algo.ts:909","pc":[4625,4626]},{"teal":3938,"source":"contracts/TownHall.algo.ts:909","pc":[4627,4628]},{"teal":3942,"source":"contracts/TownHall.algo.ts:910","pc":[4629,4630]},{"teal":3943,"source":"contracts/TownHall.algo.ts:910","pc":[4631]},{"teal":3944,"source":"contracts/TownHall.algo.ts:910","pc":[4632,4633,4634]},{"teal":3945,"source":"contracts/TownHall.algo.ts:910","pc":[4635,4636]},{"teal":3949,"source":"contracts/TownHall.algo.ts:911","pc":[4637,4638]},{"teal":3950,"source":"contracts/TownHall.algo.ts:911","pc":[4639,4640]},{"teal":3953,"source":"contracts/TownHall.algo.ts:908","pc":[4641]},{"teal":3961,"source":"contracts/TownHall.algo.ts:914","pc":[4642]},{"teal":3962,"source":"contracts/TownHall.algo.ts:914","pc":[4643]},{"teal":3963,"source":"contracts/TownHall.algo.ts:914","pc":[4644,4645]},{"teal":3967,"source":"contracts/TownHall.algo.ts:915","pc":[4646,4647]},{"teal":3968,"source":"contracts/TownHall.algo.ts:915","pc":[4648,4649]},{"teal":3972,"source":"contracts/TownHall.algo.ts:916","pc":[4650,4651]},{"teal":3973,"source":"contracts/TownHall.algo.ts:916","pc":[4652]},{"teal":3974,"source":"contracts/TownHall.algo.ts:916","pc":[4653,4654,4655]},{"teal":3975,"source":"contracts/TownHall.algo.ts:916","pc":[4656,4657]},{"teal":3979,"source":"contracts/TownHall.algo.ts:917","pc":[4658,4659]},{"teal":3980,"source":"contracts/TownHall.algo.ts:917","pc":[4660,4661]},{"teal":3983,"source":"contracts/TownHall.algo.ts:914","pc":[4662]},{"teal":3991,"source":"contracts/TownHall.algo.ts:920","pc":[4663]},{"teal":3992,"source":"contracts/TownHall.algo.ts:920","pc":[4664]},{"teal":3993,"source":"contracts/TownHall.algo.ts:920","pc":[4665,4666]},{"teal":3997,"source":"contracts/TownHall.algo.ts:921","pc":[4667,4668]},{"teal":3998,"source":"contracts/TownHall.algo.ts:921","pc":[4669,4670]},{"teal":4002,"source":"contracts/TownHall.algo.ts:922","pc":[4671,4672]},{"teal":4003,"source":"contracts/TownHall.algo.ts:922","pc":[4673]},{"teal":4004,"source":"contracts/TownHall.algo.ts:922","pc":[4674,4675,4676]},{"teal":4005,"source":"contracts/TownHall.algo.ts:922","pc":[4677,4678]},{"teal":4009,"source":"contracts/TownHall.algo.ts:923","pc":[4679,4680]},{"teal":4010,"source":"contracts/TownHall.algo.ts:923","pc":[4681,4682]},{"teal":4013,"source":"contracts/TownHall.algo.ts:920","pc":[4683]},{"teal":4014,"source":"contracts/TownHall.algo.ts:886","pc":[4684]},{"teal":4019,"source":"contracts/TownHall.algo.ts:933","pc":[4685,4686,4687]},{"teal":4020,"source":"contracts/TownHall.algo.ts:933","pc":[4688]},{"teal":4021,"source":"contracts/TownHall.algo.ts:933","pc":[4689]},{"teal":4025,"source":"contracts/TownHall.algo.ts:933","pc":[4690,4691,4692]},{"teal":4028,"source":"contracts/TownHall.algo.ts:933","pc":[4693]},{"teal":4029,"source":"contracts/TownHall.algo.ts:933","pc":[4694,4695]},{"teal":4036,"source":"contracts/TownHall.algo.ts:935","pc":[4696]},{"teal":4037,"source":"contracts/TownHall.algo.ts:935","pc":[4697]},{"teal":4038,"source":"contracts/Constants.ts:29","pc":[4698,4699]},{"teal":4039,"source":"contracts/TownHall.algo.ts:935","pc":[4700]},{"teal":4042,"source":"contracts/TownHall.algo.ts:934","errorMessage":"Invalid method call: Game is not in Assign Role Timeout state","pc":[4701]},{"teal":4046,"source":"contracts/TownHall.algo.ts:939","pc":[4702,4703,4704]},{"teal":4047,"source":"contracts/TownHall.algo.ts:939","pc":[4705,4706]},{"teal":4051,"source":"contracts/TownHall.algo.ts:940","pc":[4707,4708]},{"teal":4052,"source":"contracts/TownHall.algo.ts:940","pc":[4709]},{"teal":4056,"source":"contracts/TownHall.algo.ts:942","pc":[4710,4711]},{"teal":4057,"source":"contracts/TownHall.algo.ts:942","pc":[4712]},{"teal":4058,"source":"contracts/TownHall.algo.ts:942","pc":[4713]},{"teal":4059,"source":"contracts/TownHall.algo.ts:942","pc":[4714]},{"teal":4060,"source":"contracts/TownHall.algo.ts:942","pc":[4715,4716]},{"teal":4061,"source":"contracts/TownHall.algo.ts:942","pc":[4717]},{"teal":4062,"source":"contracts/TownHall.algo.ts:942","pc":[4718]},{"teal":4063,"source":"contracts/TownHall.algo.ts:942","pc":[4719]},{"teal":4064,"source":"contracts/TownHall.algo.ts:942","pc":[4720]},{"teal":4065,"source":"contracts/TownHall.algo.ts:942","pc":[4721]},{"teal":4066,"source":"contracts/TownHall.algo.ts:942","pc":[4722]},{"teal":4067,"source":"contracts/TownHall.algo.ts:942","pc":[4723]},{"teal":4068,"source":"contracts/TownHall.algo.ts:942","pc":[4724]},{"teal":4071,"source":"contracts/TownHall.algo.ts:942","errorMessage":"wideRatio failed","pc":[4725]},{"teal":4072,"source":"contracts/TownHall.algo.ts:942","pc":[4726,4727]},{"teal":4073,"source":"contracts/TownHall.algo.ts:942","pc":[4728]},{"teal":4074,"source":"contracts/TownHall.algo.ts:942","pc":[4729,4730]},{"teal":4078,"source":"contracts/TownHall.algo.ts:943","pc":[4731]},{"teal":4079,"source":"contracts/TownHall.algo.ts:943","pc":[4732,4733]},{"teal":4084,"source":"contracts/TownHall.algo.ts:943","pc":[4734,4735]},{"teal":4085,"source":"contracts/TownHall.algo.ts:943","pc":[4736,4737]},{"teal":4086,"source":"contracts/TownHall.algo.ts:943","pc":[4738]},{"teal":4087,"source":"contracts/TownHall.algo.ts:943","pc":[4739]},{"teal":4088,"source":"contracts/TownHall.algo.ts:943","pc":[4740]},{"teal":4089,"source":"contracts/TownHall.algo.ts:943","pc":[4741]},{"teal":4090,"source":"contracts/TownHall.algo.ts:943","pc":[4742,4743,4744]},{"teal":4095,"source":"contracts/TownHall.algo.ts:944","pc":[4745,4746]},{"teal":4096,"source":"contracts/TownHall.algo.ts:944","pc":[4747,4748,4749]},{"teal":4097,"source":"contracts/TownHall.algo.ts:944","pc":[4750]},{"teal":4098,"source":"contracts/TownHall.algo.ts:944","pc":[4751,4752,4753]},{"teal":4103,"source":"contracts/TownHall.algo.ts:945","pc":[4754]},{"teal":4104,"source":"contracts/TownHall.algo.ts:945","pc":[4755]},{"teal":4105,"source":"contracts/TownHall.algo.ts:945","pc":[4756,4757]},{"teal":4106,"source":"contracts/TownHall.algo.ts:945","pc":[4758]},{"teal":4107,"source":"contracts/TownHall.algo.ts:945","pc":[4759,4760]},{"teal":4108,"source":"contracts/TownHall.algo.ts:945","pc":[4761,4762]},{"teal":4109,"source":"contracts/TownHall.algo.ts:945","pc":[4763]},{"teal":4110,"source":"contracts/TownHall.algo.ts:945","pc":[4764,4765]},{"teal":4111,"source":"contracts/TownHall.algo.ts:945","pc":[4766,4767]},{"teal":4112,"source":"contracts/TownHall.algo.ts:945","pc":[4768,4769]},{"teal":4113,"source":"contracts/TownHall.algo.ts:945","pc":[4770,4771]},{"teal":4114,"source":"contracts/TownHall.algo.ts:945","pc":[4772]},{"teal":4123,"source":"contracts/TownHall.algo.ts:947","pc":[4773]},{"teal":4124,"source":"contracts/TownHall.algo.ts:947","pc":[4774]},{"teal":4125,"source":"contracts/TownHall.algo.ts:947","pc":[4775,4776]},{"teal":4129,"source":"contracts/TownHall.algo.ts:948","pc":[4777,4778]},{"teal":4130,"source":"contracts/TownHall.algo.ts:948","pc":[4779,4780]},{"teal":4134,"source":"contracts/TownHall.algo.ts:949","pc":[4781,4782]},{"teal":4135,"source":"contracts/TownHall.algo.ts:949","pc":[4783,4784]},{"teal":4136,"source":"contracts/TownHall.algo.ts:949","pc":[4785]},{"teal":4137,"source":"contracts/TownHall.algo.ts:949","pc":[4786,4787]},{"teal":4138,"source":"contracts/TownHall.algo.ts:949","pc":[4788]},{"teal":4139,"source":"contracts/TownHall.algo.ts:949","pc":[4789]},{"teal":4140,"source":"contracts/TownHall.algo.ts:949","pc":[4790]},{"teal":4141,"source":"contracts/TownHall.algo.ts:949","pc":[4791,4792]},{"teal":4142,"source":"contracts/TownHall.algo.ts:949","pc":[4793]},{"teal":4143,"source":"contracts/TownHall.algo.ts:949","pc":[4794]},{"teal":4144,"source":"contracts/TownHall.algo.ts:949","pc":[4795]},{"teal":4145,"source":"contracts/TownHall.algo.ts:949","pc":[4796,4797]},{"teal":4149,"source":"contracts/TownHall.algo.ts:950","pc":[4798,4799]},{"teal":4150,"source":"contracts/TownHall.algo.ts:950","pc":[4800,4801]},{"teal":4153,"source":"contracts/TownHall.algo.ts:947","pc":[4802]},{"teal":4158,"source":"contracts/TownHall.algo.ts:943","pc":[4803,4804]},{"teal":4159,"source":"contracts/TownHall.algo.ts:943","pc":[4805]},{"teal":4160,"source":"contracts/TownHall.algo.ts:943","pc":[4806]},{"teal":4161,"source":"contracts/TownHall.algo.ts:943","pc":[4807,4808]},{"teal":4162,"source":"contracts/TownHall.algo.ts:943","pc":[4809,4810,4811]},{"teal":4165,"source":"contracts/TownHall.algo.ts:933","pc":[4812]},{"teal":4170,"source":"contracts/TownHall.algo.ts:955","pc":[4813,4814,4815]},{"teal":4171,"source":"contracts/TownHall.algo.ts:955","pc":[4816]},{"teal":4172,"source":"contracts/TownHall.algo.ts:955","pc":[4817]},{"teal":4176,"source":"contracts/TownHall.algo.ts:955","pc":[4818,4819,4820]},{"teal":4180,"source":"contracts/TownHall.algo.ts:956","pc":[4821,4822]},{"teal":4181,"source":"contracts/TownHall.algo.ts:956","pc":[4823,4824]},{"teal":4182,"source":"contracts/TownHall.algo.ts:956","pc":[4825]},{"teal":4183,"source":"contracts/TownHall.algo.ts:956","pc":[4826,4827]},{"teal":4184,"source":"contracts/TownHall.algo.ts:956","pc":[4828]},{"teal":4185,"source":"contracts/TownHall.algo.ts:956","pc":[4829]},{"teal":4186,"source":"contracts/TownHall.algo.ts:956","pc":[4830]},{"teal":4191,"source":"contracts/TownHall.algo.ts:957","pc":[4831,4832,4833]},{"teal":4192,"source":"contracts/TownHall.algo.ts:957","pc":[4834]},{"teal":4193,"source":"contracts/TownHall.algo.ts:957","pc":[4835]},{"teal":4194,"source":"contracts/TownHall.algo.ts:957","pc":[4836]},{"teal":4195,"source":"contracts/TownHall.algo.ts:957","pc":[4837]},{"teal":4196,"source":"contracts/TownHall.algo.ts:957","pc":[4838]},{"teal":4197,"source":"contracts/TownHall.algo.ts:957","pc":[4839,4840,4841]},{"teal":4202,"source":"contracts/TownHall.algo.ts:957","pc":[4842]},{"teal":4203,"source":"contracts/Constants.ts:29","pc":[4843,4844]},{"teal":4204,"source":"contracts/TownHall.algo.ts:957","pc":[4845]},{"teal":4207,"source":"contracts/TownHall.algo.ts:955","pc":[4846]},{"teal":4211,"source":"contracts/TownHall.algo.ts:961","pc":[4847,4848,4849]},{"teal":4214,"source":"contracts/TownHall.algo.ts:961","pc":[4850]},{"teal":4218,"source":"contracts/TownHall.algo.ts:962","pc":[4851]},{"teal":4219,"source":"contracts/TownHall.algo.ts:962","pc":[4852,4853]},{"teal":4224,"source":"contracts/TownHall.algo.ts:964","pc":[4854,4855]},{"teal":4225,"source":"contracts/TownHall.algo.ts:964","pc":[4856]},{"teal":4226,"source":"contracts/TownHall.algo.ts:964","pc":[4857,4858]},{"teal":4227,"source":"contracts/TownHall.algo.ts:964","pc":[4859]},{"teal":4228,"source":"contracts/TownHall.algo.ts:964","pc":[4860,4861,4862]},{"teal":4233,"source":"contracts/TownHall.algo.ts:965","pc":[4863,4864]},{"teal":4234,"source":"contracts/TownHall.algo.ts:965","pc":[4865,4866]},{"teal":4235,"source":"contracts/TownHall.algo.ts:965","pc":[4867]},{"teal":4236,"source":"contracts/TownHall.algo.ts:965","pc":[4868]},{"teal":4237,"source":"contracts/TownHall.algo.ts:965","pc":[4869,4870]},{"teal":4241,"source":"contracts/TownHall.algo.ts:966","pc":[4871,4872]},{"teal":4242,"source":"contracts/TownHall.algo.ts:966","pc":[4873]},{"teal":4243,"source":"contracts/TownHall.algo.ts:966","pc":[4874]},{"teal":4244,"source":"contracts/TownHall.algo.ts:966","pc":[4875]},{"teal":4250,"source":"contracts/TownHall.algo.ts:968","pc":[4876,4877]},{"teal":4251,"source":"contracts/TownHall.algo.ts:968","pc":[4878]},{"teal":4252,"source":"contracts/TownHall.algo.ts:968","pc":[4879,4880]},{"teal":4253,"source":"contracts/TownHall.algo.ts:968","pc":[4881]},{"teal":4254,"source":"contracts/TownHall.algo.ts:968","pc":[4882,4883,4884]},{"teal":4259,"source":"contracts/TownHall.algo.ts:969","pc":[4885,4886]},{"teal":4260,"source":"contracts/TownHall.algo.ts:969","pc":[4887,4888]},{"teal":4261,"source":"contracts/TownHall.algo.ts:969","pc":[4889]},{"teal":4262,"source":"contracts/TownHall.algo.ts:969","pc":[4890]},{"teal":4263,"source":"contracts/TownHall.algo.ts:969","pc":[4891,4892]},{"teal":4267,"source":"contracts/TownHall.algo.ts:970","pc":[4893,4894]},{"teal":4268,"source":"contracts/TownHall.algo.ts:970","pc":[4895]},{"teal":4269,"source":"contracts/TownHall.algo.ts:970","pc":[4896]},{"teal":4270,"source":"contracts/TownHall.algo.ts:970","pc":[4897]},{"teal":4276,"source":"contracts/TownHall.algo.ts:972","pc":[4898,4899]},{"teal":4277,"source":"contracts/TownHall.algo.ts:972","pc":[4900]},{"teal":4278,"source":"contracts/TownHall.algo.ts:972","pc":[4901,4902]},{"teal":4279,"source":"contracts/TownHall.algo.ts:972","pc":[4903]},{"teal":4280,"source":"contracts/TownHall.algo.ts:972","pc":[4904,4905,4906]},{"teal":4285,"source":"contracts/TownHall.algo.ts:973","pc":[4907,4908]},{"teal":4286,"source":"contracts/TownHall.algo.ts:973","pc":[4909,4910]},{"teal":4287,"source":"contracts/TownHall.algo.ts:973","pc":[4911]},{"teal":4288,"source":"contracts/TownHall.algo.ts:973","pc":[4912]},{"teal":4289,"source":"contracts/TownHall.algo.ts:973","pc":[4913,4914]},{"teal":4293,"source":"contracts/TownHall.algo.ts:974","pc":[4915,4916]},{"teal":4294,"source":"contracts/TownHall.algo.ts:974","pc":[4917]},{"teal":4295,"source":"contracts/TownHall.algo.ts:974","pc":[4918]},{"teal":4296,"source":"contracts/TownHall.algo.ts:974","pc":[4919]},{"teal":4302,"source":"contracts/TownHall.algo.ts:976","pc":[4920,4921]},{"teal":4303,"source":"contracts/TownHall.algo.ts:976","pc":[4922]},{"teal":4304,"source":"contracts/TownHall.algo.ts:976","pc":[4923,4924]},{"teal":4305,"source":"contracts/TownHall.algo.ts:976","pc":[4925]},{"teal":4306,"source":"contracts/TownHall.algo.ts:976","pc":[4926,4927,4928]},{"teal":4311,"source":"contracts/TownHall.algo.ts:977","pc":[4929,4930]},{"teal":4312,"source":"contracts/TownHall.algo.ts:977","pc":[4931,4932]},{"teal":4313,"source":"contracts/TownHall.algo.ts:977","pc":[4933]},{"teal":4314,"source":"contracts/TownHall.algo.ts:977","pc":[4934]},{"teal":4315,"source":"contracts/TownHall.algo.ts:977","pc":[4935,4936]},{"teal":4319,"source":"contracts/TownHall.algo.ts:978","pc":[4937,4938]},{"teal":4320,"source":"contracts/TownHall.algo.ts:978","pc":[4939]},{"teal":4321,"source":"contracts/TownHall.algo.ts:978","pc":[4940]},{"teal":4322,"source":"contracts/TownHall.algo.ts:978","pc":[4941]},{"teal":4328,"source":"contracts/TownHall.algo.ts:980","pc":[4942,4943]},{"teal":4329,"source":"contracts/TownHall.algo.ts:980","pc":[4944]},{"teal":4330,"source":"contracts/TownHall.algo.ts:980","pc":[4945,4946]},{"teal":4331,"source":"contracts/TownHall.algo.ts:980","pc":[4947]},{"teal":4332,"source":"contracts/TownHall.algo.ts:980","pc":[4948,4949,4950]},{"teal":4337,"source":"contracts/TownHall.algo.ts:981","pc":[4951,4952]},{"teal":4338,"source":"contracts/TownHall.algo.ts:981","pc":[4953,4954]},{"teal":4339,"source":"contracts/TownHall.algo.ts:981","pc":[4955]},{"teal":4340,"source":"contracts/TownHall.algo.ts:981","pc":[4956]},{"teal":4341,"source":"contracts/TownHall.algo.ts:981","pc":[4957,4958]},{"teal":4345,"source":"contracts/TownHall.algo.ts:982","pc":[4959,4960]},{"teal":4346,"source":"contracts/TownHall.algo.ts:982","pc":[4961]},{"teal":4347,"source":"contracts/TownHall.algo.ts:982","pc":[4962]},{"teal":4348,"source":"contracts/TownHall.algo.ts:982","pc":[4963]},{"teal":4354,"source":"contracts/TownHall.algo.ts:984","pc":[4964,4965]},{"teal":4355,"source":"contracts/TownHall.algo.ts:984","pc":[4966]},{"teal":4356,"source":"contracts/TownHall.algo.ts:984","pc":[4967,4968]},{"teal":4357,"source":"contracts/TownHall.algo.ts:984","pc":[4969]},{"teal":4358,"source":"contracts/TownHall.algo.ts:984","pc":[4970,4971,4972]},{"teal":4363,"source":"contracts/TownHall.algo.ts:985","pc":[4973,4974]},{"teal":4364,"source":"contracts/TownHall.algo.ts:985","pc":[4975,4976]},{"teal":4365,"source":"contracts/TownHall.algo.ts:985","pc":[4977]},{"teal":4366,"source":"contracts/TownHall.algo.ts:985","pc":[4978]},{"teal":4367,"source":"contracts/TownHall.algo.ts:985","pc":[4979,4980]},{"teal":4371,"source":"contracts/TownHall.algo.ts:986","pc":[4981,4982]},{"teal":4372,"source":"contracts/TownHall.algo.ts:986","pc":[4983]},{"teal":4373,"source":"contracts/TownHall.algo.ts:986","pc":[4984]},{"teal":4374,"source":"contracts/TownHall.algo.ts:986","pc":[4985]},{"teal":4379,"source":"contracts/TownHall.algo.ts:988","pc":[4986,4987]},{"teal":4382,"source":"contracts/TownHall.algo.ts:961","pc":[4988,4989]},{"teal":4383,"source":"contracts/TownHall.algo.ts:961","pc":[4990]},{"teal":4387,"source":"contracts/TownHall.algo.ts:991","pc":[4991,4992,4993]},{"teal":4391,"source":"contracts/TownHall.algo.ts:992","pc":[4994,4995]},{"teal":4392,"source":"contracts/TownHall.algo.ts:992","pc":[4996]},{"teal":4396,"source":"contracts/TownHall.algo.ts:993","pc":[4997,4998]},{"teal":4397,"source":"contracts/TownHall.algo.ts:993","pc":[4999]},{"teal":4398,"source":"contracts/TownHall.algo.ts:993","pc":[5000]},{"teal":4399,"source":"contracts/TownHall.algo.ts:993","pc":[5001]},{"teal":4403,"source":"contracts/TownHall.algo.ts:994","pc":[5002,5003]},{"teal":4404,"source":"contracts/TownHall.algo.ts:994","pc":[5004]},{"teal":4405,"source":"contracts/TownHall.algo.ts:994","pc":[5005]},{"teal":4406,"source":"contracts/TownHall.algo.ts:994","pc":[5006]},{"teal":4410,"source":"contracts/TownHall.algo.ts:995","pc":[5007,5008]},{"teal":4411,"source":"contracts/TownHall.algo.ts:995","pc":[5009]},{"teal":4412,"source":"contracts/TownHall.algo.ts:995","pc":[5010]},{"teal":4413,"source":"contracts/TownHall.algo.ts:995","pc":[5011]},{"teal":4417,"source":"contracts/TownHall.algo.ts:996","pc":[5012,5013]},{"teal":4418,"source":"contracts/TownHall.algo.ts:996","pc":[5014]},{"teal":4419,"source":"contracts/TownHall.algo.ts:996","pc":[5015]},{"teal":4420,"source":"contracts/TownHall.algo.ts:996","pc":[5016]},{"teal":4424,"source":"contracts/TownHall.algo.ts:997","pc":[5017,5018]},{"teal":4425,"source":"contracts/TownHall.algo.ts:997","pc":[5019]},{"teal":4426,"source":"contracts/TownHall.algo.ts:997","pc":[5020]},{"teal":4427,"source":"contracts/TownHall.algo.ts:997","pc":[5021]},{"teal":4431,"source":"contracts/TownHall.algo.ts:998","pc":[5022,5023]},{"teal":4432,"source":"contracts/TownHall.algo.ts:998","pc":[5024]},{"teal":4433,"source":"contracts/TownHall.algo.ts:998","pc":[5025]},{"teal":4434,"source":"contracts/TownHall.algo.ts:998","pc":[5026]},{"teal":4435,"source":"contracts/TownHall.algo.ts:991","pc":[5027]},{"teal":4440,"source":"contracts/TownHall.algo.ts:1001","pc":[5028,5029,5030]},{"teal":4441,"source":"contracts/TownHall.algo.ts:1001","pc":[5031]},{"teal":4442,"source":"contracts/TownHall.algo.ts:1001","pc":[5032]},{"teal":4446,"source":"contracts/TownHall.algo.ts:1001","pc":[5033,5034,5035]},{"teal":4450,"source":"contracts/TownHall.algo.ts:1002","pc":[5036]},{"teal":4451,"source":"contracts/TownHall.algo.ts:1002","pc":[5037]},{"teal":4452,"source":"contracts/Constants.ts:28","pc":[5038,5039]},{"teal":4453,"source":"contracts/TownHall.algo.ts:1002","pc":[5040]},{"teal":4456,"source":"contracts/TownHall.algo.ts:1002","errorMessage":"Invalid method call: Game is not in Game Over state.","pc":[5041]},{"teal":4460,"source":"contracts/TownHall.algo.ts:1003","pc":[5042]},{"teal":4461,"source":"contracts/TownHall.algo.ts:1003","pc":[5043]},{"teal":4462,"source":"contracts/TownHall.algo.ts:1003","pc":[5044,5045]},{"teal":4466,"source":"contracts/TownHall.algo.ts:1003","pc":[5046,5047]},{"teal":4467,"source":"contracts/TownHall.algo.ts:1003","pc":[5048]},{"teal":4468,"source":"contracts/TownHall.algo.ts:1003","pc":[5049,5050]},{"teal":4471,"source":"contracts/TownHall.algo.ts:1003","pc":[5051]},{"teal":4472,"source":"contracts/TownHall.algo.ts:1003","pc":[5052,5053]},{"teal":4475,"source":"contracts/TownHall.algo.ts:1003","pc":[5054]},{"teal":4476,"source":"contracts/TownHall.algo.ts:1001","pc":[5055]},{"teal":4479,"source":"contracts/TownHall.algo.ts:36","pc":[5056,5057,5058,5059,5060,5061]},{"teal":4480,"source":"contracts/TownHall.algo.ts:36","pc":[5062,5063,5064]},{"teal":4481,"source":"contracts/TownHall.algo.ts:36","pc":[5065,5066,5067,5068]},{"teal":4484,"source":"contracts/TownHall.algo.ts:36","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[5069]},{"teal":4487,"source":"contracts/TownHall.algo.ts:36","pc":[5070,5071,5072,5073,5074,5075]},{"teal":4488,"source":"contracts/TownHall.algo.ts:36","pc":[5076,5077,5078,5079,5080,5081]},{"teal":4489,"source":"contracts/TownHall.algo.ts:36","pc":[5082,5083,5084,5085,5086,5087]},{"teal":4490,"source":"contracts/TownHall.algo.ts:36","pc":[5088,5089,5090,5091,5092,5093]},{"teal":4491,"source":"contracts/TownHall.algo.ts:36","pc":[5094,5095,5096,5097,5098,5099]},{"teal":4492,"source":"contracts/TownHall.algo.ts:36","pc":[5100,5101,5102,5103,5104,5105]},{"teal":4493,"source":"contracts/TownHall.algo.ts:36","pc":[5106,5107,5108,5109,5110,5111]},{"teal":4494,"source":"contracts/TownHall.algo.ts:36","pc":[5112,5113,5114,5115,5116,5117]},{"teal":4495,"source":"contracts/TownHall.algo.ts:36","pc":[5118,5119,5120,5121,5122,5123]},{"teal":4496,"source":"contracts/TownHall.algo.ts:36","pc":[5124,5125,5126,5127,5128,5129]},{"teal":4497,"source":"contracts/TownHall.algo.ts:36","pc":[5130,5131,5132,5133,5134,5135]},{"teal":4498,"source":"contracts/TownHall.algo.ts:36","pc":[5136,5137,5138,5139,5140,5141]},{"teal":4499,"source":"contracts/TownHall.algo.ts:36","pc":[5142,5143,5144,5145,5146,5147]},{"teal":4500,"source":"contracts/TownHall.algo.ts:36","pc":[5148,5149,5150,5151,5152,5153]},{"teal":4501,"source":"contracts/TownHall.algo.ts:36","pc":[5154,5155,5156,5157,5158,5159]},{"teal":4502,"source":"contracts/TownHall.algo.ts:36","pc":[5160,5161,5162,5163,5164,5165]},{"teal":4503,"source":"contracts/TownHall.algo.ts:36","pc":[5166,5167,5168,5169,5170,5171]},{"teal":4504,"source":"contracts/TownHall.algo.ts:36","pc":[5172,5173,5174,5175,5176,5177]},{"teal":4505,"source":"contracts/TownHall.algo.ts:36","pc":[5178,5179,5180,5181,5182,5183]},{"teal":4506,"source":"contracts/TownHall.algo.ts:36","pc":[5184,5185,5186]},{"teal":4507,"source":"contracts/TownHall.algo.ts:36","pc":[5187,5188,5189,5190,5191,5192,5193,5194,5195,5196,5197,5198,5199,5200,5201,5202,5203,5204,5205,5206,5207,5208,5209,5210,5211,5212,5213,5214,5215,5216,5217,5218,5219,5220,5221,5222,5223,5224,5225,5226]},{"teal":4510,"source":"contracts/TownHall.algo.ts:36","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[5227]},{"teal":4513,"source":"contracts/TownHall.algo.ts:36","pc":[5228,5229,5230,5231,5232,5233]},{"teal":4514,"source":"contracts/TownHall.algo.ts:36","pc":[5234,5235,5236]},{"teal":4515,"source":"contracts/TownHall.algo.ts:36","pc":[5237,5238,5239,5240]},{"teal":4518,"source":"contracts/TownHall.algo.ts:36","errorMessage":"this contract does not implement the given ABI method for call DeleteApplication","pc":[5241]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDEw"},"byteCode":{"approval":"CiASAQAgBgIDDAUEBwgKDWDwkwnAhD0JCyYzCWdhbWVTdGF0ZQAUanVzdEVsaW1pbmF0ZWRQbGF5ZXIPcGxheWVyMUFsZ29BZGRyD3BsYXllcjJBbGdvQWRkcg9wbGF5ZXIzQWxnb0FkZHIPcGxheWVyNEFsZ29BZGRyD3BsYXllcjVBbGdvQWRkcg9wbGF5ZXI2QWxnb0FkZHILbWFmaWFWaWN0aW0RbGFzdENvbW1pdGVkUm91bmQIAAAAAAAAAAANZG9jdG9yUGF0aWVudAgAAAAAAAAAAQZkb2N0b3IFbWFmaWEMcGxheWVyc0FsaXZlFHBsYXllcjFSZWNlaXZlZFZvdGVzFHBsYXllcjJSZWNlaXZlZFZvdGVzFHBsYXllcjNSZWNlaXZlZFZvdGVzFHBsYXllcjRSZWNlaXZlZFZvdGVzFHBsYXllcjVSZWNlaXZlZFZvdGVzFHBsYXllcjZSZWNlaXZlZFZvdGVzEWxzaWdGdW5kZXJBZGRyZXNzDHBsYXllcnNWb3RlZA5kb2N0b3JLZXlJbWFnZQ1wbGF5ZXJzSm9pbmVkDW1hZmlhS2V5SW1hZ2UHYnV0Y2hlcgdpbm5rZWVwBmZhcm1lcgZncm9jZXIgQkxTMTIzODFHMV9YTUQ6U0hBLTI1Nl9TU1dVX1JPXx8PcGxheWVyMUhhc1ZvdGVkD3BsYXllcjJIYXNWb3RlZA9wbGF5ZXIzSGFzVm90ZWQPcGxheWVyNEhhc1ZvdGVkD3BsYXllcjVIYXNWb3RlZA9wbGF5ZXI2SGFzVm90ZWQEFR98dQ9idXRjaGVyS2V5SW1hZ2UPaW5ua2VlcEtleUltYWdlDmNyZWF0b3JBZGRyZXNzDmZhcm1lcktleUltYWdlDmdyb2NlcktleUltYWdlYBfx06cxl9eUJpVjjE+prA/DaIxPl3S5BaFOOj8XG6xYbFXoP/l6Gu/7OvAK2yLGuwiz9IHjqqDxoJ4w7XQdiuT89eCV1dAK9gDbGMssBLPt0DzHRKKIiuQMqiMpRsXn4RBkb2N0b3JDb21taXRtZW50D21hZmlhQ29tbWl0bWVudAMKgQECADABADEYFCULMRkIjQwQdQAAAAAAAAAAERMQZwAAAAAAAAAAAAAAiAACIkOKAAAnKjEAZycXMgNnKzIDJwtQZycEMgMnC1BnJwUyAycLUGcnBjIDJwtQZycHMgMnC1BnJwgyAycLUGcnDzIDZycOMgNnJx4yA2cnHDIDZycdMgNnJx8yA2cnISNnJyIjZycjI2cnJCNnJyUjZycmI2cnGCNnJxEjZycSI2cnEyNnJxQjZycVI2cnFiNnJxgjZycaI2cnECVnKjIDZycJMgNnJwwyA2coI2cnCiNniScnNhoBF4gABRZQsCJDigEBi/+JJyc2GgRXAgA2GgNXAgA2GgJXAgA2GgFXAgCIAAonMiNPAlRQsCJDigQBKUmL/4v+i/1QUAGMAIsAgCBz7adTKZ19SDM52AgJodgFU72kAv/+W/7/////AAAAAaqMAYv9i/+L/OECi/6LAeEC4AISjABGAYknJzYaAVcCAIgADEkVFlcGAkxQULAiQ4oBASlHCYBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwAJzGMAScgjAKLAIv/UCcxUCcyUCcgUIwDiwMBjASLBIABAVAnIFABjAWLBIsFrYABAlAnIFABjAaLBVcAIIsGVwAQUIwHiweAMBoBEeo5f+aaSxuntkNLrNdkd0uE84USv2cw0qD2sPYkHqv//rFT//+5/v////+qq6qMCIsI5QKMCYsJjABGCYknJ4gABRZQsCJDigABKGSJNhoBSRUkEkSIAAIiQ4oBAChkIxJEMQAnKmQSRCcXZDIDEkSL/zIDE0QnF4v/ZygiZ4k2GgFXAgAxFiIJSTgQIhJEiAACIkOKAgApRwMoZCISRCcaZCUMRCtkVwAgMQASSUAACicEZFcAIDEAEhFJQAAKJwVkVwAgMQASEUlAAAonBmRXACAxABIRSUAACicHZFcAIDEAEhFJQAAKJwhkVwAgMQASEUEAAQCL/zgIgbCYRg9Ei/5XAGCMAIv+V2BgjAGL/lfAYIwCi/6BoAIkWIwDiwOLAosBiwCI/dxEJwu9TEgUQQAJJwshDblIQgAJJwtJvUQhDQjTJwu9TEhEJwsnGmQhDQuLAbsnGmQiCCcaTGcnF2QyAxNEJwpkIxJEsSKyECEOsggnF2SyByOyAbMrZFcAIDIDEkEACitkIzEAXStMZ4knBGRXACAyAxJBAAwnBGQjMQBdJwRMZ4knBWRXACAyAxJBAAwnBWQjMQBdJwVMZ4knBmRXACAyAxJBAAwnBmQjMQBdJwZMZ4knB2RXACAyAxJBAAwnB2QjMQBdJwdMZ4knCGRXACAyAxJBABUnCGQjMQBdJwhMZyghBGcnCjIGZ4kAiTEWIglJOBAiEkQxFiEECUk4ECISRDEWIQUJSTgQIhJEMRYhCAlJOBAiEkQxFiEHCUk4ECISRDEWJQlJOBAiEkQxFiEJCUk4ECISRDYaBVcCADYaBFcCADYaA1cCADYaAlcCADYaAVcCAIgAAiJDigwAKGQhBBJEi/0BvUxIFESL/QEjuUiL/zEAMgpQEkQnCyOBwAS6i/4SRIv5OACAIMavvHFQbKEXuTMBqjKg18U3ceHeGElQLzJ7aDXa0LbFEkSL+DgAgCBpLAcqL+ohHE1Wvsw8tnsASelCeXS0EJfmhS0dN+adOxJEi/c4AIAgG3FwU14dT91wy60R+XdoIibqH57d08RfCd9Tc+/De2oSRIv2OACAIEkD872YWMN64SLSfMdZ1jsnzyE+d2cevRanox3LWDu2EkSL9TgAgCDt3szibsXENraIYdHKKSNO/U4nTLKPt2AJPpYAVeTbORJEi/Q4AIAgrv9eKk3+zZ3NadXmF6frwNwsy4EPak2yxkljOmwboNMSRIv6OAAnF2QSRIv6OAcxABJEi/o4CCEOEkQyBicKZCEECA1BAAUoIQxniScPZDIDEkEAECcPMQBnJxuL/WcnCjIGZ4knDmQyAxJBABAnDjEAZycZi/1nJwoyBmeJJx5kMgMSQQAQJx4xAGcnK4v9ZycKMgZniSccZDIDEkEAECccMQBnJyiL/WcnCjIGZ4knHWQyAxJBABAnHTEAZycpi/1nJwoyBmeJJx9kMgMSQQAUJx8xAGcnLIv9ZyghBWcnCjIGZ4kAiTYaAReIAAIiQ4oBAChkIQUSRIv/Iw1JQQAGi/8hCQwQRDEAK2RXACASSUAACjEAJwRkVwAgEhFJQAAKMQAnBWRXACASEUlAAAoxACcGZFcAIBIRSUAACjEAJwdkVwAgEhFJQAAKMQAnCGRXACASERRBAAEAi/8iEklBAAkrZFcAIDIDExBBAAwnEWQiCCcRTGdCAKqL/yEEEklBAAonBGRXACAyAxMQQQAMJxJkIggnEkxnQgCIi/8hBRJJQQAKJwVkVwAgMgMTEEEADCcTZCIIJxNMZ0IAZov/IQgSSUEACicGZFcAIDIDExBBAAwnFGQiCCcUTGdCAESL/yEHEklBAAonB2RXACAyAxMQQQAMJxVkIggnFUxnQgAii/8lEklBAAonCGRXACAyAxMQQQAMJxZkIggnFkxnQgABADEAK2RXACASSUEABichZCMSEEEABychImdCAJIxACcEZFcAIBJJQQAGJyJkIxIQQQAHJyIiZ0IAdTEAJwVkVwAgEklBAAYnI2QjEhBBAAcnIyJnQgBYMQAnBmRXACASSUEABickZCMSEEEAByckImdCADsxACcHZFcAIBJJQQAGJyVkIxIQQQAHJyUiZ0IAHjEAJwhkVwAgEklBAAYnJmQjEhBBAAcnJiJnQgABACcYZCIIJxhMZycYZCcQZBJBACAoIQhnJxgjZychI2cnIiNnJyMjZyckI2cnJSNnJyYjZ4mIAAIiQ4oAAClJKGQhCBJEKjIDZyOMADIGIQQYIxKMAScRZIsADUlAAA4nEWSLABJJQQADiwEQEUEADCorZFcAIGcnEWSMACcSZIsADUlAAA4nEmSLABJJQQADiwEQEUEADSonBGRXACBnJxJkjAAnE2SLAA1JQAAOJxNkiwASSUEAA4sBEBFBAA0qJwVkVwAgZycTZIwAJxRkiwANSUAADicUZIsAEklBAAOLARARQQANKicGZFcAIGcnFGSMACcVZIsADUlAAA4nFWSLABJJQQADiwEQEUEADSonB2RXACBnJxVkjAAnFmSLAA1JQAAOJxZkiwASSUEAA4sBEBFBAA0qJwhkVwAgZycWZIwAKmQyAxNEiwAjE0QqZCtkVwAgEkEACStkJw1cICtMZypkJwRkVwAgEkEACycEZCcNXCAnBExnKmQnBWRXACASQQALJwVkJw1cICcFTGcqZCcGZFcAIBJBAAsnBmQnDVwgJwZMZypkJwdkVwAgEkEACycHZCcNXCAnB0xnKmQnCGRXACASQQALJwhkJw1cICcITGcnEGQiCScQTGcnESNnJxIjZycTI2cnFCNnJxUjZycWI2coIQdniTYaAVcCAIgAAiJDigEAKUcCKGQhBxJEKmQxABJEJy2L/+ECjACLAIj29IwBiwGL/+ECjAKLAicbZBJBAA8nDzIDZyghBmcnCjIGZ4mLAicZZBJBAAUnDjIDZyoyA2cnEGQhBA5BAAooIQZnJwoyBmeJKCVnJwoyBmeJNhoBVwIAiAACIkOKAQAoZCUSRDEAJw9kEkQnL4v/ZycOZDIDEkEAByghCmdCAAQoIQlniTYaAVcCAIgAAiJDigEAKGQhCRJEMQAnDmQSRCcOZDIDE0QnLov/ZyghCmeJNhoCSRUkEkQ2GgFJFSQSRIgAAiJDigIAKShkIQoSRDEAJw9kEkSL/zIDE0SL/4v+UAGMAIsAJy9kEkSL/ytkVwAgEkEACycJK2RXACBnQgB9i/8nBGRXACASQQAMJwknBGRXACBnQgBli/8nBWRXACASQQAMJwknBWRXACBnQgBNi/8nBmRXACASQQAMJwknBmRXACBnQgA1i/8nB2RXACASQQAMJwknB2RXACBnQgAdi/8nCGRXACASQQAMJwknCGRXACBnQgAFJwkyA2cnDmQyAxJBAAcoIQtnQgAEKCEQZ4k2GgJJFSQSRDYaAUkVJBJEiAACIkOKAgApKGQhEBJEMQAnDmQSRCcMZDIDEkSL/zIDE0SL/4v+UAGMAIsAJy5kEkSL/ytkVwAgEkEACycMK2RXACBnQgB9i/8nBGRXACASQQAMJwwnBGRXACBnQgBli/8nBWRXACASQQAMJwwnBWRXACBnQgBNi/8nBmRXACASQQAMJwwnBmRXACBnQgA1i/8nB2RXACASQQAMJwwnB2RXACBnQgAdi/8nCGRXACASQQAMJwwnCGRXACBnQgAFJwwyA2coIQtniYgAAiJDigAAKGQhCxJEJwlkMgMSSUAACCcJZCcMZBIRQQAPJwkyA2cnDDIDZyghBWeJJwlkK2RXACASQQATKitkVwAgZytkJw1cICtMZ0IAsCcJZCcEZFcAIBJBABYqJwRkVwAgZycEZCcNXCAnBExnQgCNJwlkJwVkVwAgEkEAFionBWRXACBnJwVkJw1cICcFTGdCAGonCWQnBmRXACASQQAWKicGZFcAIGcnBmQnDVwgJwZMZ0IARycJZCcHZFcAIBJBABYqJwdkVwAgZycHZCcNXCAnB0xnQgAkJwlkJwhkVwAgEkEAFionCGRXACBnJwhkJw1cICcITGdCAAEAJxBkIgknEExnJwkyA2cnDDIDZycQZCEEDkEABSghBmeJKCERZ4k2GgFXAgCIAAIiQ4oBAClHAihkIRESRCpkMQASRCcti//hAowAiwCI8zaMAYsBi//hAowCiwInG2QSQQAPKCEGZycPMgNnJwoyBmeJiwInGWQSQQAFJw4yA2cqMgNnKCEFZycKMgZniYgAAiJDigAAKShkIQYSRIgBtyEPMgAJjACxIrIQiwCyCCtkVwAgsgcyALIBs7EishCLALIIJwRkVwAgsgcyALIBs7EishCLALIIJwVkVwAgsgcyALIBs7EishCLALIIJwZkVwAgsgcyALIBs7EishCLALIIJwdkVwAgsgcyALIBs7EishCLALIIJwhkVwAgsgcyALIBs4mIAAIiQ4oAAClHAihkIQwSRIgAjowAJwu8IQ8lHSOLABUkCh9ISEwURDIACYwBI4wCiwKLABUkCgxBAEMyDIGQAwxBABOxJbIQI7IBJzBJsh6yHyEHshmzsSKyEIsBsgiLADX/I4sCJAsINP9MJFiyBzIAsgGziwIiCIwCQv+yiYgAAiJDigAAMgYnCmQhBAgNRIgADRUkCiUMQQAEKCEMZ4mKAAEpKYwAJw9kMgMTQQANiwAnD2RQjAAnG2QBvCcOZDIDE0EADYsAJw5kUIwAJxlkAbwnHGQyAxNBAA2LACccZFCMACcoZAG8Jx1kMgMTQQANiwAnHWRQjAAnKWQBvCceZDIDE0EADYsAJx5kUIwAJytkAbwnH2QyAxNBAA2LACcfZFCMACcsZAG8iwCMAImKAAAnC7wnG2QBvCcZZAG8JytkAbwnKGQBvCcpZAG8JyxkAbyJiAACIkOKAAAoZCEGD0SxIrIQJypksgkjsgGziYAEuER7NjYaAI4B740AgARwzuobgASgF72MgATXcs28gAT1QLosgAT/Yw79gARU2SvjgASbB7+PgARPsSG7gATEI2FpgATunzYagAQLXnWFgATIZFh1gATtxIa7gAR3N2LlgAQ5le1qgATvZaaXgARq20U4gASoaD6egARQNjo4NhoAjhPvpO+48CzxFvEm8Vjy7/U+9175Jfmf+dP5//ri+7z84/1L/eL+YgCABCSHwyw2GgCOAf8rAA==","clear":"Cg=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":3,"minor":27,"patch":0,"commitHash":"f54f0997"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


/**
 * The argument types for the TownHall contract
 */
export type TownHallArgs = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication()void': Record<string, never>
    'dummyOpUp(uint64)uint64': {
      i: bigint | number
    }
    'dlog(byte[],byte[],byte[],byte[])bool': {
      g: Uint8Array
      x: Uint8Array
      v: Uint8Array
      z: Uint8Array
    }
    'hashPointToPoint(byte[])byte[]': {
      point: Uint8Array
    }
    'getGameState()uint64': Record<string, never>
    'setLSIGFunderAddress(address)void': {
      funderLSigAddress: string
    }
    'joinGameLobby(pay,byte[])void': {
      depositTxn: AppMethodCallTransactionArgument
      nizkDlog: Uint8Array
    }
    'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void': {
      msg: Uint8Array
      pkAll: Uint8Array
      keyImage: Uint8Array
      sig: Uint8Array
      challenges: Uint8Array
      funderLSigTxn: AppMethodCallTransactionArgument
      ringLSigTxn0: AppMethodCallTransactionArgument
      ringLSigTxn1: AppMethodCallTransactionArgument
      ringLSigTxn2: AppMethodCallTransactionArgument
      ringLSigTxn3: AppMethodCallTransactionArgument
      ringLSigTxn4: AppMethodCallTransactionArgument
      ringLSigTxn5: AppMethodCallTransactionArgument
    }
    'dayStageVote(uint64)void': {
      vote: bigint | number
    }
    'dayStageEliminate()void': Record<string, never>
    'dayStageUnmasking(byte[])void': {
      blsSk: Uint8Array
    }
    'nightStageMafiaCommit(byte[])void': {
      commitment: Uint8Array
    }
    'nightStageDoctorCommit(byte[])void': {
      commitment: Uint8Array
    }
    'dawnStageMafiaReveal(address,byte[32])void': {
      victimAim: string
      blinder: Uint8Array
    }
    'dawnStageDoctorReveal(address,byte[32])void': {
      patientAim: string
      blinder: Uint8Array
    }
    'dawnStageDeadOrSaved()void': Record<string, never>
    'dawnStageUnmasking(byte[])void': {
      blsSk: Uint8Array
    }
    'gameOver()void': Record<string, never>
    'handleAssignRolesTimeout()void': Record<string, never>
    'triggerTimeoutState()void': Record<string, never>
    'deleteApplication()void': Record<string, never>
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication()void': []
    'dummyOpUp(uint64)uint64': [i: bigint | number]
    'dlog(byte[],byte[],byte[],byte[])bool': [g: Uint8Array, x: Uint8Array, v: Uint8Array, z: Uint8Array]
    'hashPointToPoint(byte[])byte[]': [point: Uint8Array]
    'getGameState()uint64': []
    'setLSIGFunderAddress(address)void': [funderLSigAddress: string]
    'joinGameLobby(pay,byte[])void': [depositTxn: AppMethodCallTransactionArgument, nizkDlog: Uint8Array]
    'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void': [msg: Uint8Array, pkAll: Uint8Array, keyImage: Uint8Array, sig: Uint8Array, challenges: Uint8Array, funderLSigTxn: AppMethodCallTransactionArgument, ringLSigTxn0: AppMethodCallTransactionArgument, ringLSigTxn1: AppMethodCallTransactionArgument, ringLSigTxn2: AppMethodCallTransactionArgument, ringLSigTxn3: AppMethodCallTransactionArgument, ringLSigTxn4: AppMethodCallTransactionArgument, ringLSigTxn5: AppMethodCallTransactionArgument]
    'dayStageVote(uint64)void': [vote: bigint | number]
    'dayStageEliminate()void': []
    'dayStageUnmasking(byte[])void': [blsSk: Uint8Array]
    'nightStageMafiaCommit(byte[])void': [commitment: Uint8Array]
    'nightStageDoctorCommit(byte[])void': [commitment: Uint8Array]
    'dawnStageMafiaReveal(address,byte[32])void': [victimAim: string, blinder: Uint8Array]
    'dawnStageDoctorReveal(address,byte[32])void': [patientAim: string, blinder: Uint8Array]
    'dawnStageDeadOrSaved()void': []
    'dawnStageUnmasking(byte[])void': [blsSk: Uint8Array]
    'gameOver()void': []
    'handleAssignRolesTimeout()void': []
    'triggerTimeoutState()void': []
    'deleteApplication()void': []
  }
}

/**
 * The return type for each method
 */
export type TownHallReturns = {
  'createApplication()void': void
  'dummyOpUp(uint64)uint64': bigint
  'dlog(byte[],byte[],byte[],byte[])bool': boolean
  'hashPointToPoint(byte[])byte[]': Uint8Array
  'getGameState()uint64': bigint
  'setLSIGFunderAddress(address)void': void
  'joinGameLobby(pay,byte[])void': void
  'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void': void
  'dayStageVote(uint64)void': void
  'dayStageEliminate()void': void
  'dayStageUnmasking(byte[])void': void
  'nightStageMafiaCommit(byte[])void': void
  'nightStageDoctorCommit(byte[])void': void
  'dawnStageMafiaReveal(address,byte[32])void': void
  'dawnStageDoctorReveal(address,byte[32])void': void
  'dawnStageDeadOrSaved()void': void
  'dawnStageUnmasking(byte[])void': void
  'gameOver()void': void
  'handleAssignRolesTimeout()void': void
  'triggerTimeoutState()void': void
  'deleteApplication()void': void
}

/**
 * Defines the types of available calls and state of the TownHall smart contract.
 */
export type TownHallTypes = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication()void' | 'createApplication', {
      argsObj: TownHallArgs['obj']['createApplication()void']
      argsTuple: TownHallArgs['tuple']['createApplication()void']
      returns: TownHallReturns['createApplication()void']
    }>
    & Record<'dummyOpUp(uint64)uint64' | 'dummyOpUp', {
      argsObj: TownHallArgs['obj']['dummyOpUp(uint64)uint64']
      argsTuple: TownHallArgs['tuple']['dummyOpUp(uint64)uint64']
      /**
       * the number (but we do nothing with it)
       */
      returns: TownHallReturns['dummyOpUp(uint64)uint64']
    }>
    & Record<'dlog(byte[],byte[],byte[],byte[])bool' | 'dlog', {
      argsObj: TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool']
      argsTuple: TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']
      returns: TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool']
    }>
    & Record<'hashPointToPoint(byte[])byte[]' | 'hashPointToPoint', {
      argsObj: TownHallArgs['obj']['hashPointToPoint(byte[])byte[]']
      argsTuple: TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']
      returns: TownHallReturns['hashPointToPoint(byte[])byte[]']
    }>
    & Record<'getGameState()uint64' | 'getGameState', {
      argsObj: TownHallArgs['obj']['getGameState()uint64']
      argsTuple: TownHallArgs['tuple']['getGameState()uint64']
      returns: TownHallReturns['getGameState()uint64']
    }>
    & Record<'setLSIGFunderAddress(address)void' | 'setLSIGFunderAddress', {
      argsObj: TownHallArgs['obj']['setLSIGFunderAddress(address)void']
      argsTuple: TownHallArgs['tuple']['setLSIGFunderAddress(address)void']
      returns: TownHallReturns['setLSIGFunderAddress(address)void']
    }>
    & Record<'joinGameLobby(pay,byte[])void' | 'joinGameLobby', {
      argsObj: TownHallArgs['obj']['joinGameLobby(pay,byte[])void']
      argsTuple: TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']
      returns: TownHallReturns['joinGameLobby(pay,byte[])void']
    }>
    & Record<'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void' | 'assignRole', {
      argsObj: TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']
      argsTuple: TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']
      returns: TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']
    }>
    & Record<'dayStageVote(uint64)void' | 'dayStageVote', {
      argsObj: TownHallArgs['obj']['dayStageVote(uint64)void']
      argsTuple: TownHallArgs['tuple']['dayStageVote(uint64)void']
      returns: TownHallReturns['dayStageVote(uint64)void']
    }>
    & Record<'dayStageEliminate()void' | 'dayStageEliminate', {
      argsObj: TownHallArgs['obj']['dayStageEliminate()void']
      argsTuple: TownHallArgs['tuple']['dayStageEliminate()void']
      returns: TownHallReturns['dayStageEliminate()void']
    }>
    & Record<'dayStageUnmasking(byte[])void' | 'dayStageUnmasking', {
      argsObj: TownHallArgs['obj']['dayStageUnmasking(byte[])void']
      argsTuple: TownHallArgs['tuple']['dayStageUnmasking(byte[])void']
      returns: TownHallReturns['dayStageUnmasking(byte[])void']
    }>
    & Record<'nightStageMafiaCommit(byte[])void' | 'nightStageMafiaCommit', {
      argsObj: TownHallArgs['obj']['nightStageMafiaCommit(byte[])void']
      argsTuple: TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']
      returns: TownHallReturns['nightStageMafiaCommit(byte[])void']
    }>
    & Record<'nightStageDoctorCommit(byte[])void' | 'nightStageDoctorCommit', {
      argsObj: TownHallArgs['obj']['nightStageDoctorCommit(byte[])void']
      argsTuple: TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']
      returns: TownHallReturns['nightStageDoctorCommit(byte[])void']
    }>
    & Record<'dawnStageMafiaReveal(address,byte[32])void' | 'dawnStageMafiaReveal', {
      argsObj: TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void']
      argsTuple: TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']
      returns: TownHallReturns['dawnStageMafiaReveal(address,byte[32])void']
    }>
    & Record<'dawnStageDoctorReveal(address,byte[32])void' | 'dawnStageDoctorReveal', {
      argsObj: TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void']
      argsTuple: TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']
      returns: TownHallReturns['dawnStageDoctorReveal(address,byte[32])void']
    }>
    & Record<'dawnStageDeadOrSaved()void' | 'dawnStageDeadOrSaved', {
      argsObj: TownHallArgs['obj']['dawnStageDeadOrSaved()void']
      argsTuple: TownHallArgs['tuple']['dawnStageDeadOrSaved()void']
      returns: TownHallReturns['dawnStageDeadOrSaved()void']
    }>
    & Record<'dawnStageUnmasking(byte[])void' | 'dawnStageUnmasking', {
      argsObj: TownHallArgs['obj']['dawnStageUnmasking(byte[])void']
      argsTuple: TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']
      returns: TownHallReturns['dawnStageUnmasking(byte[])void']
    }>
    & Record<'gameOver()void' | 'gameOver', {
      argsObj: TownHallArgs['obj']['gameOver()void']
      argsTuple: TownHallArgs['tuple']['gameOver()void']
      returns: TownHallReturns['gameOver()void']
    }>
    & Record<'handleAssignRolesTimeout()void' | 'handleAssignRolesTimeout', {
      argsObj: TownHallArgs['obj']['handleAssignRolesTimeout()void']
      argsTuple: TownHallArgs['tuple']['handleAssignRolesTimeout()void']
      returns: TownHallReturns['handleAssignRolesTimeout()void']
    }>
    & Record<'triggerTimeoutState()void' | 'triggerTimeoutState', {
      argsObj: TownHallArgs['obj']['triggerTimeoutState()void']
      argsTuple: TownHallArgs['tuple']['triggerTimeoutState()void']
      returns: TownHallReturns['triggerTimeoutState()void']
    }>
    & Record<'deleteApplication()void' | 'deleteApplication', {
      argsObj: TownHallArgs['obj']['deleteApplication()void']
      argsTuple: TownHallArgs['tuple']['deleteApplication()void']
      returns: TownHallReturns['deleteApplication()void']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        creatorAddress: string
        player1AlgoAddr: [string, bigint]
        player2AlgoAddr: [string, bigint]
        player3AlgoAddr: [string, bigint]
        player4AlgoAddr: [string, bigint]
        player5AlgoAddr: [string, bigint]
        player6AlgoAddr: [string, bigint]
        mafia: string
        mafiaKeyImage: BinaryState
        doctor: string
        doctorKeyImage: BinaryState
        farmer: string
        farmerKeyImage: BinaryState
        butcher: string
        butcherKeyImage: BinaryState
        innkeep: string
        innkeepKeyImage: BinaryState
        grocer: string
        grocerKeyImage: BinaryState
        lsigFunderAddress: string
        player1HasVoted: bigint
        player1ReceivedVotes: bigint
        player2HasVoted: bigint
        player2ReceivedVotes: bigint
        player3HasVoted: bigint
        player3ReceivedVotes: bigint
        player4HasVoted: bigint
        player4ReceivedVotes: bigint
        player5HasVoted: bigint
        player5ReceivedVotes: bigint
        player6HasVoted: bigint
        player6ReceivedVotes: bigint
        playersVoted: bigint
        playersAlive: bigint
        justEliminatedPlayer: string
        mafiaCommitment: BinaryState
        doctorCommitment: BinaryState
        mafiaVictim: string
        doctorPatient: string
        playersJoined: bigint
        gameState: bigint
        lastCommitedRound: bigint
      }
      maps: {}
    }
    box: {
      keys: {}
      maps: {
        quickAccessPkBoxes: Map<bigint | number, Uint8Array>
        hashFilter: Map<Uint8Array | string, Uint8Array>
      }
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type TownHallSignatures = keyof TownHallTypes['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type TownHallNonVoidMethodSignatures = keyof TownHallTypes['methods'] extends infer T ? T extends keyof TownHallTypes['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the TownHall smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends TownHallSignatures> = TownHallTypes['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the TownHall smart contract to the method's return type
 */
export type MethodReturn<TSignature extends TownHallSignatures> = TownHallTypes['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = TownHallTypes['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = TownHallTypes['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type TownHallCreateCallParams =
  | Expand<CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & {method: 'createApplication()void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines supported delete method params for this smart contract
 */
export type TownHallDeleteCallParams =
  | Expand<CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication'}>
  | Expand<CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication()void'}>
/**
 * Defines arguments required for the deploy method.
 */
export type TownHallDeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: TownHallCreateCallParams
  /**
   * Delete transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  deleteParams?: TownHallDeleteCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the TownHall smart contract
 */
export abstract class TownHallParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends TownHallCreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication()void':
            return TownHallParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the TownHall smart contract using the createApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Gets available delete ABI call param factories
   */
  static get delete() {
    return {
      _resolveByMethod<TParams extends TownHallDeleteCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'deleteApplication':
          case 'deleteApplication()void':
            return TownHallParamsFactory.delete.deleteApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs delete ABI call params for the TownHall smart contract using the deleteApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      deleteApplication(params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']>): AppClientMethodCallParams {
        return {
          ...params,
          method: 'deleteApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the dummyOpUp(uint64)uint64 ABI method
   *
  * Dummy Op Up
  Dummy operation to get more opcode budget
  - The number to return, necssary to deduplicate the name

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dummyOpUp(params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dummyOpUp(uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.i],
    }
  }
  /**
   * Constructs a no op call for the dlog(byte[],byte[],byte[],byte[])bool ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dlog(params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dlog(byte[],byte[],byte[],byte[])bool' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.g, params.args.x, params.args.v, params.args.z],
    }
  }
  /**
   * Constructs a no op call for the hashPointToPoint(byte[])byte[] ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hashPointToPoint(params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hashPointToPoint(byte[])byte[]' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.point],
    }
  }
  /**
   * Constructs a no op call for the getGameState()uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getGameState(params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getGameState()uint64' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the setLSIGFunderAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setLsigFunderAddress(params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setLSIGFunderAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.funderLSigAddress],
    }
  }
  /**
   * Constructs a no op call for the joinGameLobby(pay,byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static joinGameLobby(params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'joinGameLobby(pay,byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.depositTxn, params.args.nizkDlog],
    }
  }
  /**
   * Constructs a no op call for the assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static assignRole(params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.msg, params.args.pkAll, params.args.keyImage, params.args.sig, params.args.challenges, params.args.funderLSigTxn, params.args.ringLSigTxn0, params.args.ringLSigTxn1, params.args.ringLSigTxn2, params.args.ringLSigTxn3, params.args.ringLSigTxn4, params.args.ringLSigTxn5],
    }
  }
  /**
   * Constructs a no op call for the dayStageVote(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageVote(params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageVote(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.vote],
    }
  }
  /**
   * Constructs a no op call for the dayStageEliminate()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageEliminate(params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageEliminate()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the dayStageUnmasking(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageUnmasking(params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageUnmasking(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.blsSk],
    }
  }
  /**
   * Constructs a no op call for the nightStageMafiaCommit(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static nightStageMafiaCommit(params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'nightStageMafiaCommit(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.commitment],
    }
  }
  /**
   * Constructs a no op call for the nightStageDoctorCommit(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static nightStageDoctorCommit(params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'nightStageDoctorCommit(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.commitment],
    }
  }
  /**
   * Constructs a no op call for the dawnStageMafiaReveal(address,byte[32])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageMafiaReveal(params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageMafiaReveal(address,byte[32])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.victimAim, params.args.blinder],
    }
  }
  /**
   * Constructs a no op call for the dawnStageDoctorReveal(address,byte[32])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageDoctorReveal(params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageDoctorReveal(address,byte[32])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.patientAim, params.args.blinder],
    }
  }
  /**
   * Constructs a no op call for the dawnStageDeadOrSaved()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageDeadOrSaved(params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageDeadOrSaved()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the dawnStageUnmasking(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageUnmasking(params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageUnmasking(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.blsSk],
    }
  }
  /**
   * Constructs a no op call for the gameOver()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static gameOver(params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'gameOver()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the handleAssignRolesTimeout()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static handleAssignRolesTimeout(params: CallParams<TownHallArgs['obj']['handleAssignRolesTimeout()void'] | TownHallArgs['tuple']['handleAssignRolesTimeout()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'handleAssignRolesTimeout()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the triggerTimeoutState()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static triggerTimeoutState(params: CallParams<TownHallArgs['obj']['triggerTimeoutState()void'] | TownHallArgs['tuple']['triggerTimeoutState()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'triggerTimeoutState()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the TownHall smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class TownHallFactory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `TownHallFactory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new TownHallClient(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new TownHallClient(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the TownHall smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: TownHallDeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? TownHallParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (TownHallCreateCallParams & { args: Uint8Array[] }) : undefined,
      deleteParams: params.deleteParams?.method ? TownHallParamsFactory.delete._resolveByMethod(params.deleteParams) : params.deleteParams ? params.deleteParams as (TownHallDeleteCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new TownHallClient(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.params.create(TownHallParamsFactory.create.createApplication(params))
      },
    },

    /**
     * Gets available deployDelete methods
     */
    deployDelete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the deleteApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The deployDelete params
       */
      deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appFactory.params.deployDelete(TownHallParamsFactory.delete.deleteApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.createTransaction.create(TownHallParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using an ABI method call using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        const result = await this.appFactory.send.create(TownHallParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | TownHallReturns['createApplication()void']) }, appClient: new TownHallClient(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the TownHall smart contract
 */
export class TownHallClient {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `TownHallClient`
   *
   * @param appClient An `AppClient` instance which has been created with the TownHall app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `TownHallClient`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends TownHallNonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `TownHallClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<TownHallClient> {
    return new TownHallClient(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `TownHallClient` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<TownHallClient> {
    return new TownHallClient(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete params
       */
      deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.params.delete(TownHallParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call params: the number (but we do nothing with it)
     */
    dummyOpUp: (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dummyOpUp(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dlog: (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dlog(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hashPointToPoint: (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.hashPointToPoint(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getGameState: (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.getGameState(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `setLSIGFunderAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setLsigFunderAddress: (params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.setLsigFunderAddress(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(pay,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    joinGameLobby: (params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.joinGameLobby(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    assignRole: (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.assignRole(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageVote: (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageVote(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageEliminate: (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageEliminate(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageUnmasking: (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    nightStageMafiaCommit: (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.nightStageMafiaCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    nightStageDoctorCommit: (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.nightStageDoctorCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageMafiaReveal: (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageDoctorReveal: (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageDeadOrSaved: (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageUnmasking: (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    gameOver: (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.gameOver(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `handleAssignRolesTimeout()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    handleAssignRolesTimeout: (params: CallParams<TownHallArgs['obj']['handleAssignRolesTimeout()void'] | TownHallArgs['tuple']['handleAssignRolesTimeout()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.handleAssignRolesTimeout(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `triggerTimeoutState()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    triggerTimeoutState: (params: CallParams<TownHallArgs['obj']['triggerTimeoutState()void'] | TownHallArgs['tuple']['triggerTimeoutState()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.triggerTimeoutState(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete transaction
       */
      deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.createTransaction.delete(TownHallParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call transaction: the number (but we do nothing with it)
     */
    dummyOpUp: (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dummyOpUp(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dlog: (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dlog(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hashPointToPoint: (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.hashPointToPoint(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getGameState: (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.getGameState(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `setLSIGFunderAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setLsigFunderAddress: (params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.setLsigFunderAddress(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(pay,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    joinGameLobby: (params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.joinGameLobby(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    assignRole: (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.assignRole(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageVote: (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageVote(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageEliminate: (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageEliminate(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageUnmasking: (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    nightStageMafiaCommit: (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.nightStageMafiaCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    nightStageDoctorCommit: (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.nightStageDoctorCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageMafiaReveal: (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageDoctorReveal: (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageDeadOrSaved: (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageUnmasking: (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    gameOver: (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.gameOver(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `handleAssignRolesTimeout()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    handleAssignRolesTimeout: (params: CallParams<TownHallArgs['obj']['handleAssignRolesTimeout()void'] | TownHallArgs['tuple']['handleAssignRolesTimeout()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.handleAssignRolesTimeout(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `triggerTimeoutState()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    triggerTimeoutState: (params: CallParams<TownHallArgs['obj']['triggerTimeoutState()void'] | TownHallArgs['tuple']['triggerTimeoutState()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.triggerTimeoutState(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete result
       */
      deleteApplication: async (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> & SendParams = {args: []}) => {
        const result = await this.appClient.send.delete(TownHallParamsFactory.delete.deleteApplication(params))
        return {...result, return: result.return as unknown as (undefined | TownHallReturns['deleteApplication()void'])}
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call result: the number (but we do nothing with it)
     */
    dummyOpUp: async (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dummyOpUp(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dummyOpUp(uint64)uint64'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dlog: async (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dlog(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hashPointToPoint: async (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.hashPointToPoint(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['hashPointToPoint(byte[])byte[]'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getGameState: async (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.getGameState(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['getGameState()uint64'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `setLSIGFunderAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setLsigFunderAddress: async (params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.setLsigFunderAddress(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['setLSIGFunderAddress(address)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(pay,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    joinGameLobby: async (params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.joinGameLobby(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['joinGameLobby(pay,byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    assignRole: async (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.assignRole(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageVote: async (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageVote(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageVote(uint64)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageEliminate: async (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageEliminate(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageEliminate()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageUnmasking: async (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageUnmasking(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageUnmasking(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    nightStageMafiaCommit: async (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.nightStageMafiaCommit(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['nightStageMafiaCommit(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    nightStageDoctorCommit: async (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.nightStageDoctorCommit(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['nightStageDoctorCommit(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageMafiaReveal: async (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageMafiaReveal(address,byte[32])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageDoctorReveal: async (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageDoctorReveal(address,byte[32])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageDeadOrSaved: async (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageDeadOrSaved()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageUnmasking: async (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageUnmasking(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageUnmasking(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    gameOver: async (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.gameOver(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['gameOver()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `handleAssignRolesTimeout()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    handleAssignRolesTimeout: async (params: CallParams<TownHallArgs['obj']['handleAssignRolesTimeout()void'] | TownHallArgs['tuple']['handleAssignRolesTimeout()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.handleAssignRolesTimeout(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['handleAssignRolesTimeout()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `triggerTimeoutState()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    triggerTimeoutState: async (params: CallParams<TownHallArgs['obj']['triggerTimeoutState()void'] | TownHallArgs['tuple']['triggerTimeoutState()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.triggerTimeoutState(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['triggerTimeoutState()void'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new TownHallClient(this.appClient.clone(params))
  }

  /**
   * Methods to access state for the current TownHall app
   */
  state = {
    /**
     * Methods to access global state for the current TownHall app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          creatorAddress: result.creatorAddress,
          player1AlgoAddr: result.player1AlgoAddr,
          player2AlgoAddr: result.player2AlgoAddr,
          player3AlgoAddr: result.player3AlgoAddr,
          player4AlgoAddr: result.player4AlgoAddr,
          player5AlgoAddr: result.player5AlgoAddr,
          player6AlgoAddr: result.player6AlgoAddr,
          mafia: result.mafia,
          mafiaKeyImage: new BinaryStateValue(result.mafiaKeyImage),
          doctor: result.doctor,
          doctorKeyImage: new BinaryStateValue(result.doctorKeyImage),
          farmer: result.farmer,
          farmerKeyImage: new BinaryStateValue(result.farmerKeyImage),
          butcher: result.butcher,
          butcherKeyImage: new BinaryStateValue(result.butcherKeyImage),
          innkeep: result.innkeep,
          innkeepKeyImage: new BinaryStateValue(result.innkeepKeyImage),
          grocer: result.grocer,
          grocerKeyImage: new BinaryStateValue(result.grocerKeyImage),
          lsigFunderAddress: result.lsigFunderAddress,
          player1HasVoted: result.player1HasVoted,
          player1ReceivedVotes: result.player1ReceivedVotes,
          player2HasVoted: result.player2HasVoted,
          player2ReceivedVotes: result.player2ReceivedVotes,
          player3HasVoted: result.player3HasVoted,
          player3ReceivedVotes: result.player3ReceivedVotes,
          player4HasVoted: result.player4HasVoted,
          player4ReceivedVotes: result.player4ReceivedVotes,
          player5HasVoted: result.player5HasVoted,
          player5ReceivedVotes: result.player5ReceivedVotes,
          player6HasVoted: result.player6HasVoted,
          player6ReceivedVotes: result.player6ReceivedVotes,
          playersVoted: result.playersVoted,
          playersAlive: result.playersAlive,
          justEliminatedPlayer: result.justEliminatedPlayer,
          mafiaCommitment: new BinaryStateValue(result.mafiaCommitment),
          doctorCommitment: new BinaryStateValue(result.doctorCommitment),
          mafiaVictim: result.mafiaVictim,
          doctorPatient: result.doctorPatient,
          playersJoined: result.playersJoined,
          gameState: result.gameState,
          lastCommitedRound: result.lastCommitedRound,
        }
      },
      /**
       * Get the current value of the creatorAddress key in global state
       */
      creatorAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("creatorAddress")) as string | undefined },
      /**
       * Get the current value of the player1AlgoAddr key in global state
       */
      player1AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player1AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player2AlgoAddr key in global state
       */
      player2AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player2AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player3AlgoAddr key in global state
       */
      player3AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player3AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player4AlgoAddr key in global state
       */
      player4AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player4AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player5AlgoAddr key in global state
       */
      player5AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player5AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player6AlgoAddr key in global state
       */
      player6AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player6AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the mafia key in global state
       */
      mafia: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("mafia")) as string | undefined },
      /**
       * Get the current value of the mafiaKeyImage key in global state
       */
      mafiaKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("mafiaKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the doctor key in global state
       */
      doctor: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("doctor")) as string | undefined },
      /**
       * Get the current value of the doctorKeyImage key in global state
       */
      doctorKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("doctorKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the farmer key in global state
       */
      farmer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("farmer")) as string | undefined },
      /**
       * Get the current value of the farmerKeyImage key in global state
       */
      farmerKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("farmerKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the butcher key in global state
       */
      butcher: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("butcher")) as string | undefined },
      /**
       * Get the current value of the butcherKeyImage key in global state
       */
      butcherKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("butcherKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the innkeep key in global state
       */
      innkeep: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("innkeep")) as string | undefined },
      /**
       * Get the current value of the innkeepKeyImage key in global state
       */
      innkeepKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("innkeepKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the grocer key in global state
       */
      grocer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("grocer")) as string | undefined },
      /**
       * Get the current value of the grocerKeyImage key in global state
       */
      grocerKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("grocerKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the lsigFunderAddress key in global state
       */
      lsigFunderAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("lsigFunderAddress")) as string | undefined },
      /**
       * Get the current value of the player1HasVoted key in global state
       */
      player1HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player1HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player1ReceivedVotes key in global state
       */
      player1ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player1ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player2HasVoted key in global state
       */
      player2HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player2HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player2ReceivedVotes key in global state
       */
      player2ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player2ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player3HasVoted key in global state
       */
      player3HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player3HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player3ReceivedVotes key in global state
       */
      player3ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player3ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player4HasVoted key in global state
       */
      player4HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player4HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player4ReceivedVotes key in global state
       */
      player4ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player4ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player5HasVoted key in global state
       */
      player5HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player5HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player5ReceivedVotes key in global state
       */
      player5ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player5ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player6HasVoted key in global state
       */
      player6HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player6HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player6ReceivedVotes key in global state
       */
      player6ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player6ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the playersVoted key in global state
       */
      playersVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersVoted")) as bigint | undefined },
      /**
       * Get the current value of the playersAlive key in global state
       */
      playersAlive: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersAlive")) as bigint | undefined },
      /**
       * Get the current value of the justEliminatedPlayer key in global state
       */
      justEliminatedPlayer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("justEliminatedPlayer")) as string | undefined },
      /**
       * Get the current value of the mafiaCommitment key in global state
       */
      mafiaCommitment: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("mafiaCommitment")) as Uint8Array | undefined) },
      /**
       * Get the current value of the doctorCommitment key in global state
       */
      doctorCommitment: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("doctorCommitment")) as Uint8Array | undefined) },
      /**
       * Get the current value of the mafiaVictim key in global state
       */
      mafiaVictim: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("mafiaVictim")) as string | undefined },
      /**
       * Get the current value of the doctorPatient key in global state
       */
      doctorPatient: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("doctorPatient")) as string | undefined },
      /**
       * Get the current value of the playersJoined key in global state
       */
      playersJoined: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersJoined")) as bigint | undefined },
      /**
       * Get the current value of the gameState key in global state
       */
      gameState: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("gameState")) as bigint | undefined },
      /**
       * Get the current value of the lastCommitedRound key in global state
       */
      lastCommitedRound: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("lastCommitedRound")) as bigint | undefined },
    },
    /**
     * Methods to access box state for the current TownHall app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
        }
      },
      /**
       * Get values from the quickAccessPKBoxes map in box state
       */
      quickAccessPkBoxes: {
        /**
         * Get all current values of the quickAccessPKBoxes map in box state
         */
        getMap: async (): Promise<Map<bigint, Uint8Array>> => { return (await this.appClient.state.box.getMap("quickAccessPKBoxes")) as Map<bigint, Uint8Array> },
        /**
         * Get a current value of the quickAccessPKBoxes map by key from box state
         */
        value: async (key: bigint | number): Promise<Uint8Array | undefined> => { return await this.appClient.state.box.getMapValue("quickAccessPKBoxes", key) as Uint8Array | undefined },
      },
      /**
       * Get values from the hashFilter map in box state
       */
      hashFilter: {
        /**
         * Get all current values of the hashFilter map in box state
         */
        getMap: async (): Promise<Map<Uint8Array, Uint8Array>> => { return (await this.appClient.state.box.getMap("hashFilter")) as Map<Uint8Array, Uint8Array> },
        /**
         * Get a current value of the hashFilter map by key from box state
         */
        value: async (key: Uint8Array | string): Promise<Uint8Array | undefined> => { return await this.appClient.state.box.getMapValue("hashFilter", key) as Uint8Array | undefined },
      },
    },
  }

  public newGroup(): TownHallComposer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a dummyOpUp(uint64)uint64 method call against the TownHall contract
       */
      dummyOpUp(params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dummyOpUp(params)))
        resultMappers.push((v) => client.decodeReturnValue('dummyOpUp(uint64)uint64', v))
        return this
      },
      /**
       * Add a dlog(byte[],byte[],byte[],byte[])bool method call against the TownHall contract
       */
      dlog(params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dlog(params)))
        resultMappers.push((v) => client.decodeReturnValue('dlog(byte[],byte[],byte[],byte[])bool', v))
        return this
      },
      /**
       * Add a hashPointToPoint(byte[])byte[] method call against the TownHall contract
       */
      hashPointToPoint(params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hashPointToPoint(params)))
        resultMappers.push((v) => client.decodeReturnValue('hashPointToPoint(byte[])byte[]', v))
        return this
      },
      /**
       * Add a getGameState()uint64 method call against the TownHall contract
       */
      getGameState(params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getGameState(params)))
        resultMappers.push((v) => client.decodeReturnValue('getGameState()uint64', v))
        return this
      },
      /**
       * Add a setLSIGFunderAddress(address)void method call against the TownHall contract
       */
      setLsigFunderAddress(params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setLsigFunderAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a joinGameLobby(pay,byte[])void method call against the TownHall contract
       */
      joinGameLobby(params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.joinGameLobby(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void method call against the TownHall contract
       */
      assignRole(params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.assignRole(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageVote(uint64)void method call against the TownHall contract
       */
      dayStageVote(params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageVote(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageEliminate()void method call against the TownHall contract
       */
      dayStageEliminate(params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageEliminate(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageUnmasking(byte[])void method call against the TownHall contract
       */
      dayStageUnmasking(params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageUnmasking(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a nightStageMafiaCommit(byte[])void method call against the TownHall contract
       */
      nightStageMafiaCommit(params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.nightStageMafiaCommit(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a nightStageDoctorCommit(byte[])void method call against the TownHall contract
       */
      nightStageDoctorCommit(params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.nightStageDoctorCommit(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageMafiaReveal(address,byte[32])void method call against the TownHall contract
       */
      dawnStageMafiaReveal(params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageMafiaReveal(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageDoctorReveal(address,byte[32])void method call against the TownHall contract
       */
      dawnStageDoctorReveal(params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageDoctorReveal(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageDeadOrSaved()void method call against the TownHall contract
       */
      dawnStageDeadOrSaved(params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageDeadOrSaved(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageUnmasking(byte[])void method call against the TownHall contract
       */
      dawnStageUnmasking(params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageUnmasking(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a gameOver()void method call against the TownHall contract
       */
      gameOver(params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.gameOver(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a handleAssignRolesTimeout()void method call against the TownHall contract
       */
      handleAssignRolesTimeout(params: CallParams<TownHallArgs['obj']['handleAssignRolesTimeout()void'] | TownHallArgs['tuple']['handleAssignRolesTimeout()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.handleAssignRolesTimeout(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a triggerTimeoutState()void method call against the TownHall contract
       */
      triggerTimeoutState(params: CallParams<TownHallArgs['obj']['triggerTimeoutState()void'] | TownHallArgs['tuple']['triggerTimeoutState()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.triggerTimeoutState(params)))
        resultMappers.push(undefined)
        return this
      },
      get delete() {
        return {
          deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']>) => {
            promiseChain = promiseChain.then(async () => composer.addAppDeleteMethodCall(await client.params.delete.deleteApplication(params)))
            resultMappers.push(undefined)
            return this
          },
        }
      },
      /**
       * Add a clear state call to the TownHall contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as TownHallComposer
  }
}
export type TownHallComposer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the dummyOpUp(uint64)uint64 ABI method.
   *
  * Dummy Op Up
  Dummy operation to get more opcode budget
  - The number to return, necssary to deduplicate the name

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dummyOpUp(params?: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']>): TownHallComposer<[...TReturns, TownHallReturns['dummyOpUp(uint64)uint64'] | undefined]>

  /**
   * Calls the dlog(byte[],byte[],byte[],byte[])bool ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dlog(params?: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']>): TownHallComposer<[...TReturns, TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool'] | undefined]>

  /**
   * Calls the hashPointToPoint(byte[])byte[] ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hashPointToPoint(params?: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']>): TownHallComposer<[...TReturns, TownHallReturns['hashPointToPoint(byte[])byte[]'] | undefined]>

  /**
   * Calls the getGameState()uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getGameState(params?: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']>): TownHallComposer<[...TReturns, TownHallReturns['getGameState()uint64'] | undefined]>

  /**
   * Calls the setLSIGFunderAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setLsigFunderAddress(params?: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']>): TownHallComposer<[...TReturns, TownHallReturns['setLSIGFunderAddress(address)void'] | undefined]>

  /**
   * Calls the joinGameLobby(pay,byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  joinGameLobby(params?: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['joinGameLobby(pay,byte[])void'] | undefined]>

  /**
   * Calls the assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  assignRole(params?: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']>): TownHallComposer<[...TReturns, TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | undefined]>

  /**
   * Calls the dayStageVote(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageVote(params?: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageVote(uint64)void'] | undefined]>

  /**
   * Calls the dayStageEliminate()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageEliminate(params?: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageEliminate()void'] | undefined]>

  /**
   * Calls the dayStageUnmasking(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageUnmasking(params?: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageUnmasking(byte[])void'] | undefined]>

  /**
   * Calls the nightStageMafiaCommit(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  nightStageMafiaCommit(params?: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['nightStageMafiaCommit(byte[])void'] | undefined]>

  /**
   * Calls the nightStageDoctorCommit(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  nightStageDoctorCommit(params?: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['nightStageDoctorCommit(byte[])void'] | undefined]>

  /**
   * Calls the dawnStageMafiaReveal(address,byte[32])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageMafiaReveal(params?: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageMafiaReveal(address,byte[32])void'] | undefined]>

  /**
   * Calls the dawnStageDoctorReveal(address,byte[32])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageDoctorReveal(params?: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageDoctorReveal(address,byte[32])void'] | undefined]>

  /**
   * Calls the dawnStageDeadOrSaved()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageDeadOrSaved(params?: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageDeadOrSaved()void'] | undefined]>

  /**
   * Calls the dawnStageUnmasking(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageUnmasking(params?: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageUnmasking(byte[])void'] | undefined]>

  /**
   * Calls the gameOver()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  gameOver(params?: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']>): TownHallComposer<[...TReturns, TownHallReturns['gameOver()void'] | undefined]>

  /**
   * Calls the handleAssignRolesTimeout()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  handleAssignRolesTimeout(params?: CallParams<TownHallArgs['obj']['handleAssignRolesTimeout()void'] | TownHallArgs['tuple']['handleAssignRolesTimeout()void']>): TownHallComposer<[...TReturns, TownHallReturns['handleAssignRolesTimeout()void'] | undefined]>

  /**
   * Calls the triggerTimeoutState()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  triggerTimeoutState(params?: CallParams<TownHallArgs['obj']['triggerTimeoutState()void'] | TownHallArgs['tuple']['triggerTimeoutState()void']>): TownHallComposer<[...TReturns, TownHallReturns['triggerTimeoutState()void'] | undefined]>

  /**
   * Gets available delete methods
   */
  readonly delete: {
    /**
     * Deletes an existing instance of the TownHall smart contract using the deleteApplication()void ABI method.
     *
     * @param args The arguments for the smart contract call
     * @param params Any additional parameters for the call
     * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
     */
    deleteApplication(params?: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']>): TownHallComposer<[...TReturns, TownHallReturns['deleteApplication()void'] | undefined]>
  }

  /**
   * Makes a clear_state call to an existing instance of the TownHall smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): TownHallComposer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): TownHallComposer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): TransactionComposer
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<TownHallComposerResults<TReturns>>
}
export type TownHallComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

