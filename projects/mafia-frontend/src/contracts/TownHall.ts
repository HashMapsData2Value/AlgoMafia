/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { AlgorandClientInterface } from '@algorandfoundation/algokit-utils/types/algorand-client-interface'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"TownHall","desc":"","methods":[{"name":"createApplication","args":[],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"dummyOpUp","desc":"Dummy Op Up\nDummy operation to get more opcode budget\n - The number to return, necssary to deduplicate the name","args":[{"name":"i","type":"uint64"}],"returns":{"type":"uint64","desc":"the number (but we do nothing with it)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dlog","args":[{"name":"g","type":"byte[]"},{"name":"x","type":"byte[]"},{"name":"v","type":"byte[]"},{"name":"z","type":"byte[]"}],"returns":{"type":"bool"},"actions":{"create":[],"call":["NoOp"]}},{"name":"hashPointToPoint","args":[{"name":"point","type":"byte[]"}],"returns":{"type":"byte[]"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getGameState","args":[],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setLSIGFunderAddress","args":[{"name":"funderLSigAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"joinGameLobby","args":[{"name":"depositTxn","type":"pay"},{"name":"NIZK_DLOG","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"assignRole","args":[{"name":"msg","type":"byte[]"},{"name":"pkAll","type":"byte[]"},{"name":"keyImage","type":"byte[]"},{"name":"sig","type":"byte[]"},{"name":"challenges","type":"byte[]"},{"name":"funderLSigTxn","type":"pay"},{"name":"ringLSigTxn0","type":"pay"},{"name":"ringLSigTxn1","type":"pay"},{"name":"ringLSigTxn2","type":"pay"},{"name":"ringLSigTxn3","type":"pay"},{"name":"ringLSigTxn4","type":"pay"},{"name":"ringLSigTxn5","type":"pay"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageVote","args":[{"name":"vote","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageEliminate","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageUnmasking","args":[{"name":"blsSk","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"nightStageMafiaCommit","args":[{"name":"commitment","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"nightStageDoctorCommit","args":[{"name":"commitment","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageMafiaReveal","args":[{"name":"victimAim","type":"address"},{"name":"blinder","type":"byte[32]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageDoctorReveal","args":[{"name":"patientAim","type":"address"},{"name":"blinder","type":"byte[32]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageDeadOrSaved","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageUnmasking","args":[{"name":"blsSk","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"gameOver","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"deleteApplication","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["DeleteApplication"]}}],"arcs":[4,56],"structs":{},"state":{"schema":{"global":{"bytes":25,"ints":16},"local":{"bytes":0,"ints":0}},"keys":{"global":{"creatorAddress":{"key":"Y3JlYXRvckFkZHJlc3M=","keyType":"AVMBytes","valueType":"address"},"player1AlgoAddr":{"key":"cGxheWVyMUFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player2AlgoAddr":{"key":"cGxheWVyMkFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player3AlgoAddr":{"key":"cGxheWVyM0FsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player4AlgoAddr":{"key":"cGxheWVyNEFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player5AlgoAddr":{"key":"cGxheWVyNUFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player6AlgoAddr":{"key":"cGxheWVyNkFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"mafia":{"key":"bWFmaWE=","keyType":"AVMBytes","valueType":"address"},"mafiaKeyImage":{"key":"bWFmaWFLZXlJbWFnZQ==","keyType":"AVMBytes","valueType":"AVMBytes"},"doctor":{"key":"ZG9jdG9y","keyType":"AVMBytes","valueType":"address"},"doctorKeyImage":{"key":"ZG9jdG9yS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"farmer":{"key":"ZmFybWVy","keyType":"AVMBytes","valueType":"address"},"farmerKeyImage":{"key":"ZmFybWVyS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"butcher":{"key":"YnV0Y2hlcg==","keyType":"AVMBytes","valueType":"address"},"butcherKeyImage":{"key":"YnV0Y2hlcktleUltYWdl","keyType":"AVMBytes","valueType":"AVMBytes"},"innkeep":{"key":"aW5ua2VlcA==","keyType":"AVMBytes","valueType":"address"},"innkeepKeyImage":{"key":"aW5ua2VlcEtleUltYWdl","keyType":"AVMBytes","valueType":"AVMBytes"},"grocer":{"key":"Z3JvY2Vy","keyType":"AVMBytes","valueType":"address"},"grocerKeyImage":{"key":"Z3JvY2VyS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"lsigFunderAddress":{"key":"bHNpZ0Z1bmRlckFkZHJlc3M=","keyType":"AVMBytes","valueType":"address"},"player1HasVoted":{"key":"cGxheWVyMUhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player1ReceivedVotes":{"key":"cGxheWVyMVJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player2HasVoted":{"key":"cGxheWVyMkhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player2ReceivedVotes":{"key":"cGxheWVyMlJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player3HasVoted":{"key":"cGxheWVyM0hhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player3ReceivedVotes":{"key":"cGxheWVyM1JlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player4HasVoted":{"key":"cGxheWVyNEhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player4ReceivedVotes":{"key":"cGxheWVyNFJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player5HasVoted":{"key":"cGxheWVyNUhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player5ReceivedVotes":{"key":"cGxheWVyNVJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player6HasVoted":{"key":"cGxheWVyNkhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player6ReceivedVotes":{"key":"cGxheWVyNlJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"playersVoted":{"key":"cGxheWVyc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"playersAlive":{"key":"cGxheWVyc0FsaXZl","keyType":"AVMBytes","valueType":"uint64"},"justEliminatedPlayer":{"key":"anVzdEVsaW1pbmF0ZWRQbGF5ZXI=","keyType":"AVMBytes","valueType":"address"},"mafiaCommitment":{"key":"bWFmaWFDb21taXRtZW50","keyType":"AVMBytes","valueType":"AVMBytes"},"doctorCommitment":{"key":"ZG9jdG9yQ29tbWl0bWVudA==","keyType":"AVMBytes","valueType":"AVMBytes"},"mafiaVictim":{"key":"bWFmaWFWaWN0aW0=","keyType":"AVMBytes","valueType":"address"},"doctorPatient":{"key":"ZG9jdG9yUGF0aWVudA==","keyType":"AVMBytes","valueType":"address"},"playersJoined":{"key":"cGxheWVyc0pvaW5lZA==","keyType":"AVMBytes","valueType":"uint64"},"gameState":{"key":"Z2FtZVN0YXRl","keyType":"AVMBytes","valueType":"uint64"}},"local":{},"box":{}},"maps":{"global":{},"local":{},"box":{"quickAccessPKBoxes":{"keyType":"uint64","valueType":"AVMBytes"},"hashFilter":{"keyType":"AVMBytes","valueType":"AVMBytes"}}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/TownHall.algo.ts:34","pc":[0]},{"teal":2,"source":"contracts/TownHall.algo.ts:34","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]},{"teal":3,"source":"contracts/TownHall.algo.ts:34","pc":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796]},{"teal":15,"source":"contracts/TownHall.algo.ts:34","pc":[797,798]},{"teal":16,"source":"contracts/TownHall.algo.ts:34","pc":[799]},{"teal":17,"source":"contracts/TownHall.algo.ts:34","pc":[800]},{"teal":18,"source":"contracts/TownHall.algo.ts:34","pc":[801]},{"teal":19,"source":"contracts/TownHall.algo.ts:34","pc":[802,803]},{"teal":20,"source":"contracts/TownHall.algo.ts:34","pc":[804]},{"teal":21,"source":"contracts/TownHall.algo.ts:34","pc":[805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830]},{"teal":25,"source":"contracts/TownHall.algo.ts:34","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[831]},{"teal":30,"source":"contracts/TownHall.algo.ts:134","pc":[832,833,834]},{"teal":31,"source":"contracts/TownHall.algo.ts:134","pc":[835]},{"teal":32,"source":"contracts/TownHall.algo.ts:134","pc":[836]},{"teal":36,"source":"contracts/TownHall.algo.ts:134","pc":[837,838,839]},{"teal":40,"source":"contracts/TownHall.algo.ts:135","pc":[840,841]},{"teal":41,"source":"contracts/TownHall.algo.ts:135","pc":[842,843]},{"teal":42,"source":"contracts/TownHall.algo.ts:135","pc":[844]},{"teal":46,"source":"contracts/TownHall.algo.ts:137","pc":[845,846]},{"teal":47,"source":"contracts/TownHall.algo.ts:137","pc":[847,848]},{"teal":48,"source":"contracts/TownHall.algo.ts:137","pc":[849]},{"teal":52,"source":"contracts/TownHall.algo.ts:139","pc":[850]},{"teal":53,"source":"contracts/TownHall.algo.ts:139","pc":[851,852]},{"teal":54,"source":"contracts/TownHall.algo.ts:139","pc":[853,854]},{"teal":55,"source":"contracts/TownHall.algo.ts:139","pc":[855]},{"teal":56,"source":"contracts/TownHall.algo.ts:139","pc":[856]},{"teal":60,"source":"contracts/TownHall.algo.ts:140","pc":[857,858]},{"teal":61,"source":"contracts/TownHall.algo.ts:140","pc":[859,860]},{"teal":62,"source":"contracts/TownHall.algo.ts:140","pc":[861,862]},{"teal":63,"source":"contracts/TownHall.algo.ts:140","pc":[863]},{"teal":64,"source":"contracts/TownHall.algo.ts:140","pc":[864]},{"teal":68,"source":"contracts/TownHall.algo.ts:141","pc":[865,866]},{"teal":69,"source":"contracts/TownHall.algo.ts:141","pc":[867,868]},{"teal":70,"source":"contracts/TownHall.algo.ts:141","pc":[869,870]},{"teal":71,"source":"contracts/TownHall.algo.ts:141","pc":[871]},{"teal":72,"source":"contracts/TownHall.algo.ts:141","pc":[872]},{"teal":76,"source":"contracts/TownHall.algo.ts:142","pc":[873,874]},{"teal":77,"source":"contracts/TownHall.algo.ts:142","pc":[875,876]},{"teal":78,"source":"contracts/TownHall.algo.ts:142","pc":[877,878]},{"teal":79,"source":"contracts/TownHall.algo.ts:142","pc":[879]},{"teal":80,"source":"contracts/TownHall.algo.ts:142","pc":[880]},{"teal":84,"source":"contracts/TownHall.algo.ts:143","pc":[881,882]},{"teal":85,"source":"contracts/TownHall.algo.ts:143","pc":[883,884]},{"teal":86,"source":"contracts/TownHall.algo.ts:143","pc":[885,886]},{"teal":87,"source":"contracts/TownHall.algo.ts:143","pc":[887]},{"teal":88,"source":"contracts/TownHall.algo.ts:143","pc":[888]},{"teal":92,"source":"contracts/TownHall.algo.ts:144","pc":[889,890]},{"teal":93,"source":"contracts/TownHall.algo.ts:144","pc":[891,892]},{"teal":94,"source":"contracts/TownHall.algo.ts:144","pc":[893,894]},{"teal":95,"source":"contracts/TownHall.algo.ts:144","pc":[895]},{"teal":96,"source":"contracts/TownHall.algo.ts:144","pc":[896]},{"teal":100,"source":"contracts/TownHall.algo.ts:146","pc":[897,898]},{"teal":101,"source":"contracts/TownHall.algo.ts:146","pc":[899,900]},{"teal":102,"source":"contracts/TownHall.algo.ts:146","pc":[901]},{"teal":106,"source":"contracts/TownHall.algo.ts:147","pc":[902,903]},{"teal":107,"source":"contracts/TownHall.algo.ts:147","pc":[904,905]},{"teal":108,"source":"contracts/TownHall.algo.ts:147","pc":[906]},{"teal":112,"source":"contracts/TownHall.algo.ts:148","pc":[907,908]},{"teal":113,"source":"contracts/TownHall.algo.ts:148","pc":[909,910]},{"teal":114,"source":"contracts/TownHall.algo.ts:148","pc":[911]},{"teal":118,"source":"contracts/TownHall.algo.ts:149","pc":[912,913]},{"teal":119,"source":"contracts/TownHall.algo.ts:149","pc":[914,915]},{"teal":120,"source":"contracts/TownHall.algo.ts:149","pc":[916]},{"teal":124,"source":"contracts/TownHall.algo.ts:150","pc":[917,918]},{"teal":125,"source":"contracts/TownHall.algo.ts:150","pc":[919,920]},{"teal":126,"source":"contracts/TownHall.algo.ts:150","pc":[921]},{"teal":130,"source":"contracts/TownHall.algo.ts:151","pc":[922,923]},{"teal":131,"source":"contracts/TownHall.algo.ts:151","pc":[924,925]},{"teal":132,"source":"contracts/TownHall.algo.ts:151","pc":[926]},{"teal":136,"source":"contracts/TownHall.algo.ts:153","pc":[927,928]},{"teal":137,"source":"contracts/TownHall.algo.ts:153","pc":[929]},{"teal":138,"source":"contracts/TownHall.algo.ts:153","pc":[930]},{"teal":142,"source":"contracts/TownHall.algo.ts:154","pc":[931,932]},{"teal":143,"source":"contracts/TownHall.algo.ts:154","pc":[933]},{"teal":144,"source":"contracts/TownHall.algo.ts:154","pc":[934]},{"teal":148,"source":"contracts/TownHall.algo.ts:155","pc":[935,936]},{"teal":149,"source":"contracts/TownHall.algo.ts:155","pc":[937]},{"teal":150,"source":"contracts/TownHall.algo.ts:155","pc":[938]},{"teal":154,"source":"contracts/TownHall.algo.ts:156","pc":[939,940]},{"teal":155,"source":"contracts/TownHall.algo.ts:156","pc":[941]},{"teal":156,"source":"contracts/TownHall.algo.ts:156","pc":[942]},{"teal":160,"source":"contracts/TownHall.algo.ts:157","pc":[943,944]},{"teal":161,"source":"contracts/TownHall.algo.ts:157","pc":[945]},{"teal":162,"source":"contracts/TownHall.algo.ts:157","pc":[946]},{"teal":166,"source":"contracts/TownHall.algo.ts:158","pc":[947,948]},{"teal":167,"source":"contracts/TownHall.algo.ts:158","pc":[949]},{"teal":168,"source":"contracts/TownHall.algo.ts:158","pc":[950]},{"teal":172,"source":"contracts/TownHall.algo.ts:159","pc":[951,952]},{"teal":173,"source":"contracts/TownHall.algo.ts:159","pc":[953]},{"teal":174,"source":"contracts/TownHall.algo.ts:159","pc":[954]},{"teal":178,"source":"contracts/TownHall.algo.ts:161","pc":[955,956]},{"teal":179,"source":"contracts/TownHall.algo.ts:161","pc":[957]},{"teal":180,"source":"contracts/TownHall.algo.ts:161","pc":[958]},{"teal":184,"source":"contracts/TownHall.algo.ts:162","pc":[959,960]},{"teal":185,"source":"contracts/TownHall.algo.ts:162","pc":[961]},{"teal":186,"source":"contracts/TownHall.algo.ts:162","pc":[962]},{"teal":190,"source":"contracts/TownHall.algo.ts:163","pc":[963,964]},{"teal":191,"source":"contracts/TownHall.algo.ts:163","pc":[965]},{"teal":192,"source":"contracts/TownHall.algo.ts:163","pc":[966]},{"teal":196,"source":"contracts/TownHall.algo.ts:164","pc":[967,968]},{"teal":197,"source":"contracts/TownHall.algo.ts:164","pc":[969]},{"teal":198,"source":"contracts/TownHall.algo.ts:164","pc":[970]},{"teal":202,"source":"contracts/TownHall.algo.ts:165","pc":[971,972]},{"teal":203,"source":"contracts/TownHall.algo.ts:165","pc":[973]},{"teal":204,"source":"contracts/TownHall.algo.ts:165","pc":[974]},{"teal":208,"source":"contracts/TownHall.algo.ts:166","pc":[975,976]},{"teal":209,"source":"contracts/TownHall.algo.ts:166","pc":[977]},{"teal":210,"source":"contracts/TownHall.algo.ts:166","pc":[978]},{"teal":214,"source":"contracts/TownHall.algo.ts:167","pc":[979,980]},{"teal":215,"source":"contracts/TownHall.algo.ts:167","pc":[981]},{"teal":216,"source":"contracts/TownHall.algo.ts:167","pc":[982]},{"teal":220,"source":"contracts/TownHall.algo.ts:169","pc":[983,984]},{"teal":221,"source":"contracts/TownHall.algo.ts:169","pc":[985]},{"teal":222,"source":"contracts/TownHall.algo.ts:169","pc":[986]},{"teal":226,"source":"contracts/TownHall.algo.ts:170","pc":[987,988]},{"teal":227,"source":"contracts/TownHall.algo.ts:170","pc":[989]},{"teal":228,"source":"contracts/TownHall.algo.ts:170","pc":[990]},{"teal":232,"source":"contracts/TownHall.algo.ts:172","pc":[991]},{"teal":233,"source":"contracts/TownHall.algo.ts:172","pc":[992,993]},{"teal":234,"source":"contracts/TownHall.algo.ts:172","pc":[994]},{"teal":238,"source":"contracts/TownHall.algo.ts:173","pc":[995,996]},{"teal":239,"source":"contracts/TownHall.algo.ts:173","pc":[997,998]},{"teal":240,"source":"contracts/TownHall.algo.ts:173","pc":[999]},{"teal":244,"source":"contracts/TownHall.algo.ts:174","pc":[1000,1001]},{"teal":245,"source":"contracts/TownHall.algo.ts:174","pc":[1002,1003]},{"teal":246,"source":"contracts/TownHall.algo.ts:174","pc":[1004]},{"teal":250,"source":"contracts/TownHall.algo.ts:176","pc":[1005]},{"teal":251,"source":"contracts/TownHall.algo.ts:176","pc":[1006]},{"teal":252,"source":"contracts/TownHall.algo.ts:176","pc":[1007]},{"teal":253,"source":"contracts/TownHall.algo.ts:134","pc":[1008]},{"teal":258,"source":"contracts/TownHall.algo.ts:184","pc":[1009,1010]},{"teal":261,"source":"contracts/TownHall.algo.ts:184","pc":[1011,1012,1013]},{"teal":262,"source":"contracts/TownHall.algo.ts:184","pc":[1014]},{"teal":265,"source":"contracts/TownHall.algo.ts:184","pc":[1015,1016,1017]},{"teal":266,"source":"contracts/TownHall.algo.ts:184","pc":[1018]},{"teal":267,"source":"contracts/TownHall.algo.ts:184","pc":[1019]},{"teal":268,"source":"contracts/TownHall.algo.ts:184","pc":[1020]},{"teal":269,"source":"contracts/TownHall.algo.ts:184","pc":[1021]},{"teal":270,"source":"contracts/TownHall.algo.ts:184","pc":[1022]},{"teal":279,"source":"contracts/TownHall.algo.ts:184","pc":[1023,1024,1025]},{"teal":283,"source":"contracts/TownHall.algo.ts:185","pc":[1026,1027]},{"teal":284,"source":"contracts/TownHall.algo.ts:184","pc":[1028]},{"teal":289,"source":"contracts/TownHall.algo.ts:206","pc":[1029,1030]},{"teal":292,"source":"contracts/TownHall.algo.ts:206","pc":[1031,1032,1033]},{"teal":293,"source":"contracts/TownHall.algo.ts:206","pc":[1034,1035,1036]},{"teal":296,"source":"contracts/TownHall.algo.ts:206","pc":[1037,1038,1039]},{"teal":297,"source":"contracts/TownHall.algo.ts:206","pc":[1040,1041,1042]},{"teal":300,"source":"contracts/TownHall.algo.ts:206","pc":[1043,1044,1045]},{"teal":301,"source":"contracts/TownHall.algo.ts:206","pc":[1046,1047,1048]},{"teal":304,"source":"contracts/TownHall.algo.ts:206","pc":[1049,1050,1051]},{"teal":305,"source":"contracts/TownHall.algo.ts:206","pc":[1052,1053,1054]},{"teal":308,"source":"contracts/TownHall.algo.ts:206","pc":[1055,1056,1057]},{"teal":309,"source":"contracts/TownHall.algo.ts:206","pc":[1058,1059]},{"teal":310,"source":"contracts/TownHall.algo.ts:206","pc":[1060]},{"teal":311,"source":"contracts/TownHall.algo.ts:206","pc":[1061,1062]},{"teal":312,"source":"contracts/TownHall.algo.ts:206","pc":[1063]},{"teal":313,"source":"contracts/TownHall.algo.ts:206","pc":[1064]},{"teal":314,"source":"contracts/TownHall.algo.ts:206","pc":[1065]},{"teal":315,"source":"contracts/TownHall.algo.ts:206","pc":[1066]},{"teal":316,"source":"contracts/TownHall.algo.ts:206","pc":[1067]},{"teal":320,"source":"contracts/TownHall.algo.ts:206","pc":[1068,1069,1070]},{"teal":323,"source":"contracts/TownHall.algo.ts:206","pc":[1071]},{"teal":324,"source":"contracts/TownHall.algo.ts:206","pc":[1072]},{"teal":328,"source":"contracts/TownHall.algo.ts:208","pc":[1073,1074]},{"teal":329,"source":"contracts/TownHall.algo.ts:208","pc":[1075,1076]},{"teal":330,"source":"contracts/TownHall.algo.ts:208","pc":[1077,1078]},{"teal":331,"source":"contracts/TownHall.algo.ts:208","pc":[1079]},{"teal":332,"source":"contracts/TownHall.algo.ts:208","pc":[1080]},{"teal":333,"source":"contracts/TownHall.algo.ts:208","pc":[1081]},{"teal":334,"source":"contracts/TownHall.algo.ts:208","pc":[1082,1083]},{"teal":338,"source":"contracts/TownHall.algo.ts:209","pc":[1084,1085]},{"teal":339,"source":"contracts/TownHall.algo.ts:209","pc":[1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119]},{"teal":340,"source":"contracts/TownHall.algo.ts:209","pc":[1120]},{"teal":341,"source":"contracts/TownHall.algo.ts:209","pc":[1121,1122]},{"teal":347,"source":"contracts/TownHall.algo.ts:212","pc":[1123,1124]},{"teal":348,"source":"contracts/TownHall.algo.ts:212","pc":[1125,1126]},{"teal":349,"source":"contracts/TownHall.algo.ts:212","pc":[1127,1128]},{"teal":350,"source":"contracts/TownHall.algo.ts:212","pc":[1129,1130]},{"teal":351,"source":"contracts/TownHall.algo.ts:212","pc":[1131,1132]},{"teal":352,"source":"contracts/TownHall.algo.ts:212","pc":[1133,1134]},{"teal":353,"source":"contracts/TownHall.algo.ts:212","pc":[1135,1136]},{"teal":354,"source":"contracts/TownHall.algo.ts:212","pc":[1137,1138]},{"teal":355,"source":"contracts/TownHall.algo.ts:212","pc":[1139]},{"teal":358,"source":"contracts/TownHall.algo.ts:206","pc":[1140,1141]},{"teal":361,"source":"contracts/TownHall.algo.ts:206","pc":[1142,1143]},{"teal":362,"source":"contracts/TownHall.algo.ts:206","pc":[1144]},{"teal":367,"source":"contracts/TownHall.algo.ts:216","pc":[1145,1146]},{"teal":370,"source":"contracts/TownHall.algo.ts:216","pc":[1147,1148,1149]},{"teal":371,"source":"contracts/TownHall.algo.ts:216","pc":[1150,1151,1152]},{"teal":374,"source":"contracts/TownHall.algo.ts:216","pc":[1153,1154,1155]},{"teal":375,"source":"contracts/TownHall.algo.ts:216","pc":[1156]},{"teal":376,"source":"contracts/TownHall.algo.ts:216","pc":[1157]},{"teal":377,"source":"contracts/TownHall.algo.ts:216","pc":[1158]},{"teal":378,"source":"contracts/TownHall.algo.ts:216","pc":[1159,1160,1161]},{"teal":379,"source":"contracts/TownHall.algo.ts:216","pc":[1162]},{"teal":380,"source":"contracts/TownHall.algo.ts:216","pc":[1163]},{"teal":381,"source":"contracts/TownHall.algo.ts:216","pc":[1164]},{"teal":382,"source":"contracts/TownHall.algo.ts:216","pc":[1165]},{"teal":383,"source":"contracts/TownHall.algo.ts:216","pc":[1166]},{"teal":384,"source":"contracts/TownHall.algo.ts:216","pc":[1167]},{"teal":388,"source":"contracts/TownHall.algo.ts:216","pc":[1168,1169,1170]},{"teal":391,"source":"contracts/TownHall.algo.ts:216","pc":[1171]},{"teal":392,"source":"contracts/TownHall.algo.ts:216","pc":[1172,1173]},{"teal":398,"source":"contracts/TownHall.algo.ts:219","pc":[1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239]},{"teal":399,"source":"contracts/TownHall.algo.ts:218","pc":[1240,1241]},{"teal":403,"source":"contracts/TownHall.algo.ts:221","pc":[1242,1243]},{"teal":404,"source":"contracts/TownHall.algo.ts:221","pc":[1244,1245]},{"teal":408,"source":"contracts/TownHall.algo.ts:222","pc":[1246,1247]},{"teal":409,"source":"contracts/TownHall.algo.ts:222","pc":[1248,1249]},{"teal":413,"source":"contracts/TownHall.algo.ts:223","pc":[1250,1251]},{"teal":414,"source":"contracts/TownHall.algo.ts:223","pc":[1252,1253]},{"teal":415,"source":"contracts/TownHall.algo.ts:223","pc":[1254]},{"teal":416,"source":"contracts/TownHall.algo.ts:223","pc":[1255,1256]},{"teal":417,"source":"contracts/TownHall.algo.ts:223","pc":[1257]},{"teal":418,"source":"contracts/TownHall.algo.ts:223","pc":[1258,1259]},{"teal":419,"source":"contracts/TownHall.algo.ts:223","pc":[1260]},{"teal":420,"source":"contracts/TownHall.algo.ts:223","pc":[1261,1262]},{"teal":421,"source":"contracts/TownHall.algo.ts:223","pc":[1263]},{"teal":422,"source":"contracts/TownHall.algo.ts:223","pc":[1264,1265]},{"teal":426,"source":"contracts/TownHall.algo.ts:226","pc":[1266,1267]},{"teal":427,"source":"contracts/TownHall.algo.ts:226","pc":[1268]},{"teal":428,"source":"contracts/TownHall.algo.ts:226","pc":[1269,1270]},{"teal":432,"source":"contracts/TownHall.algo.ts:228","pc":[1271,1272]},{"teal":433,"source":"contracts/TownHall.algo.ts:228","pc":[1273,1274,1275]},{"teal":434,"source":"contracts/TownHall.algo.ts:228","pc":[1276]},{"teal":435,"source":"contracts/TownHall.algo.ts:228","pc":[1277,1278]},{"teal":436,"source":"contracts/TownHall.algo.ts:228","pc":[1279]},{"teal":437,"source":"contracts/TownHall.algo.ts:228","pc":[1280]},{"teal":438,"source":"contracts/TownHall.algo.ts:228","pc":[1281,1282]},{"teal":442,"source":"contracts/TownHall.algo.ts:230","pc":[1283,1284]},{"teal":443,"source":"contracts/TownHall.algo.ts:230","pc":[1285,1286]},{"teal":444,"source":"contracts/TownHall.algo.ts:230","pc":[1287]},{"teal":445,"source":"contracts/TownHall.algo.ts:230","pc":[1288,1289,1290]},{"teal":446,"source":"contracts/TownHall.algo.ts:230","pc":[1291]},{"teal":447,"source":"contracts/TownHall.algo.ts:230","pc":[1292,1293]},{"teal":448,"source":"contracts/TownHall.algo.ts:230","pc":[1294]},{"teal":449,"source":"contracts/TownHall.algo.ts:230","pc":[1295]},{"teal":450,"source":"contracts/TownHall.algo.ts:230","pc":[1296,1297]},{"teal":454,"source":"contracts/TownHall.algo.ts:233","pc":[1298,1299]},{"teal":455,"source":"contracts/TownHall.algo.ts:233","pc":[1300,1301,1302]},{"teal":456,"source":"contracts/TownHall.algo.ts:233","pc":[1303,1304]},{"teal":457,"source":"contracts/TownHall.algo.ts:233","pc":[1305,1306,1307]},{"teal":458,"source":"contracts/TownHall.algo.ts:233","pc":[1308]},{"teal":459,"source":"contracts/TownHall.algo.ts:233","pc":[1309,1310]},{"teal":463,"source":"contracts/TownHall.algo.ts:236","pc":[1311,1312]},{"teal":464,"source":"contracts/TownHall.algo.ts:236","pc":[1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362]},{"teal":465,"source":"contracts/TownHall.algo.ts:236","pc":[1363]},{"teal":466,"source":"contracts/TownHall.algo.ts:236","pc":[1364,1365]},{"teal":470,"source":"contracts/TownHall.algo.ts:237","pc":[1366,1367]},{"teal":471,"source":"contracts/TownHall.algo.ts:237","pc":[1368,1369]},{"teal":472,"source":"contracts/TownHall.algo.ts:237","pc":[1370,1371]},{"teal":476,"source":"contracts/TownHall.algo.ts:239","pc":[1372,1373]},{"teal":479,"source":"contracts/TownHall.algo.ts:216","pc":[1374,1375]},{"teal":482,"source":"contracts/TownHall.algo.ts:216","pc":[1376,1377]},{"teal":483,"source":"contracts/TownHall.algo.ts:216","pc":[1378]},{"teal":488,"source":"contracts/TownHall.algo.ts:244","pc":[1379,1380]},{"teal":491,"source":"contracts/TownHall.algo.ts:244","pc":[1381,1382,1383]},{"teal":492,"source":"contracts/TownHall.algo.ts:244","pc":[1384]},{"teal":493,"source":"contracts/TownHall.algo.ts:244","pc":[1385]},{"teal":494,"source":"contracts/TownHall.algo.ts:244","pc":[1386]},{"teal":495,"source":"contracts/TownHall.algo.ts:244","pc":[1387]},{"teal":496,"source":"contracts/TownHall.algo.ts:244","pc":[1388]},{"teal":500,"source":"contracts/TownHall.algo.ts:244","pc":[1389,1390,1391]},{"teal":504,"source":"contracts/TownHall.algo.ts:245","pc":[1392]},{"teal":505,"source":"contracts/TownHall.algo.ts:245","pc":[1393]},{"teal":506,"source":"contracts/TownHall.algo.ts:244","pc":[1394]},{"teal":511,"source":"contracts/TownHall.algo.ts:248","pc":[1395,1396,1397]},{"teal":512,"source":"contracts/TownHall.algo.ts:248","pc":[1398]},{"teal":513,"source":"contracts/TownHall.algo.ts:248","pc":[1399]},{"teal":514,"source":"contracts/TownHall.algo.ts:248","pc":[1400,1401]},{"teal":515,"source":"contracts/TownHall.algo.ts:248","pc":[1402]},{"teal":518,"source":"contracts/TownHall.algo.ts:248","errorMessage":"argument 0 (funderLSigAddress) for setLSIGFunderAddress must be a address","pc":[1403]},{"teal":521,"source":"contracts/TownHall.algo.ts:248","pc":[1404,1405,1406]},{"teal":522,"source":"contracts/TownHall.algo.ts:248","pc":[1407]},{"teal":523,"source":"contracts/TownHall.algo.ts:248","pc":[1408]},{"teal":527,"source":"contracts/TownHall.algo.ts:248","pc":[1409,1410,1411]},{"teal":534,"source":"contracts/TownHall.algo.ts:250","pc":[1412]},{"teal":535,"source":"contracts/TownHall.algo.ts:250","pc":[1413]},{"teal":536,"source":"contracts/TownHall.algo.ts:250","pc":[1414]},{"teal":537,"source":"contracts/TownHall.algo.ts:250","pc":[1415]},{"teal":540,"source":"contracts/TownHall.algo.ts:249","errorMessage":"Invalid method call: Contract is not in Set LSig Funder Address state.","pc":[1416]},{"teal":547,"source":"contracts/TownHall.algo.ts:255","pc":[1417,1418]},{"teal":548,"source":"contracts/TownHall.algo.ts:255","pc":[1419,1420]},{"teal":549,"source":"contracts/TownHall.algo.ts:255","pc":[1421]},{"teal":550,"source":"contracts/TownHall.algo.ts:255","pc":[1422]},{"teal":553,"source":"contracts/TownHall.algo.ts:254","errorMessage":"Error state: Only the creator can set the LSig Funder Address!","pc":[1423]},{"teal":557,"source":"contracts/TownHall.algo.ts:259","pc":[1424,1425]},{"teal":558,"source":"contracts/TownHall.algo.ts:259","pc":[1426]},{"teal":559,"source":"contracts/TownHall.algo.ts:259","pc":[1427,1428]},{"teal":560,"source":"contracts/TownHall.algo.ts:259","pc":[1429]},{"teal":563,"source":"contracts/TownHall.algo.ts:259","errorMessage":"Error state: LSig Funder Address already set!","pc":[1430]},{"teal":567,"source":"contracts/TownHall.algo.ts:261","pc":[1431,1432]},{"teal":568,"source":"contracts/TownHall.algo.ts:261","pc":[1433,1434]},{"teal":569,"source":"contracts/TownHall.algo.ts:261","pc":[1435]},{"teal":572,"source":"contracts/TownHall.algo.ts:261","errorMessage":"Error state: LSig Funder Address cannot be the zero address.","pc":[1436]},{"teal":576,"source":"contracts/TownHall.algo.ts:264","pc":[1437,1438]},{"teal":577,"source":"contracts/TownHall.algo.ts:264","pc":[1439,1440]},{"teal":578,"source":"contracts/TownHall.algo.ts:264","pc":[1441]},{"teal":582,"source":"contracts/TownHall.algo.ts:266","pc":[1442]},{"teal":583,"source":"contracts/Constants.ts:17","pc":[1443]},{"teal":584,"source":"contracts/TownHall.algo.ts:266","pc":[1444]},{"teal":585,"source":"contracts/TownHall.algo.ts:248","pc":[1445]},{"teal":590,"source":"contracts/TownHall.algo.ts:269","pc":[1446,1447,1448]},{"teal":591,"source":"contracts/TownHall.algo.ts:269","pc":[1449,1450,1451]},{"teal":594,"source":"contracts/TownHall.algo.ts:269","pc":[1452,1453]},{"teal":595,"source":"contracts/TownHall.algo.ts:269","pc":[1454]},{"teal":596,"source":"contracts/TownHall.algo.ts:269","pc":[1455]},{"teal":597,"source":"contracts/TownHall.algo.ts:269","pc":[1456]},{"teal":598,"source":"contracts/TownHall.algo.ts:269","pc":[1457,1458]},{"teal":599,"source":"contracts/TownHall.algo.ts:269","pc":[1459]},{"teal":600,"source":"contracts/TownHall.algo.ts:269","pc":[1460]},{"teal":603,"source":"contracts/TownHall.algo.ts:269","errorMessage":"argument 1 (depositTxn) for joinGameLobby must be a pay transaction","pc":[1461]},{"teal":606,"source":"contracts/TownHall.algo.ts:269","pc":[1462,1463,1464]},{"teal":607,"source":"contracts/TownHall.algo.ts:269","pc":[1465]},{"teal":608,"source":"contracts/TownHall.algo.ts:269","pc":[1466]},{"teal":612,"source":"contracts/TownHall.algo.ts:269","pc":[1467,1468,1469]},{"teal":615,"source":"contracts/TownHall.algo.ts:269","pc":[1470]},{"teal":616,"source":"contracts/TownHall.algo.ts:269","pc":[1471,1472]},{"teal":620,"source":"contracts/TownHall.algo.ts:270","pc":[1473]},{"teal":621,"source":"contracts/TownHall.algo.ts:270","pc":[1474]},{"teal":622,"source":"contracts/Constants.ts:17","pc":[1475]},{"teal":623,"source":"contracts/TownHall.algo.ts:270","pc":[1476]},{"teal":626,"source":"contracts/TownHall.algo.ts:270","errorMessage":"Invalid method call: Game is not in Join Game Lobby state.","pc":[1477]},{"teal":633,"source":"contracts/TownHall.algo.ts:273","pc":[1478,1479]},{"teal":634,"source":"contracts/TownHall.algo.ts:273","pc":[1480]},{"teal":635,"source":"contracts/TownHall.algo.ts:273","pc":[1481]},{"teal":636,"source":"contracts/TownHall.algo.ts:273","pc":[1482]},{"teal":639,"source":"contracts/TownHall.algo.ts:272","errorMessage":"Max players already joined! Error, game should have moved to the next stage already.","pc":[1483]},{"teal":649,"source":"contracts/TownHall.algo.ts:278","pc":[1484]},{"teal":650,"source":"contracts/TownHall.algo.ts:278","pc":[1485]},{"teal":651,"source":"contracts/TownHall.algo.ts:278","pc":[1486,1487,1488]},{"teal":652,"source":"contracts/TownHall.algo.ts:278","pc":[1489,1490]},{"teal":653,"source":"contracts/TownHall.algo.ts:278","pc":[1491]},{"teal":654,"source":"contracts/TownHall.algo.ts:278","pc":[1492]},{"teal":655,"source":"contracts/TownHall.algo.ts:278","pc":[1493,1494,1495]},{"teal":656,"source":"contracts/TownHall.algo.ts:279","pc":[1496,1497]},{"teal":657,"source":"contracts/TownHall.algo.ts:279","pc":[1498]},{"teal":658,"source":"contracts/TownHall.algo.ts:279","pc":[1499,1500,1501]},{"teal":659,"source":"contracts/TownHall.algo.ts:279","pc":[1502,1503]},{"teal":660,"source":"contracts/TownHall.algo.ts:279","pc":[1504]},{"teal":661,"source":"contracts/TownHall.algo.ts:278","pc":[1505]},{"teal":664,"source":"contracts/TownHall.algo.ts:279","pc":[1506]},{"teal":665,"source":"contracts/TownHall.algo.ts:279","pc":[1507,1508,1509]},{"teal":666,"source":"contracts/TownHall.algo.ts:280","pc":[1510,1511]},{"teal":667,"source":"contracts/TownHall.algo.ts:280","pc":[1512]},{"teal":668,"source":"contracts/TownHall.algo.ts:280","pc":[1513,1514,1515]},{"teal":669,"source":"contracts/TownHall.algo.ts:280","pc":[1516,1517]},{"teal":670,"source":"contracts/TownHall.algo.ts:280","pc":[1518]},{"teal":671,"source":"contracts/TownHall.algo.ts:279","pc":[1519]},{"teal":674,"source":"contracts/TownHall.algo.ts:280","pc":[1520]},{"teal":675,"source":"contracts/TownHall.algo.ts:280","pc":[1521,1522,1523]},{"teal":676,"source":"contracts/TownHall.algo.ts:281","pc":[1524,1525]},{"teal":677,"source":"contracts/TownHall.algo.ts:281","pc":[1526]},{"teal":678,"source":"contracts/TownHall.algo.ts:281","pc":[1527,1528,1529]},{"teal":679,"source":"contracts/TownHall.algo.ts:281","pc":[1530,1531]},{"teal":680,"source":"contracts/TownHall.algo.ts:281","pc":[1532]},{"teal":681,"source":"contracts/TownHall.algo.ts:280","pc":[1533]},{"teal":684,"source":"contracts/TownHall.algo.ts:281","pc":[1534]},{"teal":685,"source":"contracts/TownHall.algo.ts:281","pc":[1535,1536,1537]},{"teal":686,"source":"contracts/TownHall.algo.ts:282","pc":[1538,1539]},{"teal":687,"source":"contracts/TownHall.algo.ts:282","pc":[1540]},{"teal":688,"source":"contracts/TownHall.algo.ts:282","pc":[1541,1542,1543]},{"teal":689,"source":"contracts/TownHall.algo.ts:282","pc":[1544,1545]},{"teal":690,"source":"contracts/TownHall.algo.ts:282","pc":[1546]},{"teal":691,"source":"contracts/TownHall.algo.ts:281","pc":[1547]},{"teal":694,"source":"contracts/TownHall.algo.ts:282","pc":[1548]},{"teal":695,"source":"contracts/TownHall.algo.ts:282","pc":[1549,1550,1551]},{"teal":696,"source":"contracts/TownHall.algo.ts:283","pc":[1552,1553]},{"teal":697,"source":"contracts/TownHall.algo.ts:283","pc":[1554]},{"teal":698,"source":"contracts/TownHall.algo.ts:283","pc":[1555,1556,1557]},{"teal":699,"source":"contracts/TownHall.algo.ts:283","pc":[1558,1559]},{"teal":700,"source":"contracts/TownHall.algo.ts:283","pc":[1560]},{"teal":701,"source":"contracts/TownHall.algo.ts:282","pc":[1561]},{"teal":704,"source":"contracts/TownHall.algo.ts:277","pc":[1562,1563,1564]},{"teal":708,"source":"contracts/TownHall.algo.ts:285","errorMessage":"Error state: Player already joined the game!","pc":[1565]},{"teal":713,"source":"contracts/TownHall.algo.ts:290","pc":[1566,1567]},{"teal":714,"source":"contracts/TownHall.algo.ts:290","pc":[1568,1569]},{"teal":715,"source":"contracts/TownHall.algo.ts:290","pc":[1570,1571,1572,1573]},{"teal":716,"source":"contracts/TownHall.algo.ts:290","pc":[1574]},{"teal":719,"source":"contracts/TownHall.algo.ts:290","errorMessage":"Invalid FunderLSig amount!","pc":[1575]},{"teal":723,"source":"contracts/TownHall.algo.ts:292","pc":[1576,1577]},{"teal":724,"source":"contracts/TownHall.algo.ts:292","pc":[1578,1579,1580]},{"teal":725,"source":"contracts/TownHall.algo.ts:292","pc":[1581,1582]},{"teal":729,"source":"contracts/TownHall.algo.ts:293","pc":[1583,1584]},{"teal":730,"source":"contracts/TownHall.algo.ts:293","pc":[1585,1586,1587]},{"teal":731,"source":"contracts/TownHall.algo.ts:293","pc":[1588,1589]},{"teal":735,"source":"contracts/TownHall.algo.ts:294","pc":[1590,1591]},{"teal":736,"source":"contracts/TownHall.algo.ts:294","pc":[1592,1593,1594]},{"teal":737,"source":"contracts/TownHall.algo.ts:294","pc":[1595,1596]},{"teal":741,"source":"contracts/TownHall.algo.ts:295","pc":[1597,1598]},{"teal":742,"source":"contracts/TownHall.algo.ts:295","pc":[1599,1600,1601]},{"teal":743,"source":"contracts/TownHall.algo.ts:295","pc":[1602,1603]},{"teal":744,"source":"contracts/TownHall.algo.ts:295","pc":[1604]},{"teal":745,"source":"contracts/TownHall.algo.ts:295","pc":[1605,1606]},{"teal":749,"source":"contracts/TownHall.algo.ts:300","pc":[1607,1608]},{"teal":750,"source":"contracts/TownHall.algo.ts:300","pc":[1609,1610]},{"teal":751,"source":"contracts/TownHall.algo.ts:300","pc":[1611,1612]},{"teal":752,"source":"contracts/TownHall.algo.ts:300","pc":[1613,1614]},{"teal":753,"source":"contracts/TownHall.algo.ts:300","pc":[1615,1616,1617]},{"teal":756,"source":"contracts/TownHall.algo.ts:300","errorMessage":"DLOG NIZK Proof failed!","pc":[1618]},{"teal":761,"source":"contracts/TownHall.algo.ts:302","pc":[1619,1620]},{"teal":762,"source":"contracts/TownHall.algo.ts:302","pc":[1621]},{"teal":763,"source":"contracts/TownHall.algo.ts:302","pc":[1622]},{"teal":764,"source":"contracts/TownHall.algo.ts:302","pc":[1623]},{"teal":765,"source":"contracts/TownHall.algo.ts:302","pc":[1624]},{"teal":766,"source":"contracts/TownHall.algo.ts:302","pc":[1625,1626,1627]},{"teal":771,"source":"contracts/TownHall.algo.ts:303","pc":[1628,1629]},{"teal":772,"source":"contracts/TownHall.algo.ts:303","pc":[1630,1631]},{"teal":773,"source":"contracts/TownHall.algo.ts:303","pc":[1632]},{"teal":774,"source":"contracts/TownHall.algo.ts:303","pc":[1633]},{"teal":775,"source":"contracts/TownHall.algo.ts:302","pc":[1634,1635,1636]},{"teal":780,"source":"contracts/TownHall.algo.ts:305","pc":[1637,1638]},{"teal":781,"source":"contracts/TownHall.algo.ts:305","pc":[1639]},{"teal":782,"source":"contracts/TownHall.algo.ts:305","pc":[1640]},{"teal":785,"source":"contracts/TownHall.algo.ts:305","errorMessage":"box value does not exist: this.quickAccessPKBoxes(0).size","pc":[1641]},{"teal":786,"source":"contracts/TownHall.algo.ts:305","pc":[1642,1643]},{"teal":787,"source":"contracts/TownHall.algo.ts:305","pc":[1644]},{"teal":788,"source":"contracts/TownHall.algo.ts:305","pc":[1645]},{"teal":793,"source":"contracts/TownHall.algo.ts:309","pc":[1646,1647]},{"teal":794,"source":"contracts/TownHall.algo.ts:309","pc":[1648]},{"teal":795,"source":"contracts/TownHall.algo.ts:309","pc":[1649]},{"teal":796,"source":"contracts/TownHall.algo.ts:309","pc":[1650]},{"teal":799,"source":"contracts/TownHall.algo.ts:309","errorMessage":"PK Box failed to be created.","pc":[1651]},{"teal":803,"source":"contracts/TownHall.algo.ts:311","pc":[1652,1653]},{"teal":804,"source":"contracts/TownHall.algo.ts:311","pc":[1654,1655]},{"teal":805,"source":"contracts/TownHall.algo.ts:311","pc":[1656]},{"teal":806,"source":"contracts/TownHall.algo.ts:311","pc":[1657,1658]},{"teal":807,"source":"contracts/TownHall.algo.ts:311","pc":[1659]},{"teal":808,"source":"contracts/TownHall.algo.ts:311","pc":[1660,1661]},{"teal":809,"source":"contracts/TownHall.algo.ts:311","pc":[1662]},{"teal":813,"source":"contracts/TownHall.algo.ts:312","pc":[1663,1664]},{"teal":814,"source":"contracts/TownHall.algo.ts:312","pc":[1665]},{"teal":815,"source":"contracts/TownHall.algo.ts:312","pc":[1666]},{"teal":816,"source":"contracts/TownHall.algo.ts:312","pc":[1667]},{"teal":817,"source":"contracts/TownHall.algo.ts:312","pc":[1668,1669]},{"teal":818,"source":"contracts/TownHall.algo.ts:312","pc":[1670]},{"teal":819,"source":"contracts/TownHall.algo.ts:312","pc":[1671]},{"teal":823,"source":"contracts/TownHall.algo.ts:314","pc":[1672,1673]},{"teal":824,"source":"contracts/TownHall.algo.ts:314","pc":[1674]},{"teal":825,"source":"contracts/TownHall.algo.ts:314","pc":[1675,1676]},{"teal":826,"source":"contracts/TownHall.algo.ts:314","pc":[1677]},{"teal":829,"source":"contracts/TownHall.algo.ts:314","errorMessage":"Error state: LSig Funder Address not set!","pc":[1678]},{"teal":836,"source":"contracts/TownHall.algo.ts:317","pc":[1679]},{"teal":837,"source":"contracts/TownHall.algo.ts:317","pc":[1680]},{"teal":838,"source":"contracts/TownHall.algo.ts:317","pc":[1681,1682]},{"teal":842,"source":"contracts/TownHall.algo.ts:318","pc":[1683,1684]},{"teal":843,"source":"contracts/TownHall.algo.ts:318","pc":[1685,1686]},{"teal":847,"source":"contracts/TownHall.algo.ts:319","pc":[1687,1688]},{"teal":848,"source":"contracts/TownHall.algo.ts:319","pc":[1689]},{"teal":849,"source":"contracts/TownHall.algo.ts:319","pc":[1690,1691]},{"teal":852,"source":"contracts/TownHall.algo.ts:317","pc":[1692]},{"teal":853,"source":"contracts/TownHall.algo.ts:317","pc":[1693,1694]},{"teal":856,"source":"contracts/TownHall.algo.ts:317","pc":[1695]},{"teal":861,"source":"contracts/TownHall.algo.ts:322","pc":[1696]},{"teal":862,"source":"contracts/TownHall.algo.ts:322","pc":[1697]},{"teal":863,"source":"contracts/TownHall.algo.ts:322","pc":[1698,1699,1700]},{"teal":864,"source":"contracts/TownHall.algo.ts:322","pc":[1701,1702]},{"teal":865,"source":"contracts/TownHall.algo.ts:322","pc":[1703]},{"teal":866,"source":"contracts/TownHall.algo.ts:322","pc":[1704,1705,1706]},{"teal":871,"source":"contracts/TownHall.algo.ts:323","pc":[1707]},{"teal":872,"source":"contracts/TownHall.algo.ts:323","pc":[1708]},{"teal":873,"source":"contracts/TownHall.algo.ts:323","pc":[1709]},{"teal":874,"source":"contracts/TownHall.algo.ts:323","pc":[1710,1711]},{"teal":875,"source":"contracts/TownHall.algo.ts:323","pc":[1712]},{"teal":876,"source":"contracts/TownHall.algo.ts:323","pc":[1713]},{"teal":877,"source":"contracts/TownHall.algo.ts:323","pc":[1714]},{"teal":878,"source":"contracts/TownHall.algo.ts:323","pc":[1715]},{"teal":882,"source":"contracts/TownHall.algo.ts:324","pc":[1716]},{"teal":888,"source":"contracts/TownHall.algo.ts:326","pc":[1717,1718]},{"teal":889,"source":"contracts/TownHall.algo.ts:326","pc":[1719]},{"teal":890,"source":"contracts/TownHall.algo.ts:326","pc":[1720,1721,1722]},{"teal":891,"source":"contracts/TownHall.algo.ts:326","pc":[1723,1724]},{"teal":892,"source":"contracts/TownHall.algo.ts:326","pc":[1725]},{"teal":893,"source":"contracts/TownHall.algo.ts:326","pc":[1726,1727,1728]},{"teal":898,"source":"contracts/TownHall.algo.ts:327","pc":[1729,1730]},{"teal":899,"source":"contracts/TownHall.algo.ts:327","pc":[1731]},{"teal":900,"source":"contracts/TownHall.algo.ts:327","pc":[1732]},{"teal":901,"source":"contracts/TownHall.algo.ts:327","pc":[1733,1734]},{"teal":902,"source":"contracts/TownHall.algo.ts:327","pc":[1735]},{"teal":903,"source":"contracts/TownHall.algo.ts:327","pc":[1736,1737]},{"teal":904,"source":"contracts/TownHall.algo.ts:327","pc":[1738]},{"teal":905,"source":"contracts/TownHall.algo.ts:327","pc":[1739]},{"teal":909,"source":"contracts/TownHall.algo.ts:328","pc":[1740]},{"teal":915,"source":"contracts/TownHall.algo.ts:330","pc":[1741,1742]},{"teal":916,"source":"contracts/TownHall.algo.ts:330","pc":[1743]},{"teal":917,"source":"contracts/TownHall.algo.ts:330","pc":[1744,1745,1746]},{"teal":918,"source":"contracts/TownHall.algo.ts:330","pc":[1747,1748]},{"teal":919,"source":"contracts/TownHall.algo.ts:330","pc":[1749]},{"teal":920,"source":"contracts/TownHall.algo.ts:330","pc":[1750,1751,1752]},{"teal":925,"source":"contracts/TownHall.algo.ts:331","pc":[1753,1754]},{"teal":926,"source":"contracts/TownHall.algo.ts:331","pc":[1755]},{"teal":927,"source":"contracts/TownHall.algo.ts:331","pc":[1756]},{"teal":928,"source":"contracts/TownHall.algo.ts:331","pc":[1757,1758]},{"teal":929,"source":"contracts/TownHall.algo.ts:331","pc":[1759]},{"teal":930,"source":"contracts/TownHall.algo.ts:331","pc":[1760,1761]},{"teal":931,"source":"contracts/TownHall.algo.ts:331","pc":[1762]},{"teal":932,"source":"contracts/TownHall.algo.ts:331","pc":[1763]},{"teal":936,"source":"contracts/TownHall.algo.ts:332","pc":[1764]},{"teal":942,"source":"contracts/TownHall.algo.ts:334","pc":[1765,1766]},{"teal":943,"source":"contracts/TownHall.algo.ts:334","pc":[1767]},{"teal":944,"source":"contracts/TownHall.algo.ts:334","pc":[1768,1769,1770]},{"teal":945,"source":"contracts/TownHall.algo.ts:334","pc":[1771,1772]},{"teal":946,"source":"contracts/TownHall.algo.ts:334","pc":[1773]},{"teal":947,"source":"contracts/TownHall.algo.ts:334","pc":[1774,1775,1776]},{"teal":952,"source":"contracts/TownHall.algo.ts:335","pc":[1777,1778]},{"teal":953,"source":"contracts/TownHall.algo.ts:335","pc":[1779]},{"teal":954,"source":"contracts/TownHall.algo.ts:335","pc":[1780]},{"teal":955,"source":"contracts/TownHall.algo.ts:335","pc":[1781,1782]},{"teal":956,"source":"contracts/TownHall.algo.ts:335","pc":[1783]},{"teal":957,"source":"contracts/TownHall.algo.ts:335","pc":[1784,1785]},{"teal":958,"source":"contracts/TownHall.algo.ts:335","pc":[1786]},{"teal":959,"source":"contracts/TownHall.algo.ts:335","pc":[1787]},{"teal":963,"source":"contracts/TownHall.algo.ts:336","pc":[1788]},{"teal":969,"source":"contracts/TownHall.algo.ts:338","pc":[1789,1790]},{"teal":970,"source":"contracts/TownHall.algo.ts:338","pc":[1791]},{"teal":971,"source":"contracts/TownHall.algo.ts:338","pc":[1792,1793,1794]},{"teal":972,"source":"contracts/TownHall.algo.ts:338","pc":[1795,1796]},{"teal":973,"source":"contracts/TownHall.algo.ts:338","pc":[1797]},{"teal":974,"source":"contracts/TownHall.algo.ts:338","pc":[1798,1799,1800]},{"teal":979,"source":"contracts/TownHall.algo.ts:339","pc":[1801,1802]},{"teal":980,"source":"contracts/TownHall.algo.ts:339","pc":[1803]},{"teal":981,"source":"contracts/TownHall.algo.ts:339","pc":[1804]},{"teal":982,"source":"contracts/TownHall.algo.ts:339","pc":[1805,1806]},{"teal":983,"source":"contracts/TownHall.algo.ts:339","pc":[1807]},{"teal":984,"source":"contracts/TownHall.algo.ts:339","pc":[1808,1809]},{"teal":985,"source":"contracts/TownHall.algo.ts:339","pc":[1810]},{"teal":986,"source":"contracts/TownHall.algo.ts:339","pc":[1811]},{"teal":990,"source":"contracts/TownHall.algo.ts:340","pc":[1812]},{"teal":996,"source":"contracts/TownHall.algo.ts:342","pc":[1813,1814]},{"teal":997,"source":"contracts/TownHall.algo.ts:342","pc":[1815]},{"teal":998,"source":"contracts/TownHall.algo.ts:342","pc":[1816,1817,1818]},{"teal":999,"source":"contracts/TownHall.algo.ts:342","pc":[1819,1820]},{"teal":1000,"source":"contracts/TownHall.algo.ts:342","pc":[1821]},{"teal":1001,"source":"contracts/TownHall.algo.ts:342","pc":[1822,1823,1824]},{"teal":1006,"source":"contracts/TownHall.algo.ts:343","pc":[1825,1826]},{"teal":1007,"source":"contracts/TownHall.algo.ts:343","pc":[1827]},{"teal":1008,"source":"contracts/TownHall.algo.ts:343","pc":[1828]},{"teal":1009,"source":"contracts/TownHall.algo.ts:343","pc":[1829,1830]},{"teal":1010,"source":"contracts/TownHall.algo.ts:343","pc":[1831]},{"teal":1011,"source":"contracts/TownHall.algo.ts:343","pc":[1832,1833]},{"teal":1012,"source":"contracts/TownHall.algo.ts:343","pc":[1834]},{"teal":1013,"source":"contracts/TownHall.algo.ts:343","pc":[1835]},{"teal":1017,"source":"contracts/TownHall.algo.ts:344","pc":[1836]},{"teal":1018,"source":"contracts/Constants.ts:18","pc":[1837]},{"teal":1019,"source":"contracts/TownHall.algo.ts:344","pc":[1838]},{"teal":1023,"source":"contracts/TownHall.algo.ts:345","pc":[1839]},{"teal":1027,"source":"contracts/TownHall.algo.ts:348","errorMessage":"Invalid state! Error, game should have moved to the next stage already.","pc":[1840]},{"teal":1028,"source":"contracts/TownHall.algo.ts:269","pc":[1841]},{"teal":1033,"source":"contracts/TownHall.algo.ts:363","pc":[1842,1843]},{"teal":1034,"source":"contracts/TownHall.algo.ts:363","pc":[1844]},{"teal":1035,"source":"contracts/TownHall.algo.ts:363","pc":[1845]},{"teal":1036,"source":"contracts/TownHall.algo.ts:363","pc":[1846]},{"teal":1037,"source":"contracts/TownHall.algo.ts:363","pc":[1847,1848]},{"teal":1038,"source":"contracts/TownHall.algo.ts:363","pc":[1849]},{"teal":1039,"source":"contracts/TownHall.algo.ts:363","pc":[1850]},{"teal":1042,"source":"contracts/TownHall.algo.ts:363","errorMessage":"argument 0 (ringLSigTxn5) for assignRole must be a pay transaction","pc":[1851]},{"teal":1045,"source":"contracts/TownHall.algo.ts:362","pc":[1852,1853]},{"teal":1046,"source":"contracts/TownHall.algo.ts:362","pc":[1854]},{"teal":1047,"source":"contracts/TownHall.algo.ts:362","pc":[1855]},{"teal":1048,"source":"contracts/TownHall.algo.ts:362","pc":[1856]},{"teal":1049,"source":"contracts/TownHall.algo.ts:362","pc":[1857,1858]},{"teal":1050,"source":"contracts/TownHall.algo.ts:362","pc":[1859]},{"teal":1051,"source":"contracts/TownHall.algo.ts:362","pc":[1860]},{"teal":1054,"source":"contracts/TownHall.algo.ts:362","errorMessage":"argument 1 (ringLSigTxn4) for assignRole must be a pay transaction","pc":[1861]},{"teal":1057,"source":"contracts/TownHall.algo.ts:361","pc":[1862,1863]},{"teal":1058,"source":"contracts/TownHall.algo.ts:361","pc":[1864,1865]},{"teal":1059,"source":"contracts/TownHall.algo.ts:361","pc":[1866]},{"teal":1060,"source":"contracts/TownHall.algo.ts:361","pc":[1867]},{"teal":1061,"source":"contracts/TownHall.algo.ts:361","pc":[1868,1869]},{"teal":1062,"source":"contracts/TownHall.algo.ts:361","pc":[1870]},{"teal":1063,"source":"contracts/TownHall.algo.ts:361","pc":[1871]},{"teal":1066,"source":"contracts/TownHall.algo.ts:361","errorMessage":"argument 2 (ringLSigTxn3) for assignRole must be a pay transaction","pc":[1872]},{"teal":1069,"source":"contracts/TownHall.algo.ts:360","pc":[1873,1874]},{"teal":1070,"source":"contracts/TownHall.algo.ts:360","pc":[1875,1876]},{"teal":1071,"source":"contracts/TownHall.algo.ts:360","pc":[1877]},{"teal":1072,"source":"contracts/TownHall.algo.ts:360","pc":[1878]},{"teal":1073,"source":"contracts/TownHall.algo.ts:360","pc":[1879,1880]},{"teal":1074,"source":"contracts/TownHall.algo.ts:360","pc":[1881]},{"teal":1075,"source":"contracts/TownHall.algo.ts:360","pc":[1882]},{"teal":1078,"source":"contracts/TownHall.algo.ts:360","errorMessage":"argument 3 (ringLSigTxn2) for assignRole must be a pay transaction","pc":[1883]},{"teal":1081,"source":"contracts/TownHall.algo.ts:359","pc":[1884,1885]},{"teal":1082,"source":"contracts/TownHall.algo.ts:359","pc":[1886,1887]},{"teal":1083,"source":"contracts/TownHall.algo.ts:359","pc":[1888]},{"teal":1084,"source":"contracts/TownHall.algo.ts:359","pc":[1889]},{"teal":1085,"source":"contracts/TownHall.algo.ts:359","pc":[1890,1891]},{"teal":1086,"source":"contracts/TownHall.algo.ts:359","pc":[1892]},{"teal":1087,"source":"contracts/TownHall.algo.ts:359","pc":[1893]},{"teal":1090,"source":"contracts/TownHall.algo.ts:359","errorMessage":"argument 4 (ringLSigTxn1) for assignRole must be a pay transaction","pc":[1894]},{"teal":1093,"source":"contracts/TownHall.algo.ts:358","pc":[1895,1896]},{"teal":1094,"source":"contracts/TownHall.algo.ts:358","pc":[1897]},{"teal":1095,"source":"contracts/TownHall.algo.ts:358","pc":[1898]},{"teal":1096,"source":"contracts/TownHall.algo.ts:358","pc":[1899]},{"teal":1097,"source":"contracts/TownHall.algo.ts:358","pc":[1900,1901]},{"teal":1098,"source":"contracts/TownHall.algo.ts:358","pc":[1902]},{"teal":1099,"source":"contracts/TownHall.algo.ts:358","pc":[1903]},{"teal":1102,"source":"contracts/TownHall.algo.ts:358","errorMessage":"argument 5 (ringLSigTxn0) for assignRole must be a pay transaction","pc":[1904]},{"teal":1105,"source":"contracts/TownHall.algo.ts:357","pc":[1905,1906]},{"teal":1106,"source":"contracts/TownHall.algo.ts:357","pc":[1907,1908]},{"teal":1107,"source":"contracts/TownHall.algo.ts:357","pc":[1909]},{"teal":1108,"source":"contracts/TownHall.algo.ts:357","pc":[1910]},{"teal":1109,"source":"contracts/TownHall.algo.ts:357","pc":[1911,1912]},{"teal":1110,"source":"contracts/TownHall.algo.ts:357","pc":[1913]},{"teal":1111,"source":"contracts/TownHall.algo.ts:357","pc":[1914]},{"teal":1114,"source":"contracts/TownHall.algo.ts:357","errorMessage":"argument 6 (funderLSigTxn) for assignRole must be a pay transaction","pc":[1915]},{"teal":1117,"source":"contracts/TownHall.algo.ts:356","pc":[1916,1917,1918]},{"teal":1118,"source":"contracts/TownHall.algo.ts:356","pc":[1919,1920,1921]},{"teal":1121,"source":"contracts/TownHall.algo.ts:355","pc":[1922,1923,1924]},{"teal":1122,"source":"contracts/TownHall.algo.ts:355","pc":[1925,1926,1927]},{"teal":1125,"source":"contracts/TownHall.algo.ts:354","pc":[1928,1929,1930]},{"teal":1126,"source":"contracts/TownHall.algo.ts:354","pc":[1931,1932,1933]},{"teal":1129,"source":"contracts/TownHall.algo.ts:353","pc":[1934,1935,1936]},{"teal":1130,"source":"contracts/TownHall.algo.ts:353","pc":[1937,1938,1939]},{"teal":1133,"source":"contracts/TownHall.algo.ts:352","pc":[1940,1941,1942]},{"teal":1134,"source":"contracts/TownHall.algo.ts:352","pc":[1943,1944,1945]},{"teal":1137,"source":"contracts/TownHall.algo.ts:351","pc":[1946,1947,1948]},{"teal":1138,"source":"contracts/TownHall.algo.ts:351","pc":[1949]},{"teal":1139,"source":"contracts/TownHall.algo.ts:351","pc":[1950]},{"teal":1143,"source":"contracts/TownHall.algo.ts:351","pc":[1951,1952,1953]},{"teal":1147,"source":"contracts/TownHall.algo.ts:365","pc":[1954]},{"teal":1148,"source":"contracts/TownHall.algo.ts:365","pc":[1955]},{"teal":1149,"source":"contracts/Constants.ts:18","pc":[1956]},{"teal":1150,"source":"contracts/TownHall.algo.ts:365","pc":[1957]},{"teal":1153,"source":"contracts/TownHall.algo.ts:365","errorMessage":"Invalid method call: Game is not in Assign Role state.","pc":[1958]},{"teal":1160,"source":"contracts/TownHall.algo.ts:375","pc":[1959,1960]},{"teal":1161,"source":"contracts/TownHall.algo.ts:375","pc":[1961]},{"teal":1162,"source":"contracts/TownHall.algo.ts:375","pc":[1962]},{"teal":1163,"source":"contracts/TownHall.algo.ts:375","pc":[1963]},{"teal":1164,"source":"contracts/TownHall.algo.ts:375","pc":[1964]},{"teal":1165,"source":"contracts/TownHall.algo.ts:375","pc":[1965]},{"teal":1168,"source":"contracts/TownHall.algo.ts:374","errorMessage":"KeyImage already in store. Are you trying to double-dip with your ring signature?","pc":[1966]},{"teal":1172,"source":"contracts/TownHall.algo.ts:378","pc":[1967,1968]},{"teal":1173,"source":"contracts/TownHall.algo.ts:378","pc":[1969]},{"teal":1174,"source":"contracts/TownHall.algo.ts:378","pc":[1970]},{"teal":1175,"source":"contracts/TownHall.algo.ts:378","pc":[1971]},{"teal":1176,"source":"contracts/TownHall.algo.ts:378","pc":[1972]},{"teal":1180,"source":"contracts/TownHall.algo.ts:382","pc":[1973,1974]},{"teal":1181,"source":"contracts/TownHall.algo.ts:382","pc":[1975,1976]},{"teal":1182,"source":"contracts/TownHall.algo.ts:382","pc":[1977,1978]},{"teal":1183,"source":"contracts/TownHall.algo.ts:382","pc":[1979]},{"teal":1184,"source":"contracts/TownHall.algo.ts:382","pc":[1980]},{"teal":1185,"source":"contracts/TownHall.algo.ts:382","pc":[1981]},{"teal":1192,"source":"contracts/TownHall.algo.ts:386","pc":[1982,1983]},{"teal":1193,"source":"contracts/TownHall.algo.ts:386","pc":[1984]},{"teal":1194,"source":"contracts/TownHall.algo.ts:386","pc":[1985,1986,1987]},{"teal":1195,"source":"contracts/TownHall.algo.ts:386","pc":[1988]},{"teal":1196,"source":"contracts/TownHall.algo.ts:386","pc":[1989,1990]},{"teal":1197,"source":"contracts/TownHall.algo.ts:386","pc":[1991]},{"teal":1200,"source":"contracts/TownHall.algo.ts:385","errorMessage":"Invalid PKs! Are you trying to pass in a different ring of PKs?","pc":[1992]},{"teal":1205,"source":"contracts/TownHall.algo.ts:392","pc":[1993,1994]},{"teal":1206,"source":"contracts/TownHall.algo.ts:392","pc":[1995,1996]},{"teal":1207,"source":"contracts/TownHall.algo.ts:392","pc":[1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030]},{"teal":1208,"source":"contracts/TownHall.algo.ts:392","pc":[2031]},{"teal":1211,"source":"contracts/TownHall.algo.ts:392","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn0\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig0.address())\"}","pc":[2032]},{"teal":1216,"source":"contracts/TownHall.algo.ts:393","pc":[2033,2034]},{"teal":1217,"source":"contracts/TownHall.algo.ts:393","pc":[2035,2036]},{"teal":1218,"source":"contracts/TownHall.algo.ts:393","pc":[2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070]},{"teal":1219,"source":"contracts/TownHall.algo.ts:393","pc":[2071]},{"teal":1222,"source":"contracts/TownHall.algo.ts:393","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn1\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig1.address())\"}","pc":[2072]},{"teal":1227,"source":"contracts/TownHall.algo.ts:394","pc":[2073,2074]},{"teal":1228,"source":"contracts/TownHall.algo.ts:394","pc":[2075,2076]},{"teal":1229,"source":"contracts/TownHall.algo.ts:394","pc":[2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110]},{"teal":1230,"source":"contracts/TownHall.algo.ts:394","pc":[2111]},{"teal":1233,"source":"contracts/TownHall.algo.ts:394","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn2\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig2.address())\"}","pc":[2112]},{"teal":1238,"source":"contracts/TownHall.algo.ts:395","pc":[2113,2114]},{"teal":1239,"source":"contracts/TownHall.algo.ts:395","pc":[2115,2116]},{"teal":1240,"source":"contracts/TownHall.algo.ts:395","pc":[2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150]},{"teal":1241,"source":"contracts/TownHall.algo.ts:395","pc":[2151]},{"teal":1244,"source":"contracts/TownHall.algo.ts:395","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn3\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig3.address())\"}","pc":[2152]},{"teal":1249,"source":"contracts/TownHall.algo.ts:396","pc":[2153,2154]},{"teal":1250,"source":"contracts/TownHall.algo.ts:396","pc":[2155,2156]},{"teal":1251,"source":"contracts/TownHall.algo.ts:396","pc":[2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190]},{"teal":1252,"source":"contracts/TownHall.algo.ts:396","pc":[2191]},{"teal":1255,"source":"contracts/TownHall.algo.ts:396","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn4\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig4.address())\"}","pc":[2192]},{"teal":1260,"source":"contracts/TownHall.algo.ts:397","pc":[2193,2194]},{"teal":1261,"source":"contracts/TownHall.algo.ts:397","pc":[2195,2196]},{"teal":1262,"source":"contracts/TownHall.algo.ts:397","pc":[2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230]},{"teal":1263,"source":"contracts/TownHall.algo.ts:397","pc":[2231]},{"teal":1266,"source":"contracts/TownHall.algo.ts:397","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn5\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig5.address())\"}","pc":[2232]},{"teal":1275,"source":"contracts/TownHall.algo.ts:400","pc":[2233,2234]},{"teal":1276,"source":"contracts/TownHall.algo.ts:401","pc":[2235,2236]},{"teal":1277,"source":"contracts/TownHall.algo.ts:401","pc":[2237,2238]},{"teal":1278,"source":"contracts/TownHall.algo.ts:401","pc":[2239]},{"teal":1279,"source":"contracts/TownHall.algo.ts:401","pc":[2240]},{"teal":1282,"source":"contracts/TownHall.algo.ts:401","errorMessage":"transaction verification failed: {\"txn\":\"funderLSigTxn\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(this.lsigFunderAddress.value)\"}","pc":[2241]},{"teal":1285,"source":"contracts/TownHall.algo.ts:400","pc":[2242,2243]},{"teal":1286,"source":"contracts/TownHall.algo.ts:402","pc":[2244,2245]},{"teal":1287,"source":"contracts/TownHall.algo.ts:402","pc":[2246,2247]},{"teal":1288,"source":"contracts/TownHall.algo.ts:402","pc":[2248]},{"teal":1291,"source":"contracts/TownHall.algo.ts:402","errorMessage":"transaction verification failed: {\"txn\":\"funderLSigTxn\",\"field\":\"receiver\",\"expected\":\"this.txn.sender\"}","pc":[2249]},{"teal":1294,"source":"contracts/TownHall.algo.ts:400","pc":[2250,2251]},{"teal":1295,"source":"contracts/TownHall.algo.ts:403","pc":[2252,2253]},{"teal":1296,"source":"contracts/TownHall.algo.ts:403","pc":[2254,2255]},{"teal":1297,"source":"contracts/TownHall.algo.ts:403","pc":[2256]},{"teal":1300,"source":"contracts/TownHall.algo.ts:403","errorMessage":"transaction verification failed: {\"txn\":\"funderLSigTxn\",\"field\":\"amount\",\"expected\":\"LSIG_FUND_AMOUNT\"}","pc":[2257]},{"teal":1305,"source":"contracts/TownHall.algo.ts:411","pc":[2258,2259]},{"teal":1306,"source":"contracts/TownHall.algo.ts:411","pc":[2260]},{"teal":1307,"source":"contracts/TownHall.algo.ts:411","pc":[2261,2262]},{"teal":1308,"source":"contracts/TownHall.algo.ts:411","pc":[2263]},{"teal":1309,"source":"contracts/TownHall.algo.ts:411","pc":[2264,2265,2266]},{"teal":1314,"source":"contracts/TownHall.algo.ts:412","pc":[2267,2268]},{"teal":1315,"source":"contracts/TownHall.algo.ts:412","pc":[2269,2270]},{"teal":1316,"source":"contracts/TownHall.algo.ts:412","pc":[2271]},{"teal":1320,"source":"contracts/TownHall.algo.ts:413","pc":[2272,2273]},{"teal":1321,"source":"contracts/TownHall.algo.ts:413","pc":[2274,2275]},{"teal":1322,"source":"contracts/TownHall.algo.ts:413","pc":[2276]},{"teal":1326,"source":"contracts/TownHall.algo.ts:414","pc":[2277]},{"teal":1332,"source":"contracts/TownHall.algo.ts:416","pc":[2278,2279]},{"teal":1333,"source":"contracts/TownHall.algo.ts:416","pc":[2280]},{"teal":1334,"source":"contracts/TownHall.algo.ts:416","pc":[2281,2282]},{"teal":1335,"source":"contracts/TownHall.algo.ts:416","pc":[2283]},{"teal":1336,"source":"contracts/TownHall.algo.ts:416","pc":[2284,2285,2286]},{"teal":1341,"source":"contracts/TownHall.algo.ts:417","pc":[2287,2288]},{"teal":1342,"source":"contracts/TownHall.algo.ts:417","pc":[2289,2290]},{"teal":1343,"source":"contracts/TownHall.algo.ts:417","pc":[2291]},{"teal":1347,"source":"contracts/TownHall.algo.ts:418","pc":[2292,2293]},{"teal":1348,"source":"contracts/TownHall.algo.ts:418","pc":[2294,2295]},{"teal":1349,"source":"contracts/TownHall.algo.ts:418","pc":[2296]},{"teal":1353,"source":"contracts/TownHall.algo.ts:419","pc":[2297]},{"teal":1359,"source":"contracts/TownHall.algo.ts:421","pc":[2298,2299]},{"teal":1360,"source":"contracts/TownHall.algo.ts:421","pc":[2300]},{"teal":1361,"source":"contracts/TownHall.algo.ts:421","pc":[2301,2302]},{"teal":1362,"source":"contracts/TownHall.algo.ts:421","pc":[2303]},{"teal":1363,"source":"contracts/TownHall.algo.ts:421","pc":[2304,2305,2306]},{"teal":1368,"source":"contracts/TownHall.algo.ts:422","pc":[2307,2308]},{"teal":1369,"source":"contracts/TownHall.algo.ts:422","pc":[2309,2310]},{"teal":1370,"source":"contracts/TownHall.algo.ts:422","pc":[2311]},{"teal":1374,"source":"contracts/TownHall.algo.ts:423","pc":[2312,2313]},{"teal":1375,"source":"contracts/TownHall.algo.ts:423","pc":[2314,2315]},{"teal":1376,"source":"contracts/TownHall.algo.ts:423","pc":[2316]},{"teal":1380,"source":"contracts/TownHall.algo.ts:424","pc":[2317]},{"teal":1386,"source":"contracts/TownHall.algo.ts:426","pc":[2318,2319]},{"teal":1387,"source":"contracts/TownHall.algo.ts:426","pc":[2320]},{"teal":1388,"source":"contracts/TownHall.algo.ts:426","pc":[2321,2322]},{"teal":1389,"source":"contracts/TownHall.algo.ts:426","pc":[2323]},{"teal":1390,"source":"contracts/TownHall.algo.ts:426","pc":[2324,2325,2326]},{"teal":1395,"source":"contracts/TownHall.algo.ts:427","pc":[2327,2328]},{"teal":1396,"source":"contracts/TownHall.algo.ts:427","pc":[2329,2330]},{"teal":1397,"source":"contracts/TownHall.algo.ts:427","pc":[2331]},{"teal":1401,"source":"contracts/TownHall.algo.ts:428","pc":[2332,2333]},{"teal":1402,"source":"contracts/TownHall.algo.ts:428","pc":[2334,2335]},{"teal":1403,"source":"contracts/TownHall.algo.ts:428","pc":[2336]},{"teal":1407,"source":"contracts/TownHall.algo.ts:429","pc":[2337]},{"teal":1413,"source":"contracts/TownHall.algo.ts:431","pc":[2338,2339]},{"teal":1414,"source":"contracts/TownHall.algo.ts:431","pc":[2340]},{"teal":1415,"source":"contracts/TownHall.algo.ts:431","pc":[2341,2342]},{"teal":1416,"source":"contracts/TownHall.algo.ts:431","pc":[2343]},{"teal":1417,"source":"contracts/TownHall.algo.ts:431","pc":[2344,2345,2346]},{"teal":1422,"source":"contracts/TownHall.algo.ts:432","pc":[2347,2348]},{"teal":1423,"source":"contracts/TownHall.algo.ts:432","pc":[2349,2350]},{"teal":1424,"source":"contracts/TownHall.algo.ts:432","pc":[2351]},{"teal":1428,"source":"contracts/TownHall.algo.ts:433","pc":[2352,2353]},{"teal":1429,"source":"contracts/TownHall.algo.ts:433","pc":[2354,2355]},{"teal":1430,"source":"contracts/TownHall.algo.ts:433","pc":[2356]},{"teal":1434,"source":"contracts/TownHall.algo.ts:434","pc":[2357]},{"teal":1440,"source":"contracts/TownHall.algo.ts:436","pc":[2358,2359]},{"teal":1441,"source":"contracts/TownHall.algo.ts:436","pc":[2360]},{"teal":1442,"source":"contracts/TownHall.algo.ts:436","pc":[2361,2362]},{"teal":1443,"source":"contracts/TownHall.algo.ts:436","pc":[2363]},{"teal":1444,"source":"contracts/TownHall.algo.ts:436","pc":[2364,2365,2366]},{"teal":1449,"source":"contracts/TownHall.algo.ts:437","pc":[2367,2368]},{"teal":1450,"source":"contracts/TownHall.algo.ts:437","pc":[2369,2370]},{"teal":1451,"source":"contracts/TownHall.algo.ts:437","pc":[2371]},{"teal":1455,"source":"contracts/TownHall.algo.ts:438","pc":[2372,2373]},{"teal":1456,"source":"contracts/TownHall.algo.ts:438","pc":[2374,2375]},{"teal":1457,"source":"contracts/TownHall.algo.ts:438","pc":[2376]},{"teal":1461,"source":"contracts/TownHall.algo.ts:439","pc":[2377]},{"teal":1462,"source":"contracts/Constants.ts:19","pc":[2378,2379]},{"teal":1463,"source":"contracts/TownHall.algo.ts:439","pc":[2380]},{"teal":1467,"source":"contracts/TownHall.algo.ts:440","pc":[2381]},{"teal":1471,"source":"contracts/TownHall.algo.ts:443","errorMessage":"Invalid state! Error, game should have moved to the next stage already.","pc":[2382]},{"teal":1472,"source":"contracts/TownHall.algo.ts:351","pc":[2383]},{"teal":1477,"source":"contracts/TownHall.algo.ts:446","pc":[2384,2385,2386]},{"teal":1478,"source":"contracts/TownHall.algo.ts:446","pc":[2387]},{"teal":1481,"source":"contracts/TownHall.algo.ts:446","pc":[2388,2389,2390]},{"teal":1482,"source":"contracts/TownHall.algo.ts:446","pc":[2391]},{"teal":1483,"source":"contracts/TownHall.algo.ts:446","pc":[2392]},{"teal":1487,"source":"contracts/TownHall.algo.ts:446","pc":[2393,2394,2395]},{"teal":1491,"source":"contracts/TownHall.algo.ts:447","pc":[2396]},{"teal":1492,"source":"contracts/TownHall.algo.ts:447","pc":[2397]},{"teal":1493,"source":"contracts/Constants.ts:19","pc":[2398,2399]},{"teal":1494,"source":"contracts/TownHall.algo.ts:447","pc":[2400]},{"teal":1497,"source":"contracts/TownHall.algo.ts:447","errorMessage":"Invalid method call: Game is not in Day Stage Vote state.","pc":[2401]},{"teal":1501,"source":"contracts/TownHall.algo.ts:449","pc":[2402,2403]},{"teal":1502,"source":"contracts/TownHall.algo.ts:449","pc":[2404]},{"teal":1503,"source":"contracts/TownHall.algo.ts:449","pc":[2405]},{"teal":1504,"source":"contracts/TownHall.algo.ts:449","pc":[2406]},{"teal":1505,"source":"contracts/TownHall.algo.ts:449","pc":[2407,2408,2409]},{"teal":1506,"source":"contracts/TownHall.algo.ts:449","pc":[2410,2411]},{"teal":1507,"source":"contracts/TownHall.algo.ts:449","pc":[2412,2413]},{"teal":1508,"source":"contracts/TownHall.algo.ts:449","pc":[2414]},{"teal":1509,"source":"contracts/TownHall.algo.ts:449","pc":[2415]},{"teal":1513,"source":"contracts/TownHall.algo.ts:449","errorMessage":"Invalid vote: Vote must be int 1 <= n <= 6.","pc":[2416]},{"teal":1525,"source":"contracts/TownHall.algo.ts:453","pc":[2417,2418]},{"teal":1526,"source":"contracts/TownHall.algo.ts:453","pc":[2419]},{"teal":1527,"source":"contracts/TownHall.algo.ts:453","pc":[2420]},{"teal":1528,"source":"contracts/TownHall.algo.ts:453","pc":[2421,2422,2423]},{"teal":1529,"source":"contracts/TownHall.algo.ts:453","pc":[2424]},{"teal":1530,"source":"contracts/TownHall.algo.ts:453","pc":[2425]},{"teal":1531,"source":"contracts/TownHall.algo.ts:453","pc":[2426,2427,2428]},{"teal":1532,"source":"contracts/TownHall.algo.ts:454","pc":[2429,2430]},{"teal":1533,"source":"contracts/TownHall.algo.ts:454","pc":[2431,2432]},{"teal":1534,"source":"contracts/TownHall.algo.ts:454","pc":[2433]},{"teal":1535,"source":"contracts/TownHall.algo.ts:454","pc":[2434,2435,2436]},{"teal":1536,"source":"contracts/TownHall.algo.ts:454","pc":[2437]},{"teal":1537,"source":"contracts/TownHall.algo.ts:453","pc":[2438]},{"teal":1540,"source":"contracts/TownHall.algo.ts:454","pc":[2439]},{"teal":1541,"source":"contracts/TownHall.algo.ts:454","pc":[2440,2441,2442]},{"teal":1542,"source":"contracts/TownHall.algo.ts:455","pc":[2443,2444]},{"teal":1543,"source":"contracts/TownHall.algo.ts:455","pc":[2445,2446]},{"teal":1544,"source":"contracts/TownHall.algo.ts:455","pc":[2447]},{"teal":1545,"source":"contracts/TownHall.algo.ts:455","pc":[2448,2449,2450]},{"teal":1546,"source":"contracts/TownHall.algo.ts:455","pc":[2451]},{"teal":1547,"source":"contracts/TownHall.algo.ts:454","pc":[2452]},{"teal":1550,"source":"contracts/TownHall.algo.ts:455","pc":[2453]},{"teal":1551,"source":"contracts/TownHall.algo.ts:455","pc":[2454,2455,2456]},{"teal":1552,"source":"contracts/TownHall.algo.ts:456","pc":[2457,2458]},{"teal":1553,"source":"contracts/TownHall.algo.ts:456","pc":[2459,2460]},{"teal":1554,"source":"contracts/TownHall.algo.ts:456","pc":[2461]},{"teal":1555,"source":"contracts/TownHall.algo.ts:456","pc":[2462,2463,2464]},{"teal":1556,"source":"contracts/TownHall.algo.ts:456","pc":[2465]},{"teal":1557,"source":"contracts/TownHall.algo.ts:455","pc":[2466]},{"teal":1560,"source":"contracts/TownHall.algo.ts:456","pc":[2467]},{"teal":1561,"source":"contracts/TownHall.algo.ts:456","pc":[2468,2469,2470]},{"teal":1562,"source":"contracts/TownHall.algo.ts:457","pc":[2471,2472]},{"teal":1563,"source":"contracts/TownHall.algo.ts:457","pc":[2473,2474]},{"teal":1564,"source":"contracts/TownHall.algo.ts:457","pc":[2475]},{"teal":1565,"source":"contracts/TownHall.algo.ts:457","pc":[2476,2477,2478]},{"teal":1566,"source":"contracts/TownHall.algo.ts:457","pc":[2479]},{"teal":1567,"source":"contracts/TownHall.algo.ts:456","pc":[2480]},{"teal":1570,"source":"contracts/TownHall.algo.ts:457","pc":[2481]},{"teal":1571,"source":"contracts/TownHall.algo.ts:457","pc":[2482,2483,2484]},{"teal":1572,"source":"contracts/TownHall.algo.ts:458","pc":[2485,2486]},{"teal":1573,"source":"contracts/TownHall.algo.ts:458","pc":[2487,2488]},{"teal":1574,"source":"contracts/TownHall.algo.ts:458","pc":[2489]},{"teal":1575,"source":"contracts/TownHall.algo.ts:458","pc":[2490,2491,2492]},{"teal":1576,"source":"contracts/TownHall.algo.ts:458","pc":[2493]},{"teal":1577,"source":"contracts/TownHall.algo.ts:457","pc":[2494]},{"teal":1580,"source":"contracts/TownHall.algo.ts:452","pc":[2495]},{"teal":1581,"source":"contracts/TownHall.algo.ts:451","pc":[2496,2497,2498]},{"teal":1585,"source":"contracts/TownHall.algo.ts:461","errorMessage":"Illegal call: Address sender not allowed to vote.","pc":[2499]},{"teal":1591,"source":"contracts/TownHall.algo.ts:464","pc":[2500,2501]},{"teal":1592,"source":"contracts/TownHall.algo.ts:464","pc":[2502]},{"teal":1593,"source":"contracts/TownHall.algo.ts:464","pc":[2503]},{"teal":1594,"source":"contracts/TownHall.algo.ts:464","pc":[2504]},{"teal":1595,"source":"contracts/TownHall.algo.ts:464","pc":[2505,2506,2507]},{"teal":1596,"source":"contracts/TownHall.algo.ts:464","pc":[2508]},{"teal":1597,"source":"contracts/TownHall.algo.ts:464","pc":[2509]},{"teal":1598,"source":"contracts/TownHall.algo.ts:464","pc":[2510,2511,2512]},{"teal":1599,"source":"contracts/TownHall.algo.ts:464","pc":[2513,2514]},{"teal":1600,"source":"contracts/TownHall.algo.ts:464","pc":[2515]},{"teal":1601,"source":"contracts/TownHall.algo.ts:464","pc":[2516]},{"teal":1604,"source":"contracts/TownHall.algo.ts:464","pc":[2517,2518,2519]},{"teal":1609,"source":"contracts/TownHall.algo.ts:465","pc":[2520,2521]},{"teal":1610,"source":"contracts/TownHall.algo.ts:465","pc":[2522]},{"teal":1611,"source":"contracts/TownHall.algo.ts:465","pc":[2523]},{"teal":1612,"source":"contracts/TownHall.algo.ts:465","pc":[2524]},{"teal":1613,"source":"contracts/TownHall.algo.ts:465","pc":[2525,2526]},{"teal":1614,"source":"contracts/TownHall.algo.ts:465","pc":[2527]},{"teal":1615,"source":"contracts/TownHall.algo.ts:465","pc":[2528]},{"teal":1616,"source":"contracts/TownHall.algo.ts:464","pc":[2529,2530,2531]},{"teal":1621,"source":"contracts/TownHall.algo.ts:466","pc":[2532,2533]},{"teal":1622,"source":"contracts/TownHall.algo.ts:466","pc":[2534]},{"teal":1623,"source":"contracts/TownHall.algo.ts:466","pc":[2535]},{"teal":1624,"source":"contracts/TownHall.algo.ts:466","pc":[2536]},{"teal":1625,"source":"contracts/TownHall.algo.ts:466","pc":[2537,2538,2539]},{"teal":1626,"source":"contracts/TownHall.algo.ts:466","pc":[2540,2541]},{"teal":1627,"source":"contracts/TownHall.algo.ts:466","pc":[2542]},{"teal":1628,"source":"contracts/TownHall.algo.ts:466","pc":[2543,2544,2545]},{"teal":1629,"source":"contracts/TownHall.algo.ts:466","pc":[2546,2547]},{"teal":1630,"source":"contracts/TownHall.algo.ts:466","pc":[2548]},{"teal":1631,"source":"contracts/TownHall.algo.ts:466","pc":[2549]},{"teal":1634,"source":"contracts/TownHall.algo.ts:466","pc":[2550,2551,2552]},{"teal":1639,"source":"contracts/TownHall.algo.ts:467","pc":[2553,2554]},{"teal":1640,"source":"contracts/TownHall.algo.ts:467","pc":[2555]},{"teal":1641,"source":"contracts/TownHall.algo.ts:467","pc":[2556]},{"teal":1642,"source":"contracts/TownHall.algo.ts:467","pc":[2557]},{"teal":1643,"source":"contracts/TownHall.algo.ts:467","pc":[2558,2559]},{"teal":1644,"source":"contracts/TownHall.algo.ts:467","pc":[2560]},{"teal":1645,"source":"contracts/TownHall.algo.ts:467","pc":[2561]},{"teal":1646,"source":"contracts/TownHall.algo.ts:466","pc":[2562,2563,2564]},{"teal":1651,"source":"contracts/TownHall.algo.ts:468","pc":[2565,2566]},{"teal":1652,"source":"contracts/TownHall.algo.ts:468","pc":[2567,2568]},{"teal":1653,"source":"contracts/TownHall.algo.ts:468","pc":[2569]},{"teal":1654,"source":"contracts/TownHall.algo.ts:468","pc":[2570]},{"teal":1655,"source":"contracts/TownHall.algo.ts:468","pc":[2571,2572,2573]},{"teal":1656,"source":"contracts/TownHall.algo.ts:468","pc":[2574,2575]},{"teal":1657,"source":"contracts/TownHall.algo.ts:468","pc":[2576]},{"teal":1658,"source":"contracts/TownHall.algo.ts:468","pc":[2577,2578,2579]},{"teal":1659,"source":"contracts/TownHall.algo.ts:468","pc":[2580,2581]},{"teal":1660,"source":"contracts/TownHall.algo.ts:468","pc":[2582]},{"teal":1661,"source":"contracts/TownHall.algo.ts:468","pc":[2583]},{"teal":1664,"source":"contracts/TownHall.algo.ts:468","pc":[2584,2585,2586]},{"teal":1669,"source":"contracts/TownHall.algo.ts:469","pc":[2587,2588]},{"teal":1670,"source":"contracts/TownHall.algo.ts:469","pc":[2589]},{"teal":1671,"source":"contracts/TownHall.algo.ts:469","pc":[2590]},{"teal":1672,"source":"contracts/TownHall.algo.ts:469","pc":[2591]},{"teal":1673,"source":"contracts/TownHall.algo.ts:469","pc":[2592,2593]},{"teal":1674,"source":"contracts/TownHall.algo.ts:469","pc":[2594]},{"teal":1675,"source":"contracts/TownHall.algo.ts:469","pc":[2595]},{"teal":1676,"source":"contracts/TownHall.algo.ts:468","pc":[2596,2597,2598]},{"teal":1681,"source":"contracts/TownHall.algo.ts:470","pc":[2599,2600]},{"teal":1682,"source":"contracts/TownHall.algo.ts:470","pc":[2601,2602]},{"teal":1683,"source":"contracts/TownHall.algo.ts:470","pc":[2603]},{"teal":1684,"source":"contracts/TownHall.algo.ts:470","pc":[2604]},{"teal":1685,"source":"contracts/TownHall.algo.ts:470","pc":[2605,2606,2607]},{"teal":1686,"source":"contracts/TownHall.algo.ts:470","pc":[2608,2609]},{"teal":1687,"source":"contracts/TownHall.algo.ts:470","pc":[2610]},{"teal":1688,"source":"contracts/TownHall.algo.ts:470","pc":[2611,2612,2613]},{"teal":1689,"source":"contracts/TownHall.algo.ts:470","pc":[2614,2615]},{"teal":1690,"source":"contracts/TownHall.algo.ts:470","pc":[2616]},{"teal":1691,"source":"contracts/TownHall.algo.ts:470","pc":[2617]},{"teal":1694,"source":"contracts/TownHall.algo.ts:470","pc":[2618,2619,2620]},{"teal":1699,"source":"contracts/TownHall.algo.ts:471","pc":[2621,2622]},{"teal":1700,"source":"contracts/TownHall.algo.ts:471","pc":[2623]},{"teal":1701,"source":"contracts/TownHall.algo.ts:471","pc":[2624]},{"teal":1702,"source":"contracts/TownHall.algo.ts:471","pc":[2625]},{"teal":1703,"source":"contracts/TownHall.algo.ts:471","pc":[2626,2627]},{"teal":1704,"source":"contracts/TownHall.algo.ts:471","pc":[2628]},{"teal":1705,"source":"contracts/TownHall.algo.ts:471","pc":[2629]},{"teal":1706,"source":"contracts/TownHall.algo.ts:470","pc":[2630,2631,2632]},{"teal":1711,"source":"contracts/TownHall.algo.ts:472","pc":[2633,2634]},{"teal":1712,"source":"contracts/TownHall.algo.ts:472","pc":[2635,2636]},{"teal":1713,"source":"contracts/TownHall.algo.ts:472","pc":[2637]},{"teal":1714,"source":"contracts/TownHall.algo.ts:472","pc":[2638]},{"teal":1715,"source":"contracts/TownHall.algo.ts:472","pc":[2639,2640,2641]},{"teal":1716,"source":"contracts/TownHall.algo.ts:472","pc":[2642,2643]},{"teal":1717,"source":"contracts/TownHall.algo.ts:472","pc":[2644]},{"teal":1718,"source":"contracts/TownHall.algo.ts:472","pc":[2645,2646,2647]},{"teal":1719,"source":"contracts/TownHall.algo.ts:472","pc":[2648,2649]},{"teal":1720,"source":"contracts/TownHall.algo.ts:472","pc":[2650]},{"teal":1721,"source":"contracts/TownHall.algo.ts:472","pc":[2651]},{"teal":1724,"source":"contracts/TownHall.algo.ts:472","pc":[2652,2653,2654]},{"teal":1729,"source":"contracts/TownHall.algo.ts:473","pc":[2655,2656]},{"teal":1730,"source":"contracts/TownHall.algo.ts:473","pc":[2657]},{"teal":1731,"source":"contracts/TownHall.algo.ts:473","pc":[2658]},{"teal":1732,"source":"contracts/TownHall.algo.ts:473","pc":[2659]},{"teal":1733,"source":"contracts/TownHall.algo.ts:473","pc":[2660,2661]},{"teal":1734,"source":"contracts/TownHall.algo.ts:473","pc":[2662]},{"teal":1735,"source":"contracts/TownHall.algo.ts:473","pc":[2663]},{"teal":1736,"source":"contracts/TownHall.algo.ts:472","pc":[2664,2665,2666]},{"teal":1741,"source":"contracts/TownHall.algo.ts:474","pc":[2667,2668]},{"teal":1742,"source":"contracts/TownHall.algo.ts:474","pc":[2669]},{"teal":1743,"source":"contracts/TownHall.algo.ts:474","pc":[2670]},{"teal":1744,"source":"contracts/TownHall.algo.ts:474","pc":[2671]},{"teal":1745,"source":"contracts/TownHall.algo.ts:474","pc":[2672,2673,2674]},{"teal":1746,"source":"contracts/TownHall.algo.ts:474","pc":[2675,2676]},{"teal":1747,"source":"contracts/TownHall.algo.ts:474","pc":[2677]},{"teal":1748,"source":"contracts/TownHall.algo.ts:474","pc":[2678,2679,2680]},{"teal":1749,"source":"contracts/TownHall.algo.ts:474","pc":[2681,2682]},{"teal":1750,"source":"contracts/TownHall.algo.ts:474","pc":[2683]},{"teal":1751,"source":"contracts/TownHall.algo.ts:474","pc":[2684]},{"teal":1754,"source":"contracts/TownHall.algo.ts:474","pc":[2685,2686,2687]},{"teal":1759,"source":"contracts/TownHall.algo.ts:475","pc":[2688,2689]},{"teal":1760,"source":"contracts/TownHall.algo.ts:475","pc":[2690]},{"teal":1761,"source":"contracts/TownHall.algo.ts:475","pc":[2691]},{"teal":1762,"source":"contracts/TownHall.algo.ts:475","pc":[2692]},{"teal":1763,"source":"contracts/TownHall.algo.ts:475","pc":[2693,2694]},{"teal":1764,"source":"contracts/TownHall.algo.ts:475","pc":[2695]},{"teal":1765,"source":"contracts/TownHall.algo.ts:475","pc":[2696]},{"teal":1766,"source":"contracts/TownHall.algo.ts:474","pc":[2697,2698,2699]},{"teal":1770,"source":"contracts/TownHall.algo.ts:477","errorMessage":"Invalid vote: Is player still alive?","pc":[2700]},{"teal":1776,"source":"contracts/TownHall.algo.ts:480","pc":[2701,2702]},{"teal":1777,"source":"contracts/TownHall.algo.ts:480","pc":[2703]},{"teal":1778,"source":"contracts/TownHall.algo.ts:480","pc":[2704]},{"teal":1779,"source":"contracts/TownHall.algo.ts:480","pc":[2705,2706,2707]},{"teal":1780,"source":"contracts/TownHall.algo.ts:480","pc":[2708]},{"teal":1781,"source":"contracts/TownHall.algo.ts:480","pc":[2709]},{"teal":1782,"source":"contracts/TownHall.algo.ts:480","pc":[2710,2711,2712]},{"teal":1783,"source":"contracts/TownHall.algo.ts:480","pc":[2713,2714]},{"teal":1784,"source":"contracts/TownHall.algo.ts:480","pc":[2715]},{"teal":1785,"source":"contracts/TownHall.algo.ts:480","pc":[2716]},{"teal":1786,"source":"contracts/TownHall.algo.ts:480","pc":[2717]},{"teal":1787,"source":"contracts/TownHall.algo.ts:480","pc":[2718]},{"teal":1790,"source":"contracts/TownHall.algo.ts:480","pc":[2719,2720,2721]},{"teal":1795,"source":"contracts/TownHall.algo.ts:481","pc":[2722,2723]},{"teal":1796,"source":"contracts/TownHall.algo.ts:481","pc":[2724]},{"teal":1797,"source":"contracts/TownHall.algo.ts:481","pc":[2725]},{"teal":1798,"source":"contracts/TownHall.algo.ts:480","pc":[2726,2727,2728]},{"teal":1803,"source":"contracts/TownHall.algo.ts:482","pc":[2729,2730]},{"teal":1804,"source":"contracts/TownHall.algo.ts:482","pc":[2731,2732]},{"teal":1805,"source":"contracts/TownHall.algo.ts:482","pc":[2733]},{"teal":1806,"source":"contracts/TownHall.algo.ts:482","pc":[2734,2735,2736]},{"teal":1807,"source":"contracts/TownHall.algo.ts:482","pc":[2737]},{"teal":1808,"source":"contracts/TownHall.algo.ts:482","pc":[2738]},{"teal":1809,"source":"contracts/TownHall.algo.ts:482","pc":[2739,2740,2741]},{"teal":1810,"source":"contracts/TownHall.algo.ts:482","pc":[2742,2743]},{"teal":1811,"source":"contracts/TownHall.algo.ts:482","pc":[2744]},{"teal":1812,"source":"contracts/TownHall.algo.ts:482","pc":[2745]},{"teal":1813,"source":"contracts/TownHall.algo.ts:482","pc":[2746]},{"teal":1814,"source":"contracts/TownHall.algo.ts:482","pc":[2747]},{"teal":1817,"source":"contracts/TownHall.algo.ts:482","pc":[2748,2749,2750]},{"teal":1822,"source":"contracts/TownHall.algo.ts:483","pc":[2751,2752]},{"teal":1823,"source":"contracts/TownHall.algo.ts:483","pc":[2753]},{"teal":1824,"source":"contracts/TownHall.algo.ts:483","pc":[2754]},{"teal":1825,"source":"contracts/TownHall.algo.ts:482","pc":[2755,2756,2757]},{"teal":1830,"source":"contracts/TownHall.algo.ts:484","pc":[2758,2759]},{"teal":1831,"source":"contracts/TownHall.algo.ts:484","pc":[2760,2761]},{"teal":1832,"source":"contracts/TownHall.algo.ts:484","pc":[2762]},{"teal":1833,"source":"contracts/TownHall.algo.ts:484","pc":[2763,2764,2765]},{"teal":1834,"source":"contracts/TownHall.algo.ts:484","pc":[2766]},{"teal":1835,"source":"contracts/TownHall.algo.ts:484","pc":[2767]},{"teal":1836,"source":"contracts/TownHall.algo.ts:484","pc":[2768,2769,2770]},{"teal":1837,"source":"contracts/TownHall.algo.ts:484","pc":[2771,2772]},{"teal":1838,"source":"contracts/TownHall.algo.ts:484","pc":[2773]},{"teal":1839,"source":"contracts/TownHall.algo.ts:484","pc":[2774]},{"teal":1840,"source":"contracts/TownHall.algo.ts:484","pc":[2775]},{"teal":1841,"source":"contracts/TownHall.algo.ts:484","pc":[2776]},{"teal":1844,"source":"contracts/TownHall.algo.ts:484","pc":[2777,2778,2779]},{"teal":1849,"source":"contracts/TownHall.algo.ts:485","pc":[2780,2781]},{"teal":1850,"source":"contracts/TownHall.algo.ts:485","pc":[2782]},{"teal":1851,"source":"contracts/TownHall.algo.ts:485","pc":[2783]},{"teal":1852,"source":"contracts/TownHall.algo.ts:484","pc":[2784,2785,2786]},{"teal":1857,"source":"contracts/TownHall.algo.ts:486","pc":[2787,2788]},{"teal":1858,"source":"contracts/TownHall.algo.ts:486","pc":[2789,2790]},{"teal":1859,"source":"contracts/TownHall.algo.ts:486","pc":[2791]},{"teal":1860,"source":"contracts/TownHall.algo.ts:486","pc":[2792,2793,2794]},{"teal":1861,"source":"contracts/TownHall.algo.ts:486","pc":[2795]},{"teal":1862,"source":"contracts/TownHall.algo.ts:486","pc":[2796]},{"teal":1863,"source":"contracts/TownHall.algo.ts:486","pc":[2797,2798,2799]},{"teal":1864,"source":"contracts/TownHall.algo.ts:486","pc":[2800,2801]},{"teal":1865,"source":"contracts/TownHall.algo.ts:486","pc":[2802]},{"teal":1866,"source":"contracts/TownHall.algo.ts:486","pc":[2803]},{"teal":1867,"source":"contracts/TownHall.algo.ts:486","pc":[2804]},{"teal":1868,"source":"contracts/TownHall.algo.ts:486","pc":[2805]},{"teal":1871,"source":"contracts/TownHall.algo.ts:486","pc":[2806,2807,2808]},{"teal":1876,"source":"contracts/TownHall.algo.ts:487","pc":[2809,2810]},{"teal":1877,"source":"contracts/TownHall.algo.ts:487","pc":[2811]},{"teal":1878,"source":"contracts/TownHall.algo.ts:487","pc":[2812]},{"teal":1879,"source":"contracts/TownHall.algo.ts:486","pc":[2813,2814,2815]},{"teal":1884,"source":"contracts/TownHall.algo.ts:488","pc":[2816,2817]},{"teal":1885,"source":"contracts/TownHall.algo.ts:488","pc":[2818,2819]},{"teal":1886,"source":"contracts/TownHall.algo.ts:488","pc":[2820]},{"teal":1887,"source":"contracts/TownHall.algo.ts:488","pc":[2821,2822,2823]},{"teal":1888,"source":"contracts/TownHall.algo.ts:488","pc":[2824]},{"teal":1889,"source":"contracts/TownHall.algo.ts:488","pc":[2825]},{"teal":1890,"source":"contracts/TownHall.algo.ts:488","pc":[2826,2827,2828]},{"teal":1891,"source":"contracts/TownHall.algo.ts:488","pc":[2829,2830]},{"teal":1892,"source":"contracts/TownHall.algo.ts:488","pc":[2831]},{"teal":1893,"source":"contracts/TownHall.algo.ts:488","pc":[2832]},{"teal":1894,"source":"contracts/TownHall.algo.ts:488","pc":[2833]},{"teal":1895,"source":"contracts/TownHall.algo.ts:488","pc":[2834]},{"teal":1898,"source":"contracts/TownHall.algo.ts:488","pc":[2835,2836,2837]},{"teal":1903,"source":"contracts/TownHall.algo.ts:489","pc":[2838,2839]},{"teal":1904,"source":"contracts/TownHall.algo.ts:489","pc":[2840]},{"teal":1905,"source":"contracts/TownHall.algo.ts:489","pc":[2841]},{"teal":1906,"source":"contracts/TownHall.algo.ts:488","pc":[2842,2843,2844]},{"teal":1911,"source":"contracts/TownHall.algo.ts:490","pc":[2845,2846]},{"teal":1912,"source":"contracts/TownHall.algo.ts:490","pc":[2847,2848]},{"teal":1913,"source":"contracts/TownHall.algo.ts:490","pc":[2849]},{"teal":1914,"source":"contracts/TownHall.algo.ts:490","pc":[2850,2851,2852]},{"teal":1915,"source":"contracts/TownHall.algo.ts:490","pc":[2853]},{"teal":1916,"source":"contracts/TownHall.algo.ts:490","pc":[2854]},{"teal":1917,"source":"contracts/TownHall.algo.ts:490","pc":[2855,2856,2857]},{"teal":1918,"source":"contracts/TownHall.algo.ts:490","pc":[2858,2859]},{"teal":1919,"source":"contracts/TownHall.algo.ts:490","pc":[2860]},{"teal":1920,"source":"contracts/TownHall.algo.ts:490","pc":[2861]},{"teal":1921,"source":"contracts/TownHall.algo.ts:490","pc":[2862]},{"teal":1922,"source":"contracts/TownHall.algo.ts:490","pc":[2863]},{"teal":1925,"source":"contracts/TownHall.algo.ts:490","pc":[2864,2865,2866]},{"teal":1930,"source":"contracts/TownHall.algo.ts:491","pc":[2867,2868]},{"teal":1931,"source":"contracts/TownHall.algo.ts:491","pc":[2869]},{"teal":1932,"source":"contracts/TownHall.algo.ts:491","pc":[2870]},{"teal":1933,"source":"contracts/TownHall.algo.ts:490","pc":[2871,2872,2873]},{"teal":1937,"source":"contracts/TownHall.algo.ts:493","errorMessage":"Address not allowed to vote.","pc":[2874]},{"teal":1942,"source":"contracts/TownHall.algo.ts:496","pc":[2875,2876]},{"teal":1943,"source":"contracts/TownHall.algo.ts:496","pc":[2877]},{"teal":1944,"source":"contracts/TownHall.algo.ts:496","pc":[2878]},{"teal":1945,"source":"contracts/TownHall.algo.ts:496","pc":[2879]},{"teal":1946,"source":"contracts/TownHall.algo.ts:496","pc":[2880,2881]},{"teal":1947,"source":"contracts/TownHall.algo.ts:496","pc":[2882]},{"teal":1948,"source":"contracts/TownHall.algo.ts:496","pc":[2883]},{"teal":1953,"source":"contracts/TownHall.algo.ts:498","pc":[2884,2885]},{"teal":1954,"source":"contracts/TownHall.algo.ts:498","pc":[2886]},{"teal":1955,"source":"contracts/TownHall.algo.ts:498","pc":[2887,2888]},{"teal":1956,"source":"contracts/TownHall.algo.ts:498","pc":[2889]},{"teal":1957,"source":"contracts/TownHall.algo.ts:498","pc":[2890]},{"teal":1958,"source":"contracts/TownHall.algo.ts:498","pc":[2891,2892,2893]},{"teal":1963,"source":"contracts/TownHall.algo.ts:500","pc":[2894]},{"teal":1964,"source":"contracts/Constants.ts:20","pc":[2895,2896]},{"teal":1965,"source":"contracts/TownHall.algo.ts:500","pc":[2897]},{"teal":1969,"source":"contracts/TownHall.algo.ts:503","pc":[2898,2899]},{"teal":1970,"source":"contracts/TownHall.algo.ts:503","pc":[2900]},{"teal":1971,"source":"contracts/TownHall.algo.ts:503","pc":[2901]},{"teal":1975,"source":"contracts/TownHall.algo.ts:504","pc":[2902,2903]},{"teal":1976,"source":"contracts/TownHall.algo.ts:504","pc":[2904]},{"teal":1977,"source":"contracts/TownHall.algo.ts:504","pc":[2905]},{"teal":1981,"source":"contracts/TownHall.algo.ts:505","pc":[2906,2907]},{"teal":1982,"source":"contracts/TownHall.algo.ts:505","pc":[2908]},{"teal":1983,"source":"contracts/TownHall.algo.ts:505","pc":[2909]},{"teal":1987,"source":"contracts/TownHall.algo.ts:506","pc":[2910,2911]},{"teal":1988,"source":"contracts/TownHall.algo.ts:506","pc":[2912]},{"teal":1989,"source":"contracts/TownHall.algo.ts:506","pc":[2913]},{"teal":1993,"source":"contracts/TownHall.algo.ts:507","pc":[2914,2915]},{"teal":1994,"source":"contracts/TownHall.algo.ts:507","pc":[2916]},{"teal":1995,"source":"contracts/TownHall.algo.ts:507","pc":[2917]},{"teal":1999,"source":"contracts/TownHall.algo.ts:508","pc":[2918,2919]},{"teal":2000,"source":"contracts/TownHall.algo.ts:508","pc":[2920]},{"teal":2001,"source":"contracts/TownHall.algo.ts:508","pc":[2921]},{"teal":2005,"source":"contracts/TownHall.algo.ts:509","pc":[2922,2923]},{"teal":2006,"source":"contracts/TownHall.algo.ts:509","pc":[2924]},{"teal":2007,"source":"contracts/TownHall.algo.ts:509","pc":[2925]},{"teal":2010,"source":"contracts/TownHall.algo.ts:446","pc":[2926]},{"teal":2015,"source":"contracts/TownHall.algo.ts:515","pc":[2927,2928,2929]},{"teal":2016,"source":"contracts/TownHall.algo.ts:515","pc":[2930]},{"teal":2017,"source":"contracts/TownHall.algo.ts:515","pc":[2931]},{"teal":2021,"source":"contracts/TownHall.algo.ts:515","pc":[2932,2933,2934]},{"teal":2024,"source":"contracts/TownHall.algo.ts:515","pc":[2935]},{"teal":2025,"source":"contracts/TownHall.algo.ts:515","pc":[2936]},{"teal":2032,"source":"contracts/TownHall.algo.ts:517","pc":[2937]},{"teal":2033,"source":"contracts/TownHall.algo.ts:517","pc":[2938]},{"teal":2034,"source":"contracts/Constants.ts:20","pc":[2939,2940]},{"teal":2035,"source":"contracts/TownHall.algo.ts:517","pc":[2941]},{"teal":2038,"source":"contracts/TownHall.algo.ts:516","errorMessage":"Invalid method call: Game is not in Day Stage Eliminate state.","pc":[2942]},{"teal":2042,"source":"contracts/TownHall.algo.ts:521","pc":[2943]},{"teal":2043,"source":"contracts/TownHall.algo.ts:521","pc":[2944,2945]},{"teal":2044,"source":"contracts/TownHall.algo.ts:521","pc":[2946]},{"teal":2048,"source":"contracts/TownHall.algo.ts:522","pc":[2947]},{"teal":2049,"source":"contracts/TownHall.algo.ts:522","pc":[2948,2949]},{"teal":2053,"source":"contracts/TownHall.algo.ts:528","pc":[2950,2951]},{"teal":2054,"source":"contracts/TownHall.algo.ts:528","pc":[2952]},{"teal":2055,"source":"contracts/TownHall.algo.ts:528","pc":[2953]},{"teal":2056,"source":"contracts/TownHall.algo.ts:528","pc":[2954]},{"teal":2057,"source":"contracts/TownHall.algo.ts:528","pc":[2955]},{"teal":2058,"source":"contracts/TownHall.algo.ts:528","pc":[2956,2957]},{"teal":2063,"source":"contracts/TownHall.algo.ts:530","pc":[2958,2959]},{"teal":2064,"source":"contracts/TownHall.algo.ts:530","pc":[2960]},{"teal":2065,"source":"contracts/TownHall.algo.ts:530","pc":[2961,2962]},{"teal":2066,"source":"contracts/TownHall.algo.ts:530","pc":[2963]},{"teal":2067,"source":"contracts/TownHall.algo.ts:530","pc":[2964]},{"teal":2068,"source":"contracts/TownHall.algo.ts:530","pc":[2965,2966,2967]},{"teal":2069,"source":"contracts/TownHall.algo.ts:530","pc":[2968,2969]},{"teal":2070,"source":"contracts/TownHall.algo.ts:530","pc":[2970]},{"teal":2071,"source":"contracts/TownHall.algo.ts:530","pc":[2971,2972]},{"teal":2072,"source":"contracts/TownHall.algo.ts:530","pc":[2973]},{"teal":2073,"source":"contracts/TownHall.algo.ts:530","pc":[2974]},{"teal":2074,"source":"contracts/TownHall.algo.ts:530","pc":[2975,2976,2977]},{"teal":2075,"source":"contracts/TownHall.algo.ts:530","pc":[2978,2979]},{"teal":2076,"source":"contracts/TownHall.algo.ts:530","pc":[2980]},{"teal":2079,"source":"contracts/TownHall.algo.ts:530","pc":[2981]},{"teal":2082,"source":"contracts/TownHall.algo.ts:530","pc":[2982,2983,2984]},{"teal":2087,"source":"contracts/TownHall.algo.ts:531","pc":[2985]},{"teal":2088,"source":"contracts/TownHall.algo.ts:531","pc":[2986]},{"teal":2089,"source":"contracts/TownHall.algo.ts:531","pc":[2987]},{"teal":2090,"source":"contracts/TownHall.algo.ts:531","pc":[2988,2989,2990]},{"teal":2091,"source":"contracts/TownHall.algo.ts:531","pc":[2991]},{"teal":2095,"source":"contracts/TownHall.algo.ts:532","pc":[2992,2993]},{"teal":2096,"source":"contracts/TownHall.algo.ts:532","pc":[2994]},{"teal":2097,"source":"contracts/TownHall.algo.ts:532","pc":[2995,2996]},{"teal":2103,"source":"contracts/TownHall.algo.ts:535","pc":[2997,2998]},{"teal":2104,"source":"contracts/TownHall.algo.ts:535","pc":[2999]},{"teal":2105,"source":"contracts/TownHall.algo.ts:535","pc":[3000,3001]},{"teal":2106,"source":"contracts/TownHall.algo.ts:535","pc":[3002]},{"teal":2107,"source":"contracts/TownHall.algo.ts:535","pc":[3003]},{"teal":2108,"source":"contracts/TownHall.algo.ts:535","pc":[3004,3005,3006]},{"teal":2109,"source":"contracts/TownHall.algo.ts:535","pc":[3007,3008]},{"teal":2110,"source":"contracts/TownHall.algo.ts:535","pc":[3009]},{"teal":2111,"source":"contracts/TownHall.algo.ts:535","pc":[3010,3011]},{"teal":2112,"source":"contracts/TownHall.algo.ts:535","pc":[3012]},{"teal":2113,"source":"contracts/TownHall.algo.ts:535","pc":[3013]},{"teal":2114,"source":"contracts/TownHall.algo.ts:535","pc":[3014,3015,3016]},{"teal":2115,"source":"contracts/TownHall.algo.ts:535","pc":[3017,3018]},{"teal":2116,"source":"contracts/TownHall.algo.ts:535","pc":[3019]},{"teal":2119,"source":"contracts/TownHall.algo.ts:535","pc":[3020]},{"teal":2122,"source":"contracts/TownHall.algo.ts:535","pc":[3021,3022,3023]},{"teal":2127,"source":"contracts/TownHall.algo.ts:536","pc":[3024]},{"teal":2128,"source":"contracts/TownHall.algo.ts:536","pc":[3025,3026]},{"teal":2129,"source":"contracts/TownHall.algo.ts:536","pc":[3027]},{"teal":2130,"source":"contracts/TownHall.algo.ts:536","pc":[3028,3029,3030]},{"teal":2131,"source":"contracts/TownHall.algo.ts:536","pc":[3031]},{"teal":2135,"source":"contracts/TownHall.algo.ts:537","pc":[3032,3033]},{"teal":2136,"source":"contracts/TownHall.algo.ts:537","pc":[3034]},{"teal":2137,"source":"contracts/TownHall.algo.ts:537","pc":[3035,3036]},{"teal":2143,"source":"contracts/TownHall.algo.ts:540","pc":[3037,3038]},{"teal":2144,"source":"contracts/TownHall.algo.ts:540","pc":[3039]},{"teal":2145,"source":"contracts/TownHall.algo.ts:540","pc":[3040,3041]},{"teal":2146,"source":"contracts/TownHall.algo.ts:540","pc":[3042]},{"teal":2147,"source":"contracts/TownHall.algo.ts:540","pc":[3043]},{"teal":2148,"source":"contracts/TownHall.algo.ts:540","pc":[3044,3045,3046]},{"teal":2149,"source":"contracts/TownHall.algo.ts:540","pc":[3047,3048]},{"teal":2150,"source":"contracts/TownHall.algo.ts:540","pc":[3049]},{"teal":2151,"source":"contracts/TownHall.algo.ts:540","pc":[3050,3051]},{"teal":2152,"source":"contracts/TownHall.algo.ts:540","pc":[3052]},{"teal":2153,"source":"contracts/TownHall.algo.ts:540","pc":[3053]},{"teal":2154,"source":"contracts/TownHall.algo.ts:540","pc":[3054,3055,3056]},{"teal":2155,"source":"contracts/TownHall.algo.ts:540","pc":[3057,3058]},{"teal":2156,"source":"contracts/TownHall.algo.ts:540","pc":[3059]},{"teal":2159,"source":"contracts/TownHall.algo.ts:540","pc":[3060]},{"teal":2162,"source":"contracts/TownHall.algo.ts:540","pc":[3061,3062,3063]},{"teal":2167,"source":"contracts/TownHall.algo.ts:541","pc":[3064]},{"teal":2168,"source":"contracts/TownHall.algo.ts:541","pc":[3065,3066]},{"teal":2169,"source":"contracts/TownHall.algo.ts:541","pc":[3067]},{"teal":2170,"source":"contracts/TownHall.algo.ts:541","pc":[3068,3069,3070]},{"teal":2171,"source":"contracts/TownHall.algo.ts:541","pc":[3071]},{"teal":2175,"source":"contracts/TownHall.algo.ts:542","pc":[3072,3073]},{"teal":2176,"source":"contracts/TownHall.algo.ts:542","pc":[3074]},{"teal":2177,"source":"contracts/TownHall.algo.ts:542","pc":[3075,3076]},{"teal":2183,"source":"contracts/TownHall.algo.ts:545","pc":[3077,3078]},{"teal":2184,"source":"contracts/TownHall.algo.ts:545","pc":[3079]},{"teal":2185,"source":"contracts/TownHall.algo.ts:545","pc":[3080,3081]},{"teal":2186,"source":"contracts/TownHall.algo.ts:545","pc":[3082]},{"teal":2187,"source":"contracts/TownHall.algo.ts:545","pc":[3083]},{"teal":2188,"source":"contracts/TownHall.algo.ts:545","pc":[3084,3085,3086]},{"teal":2189,"source":"contracts/TownHall.algo.ts:545","pc":[3087,3088]},{"teal":2190,"source":"contracts/TownHall.algo.ts:545","pc":[3089]},{"teal":2191,"source":"contracts/TownHall.algo.ts:545","pc":[3090,3091]},{"teal":2192,"source":"contracts/TownHall.algo.ts:545","pc":[3092]},{"teal":2193,"source":"contracts/TownHall.algo.ts:545","pc":[3093]},{"teal":2194,"source":"contracts/TownHall.algo.ts:545","pc":[3094,3095,3096]},{"teal":2195,"source":"contracts/TownHall.algo.ts:545","pc":[3097,3098]},{"teal":2196,"source":"contracts/TownHall.algo.ts:545","pc":[3099]},{"teal":2199,"source":"contracts/TownHall.algo.ts:545","pc":[3100]},{"teal":2202,"source":"contracts/TownHall.algo.ts:545","pc":[3101,3102,3103]},{"teal":2207,"source":"contracts/TownHall.algo.ts:546","pc":[3104]},{"teal":2208,"source":"contracts/TownHall.algo.ts:546","pc":[3105,3106]},{"teal":2209,"source":"contracts/TownHall.algo.ts:546","pc":[3107]},{"teal":2210,"source":"contracts/TownHall.algo.ts:546","pc":[3108,3109,3110]},{"teal":2211,"source":"contracts/TownHall.algo.ts:546","pc":[3111]},{"teal":2215,"source":"contracts/TownHall.algo.ts:547","pc":[3112,3113]},{"teal":2216,"source":"contracts/TownHall.algo.ts:547","pc":[3114]},{"teal":2217,"source":"contracts/TownHall.algo.ts:547","pc":[3115,3116]},{"teal":2223,"source":"contracts/TownHall.algo.ts:550","pc":[3117,3118]},{"teal":2224,"source":"contracts/TownHall.algo.ts:550","pc":[3119]},{"teal":2225,"source":"contracts/TownHall.algo.ts:550","pc":[3120,3121]},{"teal":2226,"source":"contracts/TownHall.algo.ts:550","pc":[3122]},{"teal":2227,"source":"contracts/TownHall.algo.ts:550","pc":[3123]},{"teal":2228,"source":"contracts/TownHall.algo.ts:550","pc":[3124,3125,3126]},{"teal":2229,"source":"contracts/TownHall.algo.ts:550","pc":[3127,3128]},{"teal":2230,"source":"contracts/TownHall.algo.ts:550","pc":[3129]},{"teal":2231,"source":"contracts/TownHall.algo.ts:550","pc":[3130,3131]},{"teal":2232,"source":"contracts/TownHall.algo.ts:550","pc":[3132]},{"teal":2233,"source":"contracts/TownHall.algo.ts:550","pc":[3133]},{"teal":2234,"source":"contracts/TownHall.algo.ts:550","pc":[3134,3135,3136]},{"teal":2235,"source":"contracts/TownHall.algo.ts:550","pc":[3137,3138]},{"teal":2236,"source":"contracts/TownHall.algo.ts:550","pc":[3139]},{"teal":2239,"source":"contracts/TownHall.algo.ts:550","pc":[3140]},{"teal":2242,"source":"contracts/TownHall.algo.ts:550","pc":[3141,3142,3143]},{"teal":2247,"source":"contracts/TownHall.algo.ts:551","pc":[3144]},{"teal":2248,"source":"contracts/TownHall.algo.ts:551","pc":[3145,3146]},{"teal":2249,"source":"contracts/TownHall.algo.ts:551","pc":[3147]},{"teal":2250,"source":"contracts/TownHall.algo.ts:551","pc":[3148,3149,3150]},{"teal":2251,"source":"contracts/TownHall.algo.ts:551","pc":[3151]},{"teal":2255,"source":"contracts/TownHall.algo.ts:552","pc":[3152,3153]},{"teal":2256,"source":"contracts/TownHall.algo.ts:552","pc":[3154]},{"teal":2257,"source":"contracts/TownHall.algo.ts:552","pc":[3155,3156]},{"teal":2263,"source":"contracts/TownHall.algo.ts:555","pc":[3157,3158]},{"teal":2264,"source":"contracts/TownHall.algo.ts:555","pc":[3159]},{"teal":2265,"source":"contracts/TownHall.algo.ts:555","pc":[3160,3161]},{"teal":2266,"source":"contracts/TownHall.algo.ts:555","pc":[3162]},{"teal":2267,"source":"contracts/TownHall.algo.ts:555","pc":[3163]},{"teal":2268,"source":"contracts/TownHall.algo.ts:555","pc":[3164,3165,3166]},{"teal":2269,"source":"contracts/TownHall.algo.ts:555","pc":[3167,3168]},{"teal":2270,"source":"contracts/TownHall.algo.ts:555","pc":[3169]},{"teal":2271,"source":"contracts/TownHall.algo.ts:555","pc":[3170,3171]},{"teal":2272,"source":"contracts/TownHall.algo.ts:555","pc":[3172]},{"teal":2273,"source":"contracts/TownHall.algo.ts:555","pc":[3173]},{"teal":2274,"source":"contracts/TownHall.algo.ts:555","pc":[3174,3175,3176]},{"teal":2275,"source":"contracts/TownHall.algo.ts:555","pc":[3177,3178]},{"teal":2276,"source":"contracts/TownHall.algo.ts:555","pc":[3179]},{"teal":2279,"source":"contracts/TownHall.algo.ts:555","pc":[3180]},{"teal":2282,"source":"contracts/TownHall.algo.ts:555","pc":[3181,3182,3183]},{"teal":2287,"source":"contracts/TownHall.algo.ts:556","pc":[3184]},{"teal":2288,"source":"contracts/TownHall.algo.ts:556","pc":[3185,3186]},{"teal":2289,"source":"contracts/TownHall.algo.ts:556","pc":[3187]},{"teal":2290,"source":"contracts/TownHall.algo.ts:556","pc":[3188,3189,3190]},{"teal":2291,"source":"contracts/TownHall.algo.ts:556","pc":[3191]},{"teal":2295,"source":"contracts/TownHall.algo.ts:557","pc":[3192,3193]},{"teal":2296,"source":"contracts/TownHall.algo.ts:557","pc":[3194]},{"teal":2297,"source":"contracts/TownHall.algo.ts:557","pc":[3195,3196]},{"teal":2302,"source":"contracts/TownHall.algo.ts:560","pc":[3197]},{"teal":2303,"source":"contracts/TownHall.algo.ts:560","pc":[3198]},{"teal":2304,"source":"contracts/TownHall.algo.ts:560","pc":[3199,3200]},{"teal":2305,"source":"contracts/TownHall.algo.ts:560","pc":[3201]},{"teal":2308,"source":"contracts/TownHall.algo.ts:560","errorMessage":"Error state: Zero Address won vote!","pc":[3202]},{"teal":2312,"source":"contracts/TownHall.algo.ts:561","pc":[3203,3204]},{"teal":2313,"source":"contracts/TownHall.algo.ts:561","pc":[3205]},{"teal":2314,"source":"contracts/TownHall.algo.ts:561","pc":[3206]},{"teal":2317,"source":"contracts/TownHall.algo.ts:561","errorMessage":"Error state: No votes were cast!","pc":[3207]},{"teal":2322,"source":"contracts/TownHall.algo.ts:566","pc":[3208]},{"teal":2323,"source":"contracts/TownHall.algo.ts:566","pc":[3209]},{"teal":2324,"source":"contracts/TownHall.algo.ts:566","pc":[3210]},{"teal":2325,"source":"contracts/TownHall.algo.ts:566","pc":[3211]},{"teal":2326,"source":"contracts/TownHall.algo.ts:566","pc":[3212,3213,3214]},{"teal":2327,"source":"contracts/TownHall.algo.ts:566","pc":[3215]},{"teal":2328,"source":"contracts/TownHall.algo.ts:566","pc":[3216,3217,3218]},{"teal":2333,"source":"contracts/TownHall.algo.ts:567","pc":[3219]},{"teal":2334,"source":"contracts/TownHall.algo.ts:567","pc":[3220]},{"teal":2335,"source":"contracts/TownHall.algo.ts:567","pc":[3221,3222]},{"teal":2336,"source":"contracts/TownHall.algo.ts:567","pc":[3223,3224]},{"teal":2337,"source":"contracts/TownHall.algo.ts:567","pc":[3225]},{"teal":2338,"source":"contracts/TownHall.algo.ts:567","pc":[3226]},{"teal":2339,"source":"contracts/TownHall.algo.ts:567","pc":[3227]},{"teal":2345,"source":"contracts/TownHall.algo.ts:570","pc":[3228]},{"teal":2346,"source":"contracts/TownHall.algo.ts:570","pc":[3229]},{"teal":2347,"source":"contracts/TownHall.algo.ts:570","pc":[3230,3231]},{"teal":2348,"source":"contracts/TownHall.algo.ts:570","pc":[3232]},{"teal":2349,"source":"contracts/TownHall.algo.ts:570","pc":[3233,3234,3235]},{"teal":2350,"source":"contracts/TownHall.algo.ts:570","pc":[3236]},{"teal":2351,"source":"contracts/TownHall.algo.ts:570","pc":[3237,3238,3239]},{"teal":2356,"source":"contracts/TownHall.algo.ts:571","pc":[3240,3241]},{"teal":2357,"source":"contracts/TownHall.algo.ts:571","pc":[3242]},{"teal":2358,"source":"contracts/TownHall.algo.ts:571","pc":[3243,3244]},{"teal":2359,"source":"contracts/TownHall.algo.ts:571","pc":[3245,3246]},{"teal":2360,"source":"contracts/TownHall.algo.ts:571","pc":[3247,3248]},{"teal":2361,"source":"contracts/TownHall.algo.ts:571","pc":[3249]},{"teal":2362,"source":"contracts/TownHall.algo.ts:571","pc":[3250]},{"teal":2368,"source":"contracts/TownHall.algo.ts:574","pc":[3251]},{"teal":2369,"source":"contracts/TownHall.algo.ts:574","pc":[3252]},{"teal":2370,"source":"contracts/TownHall.algo.ts:574","pc":[3253,3254]},{"teal":2371,"source":"contracts/TownHall.algo.ts:574","pc":[3255]},{"teal":2372,"source":"contracts/TownHall.algo.ts:574","pc":[3256,3257,3258]},{"teal":2373,"source":"contracts/TownHall.algo.ts:574","pc":[3259]},{"teal":2374,"source":"contracts/TownHall.algo.ts:574","pc":[3260,3261,3262]},{"teal":2379,"source":"contracts/TownHall.algo.ts:575","pc":[3263,3264]},{"teal":2380,"source":"contracts/TownHall.algo.ts:575","pc":[3265]},{"teal":2381,"source":"contracts/TownHall.algo.ts:575","pc":[3266,3267]},{"teal":2382,"source":"contracts/TownHall.algo.ts:575","pc":[3268,3269]},{"teal":2383,"source":"contracts/TownHall.algo.ts:575","pc":[3270,3271]},{"teal":2384,"source":"contracts/TownHall.algo.ts:575","pc":[3272]},{"teal":2385,"source":"contracts/TownHall.algo.ts:575","pc":[3273]},{"teal":2391,"source":"contracts/TownHall.algo.ts:578","pc":[3274]},{"teal":2392,"source":"contracts/TownHall.algo.ts:578","pc":[3275]},{"teal":2393,"source":"contracts/TownHall.algo.ts:578","pc":[3276,3277]},{"teal":2394,"source":"contracts/TownHall.algo.ts:578","pc":[3278]},{"teal":2395,"source":"contracts/TownHall.algo.ts:578","pc":[3279,3280,3281]},{"teal":2396,"source":"contracts/TownHall.algo.ts:578","pc":[3282]},{"teal":2397,"source":"contracts/TownHall.algo.ts:578","pc":[3283,3284,3285]},{"teal":2402,"source":"contracts/TownHall.algo.ts:579","pc":[3286,3287]},{"teal":2403,"source":"contracts/TownHall.algo.ts:579","pc":[3288]},{"teal":2404,"source":"contracts/TownHall.algo.ts:579","pc":[3289,3290]},{"teal":2405,"source":"contracts/TownHall.algo.ts:579","pc":[3291,3292]},{"teal":2406,"source":"contracts/TownHall.algo.ts:579","pc":[3293,3294]},{"teal":2407,"source":"contracts/TownHall.algo.ts:579","pc":[3295]},{"teal":2408,"source":"contracts/TownHall.algo.ts:579","pc":[3296]},{"teal":2414,"source":"contracts/TownHall.algo.ts:582","pc":[3297]},{"teal":2415,"source":"contracts/TownHall.algo.ts:582","pc":[3298]},{"teal":2416,"source":"contracts/TownHall.algo.ts:582","pc":[3299,3300]},{"teal":2417,"source":"contracts/TownHall.algo.ts:582","pc":[3301]},{"teal":2418,"source":"contracts/TownHall.algo.ts:582","pc":[3302,3303,3304]},{"teal":2419,"source":"contracts/TownHall.algo.ts:582","pc":[3305]},{"teal":2420,"source":"contracts/TownHall.algo.ts:582","pc":[3306,3307,3308]},{"teal":2425,"source":"contracts/TownHall.algo.ts:583","pc":[3309,3310]},{"teal":2426,"source":"contracts/TownHall.algo.ts:583","pc":[3311]},{"teal":2427,"source":"contracts/TownHall.algo.ts:583","pc":[3312,3313]},{"teal":2428,"source":"contracts/TownHall.algo.ts:583","pc":[3314,3315]},{"teal":2429,"source":"contracts/TownHall.algo.ts:583","pc":[3316,3317]},{"teal":2430,"source":"contracts/TownHall.algo.ts:583","pc":[3318]},{"teal":2431,"source":"contracts/TownHall.algo.ts:583","pc":[3319]},{"teal":2437,"source":"contracts/TownHall.algo.ts:586","pc":[3320]},{"teal":2438,"source":"contracts/TownHall.algo.ts:586","pc":[3321]},{"teal":2439,"source":"contracts/TownHall.algo.ts:586","pc":[3322,3323]},{"teal":2440,"source":"contracts/TownHall.algo.ts:586","pc":[3324]},{"teal":2441,"source":"contracts/TownHall.algo.ts:586","pc":[3325,3326,3327]},{"teal":2442,"source":"contracts/TownHall.algo.ts:586","pc":[3328]},{"teal":2443,"source":"contracts/TownHall.algo.ts:586","pc":[3329,3330,3331]},{"teal":2448,"source":"contracts/TownHall.algo.ts:587","pc":[3332,3333]},{"teal":2449,"source":"contracts/TownHall.algo.ts:587","pc":[3334]},{"teal":2450,"source":"contracts/TownHall.algo.ts:587","pc":[3335,3336]},{"teal":2451,"source":"contracts/TownHall.algo.ts:587","pc":[3337,3338]},{"teal":2452,"source":"contracts/TownHall.algo.ts:587","pc":[3339,3340]},{"teal":2453,"source":"contracts/TownHall.algo.ts:587","pc":[3341]},{"teal":2454,"source":"contracts/TownHall.algo.ts:587","pc":[3342]},{"teal":2459,"source":"contracts/TownHall.algo.ts:590","pc":[3343,3344]},{"teal":2460,"source":"contracts/TownHall.algo.ts:590","pc":[3345]},{"teal":2461,"source":"contracts/TownHall.algo.ts:590","pc":[3346]},{"teal":2462,"source":"contracts/TownHall.algo.ts:590","pc":[3347]},{"teal":2463,"source":"contracts/TownHall.algo.ts:590","pc":[3348,3349]},{"teal":2464,"source":"contracts/TownHall.algo.ts:590","pc":[3350]},{"teal":2465,"source":"contracts/TownHall.algo.ts:590","pc":[3351]},{"teal":2469,"source":"contracts/TownHall.algo.ts:594","pc":[3352,3353]},{"teal":2470,"source":"contracts/TownHall.algo.ts:594","pc":[3354]},{"teal":2471,"source":"contracts/TownHall.algo.ts:594","pc":[3355]},{"teal":2475,"source":"contracts/TownHall.algo.ts:595","pc":[3356,3357]},{"teal":2476,"source":"contracts/TownHall.algo.ts:595","pc":[3358]},{"teal":2477,"source":"contracts/TownHall.algo.ts:595","pc":[3359]},{"teal":2481,"source":"contracts/TownHall.algo.ts:596","pc":[3360,3361]},{"teal":2482,"source":"contracts/TownHall.algo.ts:596","pc":[3362]},{"teal":2483,"source":"contracts/TownHall.algo.ts:596","pc":[3363]},{"teal":2487,"source":"contracts/TownHall.algo.ts:597","pc":[3364,3365]},{"teal":2488,"source":"contracts/TownHall.algo.ts:597","pc":[3366]},{"teal":2489,"source":"contracts/TownHall.algo.ts:597","pc":[3367]},{"teal":2493,"source":"contracts/TownHall.algo.ts:598","pc":[3368,3369]},{"teal":2494,"source":"contracts/TownHall.algo.ts:598","pc":[3370]},{"teal":2495,"source":"contracts/TownHall.algo.ts:598","pc":[3371]},{"teal":2499,"source":"contracts/TownHall.algo.ts:599","pc":[3372,3373]},{"teal":2500,"source":"contracts/TownHall.algo.ts:599","pc":[3374]},{"teal":2501,"source":"contracts/TownHall.algo.ts:599","pc":[3375]},{"teal":2505,"source":"contracts/TownHall.algo.ts:601","pc":[3376]},{"teal":2506,"source":"contracts/Constants.ts:21","pc":[3377,3378]},{"teal":2507,"source":"contracts/TownHall.algo.ts:601","pc":[3379]},{"teal":2508,"source":"contracts/TownHall.algo.ts:515","pc":[3380]},{"teal":2513,"source":"contracts/TownHall.algo.ts:604","pc":[3381,3382,3383]},{"teal":2514,"source":"contracts/TownHall.algo.ts:604","pc":[3384,3385,3386]},{"teal":2517,"source":"contracts/TownHall.algo.ts:604","pc":[3387,3388,3389]},{"teal":2518,"source":"contracts/TownHall.algo.ts:604","pc":[3390]},{"teal":2519,"source":"contracts/TownHall.algo.ts:604","pc":[3391]},{"teal":2523,"source":"contracts/TownHall.algo.ts:604","pc":[3392,3393,3394]},{"teal":2526,"source":"contracts/TownHall.algo.ts:604","pc":[3395]},{"teal":2527,"source":"contracts/TownHall.algo.ts:604","pc":[3396,3397]},{"teal":2534,"source":"contracts/TownHall.algo.ts:606","pc":[3398]},{"teal":2535,"source":"contracts/TownHall.algo.ts:606","pc":[3399]},{"teal":2536,"source":"contracts/Constants.ts:21","pc":[3400,3401]},{"teal":2537,"source":"contracts/TownHall.algo.ts:606","pc":[3402]},{"teal":2540,"source":"contracts/TownHall.algo.ts:605","errorMessage":"Invalid method call: Game is not in Day Stage Reveal state.","pc":[3403]},{"teal":2544,"source":"contracts/TownHall.algo.ts:610","pc":[3404]},{"teal":2545,"source":"contracts/TownHall.algo.ts:610","pc":[3405]},{"teal":2546,"source":"contracts/TownHall.algo.ts:610","pc":[3406,3407]},{"teal":2547,"source":"contracts/TownHall.algo.ts:610","pc":[3408]},{"teal":2550,"source":"contracts/TownHall.algo.ts:610","errorMessage":"Error state: Other player called method.","pc":[3409]},{"teal":2554,"source":"contracts/TownHall.algo.ts:613","pc":[3410,3411]},{"teal":2555,"source":"contracts/TownHall.algo.ts:613","pc":[3412,3413]},{"teal":2556,"source":"contracts/TownHall.algo.ts:613","pc":[3414,3415]},{"teal":2557,"source":"contracts/TownHall.algo.ts:613","pc":[3416,3417]},{"teal":2561,"source":"contracts/TownHall.algo.ts:614","pc":[3418,3419]},{"teal":2562,"source":"contracts/TownHall.algo.ts:614","pc":[3420,3421,3422]},{"teal":2563,"source":"contracts/TownHall.algo.ts:614","pc":[3423,3424]},{"teal":2567,"source":"contracts/TownHall.algo.ts:615","pc":[3425,3426]},{"teal":2568,"source":"contracts/TownHall.algo.ts:615","pc":[3427,3428]},{"teal":2569,"source":"contracts/TownHall.algo.ts:615","pc":[3429,3430]},{"teal":2570,"source":"contracts/TownHall.algo.ts:615","pc":[3431,3432]},{"teal":2575,"source":"contracts/TownHall.algo.ts:617","pc":[3433,3434]},{"teal":2576,"source":"contracts/TownHall.algo.ts:617","pc":[3435,3436]},{"teal":2577,"source":"contracts/TownHall.algo.ts:617","pc":[3437]},{"teal":2578,"source":"contracts/TownHall.algo.ts:617","pc":[3438]},{"teal":2579,"source":"contracts/TownHall.algo.ts:617","pc":[3439,3440,3441]},{"teal":2584,"source":"contracts/TownHall.algo.ts:620","pc":[3442,3443]},{"teal":2585,"source":"contracts/TownHall.algo.ts:620","pc":[3444,3445]},{"teal":2586,"source":"contracts/TownHall.algo.ts:620","pc":[3446]},{"teal":2590,"source":"contracts/TownHall.algo.ts:621","pc":[3447]},{"teal":2591,"source":"contracts/Constants.ts:28","pc":[3448,3449]},{"teal":2592,"source":"contracts/TownHall.algo.ts:621","pc":[3450]},{"teal":2596,"source":"contracts/TownHall.algo.ts:622","pc":[3451]},{"teal":2602,"source":"contracts/TownHall.algo.ts:625","pc":[3452,3453]},{"teal":2603,"source":"contracts/TownHall.algo.ts:625","pc":[3454,3455]},{"teal":2604,"source":"contracts/TownHall.algo.ts:625","pc":[3456]},{"teal":2605,"source":"contracts/TownHall.algo.ts:625","pc":[3457]},{"teal":2606,"source":"contracts/TownHall.algo.ts:625","pc":[3458,3459,3460]},{"teal":2611,"source":"contracts/TownHall.algo.ts:627","pc":[3461,3462]},{"teal":2612,"source":"contracts/TownHall.algo.ts:627","pc":[3463,3464]},{"teal":2613,"source":"contracts/TownHall.algo.ts:627","pc":[3465]},{"teal":2618,"source":"contracts/TownHall.algo.ts:630","pc":[3466]},{"teal":2619,"source":"contracts/TownHall.algo.ts:630","pc":[3467,3468]},{"teal":2620,"source":"contracts/TownHall.algo.ts:630","pc":[3469]},{"teal":2625,"source":"contracts/TownHall.algo.ts:632","pc":[3470,3471]},{"teal":2626,"source":"contracts/TownHall.algo.ts:632","pc":[3472]},{"teal":2627,"source":"contracts/TownHall.algo.ts:632","pc":[3473]},{"teal":2628,"source":"contracts/TownHall.algo.ts:632","pc":[3474]},{"teal":2629,"source":"contracts/TownHall.algo.ts:632","pc":[3475,3476,3477]},{"teal":2634,"source":"contracts/TownHall.algo.ts:635","pc":[3478]},{"teal":2635,"source":"contracts/Constants.ts:28","pc":[3479,3480]},{"teal":2636,"source":"contracts/TownHall.algo.ts:635","pc":[3481]},{"teal":2640,"source":"contracts/TownHall.algo.ts:636","pc":[3482]},{"teal":2645,"source":"contracts/TownHall.algo.ts:639","pc":[3483]},{"teal":2646,"source":"contracts/Constants.ts:22","pc":[3484]},{"teal":2647,"source":"contracts/TownHall.algo.ts:639","pc":[3485]},{"teal":2648,"source":"contracts/TownHall.algo.ts:604","pc":[3486]},{"teal":2653,"source":"contracts/TownHall.algo.ts:642","pc":[3487,3488,3489]},{"teal":2654,"source":"contracts/TownHall.algo.ts:642","pc":[3490,3491,3492]},{"teal":2657,"source":"contracts/TownHall.algo.ts:642","pc":[3493,3494,3495]},{"teal":2658,"source":"contracts/TownHall.algo.ts:642","pc":[3496]},{"teal":2659,"source":"contracts/TownHall.algo.ts:642","pc":[3497]},{"teal":2663,"source":"contracts/TownHall.algo.ts:642","pc":[3498,3499,3500]},{"teal":2670,"source":"contracts/TownHall.algo.ts:644","pc":[3501]},{"teal":2671,"source":"contracts/TownHall.algo.ts:644","pc":[3502]},{"teal":2672,"source":"contracts/Constants.ts:22","pc":[3503]},{"teal":2673,"source":"contracts/TownHall.algo.ts:644","pc":[3504]},{"teal":2676,"source":"contracts/TownHall.algo.ts:643","errorMessage":"Invalid method call: Game is not in Night Stage Maffia Commit state.","pc":[3505]},{"teal":2680,"source":"contracts/TownHall.algo.ts:648","pc":[3506,3507]},{"teal":2681,"source":"contracts/TownHall.algo.ts:648","pc":[3508,3509]},{"teal":2682,"source":"contracts/TownHall.algo.ts:648","pc":[3510]},{"teal":2683,"source":"contracts/TownHall.algo.ts:648","pc":[3511]},{"teal":2686,"source":"contracts/TownHall.algo.ts:648","errorMessage":"Error state: Non-mafia player called method.","pc":[3512]},{"teal":2690,"source":"contracts/TownHall.algo.ts:650","pc":[3513,3514]},{"teal":2691,"source":"contracts/TownHall.algo.ts:650","pc":[3515,3516]},{"teal":2692,"source":"contracts/TownHall.algo.ts:650","pc":[3517]},{"teal":2697,"source":"contracts/TownHall.algo.ts:652","pc":[3518,3519]},{"teal":2698,"source":"contracts/TownHall.algo.ts:652","pc":[3520]},{"teal":2699,"source":"contracts/TownHall.algo.ts:652","pc":[3521,3522]},{"teal":2700,"source":"contracts/TownHall.algo.ts:652","pc":[3523]},{"teal":2701,"source":"contracts/TownHall.algo.ts:652","pc":[3524,3525,3526]},{"teal":2706,"source":"contracts/TownHall.algo.ts:654","pc":[3527]},{"teal":2707,"source":"contracts/Constants.ts:24","pc":[3528,3529]},{"teal":2708,"source":"contracts/TownHall.algo.ts:654","pc":[3530]},{"teal":2709,"source":"contracts/TownHall.algo.ts:652","pc":[3531,3532,3533]},{"teal":2714,"source":"contracts/TownHall.algo.ts:656","pc":[3534]},{"teal":2715,"source":"contracts/Constants.ts:23","pc":[3535,3536]},{"teal":2716,"source":"contracts/TownHall.algo.ts:656","pc":[3537]},{"teal":2719,"source":"contracts/TownHall.algo.ts:642","pc":[3538]},{"teal":2724,"source":"contracts/TownHall.algo.ts:660","pc":[3539,3540,3541]},{"teal":2725,"source":"contracts/TownHall.algo.ts:660","pc":[3542,3543,3544]},{"teal":2728,"source":"contracts/TownHall.algo.ts:660","pc":[3545,3546,3547]},{"teal":2729,"source":"contracts/TownHall.algo.ts:660","pc":[3548]},{"teal":2730,"source":"contracts/TownHall.algo.ts:660","pc":[3549]},{"teal":2734,"source":"contracts/TownHall.algo.ts:660","pc":[3550,3551,3552]},{"teal":2741,"source":"contracts/TownHall.algo.ts:662","pc":[3553]},{"teal":2742,"source":"contracts/TownHall.algo.ts:662","pc":[3554]},{"teal":2743,"source":"contracts/Constants.ts:23","pc":[3555,3556]},{"teal":2744,"source":"contracts/TownHall.algo.ts:662","pc":[3557]},{"teal":2747,"source":"contracts/TownHall.algo.ts:661","errorMessage":"Invalid method call: Game is not in Night Stage Doctor Commit state.","pc":[3558]},{"teal":2751,"source":"contracts/TownHall.algo.ts:666","pc":[3559,3560]},{"teal":2752,"source":"contracts/TownHall.algo.ts:666","pc":[3561,3562]},{"teal":2753,"source":"contracts/TownHall.algo.ts:666","pc":[3563]},{"teal":2754,"source":"contracts/TownHall.algo.ts:666","pc":[3564]},{"teal":2757,"source":"contracts/TownHall.algo.ts:666","errorMessage":"Error state: Non-doctor player called method.","pc":[3565]},{"teal":2764,"source":"contracts/TownHall.algo.ts:668","pc":[3566,3567]},{"teal":2765,"source":"contracts/TownHall.algo.ts:668","pc":[3568]},{"teal":2766,"source":"contracts/TownHall.algo.ts:668","pc":[3569,3570]},{"teal":2767,"source":"contracts/TownHall.algo.ts:668","pc":[3571]},{"teal":2770,"source":"contracts/TownHall.algo.ts:667","errorMessage":"Error state: Doctor is dead, should not have entered this state.","pc":[3572]},{"teal":2774,"source":"contracts/TownHall.algo.ts:672","pc":[3573,3574]},{"teal":2775,"source":"contracts/TownHall.algo.ts:672","pc":[3575,3576]},{"teal":2776,"source":"contracts/TownHall.algo.ts:672","pc":[3577]},{"teal":2780,"source":"contracts/TownHall.algo.ts:674","pc":[3578]},{"teal":2781,"source":"contracts/Constants.ts:24","pc":[3579,3580]},{"teal":2782,"source":"contracts/TownHall.algo.ts:674","pc":[3581]},{"teal":2783,"source":"contracts/TownHall.algo.ts:660","pc":[3582]},{"teal":2788,"source":"contracts/TownHall.algo.ts:677","pc":[3583,3584,3585]},{"teal":2789,"source":"contracts/TownHall.algo.ts:677","pc":[3586]},{"teal":2790,"source":"contracts/TownHall.algo.ts:677","pc":[3587]},{"teal":2791,"source":"contracts/TownHall.algo.ts:677","pc":[3588,3589]},{"teal":2792,"source":"contracts/TownHall.algo.ts:677","pc":[3590]},{"teal":2795,"source":"contracts/TownHall.algo.ts:677","errorMessage":"argument 0 (blinder) for dawnStageMafiaReveal must be a byte[32]","pc":[3591]},{"teal":2798,"source":"contracts/TownHall.algo.ts:677","pc":[3592,3593,3594]},{"teal":2799,"source":"contracts/TownHall.algo.ts:677","pc":[3595]},{"teal":2800,"source":"contracts/TownHall.algo.ts:677","pc":[3596]},{"teal":2801,"source":"contracts/TownHall.algo.ts:677","pc":[3597,3598]},{"teal":2802,"source":"contracts/TownHall.algo.ts:677","pc":[3599]},{"teal":2805,"source":"contracts/TownHall.algo.ts:677","errorMessage":"argument 1 (victimAim) for dawnStageMafiaReveal must be a address","pc":[3600]},{"teal":2808,"source":"contracts/TownHall.algo.ts:677","pc":[3601,3602,3603]},{"teal":2809,"source":"contracts/TownHall.algo.ts:677","pc":[3604]},{"teal":2810,"source":"contracts/TownHall.algo.ts:677","pc":[3605]},{"teal":2814,"source":"contracts/TownHall.algo.ts:677","pc":[3606,3607,3608]},{"teal":2817,"source":"contracts/TownHall.algo.ts:677","pc":[3609]},{"teal":2824,"source":"contracts/TownHall.algo.ts:679","pc":[3610]},{"teal":2825,"source":"contracts/TownHall.algo.ts:679","pc":[3611]},{"teal":2826,"source":"contracts/Constants.ts:24","pc":[3612,3613]},{"teal":2827,"source":"contracts/TownHall.algo.ts:679","pc":[3614]},{"teal":2830,"source":"contracts/TownHall.algo.ts:678","errorMessage":"Invalid method call: Game is not in Dawn Stage Maffia Reveal state.","pc":[3615]},{"teal":2834,"source":"contracts/TownHall.algo.ts:683","pc":[3616,3617]},{"teal":2835,"source":"contracts/TownHall.algo.ts:683","pc":[3618,3619]},{"teal":2836,"source":"contracts/TownHall.algo.ts:683","pc":[3620]},{"teal":2837,"source":"contracts/TownHall.algo.ts:683","pc":[3621]},{"teal":2840,"source":"contracts/TownHall.algo.ts:683","errorMessage":"Error state: Non-mafia player called method.","pc":[3622]},{"teal":2844,"source":"contracts/TownHall.algo.ts:685","pc":[3623,3624]},{"teal":2845,"source":"contracts/TownHall.algo.ts:685","pc":[3625,3626]},{"teal":2846,"source":"contracts/TownHall.algo.ts:685","pc":[3627]},{"teal":2849,"source":"contracts/TownHall.algo.ts:685","errorMessage":"Error state: Victim must be a valid address.","pc":[3628]},{"teal":2853,"source":"contracts/TownHall.algo.ts:689","pc":[3629,3630]},{"teal":2854,"source":"contracts/TownHall.algo.ts:689","pc":[3631,3632]},{"teal":2855,"source":"contracts/TownHall.algo.ts:689","pc":[3633]},{"teal":2856,"source":"contracts/TownHall.algo.ts:689","pc":[3634]},{"teal":2857,"source":"contracts/TownHall.algo.ts:689","pc":[3635,3636]},{"teal":2864,"source":"contracts/TownHall.algo.ts:692","pc":[3637,3638]},{"teal":2865,"source":"contracts/TownHall.algo.ts:692","pc":[3639,3640]},{"teal":2866,"source":"contracts/TownHall.algo.ts:692","pc":[3641]},{"teal":2867,"source":"contracts/TownHall.algo.ts:692","pc":[3642]},{"teal":2870,"source":"contracts/TownHall.algo.ts:691","errorMessage":"Error state: Provided address + blinder does NOT match commitment.","pc":[3643]},{"teal":2875,"source":"contracts/TownHall.algo.ts:696","pc":[3644,3645]},{"teal":2876,"source":"contracts/TownHall.algo.ts:696","pc":[3646]},{"teal":2877,"source":"contracts/TownHall.algo.ts:696","pc":[3647]},{"teal":2878,"source":"contracts/TownHall.algo.ts:696","pc":[3648,3649,3650]},{"teal":2879,"source":"contracts/TownHall.algo.ts:696","pc":[3651]},{"teal":2880,"source":"contracts/TownHall.algo.ts:696","pc":[3652,3653,3654]},{"teal":2885,"source":"contracts/TownHall.algo.ts:697","pc":[3655,3656]},{"teal":2886,"source":"contracts/TownHall.algo.ts:697","pc":[3657]},{"teal":2887,"source":"contracts/TownHall.algo.ts:697","pc":[3658]},{"teal":2888,"source":"contracts/TownHall.algo.ts:697","pc":[3659,3660,3661]},{"teal":2889,"source":"contracts/TownHall.algo.ts:697","pc":[3662]},{"teal":2890,"source":"contracts/TownHall.algo.ts:696","pc":[3663,3664,3665]},{"teal":2895,"source":"contracts/TownHall.algo.ts:698","pc":[3666,3667]},{"teal":2896,"source":"contracts/TownHall.algo.ts:698","pc":[3668,3669]},{"teal":2897,"source":"contracts/TownHall.algo.ts:698","pc":[3670]},{"teal":2898,"source":"contracts/TownHall.algo.ts:698","pc":[3671,3672,3673]},{"teal":2899,"source":"contracts/TownHall.algo.ts:698","pc":[3674]},{"teal":2900,"source":"contracts/TownHall.algo.ts:698","pc":[3675,3676,3677]},{"teal":2905,"source":"contracts/TownHall.algo.ts:699","pc":[3678,3679]},{"teal":2906,"source":"contracts/TownHall.algo.ts:699","pc":[3680,3681]},{"teal":2907,"source":"contracts/TownHall.algo.ts:699","pc":[3682]},{"teal":2908,"source":"contracts/TownHall.algo.ts:699","pc":[3683,3684,3685]},{"teal":2909,"source":"contracts/TownHall.algo.ts:699","pc":[3686]},{"teal":2910,"source":"contracts/TownHall.algo.ts:698","pc":[3687,3688,3689]},{"teal":2915,"source":"contracts/TownHall.algo.ts:700","pc":[3690,3691]},{"teal":2916,"source":"contracts/TownHall.algo.ts:700","pc":[3692,3693]},{"teal":2917,"source":"contracts/TownHall.algo.ts:700","pc":[3694]},{"teal":2918,"source":"contracts/TownHall.algo.ts:700","pc":[3695,3696,3697]},{"teal":2919,"source":"contracts/TownHall.algo.ts:700","pc":[3698]},{"teal":2920,"source":"contracts/TownHall.algo.ts:700","pc":[3699,3700,3701]},{"teal":2925,"source":"contracts/TownHall.algo.ts:701","pc":[3702,3703]},{"teal":2926,"source":"contracts/TownHall.algo.ts:701","pc":[3704,3705]},{"teal":2927,"source":"contracts/TownHall.algo.ts:701","pc":[3706]},{"teal":2928,"source":"contracts/TownHall.algo.ts:701","pc":[3707,3708,3709]},{"teal":2929,"source":"contracts/TownHall.algo.ts:701","pc":[3710]},{"teal":2930,"source":"contracts/TownHall.algo.ts:700","pc":[3711,3712,3713]},{"teal":2935,"source":"contracts/TownHall.algo.ts:702","pc":[3714,3715]},{"teal":2936,"source":"contracts/TownHall.algo.ts:702","pc":[3716,3717]},{"teal":2937,"source":"contracts/TownHall.algo.ts:702","pc":[3718]},{"teal":2938,"source":"contracts/TownHall.algo.ts:702","pc":[3719,3720,3721]},{"teal":2939,"source":"contracts/TownHall.algo.ts:702","pc":[3722]},{"teal":2940,"source":"contracts/TownHall.algo.ts:702","pc":[3723,3724,3725]},{"teal":2945,"source":"contracts/TownHall.algo.ts:703","pc":[3726,3727]},{"teal":2946,"source":"contracts/TownHall.algo.ts:703","pc":[3728,3729]},{"teal":2947,"source":"contracts/TownHall.algo.ts:703","pc":[3730]},{"teal":2948,"source":"contracts/TownHall.algo.ts:703","pc":[3731,3732,3733]},{"teal":2949,"source":"contracts/TownHall.algo.ts:703","pc":[3734]},{"teal":2950,"source":"contracts/TownHall.algo.ts:702","pc":[3735,3736,3737]},{"teal":2955,"source":"contracts/TownHall.algo.ts:704","pc":[3738,3739]},{"teal":2956,"source":"contracts/TownHall.algo.ts:704","pc":[3740,3741]},{"teal":2957,"source":"contracts/TownHall.algo.ts:704","pc":[3742]},{"teal":2958,"source":"contracts/TownHall.algo.ts:704","pc":[3743,3744,3745]},{"teal":2959,"source":"contracts/TownHall.algo.ts:704","pc":[3746]},{"teal":2960,"source":"contracts/TownHall.algo.ts:704","pc":[3747,3748,3749]},{"teal":2965,"source":"contracts/TownHall.algo.ts:705","pc":[3750,3751]},{"teal":2966,"source":"contracts/TownHall.algo.ts:705","pc":[3752,3753]},{"teal":2967,"source":"contracts/TownHall.algo.ts:705","pc":[3754]},{"teal":2968,"source":"contracts/TownHall.algo.ts:705","pc":[3755,3756,3757]},{"teal":2969,"source":"contracts/TownHall.algo.ts:705","pc":[3758]},{"teal":2970,"source":"contracts/TownHall.algo.ts:704","pc":[3759,3760,3761]},{"teal":2975,"source":"contracts/TownHall.algo.ts:706","pc":[3762,3763]},{"teal":2976,"source":"contracts/TownHall.algo.ts:706","pc":[3764,3765]},{"teal":2977,"source":"contracts/TownHall.algo.ts:706","pc":[3766]},{"teal":2978,"source":"contracts/TownHall.algo.ts:706","pc":[3767,3768,3769]},{"teal":2979,"source":"contracts/TownHall.algo.ts:706","pc":[3770]},{"teal":2980,"source":"contracts/TownHall.algo.ts:706","pc":[3771,3772,3773]},{"teal":2985,"source":"contracts/TownHall.algo.ts:707","pc":[3774,3775]},{"teal":2986,"source":"contracts/TownHall.algo.ts:707","pc":[3776,3777]},{"teal":2987,"source":"contracts/TownHall.algo.ts:707","pc":[3778]},{"teal":2988,"source":"contracts/TownHall.algo.ts:707","pc":[3779,3780,3781]},{"teal":2989,"source":"contracts/TownHall.algo.ts:707","pc":[3782]},{"teal":2990,"source":"contracts/TownHall.algo.ts:706","pc":[3783,3784,3785]},{"teal":2995,"source":"contracts/TownHall.algo.ts:709","pc":[3786,3787]},{"teal":2996,"source":"contracts/TownHall.algo.ts:709","pc":[3788,3789]},{"teal":2997,"source":"contracts/TownHall.algo.ts:709","pc":[3790]},{"teal":3003,"source":"contracts/TownHall.algo.ts:715","pc":[3791,3792]},{"teal":3004,"source":"contracts/TownHall.algo.ts:715","pc":[3793]},{"teal":3005,"source":"contracts/TownHall.algo.ts:715","pc":[3794,3795]},{"teal":3006,"source":"contracts/TownHall.algo.ts:715","pc":[3796]},{"teal":3007,"source":"contracts/TownHall.algo.ts:715","pc":[3797,3798,3799]},{"teal":3012,"source":"contracts/TownHall.algo.ts:717","pc":[3800]},{"teal":3013,"source":"contracts/Constants.ts:26","pc":[3801,3802]},{"teal":3014,"source":"contracts/TownHall.algo.ts:717","pc":[3803]},{"teal":3015,"source":"contracts/TownHall.algo.ts:715","pc":[3804,3805,3806]},{"teal":3020,"source":"contracts/TownHall.algo.ts:720","pc":[3807]},{"teal":3021,"source":"contracts/Constants.ts:25","pc":[3808,3809]},{"teal":3022,"source":"contracts/TownHall.algo.ts:720","pc":[3810]},{"teal":3025,"source":"contracts/TownHall.algo.ts:677","pc":[3811]},{"teal":3030,"source":"contracts/TownHall.algo.ts:724","pc":[3812,3813,3814]},{"teal":3031,"source":"contracts/TownHall.algo.ts:724","pc":[3815]},{"teal":3032,"source":"contracts/TownHall.algo.ts:724","pc":[3816]},{"teal":3033,"source":"contracts/TownHall.algo.ts:724","pc":[3817,3818]},{"teal":3034,"source":"contracts/TownHall.algo.ts:724","pc":[3819]},{"teal":3037,"source":"contracts/TownHall.algo.ts:724","errorMessage":"argument 0 (blinder) for dawnStageDoctorReveal must be a byte[32]","pc":[3820]},{"teal":3040,"source":"contracts/TownHall.algo.ts:724","pc":[3821,3822,3823]},{"teal":3041,"source":"contracts/TownHall.algo.ts:724","pc":[3824]},{"teal":3042,"source":"contracts/TownHall.algo.ts:724","pc":[3825]},{"teal":3043,"source":"contracts/TownHall.algo.ts:724","pc":[3826,3827]},{"teal":3044,"source":"contracts/TownHall.algo.ts:724","pc":[3828]},{"teal":3047,"source":"contracts/TownHall.algo.ts:724","errorMessage":"argument 1 (patientAim) for dawnStageDoctorReveal must be a address","pc":[3829]},{"teal":3050,"source":"contracts/TownHall.algo.ts:724","pc":[3830,3831,3832]},{"teal":3051,"source":"contracts/TownHall.algo.ts:724","pc":[3833]},{"teal":3052,"source":"contracts/TownHall.algo.ts:724","pc":[3834]},{"teal":3056,"source":"contracts/TownHall.algo.ts:724","pc":[3835,3836,3837]},{"teal":3059,"source":"contracts/TownHall.algo.ts:724","pc":[3838]},{"teal":3066,"source":"contracts/TownHall.algo.ts:726","pc":[3839]},{"teal":3067,"source":"contracts/TownHall.algo.ts:726","pc":[3840]},{"teal":3068,"source":"contracts/Constants.ts:25","pc":[3841,3842]},{"teal":3069,"source":"contracts/TownHall.algo.ts:726","pc":[3843]},{"teal":3072,"source":"contracts/TownHall.algo.ts:725","errorMessage":"Invalid method call: Game is not in Dawn Stage Doctor Reveal state.","pc":[3844]},{"teal":3076,"source":"contracts/TownHall.algo.ts:730","pc":[3845,3846]},{"teal":3077,"source":"contracts/TownHall.algo.ts:730","pc":[3847,3848]},{"teal":3078,"source":"contracts/TownHall.algo.ts:730","pc":[3849]},{"teal":3079,"source":"contracts/TownHall.algo.ts:730","pc":[3850]},{"teal":3082,"source":"contracts/TownHall.algo.ts:730","errorMessage":"Error state: Non-doctor player called method.","pc":[3851]},{"teal":3086,"source":"contracts/TownHall.algo.ts:732","pc":[3852,3853]},{"teal":3087,"source":"contracts/TownHall.algo.ts:732","pc":[3854]},{"teal":3088,"source":"contracts/TownHall.algo.ts:732","pc":[3855,3856]},{"teal":3089,"source":"contracts/TownHall.algo.ts:732","pc":[3857]},{"teal":3092,"source":"contracts/TownHall.algo.ts:732","errorMessage":"Error state: Doctor has already committed to a patient.","pc":[3858]},{"teal":3096,"source":"contracts/TownHall.algo.ts:734","pc":[3859,3860]},{"teal":3097,"source":"contracts/TownHall.algo.ts:734","pc":[3861,3862]},{"teal":3098,"source":"contracts/TownHall.algo.ts:734","pc":[3863]},{"teal":3101,"source":"contracts/TownHall.algo.ts:734","errorMessage":"Error state: Patient must be a valid address.","pc":[3864]},{"teal":3105,"source":"contracts/TownHall.algo.ts:738","pc":[3865,3866]},{"teal":3106,"source":"contracts/TownHall.algo.ts:738","pc":[3867,3868]},{"teal":3107,"source":"contracts/TownHall.algo.ts:738","pc":[3869]},{"teal":3108,"source":"contracts/TownHall.algo.ts:738","pc":[3870]},{"teal":3109,"source":"contracts/TownHall.algo.ts:738","pc":[3871,3872]},{"teal":3116,"source":"contracts/TownHall.algo.ts:741","pc":[3873,3874]},{"teal":3117,"source":"contracts/TownHall.algo.ts:741","pc":[3875,3876]},{"teal":3118,"source":"contracts/TownHall.algo.ts:741","pc":[3877]},{"teal":3119,"source":"contracts/TownHall.algo.ts:741","pc":[3878]},{"teal":3122,"source":"contracts/TownHall.algo.ts:740","errorMessage":"Error state: Provided address + blinder does NOT match commitment.","pc":[3879]},{"teal":3127,"source":"contracts/TownHall.algo.ts:745","pc":[3880,3881]},{"teal":3128,"source":"contracts/TownHall.algo.ts:745","pc":[3882]},{"teal":3129,"source":"contracts/TownHall.algo.ts:745","pc":[3883]},{"teal":3130,"source":"contracts/TownHall.algo.ts:745","pc":[3884,3885,3886]},{"teal":3131,"source":"contracts/TownHall.algo.ts:745","pc":[3887]},{"teal":3132,"source":"contracts/TownHall.algo.ts:745","pc":[3888,3889,3890]},{"teal":3137,"source":"contracts/TownHall.algo.ts:746","pc":[3891,3892]},{"teal":3138,"source":"contracts/TownHall.algo.ts:746","pc":[3893]},{"teal":3139,"source":"contracts/TownHall.algo.ts:746","pc":[3894]},{"teal":3140,"source":"contracts/TownHall.algo.ts:746","pc":[3895,3896,3897]},{"teal":3141,"source":"contracts/TownHall.algo.ts:746","pc":[3898]},{"teal":3142,"source":"contracts/TownHall.algo.ts:745","pc":[3899,3900,3901]},{"teal":3147,"source":"contracts/TownHall.algo.ts:747","pc":[3902,3903]},{"teal":3148,"source":"contracts/TownHall.algo.ts:747","pc":[3904,3905]},{"teal":3149,"source":"contracts/TownHall.algo.ts:747","pc":[3906]},{"teal":3150,"source":"contracts/TownHall.algo.ts:747","pc":[3907,3908,3909]},{"teal":3151,"source":"contracts/TownHall.algo.ts:747","pc":[3910]},{"teal":3152,"source":"contracts/TownHall.algo.ts:747","pc":[3911,3912,3913]},{"teal":3157,"source":"contracts/TownHall.algo.ts:748","pc":[3914,3915]},{"teal":3158,"source":"contracts/TownHall.algo.ts:748","pc":[3916,3917]},{"teal":3159,"source":"contracts/TownHall.algo.ts:748","pc":[3918]},{"teal":3160,"source":"contracts/TownHall.algo.ts:748","pc":[3919,3920,3921]},{"teal":3161,"source":"contracts/TownHall.algo.ts:748","pc":[3922]},{"teal":3162,"source":"contracts/TownHall.algo.ts:747","pc":[3923,3924,3925]},{"teal":3167,"source":"contracts/TownHall.algo.ts:749","pc":[3926,3927]},{"teal":3168,"source":"contracts/TownHall.algo.ts:749","pc":[3928,3929]},{"teal":3169,"source":"contracts/TownHall.algo.ts:749","pc":[3930]},{"teal":3170,"source":"contracts/TownHall.algo.ts:749","pc":[3931,3932,3933]},{"teal":3171,"source":"contracts/TownHall.algo.ts:749","pc":[3934]},{"teal":3172,"source":"contracts/TownHall.algo.ts:749","pc":[3935,3936,3937]},{"teal":3177,"source":"contracts/TownHall.algo.ts:750","pc":[3938,3939]},{"teal":3178,"source":"contracts/TownHall.algo.ts:750","pc":[3940,3941]},{"teal":3179,"source":"contracts/TownHall.algo.ts:750","pc":[3942]},{"teal":3180,"source":"contracts/TownHall.algo.ts:750","pc":[3943,3944,3945]},{"teal":3181,"source":"contracts/TownHall.algo.ts:750","pc":[3946]},{"teal":3182,"source":"contracts/TownHall.algo.ts:749","pc":[3947,3948,3949]},{"teal":3187,"source":"contracts/TownHall.algo.ts:751","pc":[3950,3951]},{"teal":3188,"source":"contracts/TownHall.algo.ts:751","pc":[3952,3953]},{"teal":3189,"source":"contracts/TownHall.algo.ts:751","pc":[3954]},{"teal":3190,"source":"contracts/TownHall.algo.ts:751","pc":[3955,3956,3957]},{"teal":3191,"source":"contracts/TownHall.algo.ts:751","pc":[3958]},{"teal":3192,"source":"contracts/TownHall.algo.ts:751","pc":[3959,3960,3961]},{"teal":3197,"source":"contracts/TownHall.algo.ts:752","pc":[3962,3963]},{"teal":3198,"source":"contracts/TownHall.algo.ts:752","pc":[3964,3965]},{"teal":3199,"source":"contracts/TownHall.algo.ts:752","pc":[3966]},{"teal":3200,"source":"contracts/TownHall.algo.ts:752","pc":[3967,3968,3969]},{"teal":3201,"source":"contracts/TownHall.algo.ts:752","pc":[3970]},{"teal":3202,"source":"contracts/TownHall.algo.ts:751","pc":[3971,3972,3973]},{"teal":3207,"source":"contracts/TownHall.algo.ts:753","pc":[3974,3975]},{"teal":3208,"source":"contracts/TownHall.algo.ts:753","pc":[3976,3977]},{"teal":3209,"source":"contracts/TownHall.algo.ts:753","pc":[3978]},{"teal":3210,"source":"contracts/TownHall.algo.ts:753","pc":[3979,3980,3981]},{"teal":3211,"source":"contracts/TownHall.algo.ts:753","pc":[3982]},{"teal":3212,"source":"contracts/TownHall.algo.ts:753","pc":[3983,3984,3985]},{"teal":3217,"source":"contracts/TownHall.algo.ts:754","pc":[3986,3987]},{"teal":3218,"source":"contracts/TownHall.algo.ts:754","pc":[3988,3989]},{"teal":3219,"source":"contracts/TownHall.algo.ts:754","pc":[3990]},{"teal":3220,"source":"contracts/TownHall.algo.ts:754","pc":[3991,3992,3993]},{"teal":3221,"source":"contracts/TownHall.algo.ts:754","pc":[3994]},{"teal":3222,"source":"contracts/TownHall.algo.ts:753","pc":[3995,3996,3997]},{"teal":3227,"source":"contracts/TownHall.algo.ts:755","pc":[3998,3999]},{"teal":3228,"source":"contracts/TownHall.algo.ts:755","pc":[4000,4001]},{"teal":3229,"source":"contracts/TownHall.algo.ts:755","pc":[4002]},{"teal":3230,"source":"contracts/TownHall.algo.ts:755","pc":[4003,4004,4005]},{"teal":3231,"source":"contracts/TownHall.algo.ts:755","pc":[4006]},{"teal":3232,"source":"contracts/TownHall.algo.ts:755","pc":[4007,4008,4009]},{"teal":3237,"source":"contracts/TownHall.algo.ts:756","pc":[4010,4011]},{"teal":3238,"source":"contracts/TownHall.algo.ts:756","pc":[4012,4013]},{"teal":3239,"source":"contracts/TownHall.algo.ts:756","pc":[4014]},{"teal":3240,"source":"contracts/TownHall.algo.ts:756","pc":[4015,4016,4017]},{"teal":3241,"source":"contracts/TownHall.algo.ts:756","pc":[4018]},{"teal":3242,"source":"contracts/TownHall.algo.ts:755","pc":[4019,4020,4021]},{"teal":3247,"source":"contracts/TownHall.algo.ts:758","pc":[4022,4023]},{"teal":3248,"source":"contracts/TownHall.algo.ts:758","pc":[4024,4025]},{"teal":3249,"source":"contracts/TownHall.algo.ts:758","pc":[4026]},{"teal":3254,"source":"contracts/TownHall.algo.ts:764","pc":[4027]},{"teal":3255,"source":"contracts/Constants.ts:26","pc":[4028,4029]},{"teal":3256,"source":"contracts/TownHall.algo.ts:764","pc":[4030]},{"teal":3257,"source":"contracts/TownHall.algo.ts:724","pc":[4031]},{"teal":3262,"source":"contracts/TownHall.algo.ts:767","pc":[4032,4033,4034]},{"teal":3263,"source":"contracts/TownHall.algo.ts:767","pc":[4035]},{"teal":3264,"source":"contracts/TownHall.algo.ts:767","pc":[4036]},{"teal":3268,"source":"contracts/TownHall.algo.ts:767","pc":[4037,4038,4039]},{"teal":3275,"source":"contracts/TownHall.algo.ts:769","pc":[4040]},{"teal":3276,"source":"contracts/TownHall.algo.ts:769","pc":[4041]},{"teal":3277,"source":"contracts/Constants.ts:26","pc":[4042,4043]},{"teal":3278,"source":"contracts/TownHall.algo.ts:769","pc":[4044]},{"teal":3281,"source":"contracts/TownHall.algo.ts:768","errorMessage":"Invalid method call: Game is not in Dawn Stage DeadOrSaved? state.","pc":[4045]},{"teal":3286,"source":"contracts/TownHall.algo.ts:773","pc":[4046,4047]},{"teal":3287,"source":"contracts/TownHall.algo.ts:773","pc":[4048]},{"teal":3288,"source":"contracts/TownHall.algo.ts:773","pc":[4049,4050]},{"teal":3289,"source":"contracts/TownHall.algo.ts:773","pc":[4051]},{"teal":3290,"source":"contracts/TownHall.algo.ts:773","pc":[4052]},{"teal":3291,"source":"contracts/TownHall.algo.ts:773","pc":[4053,4054,4055]},{"teal":3292,"source":"contracts/TownHall.algo.ts:773","pc":[4056,4057]},{"teal":3293,"source":"contracts/TownHall.algo.ts:773","pc":[4058]},{"teal":3294,"source":"contracts/TownHall.algo.ts:773","pc":[4059,4060]},{"teal":3295,"source":"contracts/TownHall.algo.ts:773","pc":[4061]},{"teal":3296,"source":"contracts/TownHall.algo.ts:773","pc":[4062]},{"teal":3297,"source":"contracts/TownHall.algo.ts:773","pc":[4063]},{"teal":3300,"source":"contracts/TownHall.algo.ts:773","pc":[4064,4065,4066]},{"teal":3305,"source":"contracts/TownHall.algo.ts:778","pc":[4067,4068]},{"teal":3306,"source":"contracts/TownHall.algo.ts:778","pc":[4069,4070]},{"teal":3307,"source":"contracts/TownHall.algo.ts:778","pc":[4071]},{"teal":3311,"source":"contracts/TownHall.algo.ts:779","pc":[4072,4073]},{"teal":3312,"source":"contracts/TownHall.algo.ts:779","pc":[4074,4075]},{"teal":3313,"source":"contracts/TownHall.algo.ts:779","pc":[4076]},{"teal":3317,"source":"contracts/TownHall.algo.ts:780","pc":[4077]},{"teal":3318,"source":"contracts/Constants.ts:19","pc":[4078,4079]},{"teal":3319,"source":"contracts/TownHall.algo.ts:780","pc":[4080]},{"teal":3323,"source":"contracts/TownHall.algo.ts:781","pc":[4081]},{"teal":3329,"source":"contracts/TownHall.algo.ts:786","pc":[4082,4083]},{"teal":3330,"source":"contracts/TownHall.algo.ts:786","pc":[4084]},{"teal":3331,"source":"contracts/TownHall.algo.ts:786","pc":[4085]},{"teal":3332,"source":"contracts/TownHall.algo.ts:786","pc":[4086]},{"teal":3333,"source":"contracts/TownHall.algo.ts:786","pc":[4087,4088,4089]},{"teal":3334,"source":"contracts/TownHall.algo.ts:786","pc":[4090]},{"teal":3335,"source":"contracts/TownHall.algo.ts:786","pc":[4091,4092,4093]},{"teal":3340,"source":"contracts/TownHall.algo.ts:787","pc":[4094]},{"teal":3341,"source":"contracts/TownHall.algo.ts:787","pc":[4095]},{"teal":3342,"source":"contracts/TownHall.algo.ts:787","pc":[4096]},{"teal":3343,"source":"contracts/TownHall.algo.ts:787","pc":[4097,4098,4099]},{"teal":3344,"source":"contracts/TownHall.algo.ts:787","pc":[4100]},{"teal":3348,"source":"contracts/TownHall.algo.ts:788","pc":[4101]},{"teal":3349,"source":"contracts/TownHall.algo.ts:788","pc":[4102]},{"teal":3350,"source":"contracts/TownHall.algo.ts:788","pc":[4103,4104]},{"teal":3351,"source":"contracts/TownHall.algo.ts:788","pc":[4105,4106]},{"teal":3352,"source":"contracts/TownHall.algo.ts:788","pc":[4107]},{"teal":3353,"source":"contracts/TownHall.algo.ts:788","pc":[4108]},{"teal":3354,"source":"contracts/TownHall.algo.ts:788","pc":[4109]},{"teal":3355,"source":"contracts/TownHall.algo.ts:786","pc":[4110,4111,4112]},{"teal":3360,"source":"contracts/TownHall.algo.ts:789","pc":[4113,4114]},{"teal":3361,"source":"contracts/TownHall.algo.ts:789","pc":[4115]},{"teal":3362,"source":"contracts/TownHall.algo.ts:789","pc":[4116,4117]},{"teal":3363,"source":"contracts/TownHall.algo.ts:789","pc":[4118]},{"teal":3364,"source":"contracts/TownHall.algo.ts:789","pc":[4119,4120,4121]},{"teal":3365,"source":"contracts/TownHall.algo.ts:789","pc":[4122]},{"teal":3366,"source":"contracts/TownHall.algo.ts:789","pc":[4123,4124,4125]},{"teal":3371,"source":"contracts/TownHall.algo.ts:790","pc":[4126]},{"teal":3372,"source":"contracts/TownHall.algo.ts:790","pc":[4127,4128]},{"teal":3373,"source":"contracts/TownHall.algo.ts:790","pc":[4129]},{"teal":3374,"source":"contracts/TownHall.algo.ts:790","pc":[4130,4131,4132]},{"teal":3375,"source":"contracts/TownHall.algo.ts:790","pc":[4133]},{"teal":3379,"source":"contracts/TownHall.algo.ts:791","pc":[4134,4135]},{"teal":3380,"source":"contracts/TownHall.algo.ts:791","pc":[4136]},{"teal":3381,"source":"contracts/TownHall.algo.ts:791","pc":[4137,4138]},{"teal":3382,"source":"contracts/TownHall.algo.ts:791","pc":[4139,4140]},{"teal":3383,"source":"contracts/TownHall.algo.ts:791","pc":[4141,4142]},{"teal":3384,"source":"contracts/TownHall.algo.ts:791","pc":[4143]},{"teal":3385,"source":"contracts/TownHall.algo.ts:791","pc":[4144]},{"teal":3386,"source":"contracts/TownHall.algo.ts:789","pc":[4145,4146,4147]},{"teal":3391,"source":"contracts/TownHall.algo.ts:792","pc":[4148,4149]},{"teal":3392,"source":"contracts/TownHall.algo.ts:792","pc":[4150]},{"teal":3393,"source":"contracts/TownHall.algo.ts:792","pc":[4151,4152]},{"teal":3394,"source":"contracts/TownHall.algo.ts:792","pc":[4153]},{"teal":3395,"source":"contracts/TownHall.algo.ts:792","pc":[4154,4155,4156]},{"teal":3396,"source":"contracts/TownHall.algo.ts:792","pc":[4157]},{"teal":3397,"source":"contracts/TownHall.algo.ts:792","pc":[4158,4159,4160]},{"teal":3402,"source":"contracts/TownHall.algo.ts:793","pc":[4161]},{"teal":3403,"source":"contracts/TownHall.algo.ts:793","pc":[4162,4163]},{"teal":3404,"source":"contracts/TownHall.algo.ts:793","pc":[4164]},{"teal":3405,"source":"contracts/TownHall.algo.ts:793","pc":[4165,4166,4167]},{"teal":3406,"source":"contracts/TownHall.algo.ts:793","pc":[4168]},{"teal":3410,"source":"contracts/TownHall.algo.ts:794","pc":[4169,4170]},{"teal":3411,"source":"contracts/TownHall.algo.ts:794","pc":[4171]},{"teal":3412,"source":"contracts/TownHall.algo.ts:794","pc":[4172,4173]},{"teal":3413,"source":"contracts/TownHall.algo.ts:794","pc":[4174,4175]},{"teal":3414,"source":"contracts/TownHall.algo.ts:794","pc":[4176,4177]},{"teal":3415,"source":"contracts/TownHall.algo.ts:794","pc":[4178]},{"teal":3416,"source":"contracts/TownHall.algo.ts:794","pc":[4179]},{"teal":3417,"source":"contracts/TownHall.algo.ts:792","pc":[4180,4181,4182]},{"teal":3422,"source":"contracts/TownHall.algo.ts:795","pc":[4183,4184]},{"teal":3423,"source":"contracts/TownHall.algo.ts:795","pc":[4185]},{"teal":3424,"source":"contracts/TownHall.algo.ts:795","pc":[4186,4187]},{"teal":3425,"source":"contracts/TownHall.algo.ts:795","pc":[4188]},{"teal":3426,"source":"contracts/TownHall.algo.ts:795","pc":[4189,4190,4191]},{"teal":3427,"source":"contracts/TownHall.algo.ts:795","pc":[4192]},{"teal":3428,"source":"contracts/TownHall.algo.ts:795","pc":[4193,4194,4195]},{"teal":3433,"source":"contracts/TownHall.algo.ts:796","pc":[4196]},{"teal":3434,"source":"contracts/TownHall.algo.ts:796","pc":[4197,4198]},{"teal":3435,"source":"contracts/TownHall.algo.ts:796","pc":[4199]},{"teal":3436,"source":"contracts/TownHall.algo.ts:796","pc":[4200,4201,4202]},{"teal":3437,"source":"contracts/TownHall.algo.ts:796","pc":[4203]},{"teal":3441,"source":"contracts/TownHall.algo.ts:797","pc":[4204,4205]},{"teal":3442,"source":"contracts/TownHall.algo.ts:797","pc":[4206]},{"teal":3443,"source":"contracts/TownHall.algo.ts:797","pc":[4207,4208]},{"teal":3444,"source":"contracts/TownHall.algo.ts:797","pc":[4209,4210]},{"teal":3445,"source":"contracts/TownHall.algo.ts:797","pc":[4211,4212]},{"teal":3446,"source":"contracts/TownHall.algo.ts:797","pc":[4213]},{"teal":3447,"source":"contracts/TownHall.algo.ts:797","pc":[4214]},{"teal":3448,"source":"contracts/TownHall.algo.ts:795","pc":[4215,4216,4217]},{"teal":3453,"source":"contracts/TownHall.algo.ts:798","pc":[4218,4219]},{"teal":3454,"source":"contracts/TownHall.algo.ts:798","pc":[4220]},{"teal":3455,"source":"contracts/TownHall.algo.ts:798","pc":[4221,4222]},{"teal":3456,"source":"contracts/TownHall.algo.ts:798","pc":[4223]},{"teal":3457,"source":"contracts/TownHall.algo.ts:798","pc":[4224,4225,4226]},{"teal":3458,"source":"contracts/TownHall.algo.ts:798","pc":[4227]},{"teal":3459,"source":"contracts/TownHall.algo.ts:798","pc":[4228,4229,4230]},{"teal":3464,"source":"contracts/TownHall.algo.ts:799","pc":[4231]},{"teal":3465,"source":"contracts/TownHall.algo.ts:799","pc":[4232,4233]},{"teal":3466,"source":"contracts/TownHall.algo.ts:799","pc":[4234]},{"teal":3467,"source":"contracts/TownHall.algo.ts:799","pc":[4235,4236,4237]},{"teal":3468,"source":"contracts/TownHall.algo.ts:799","pc":[4238]},{"teal":3472,"source":"contracts/TownHall.algo.ts:800","pc":[4239,4240]},{"teal":3473,"source":"contracts/TownHall.algo.ts:800","pc":[4241]},{"teal":3474,"source":"contracts/TownHall.algo.ts:800","pc":[4242,4243]},{"teal":3475,"source":"contracts/TownHall.algo.ts:800","pc":[4244,4245]},{"teal":3476,"source":"contracts/TownHall.algo.ts:800","pc":[4246,4247]},{"teal":3477,"source":"contracts/TownHall.algo.ts:800","pc":[4248]},{"teal":3478,"source":"contracts/TownHall.algo.ts:800","pc":[4249]},{"teal":3479,"source":"contracts/TownHall.algo.ts:798","pc":[4250,4251,4252]},{"teal":3484,"source":"contracts/TownHall.algo.ts:801","pc":[4253,4254]},{"teal":3485,"source":"contracts/TownHall.algo.ts:801","pc":[4255]},{"teal":3486,"source":"contracts/TownHall.algo.ts:801","pc":[4256,4257]},{"teal":3487,"source":"contracts/TownHall.algo.ts:801","pc":[4258]},{"teal":3488,"source":"contracts/TownHall.algo.ts:801","pc":[4259,4260,4261]},{"teal":3489,"source":"contracts/TownHall.algo.ts:801","pc":[4262]},{"teal":3490,"source":"contracts/TownHall.algo.ts:801","pc":[4263,4264,4265]},{"teal":3495,"source":"contracts/TownHall.algo.ts:802","pc":[4266]},{"teal":3496,"source":"contracts/TownHall.algo.ts:802","pc":[4267,4268]},{"teal":3497,"source":"contracts/TownHall.algo.ts:802","pc":[4269]},{"teal":3498,"source":"contracts/TownHall.algo.ts:802","pc":[4270,4271,4272]},{"teal":3499,"source":"contracts/TownHall.algo.ts:802","pc":[4273]},{"teal":3503,"source":"contracts/TownHall.algo.ts:803","pc":[4274,4275]},{"teal":3504,"source":"contracts/TownHall.algo.ts:803","pc":[4276]},{"teal":3505,"source":"contracts/TownHall.algo.ts:803","pc":[4277,4278]},{"teal":3506,"source":"contracts/TownHall.algo.ts:803","pc":[4279,4280]},{"teal":3507,"source":"contracts/TownHall.algo.ts:803","pc":[4281,4282]},{"teal":3508,"source":"contracts/TownHall.algo.ts:803","pc":[4283]},{"teal":3509,"source":"contracts/TownHall.algo.ts:803","pc":[4284]},{"teal":3510,"source":"contracts/TownHall.algo.ts:801","pc":[4285,4286,4287]},{"teal":3514,"source":"contracts/TownHall.algo.ts:805","errorMessage":"Error state: Victim must be a player! Should not have entered this state.","pc":[4288]},{"teal":3519,"source":"contracts/TownHall.algo.ts:808","pc":[4289,4290]},{"teal":3520,"source":"contracts/TownHall.algo.ts:808","pc":[4291]},{"teal":3521,"source":"contracts/TownHall.algo.ts:808","pc":[4292]},{"teal":3522,"source":"contracts/TownHall.algo.ts:808","pc":[4293]},{"teal":3523,"source":"contracts/TownHall.algo.ts:808","pc":[4294,4295]},{"teal":3524,"source":"contracts/TownHall.algo.ts:808","pc":[4296]},{"teal":3525,"source":"contracts/TownHall.algo.ts:808","pc":[4297]},{"teal":3529,"source":"contracts/TownHall.algo.ts:810","pc":[4298,4299]},{"teal":3530,"source":"contracts/TownHall.algo.ts:810","pc":[4300,4301]},{"teal":3531,"source":"contracts/TownHall.algo.ts:810","pc":[4302]},{"teal":3535,"source":"contracts/TownHall.algo.ts:811","pc":[4303,4304]},{"teal":3536,"source":"contracts/TownHall.algo.ts:811","pc":[4305,4306]},{"teal":3537,"source":"contracts/TownHall.algo.ts:811","pc":[4307]},{"teal":3542,"source":"contracts/TownHall.algo.ts:813","pc":[4308,4309]},{"teal":3543,"source":"contracts/TownHall.algo.ts:813","pc":[4310]},{"teal":3544,"source":"contracts/TownHall.algo.ts:813","pc":[4311]},{"teal":3545,"source":"contracts/TownHall.algo.ts:813","pc":[4312]},{"teal":3546,"source":"contracts/TownHall.algo.ts:813","pc":[4313,4314,4315]},{"teal":3551,"source":"contracts/TownHall.algo.ts:816","pc":[4316]},{"teal":3552,"source":"contracts/Constants.ts:28","pc":[4317,4318]},{"teal":3553,"source":"contracts/TownHall.algo.ts:816","pc":[4319]},{"teal":3557,"source":"contracts/TownHall.algo.ts:817","pc":[4320]},{"teal":3562,"source":"contracts/TownHall.algo.ts:820","pc":[4321]},{"teal":3563,"source":"contracts/Constants.ts:27","pc":[4322,4323]},{"teal":3564,"source":"contracts/TownHall.algo.ts:820","pc":[4324]},{"teal":3565,"source":"contracts/TownHall.algo.ts:767","pc":[4325]},{"teal":3570,"source":"contracts/TownHall.algo.ts:823","pc":[4326,4327,4328]},{"teal":3571,"source":"contracts/TownHall.algo.ts:823","pc":[4329,4330,4331]},{"teal":3574,"source":"contracts/TownHall.algo.ts:823","pc":[4332,4333,4334]},{"teal":3575,"source":"contracts/TownHall.algo.ts:823","pc":[4335]},{"teal":3576,"source":"contracts/TownHall.algo.ts:823","pc":[4336]},{"teal":3580,"source":"contracts/TownHall.algo.ts:823","pc":[4337,4338,4339]},{"teal":3583,"source":"contracts/TownHall.algo.ts:823","pc":[4340]},{"teal":3584,"source":"contracts/TownHall.algo.ts:823","pc":[4341,4342]},{"teal":3591,"source":"contracts/TownHall.algo.ts:830","pc":[4343]},{"teal":3592,"source":"contracts/TownHall.algo.ts:830","pc":[4344]},{"teal":3593,"source":"contracts/Constants.ts:27","pc":[4345,4346]},{"teal":3594,"source":"contracts/TownHall.algo.ts:830","pc":[4347]},{"teal":3597,"source":"contracts/TownHall.algo.ts:829","errorMessage":"Invalid method call: Game is not in Dawn Stage Unmasking state.","pc":[4348]},{"teal":3601,"source":"contracts/TownHall.algo.ts:834","pc":[4349]},{"teal":3602,"source":"contracts/TownHall.algo.ts:834","pc":[4350]},{"teal":3603,"source":"contracts/TownHall.algo.ts:834","pc":[4351,4352]},{"teal":3604,"source":"contracts/TownHall.algo.ts:834","pc":[4353]},{"teal":3607,"source":"contracts/TownHall.algo.ts:834","errorMessage":"Error state: Other player called method.","pc":[4354]},{"teal":3611,"source":"contracts/TownHall.algo.ts:837","pc":[4355,4356]},{"teal":3612,"source":"contracts/TownHall.algo.ts:837","pc":[4357,4358]},{"teal":3613,"source":"contracts/TownHall.algo.ts:837","pc":[4359,4360]},{"teal":3614,"source":"contracts/TownHall.algo.ts:837","pc":[4361,4362]},{"teal":3618,"source":"contracts/TownHall.algo.ts:838","pc":[4363,4364]},{"teal":3619,"source":"contracts/TownHall.algo.ts:838","pc":[4365,4366,4367]},{"teal":3620,"source":"contracts/TownHall.algo.ts:838","pc":[4368,4369]},{"teal":3624,"source":"contracts/TownHall.algo.ts:839","pc":[4370,4371]},{"teal":3625,"source":"contracts/TownHall.algo.ts:839","pc":[4372,4373]},{"teal":3626,"source":"contracts/TownHall.algo.ts:839","pc":[4374,4375]},{"teal":3627,"source":"contracts/TownHall.algo.ts:839","pc":[4376,4377]},{"teal":3632,"source":"contracts/TownHall.algo.ts:841","pc":[4378,4379]},{"teal":3633,"source":"contracts/TownHall.algo.ts:841","pc":[4380,4381]},{"teal":3634,"source":"contracts/TownHall.algo.ts:841","pc":[4382]},{"teal":3635,"source":"contracts/TownHall.algo.ts:841","pc":[4383]},{"teal":3636,"source":"contracts/TownHall.algo.ts:841","pc":[4384,4385,4386]},{"teal":3641,"source":"contracts/TownHall.algo.ts:845","pc":[4387]},{"teal":3642,"source":"contracts/Constants.ts:28","pc":[4388,4389]},{"teal":3643,"source":"contracts/TownHall.algo.ts:845","pc":[4390]},{"teal":3647,"source":"contracts/TownHall.algo.ts:846","pc":[4391,4392]},{"teal":3648,"source":"contracts/TownHall.algo.ts:846","pc":[4393,4394]},{"teal":3649,"source":"contracts/TownHall.algo.ts:846","pc":[4395]},{"teal":3653,"source":"contracts/TownHall.algo.ts:847","pc":[4396]},{"teal":3659,"source":"contracts/TownHall.algo.ts:850","pc":[4397,4398]},{"teal":3660,"source":"contracts/TownHall.algo.ts:850","pc":[4399,4400]},{"teal":3661,"source":"contracts/TownHall.algo.ts:850","pc":[4401]},{"teal":3662,"source":"contracts/TownHall.algo.ts:850","pc":[4402]},{"teal":3663,"source":"contracts/TownHall.algo.ts:850","pc":[4403,4404,4405]},{"teal":3668,"source":"contracts/TownHall.algo.ts:852","pc":[4406,4407]},{"teal":3669,"source":"contracts/TownHall.algo.ts:852","pc":[4408,4409]},{"teal":3670,"source":"contracts/TownHall.algo.ts:852","pc":[4410]},{"teal":3675,"source":"contracts/TownHall.algo.ts:856","pc":[4411]},{"teal":3676,"source":"contracts/TownHall.algo.ts:856","pc":[4412,4413]},{"teal":3677,"source":"contracts/TownHall.algo.ts:856","pc":[4414]},{"teal":3681,"source":"contracts/TownHall.algo.ts:858","pc":[4415]},{"teal":3682,"source":"contracts/Constants.ts:19","pc":[4416,4417]},{"teal":3683,"source":"contracts/TownHall.algo.ts:858","pc":[4418]},{"teal":3684,"source":"contracts/TownHall.algo.ts:823","pc":[4419]},{"teal":3689,"source":"contracts/TownHall.algo.ts:862","pc":[4420,4421,4422]},{"teal":3690,"source":"contracts/TownHall.algo.ts:862","pc":[4423]},{"teal":3691,"source":"contracts/TownHall.algo.ts:862","pc":[4424]},{"teal":3695,"source":"contracts/TownHall.algo.ts:862","pc":[4425,4426,4427]},{"teal":3698,"source":"contracts/TownHall.algo.ts:862","pc":[4428]},{"teal":3702,"source":"contracts/TownHall.algo.ts:863","pc":[4429]},{"teal":3703,"source":"contracts/TownHall.algo.ts:863","pc":[4430]},{"teal":3704,"source":"contracts/Constants.ts:28","pc":[4431,4432]},{"teal":3705,"source":"contracts/TownHall.algo.ts:863","pc":[4433]},{"teal":3708,"source":"contracts/TownHall.algo.ts:863","errorMessage":"Invalid method call: Game is not in Game Over state.","pc":[4434]},{"teal":3712,"source":"contracts/TownHall.algo.ts:864","pc":[4435,4436]},{"teal":3713,"source":"contracts/TownHall.algo.ts:864","pc":[4437]},{"teal":3717,"source":"contracts/TownHall.algo.ts:865","pc":[4438,4439]},{"teal":3718,"source":"contracts/TownHall.algo.ts:865","pc":[4440]},{"teal":3719,"source":"contracts/TownHall.algo.ts:865","pc":[4441]},{"teal":3720,"source":"contracts/TownHall.algo.ts:865","pc":[4442]},{"teal":3724,"source":"contracts/TownHall.algo.ts:866","pc":[4443,4444]},{"teal":3725,"source":"contracts/TownHall.algo.ts:866","pc":[4445]},{"teal":3726,"source":"contracts/TownHall.algo.ts:866","pc":[4446]},{"teal":3727,"source":"contracts/TownHall.algo.ts:866","pc":[4447]},{"teal":3731,"source":"contracts/TownHall.algo.ts:867","pc":[4448,4449]},{"teal":3732,"source":"contracts/TownHall.algo.ts:867","pc":[4450]},{"teal":3733,"source":"contracts/TownHall.algo.ts:867","pc":[4451]},{"teal":3734,"source":"contracts/TownHall.algo.ts:867","pc":[4452]},{"teal":3738,"source":"contracts/TownHall.algo.ts:868","pc":[4453,4454]},{"teal":3739,"source":"contracts/TownHall.algo.ts:868","pc":[4455]},{"teal":3740,"source":"contracts/TownHall.algo.ts:868","pc":[4456]},{"teal":3741,"source":"contracts/TownHall.algo.ts:868","pc":[4457]},{"teal":3745,"source":"contracts/TownHall.algo.ts:869","pc":[4458,4459]},{"teal":3746,"source":"contracts/TownHall.algo.ts:869","pc":[4460]},{"teal":3747,"source":"contracts/TownHall.algo.ts:869","pc":[4461]},{"teal":3748,"source":"contracts/TownHall.algo.ts:869","pc":[4462]},{"teal":3752,"source":"contracts/TownHall.algo.ts:870","pc":[4463,4464]},{"teal":3753,"source":"contracts/TownHall.algo.ts:870","pc":[4465]},{"teal":3754,"source":"contracts/TownHall.algo.ts:870","pc":[4466]},{"teal":3755,"source":"contracts/TownHall.algo.ts:870","pc":[4467]},{"teal":3759,"source":"contracts/TownHall.algo.ts:872","pc":[4468,4469,4470,4471]},{"teal":3760,"source":"contracts/TownHall.algo.ts:872","pc":[4472,4473]},{"teal":3761,"source":"contracts/TownHall.algo.ts:872","pc":[4474]},{"teal":3762,"source":"contracts/TownHall.algo.ts:872","pc":[4475,4476]},{"teal":3770,"source":"contracts/TownHall.algo.ts:874","pc":[4477]},{"teal":3771,"source":"contracts/TownHall.algo.ts:874","pc":[4478]},{"teal":3772,"source":"contracts/TownHall.algo.ts:874","pc":[4479,4480]},{"teal":3776,"source":"contracts/TownHall.algo.ts:875","pc":[4481,4482]},{"teal":3777,"source":"contracts/TownHall.algo.ts:875","pc":[4483,4484]},{"teal":3781,"source":"contracts/TownHall.algo.ts:876","pc":[4485]},{"teal":3782,"source":"contracts/TownHall.algo.ts:876","pc":[4486]},{"teal":3783,"source":"contracts/TownHall.algo.ts:876","pc":[4487,4488,4489]},{"teal":3784,"source":"contracts/TownHall.algo.ts:876","pc":[4490,4491]},{"teal":3788,"source":"contracts/TownHall.algo.ts:877","pc":[4492,4493]},{"teal":3789,"source":"contracts/TownHall.algo.ts:877","pc":[4494,4495]},{"teal":3792,"source":"contracts/TownHall.algo.ts:874","pc":[4496]},{"teal":3800,"source":"contracts/TownHall.algo.ts:880","pc":[4497]},{"teal":3801,"source":"contracts/TownHall.algo.ts:880","pc":[4498]},{"teal":3802,"source":"contracts/TownHall.algo.ts:880","pc":[4499,4500]},{"teal":3806,"source":"contracts/TownHall.algo.ts:881","pc":[4501,4502]},{"teal":3807,"source":"contracts/TownHall.algo.ts:881","pc":[4503,4504]},{"teal":3811,"source":"contracts/TownHall.algo.ts:882","pc":[4505,4506]},{"teal":3812,"source":"contracts/TownHall.algo.ts:882","pc":[4507]},{"teal":3813,"source":"contracts/TownHall.algo.ts:882","pc":[4508,4509,4510]},{"teal":3814,"source":"contracts/TownHall.algo.ts:882","pc":[4511,4512]},{"teal":3818,"source":"contracts/TownHall.algo.ts:883","pc":[4513,4514]},{"teal":3819,"source":"contracts/TownHall.algo.ts:883","pc":[4515,4516]},{"teal":3822,"source":"contracts/TownHall.algo.ts:880","pc":[4517]},{"teal":3830,"source":"contracts/TownHall.algo.ts:885","pc":[4518]},{"teal":3831,"source":"contracts/TownHall.algo.ts:885","pc":[4519]},{"teal":3832,"source":"contracts/TownHall.algo.ts:885","pc":[4520,4521]},{"teal":3836,"source":"contracts/TownHall.algo.ts:886","pc":[4522,4523]},{"teal":3837,"source":"contracts/TownHall.algo.ts:886","pc":[4524,4525]},{"teal":3841,"source":"contracts/TownHall.algo.ts:887","pc":[4526,4527]},{"teal":3842,"source":"contracts/TownHall.algo.ts:887","pc":[4528]},{"teal":3843,"source":"contracts/TownHall.algo.ts:887","pc":[4529,4530,4531]},{"teal":3844,"source":"contracts/TownHall.algo.ts:887","pc":[4532,4533]},{"teal":3848,"source":"contracts/TownHall.algo.ts:888","pc":[4534,4535]},{"teal":3849,"source":"contracts/TownHall.algo.ts:888","pc":[4536,4537]},{"teal":3852,"source":"contracts/TownHall.algo.ts:885","pc":[4538]},{"teal":3860,"source":"contracts/TownHall.algo.ts:891","pc":[4539]},{"teal":3861,"source":"contracts/TownHall.algo.ts:891","pc":[4540]},{"teal":3862,"source":"contracts/TownHall.algo.ts:891","pc":[4541,4542]},{"teal":3866,"source":"contracts/TownHall.algo.ts:892","pc":[4543,4544]},{"teal":3867,"source":"contracts/TownHall.algo.ts:892","pc":[4545,4546]},{"teal":3871,"source":"contracts/TownHall.algo.ts:893","pc":[4547,4548]},{"teal":3872,"source":"contracts/TownHall.algo.ts:893","pc":[4549]},{"teal":3873,"source":"contracts/TownHall.algo.ts:893","pc":[4550,4551,4552]},{"teal":3874,"source":"contracts/TownHall.algo.ts:893","pc":[4553,4554]},{"teal":3878,"source":"contracts/TownHall.algo.ts:894","pc":[4555,4556]},{"teal":3879,"source":"contracts/TownHall.algo.ts:894","pc":[4557,4558]},{"teal":3882,"source":"contracts/TownHall.algo.ts:891","pc":[4559]},{"teal":3890,"source":"contracts/TownHall.algo.ts:897","pc":[4560]},{"teal":3891,"source":"contracts/TownHall.algo.ts:897","pc":[4561]},{"teal":3892,"source":"contracts/TownHall.algo.ts:897","pc":[4562,4563]},{"teal":3896,"source":"contracts/TownHall.algo.ts:898","pc":[4564,4565]},{"teal":3897,"source":"contracts/TownHall.algo.ts:898","pc":[4566,4567]},{"teal":3901,"source":"contracts/TownHall.algo.ts:899","pc":[4568,4569]},{"teal":3902,"source":"contracts/TownHall.algo.ts:899","pc":[4570]},{"teal":3903,"source":"contracts/TownHall.algo.ts:899","pc":[4571,4572,4573]},{"teal":3904,"source":"contracts/TownHall.algo.ts:899","pc":[4574,4575]},{"teal":3908,"source":"contracts/TownHall.algo.ts:900","pc":[4576,4577]},{"teal":3909,"source":"contracts/TownHall.algo.ts:900","pc":[4578,4579]},{"teal":3912,"source":"contracts/TownHall.algo.ts:897","pc":[4580]},{"teal":3920,"source":"contracts/TownHall.algo.ts:903","pc":[4581]},{"teal":3921,"source":"contracts/TownHall.algo.ts:903","pc":[4582]},{"teal":3922,"source":"contracts/TownHall.algo.ts:903","pc":[4583,4584]},{"teal":3926,"source":"contracts/TownHall.algo.ts:904","pc":[4585,4586]},{"teal":3927,"source":"contracts/TownHall.algo.ts:904","pc":[4587,4588]},{"teal":3931,"source":"contracts/TownHall.algo.ts:905","pc":[4589,4590]},{"teal":3932,"source":"contracts/TownHall.algo.ts:905","pc":[4591]},{"teal":3933,"source":"contracts/TownHall.algo.ts:905","pc":[4592,4593,4594]},{"teal":3934,"source":"contracts/TownHall.algo.ts:905","pc":[4595,4596]},{"teal":3938,"source":"contracts/TownHall.algo.ts:906","pc":[4597,4598]},{"teal":3939,"source":"contracts/TownHall.algo.ts:906","pc":[4599,4600]},{"teal":3942,"source":"contracts/TownHall.algo.ts:903","pc":[4601]},{"teal":3943,"source":"contracts/TownHall.algo.ts:862","pc":[4602]},{"teal":3948,"source":"contracts/TownHall.algo.ts:910","pc":[4603,4604,4605]},{"teal":3949,"source":"contracts/TownHall.algo.ts:910","pc":[4606]},{"teal":3950,"source":"contracts/TownHall.algo.ts:910","pc":[4607]},{"teal":3954,"source":"contracts/TownHall.algo.ts:910","pc":[4608,4609,4610]},{"teal":3958,"source":"contracts/TownHall.algo.ts:911","pc":[4611]},{"teal":3959,"source":"contracts/TownHall.algo.ts:911","pc":[4612]},{"teal":3960,"source":"contracts/Constants.ts:28","pc":[4613,4614]},{"teal":3961,"source":"contracts/TownHall.algo.ts:911","pc":[4615]},{"teal":3964,"source":"contracts/TownHall.algo.ts:911","errorMessage":"Invalid method call: Game is not in Game Over state.","pc":[4616]},{"teal":3968,"source":"contracts/TownHall.algo.ts:912","pc":[4617]},{"teal":3969,"source":"contracts/TownHall.algo.ts:912","pc":[4618]},{"teal":3970,"source":"contracts/TownHall.algo.ts:912","pc":[4619,4620]},{"teal":3974,"source":"contracts/TownHall.algo.ts:912","pc":[4621,4622]},{"teal":3975,"source":"contracts/TownHall.algo.ts:912","pc":[4623]},{"teal":3976,"source":"contracts/TownHall.algo.ts:912","pc":[4624,4625]},{"teal":3979,"source":"contracts/TownHall.algo.ts:912","pc":[4626]},{"teal":3980,"source":"contracts/TownHall.algo.ts:912","pc":[4627,4628]},{"teal":3983,"source":"contracts/TownHall.algo.ts:912","pc":[4629]},{"teal":3984,"source":"contracts/TownHall.algo.ts:910","pc":[4630]},{"teal":3987,"source":"contracts/TownHall.algo.ts:34","pc":[4631,4632,4633,4634,4635,4636]},{"teal":3988,"source":"contracts/TownHall.algo.ts:34","pc":[4637,4638,4639]},{"teal":3989,"source":"contracts/TownHall.algo.ts:34","pc":[4640,4641,4642,4643]},{"teal":3992,"source":"contracts/TownHall.algo.ts:34","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[4644]},{"teal":3995,"source":"contracts/TownHall.algo.ts:34","pc":[4645,4646,4647,4648,4649,4650]},{"teal":3996,"source":"contracts/TownHall.algo.ts:34","pc":[4651,4652,4653,4654,4655,4656]},{"teal":3997,"source":"contracts/TownHall.algo.ts:34","pc":[4657,4658,4659,4660,4661,4662]},{"teal":3998,"source":"contracts/TownHall.algo.ts:34","pc":[4663,4664,4665,4666,4667,4668]},{"teal":3999,"source":"contracts/TownHall.algo.ts:34","pc":[4669,4670,4671,4672,4673,4674]},{"teal":4000,"source":"contracts/TownHall.algo.ts:34","pc":[4675,4676,4677,4678,4679,4680]},{"teal":4001,"source":"contracts/TownHall.algo.ts:34","pc":[4681,4682,4683,4684,4685,4686]},{"teal":4002,"source":"contracts/TownHall.algo.ts:34","pc":[4687,4688,4689,4690,4691,4692]},{"teal":4003,"source":"contracts/TownHall.algo.ts:34","pc":[4693,4694,4695,4696,4697,4698]},{"teal":4004,"source":"contracts/TownHall.algo.ts:34","pc":[4699,4700,4701,4702,4703,4704]},{"teal":4005,"source":"contracts/TownHall.algo.ts:34","pc":[4705,4706,4707,4708,4709,4710]},{"teal":4006,"source":"contracts/TownHall.algo.ts:34","pc":[4711,4712,4713,4714,4715,4716]},{"teal":4007,"source":"contracts/TownHall.algo.ts:34","pc":[4717,4718,4719,4720,4721,4722]},{"teal":4008,"source":"contracts/TownHall.algo.ts:34","pc":[4723,4724,4725,4726,4727,4728]},{"teal":4009,"source":"contracts/TownHall.algo.ts:34","pc":[4729,4730,4731,4732,4733,4734]},{"teal":4010,"source":"contracts/TownHall.algo.ts:34","pc":[4735,4736,4737,4738,4739,4740]},{"teal":4011,"source":"contracts/TownHall.algo.ts:34","pc":[4741,4742,4743,4744,4745,4746]},{"teal":4012,"source":"contracts/TownHall.algo.ts:34","pc":[4747,4748,4749]},{"teal":4013,"source":"contracts/TownHall.algo.ts:34","pc":[4750,4751,4752,4753,4754,4755,4756,4757,4758,4759,4760,4761,4762,4763,4764,4765,4766,4767,4768,4769,4770,4771,4772,4773,4774,4775,4776,4777,4778,4779,4780,4781,4782,4783,4784,4785]},{"teal":4016,"source":"contracts/TownHall.algo.ts:34","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[4786]},{"teal":4019,"source":"contracts/TownHall.algo.ts:34","pc":[4787,4788,4789,4790,4791,4792]},{"teal":4020,"source":"contracts/TownHall.algo.ts:34","pc":[4793,4794,4795]},{"teal":4021,"source":"contracts/TownHall.algo.ts:34","pc":[4796,4797,4798,4799]},{"teal":4024,"source":"contracts/TownHall.algo.ts:34","errorMessage":"this contract does not implement the given ABI method for call DeleteApplication","pc":[4800]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDEw"},"byteCode":{"approval":"CiAQAQACBgMMIAQFBwgKYPCTCQkLJjEJZ2FtZVN0YXRlABRqdXN0RWxpbWluYXRlZFBsYXllcg9wbGF5ZXIxQWxnb0FkZHIPcGxheWVyMkFsZ29BZGRyD3BsYXllcjNBbGdvQWRkcg9wbGF5ZXI0QWxnb0FkZHIPcGxheWVyNUFsZ29BZGRyD3BsYXllcjZBbGdvQWRkcgttYWZpYVZpY3RpbQgAAAAAAAAAAA1kb2N0b3JQYXRpZW50CAAAAAAAAAABBmRvY3RvcgxwbGF5ZXJzQWxpdmUUcGxheWVyMVJlY2VpdmVkVm90ZXMUcGxheWVyMlJlY2VpdmVkVm90ZXMUcGxheWVyM1JlY2VpdmVkVm90ZXMUcGxheWVyNFJlY2VpdmVkVm90ZXMUcGxheWVyNVJlY2VpdmVkVm90ZXMUcGxheWVyNlJlY2VpdmVkVm90ZXMFbWFmaWERbHNpZ0Z1bmRlckFkZHJlc3MMcGxheWVyc1ZvdGVkDXBsYXllcnNKb2luZWQgQkxTMTIzODFHMV9YTUQ6U0hBLTI1Nl9TU1dVX1JPXx8PcGxheWVyMUhhc1ZvdGVkD3BsYXllcjJIYXNWb3RlZA9wbGF5ZXIzSGFzVm90ZWQPcGxheWVyNEhhc1ZvdGVkD3BsYXllcjVIYXNWb3RlZA9wbGF5ZXI2SGFzVm90ZWQOZG9jdG9yS2V5SW1hZ2UNbWFmaWFLZXlJbWFnZQQVH3x1DmNyZWF0b3JBZGRyZXNzB2J1dGNoZXIHaW5ua2VlcAZmYXJtZXIGZ3JvY2VyYBfx06cxl9eUJpVjjE+prA/DaIxPl3S5BaFOOj8XG6xYbFXoP/l6Gu/7OvAK2yLGuwiz9IHjqqDxoJ4w7XQdiuT89eCV1dAK9gDbGMssBLPt0DzHRKKIiuQMqiMpRsXn4RBkb2N0b3JDb21taXRtZW50D2J1dGNoZXJLZXlJbWFnZQ9pbm5rZWVwS2V5SW1hZ2UPbWFmaWFDb21taXRtZW50DmZhcm1lcktleUltYWdlDmdyb2NlcktleUltYWdlAgAwAQAxGBQlCzEZCI0MDuYAAAAAAAAAAA90DtgAAAAAAAAAAAAAAIgAAiJDigAAJyMxAGcnFjIDZysyAycKUGcnBDIDJwpQZycFMgMnClBnJwYyAycKUGcnBzIDJwpQZycIMgMnClBnJxUyA2cnDTIDZycmMgNnJyQyA2cnJTIDZycnMgNnJxojZycbI2cnHCNnJx0jZyceI2cnHyNnJxcjZycPI2cnECNnJxEjZycSI2cnEyNnJxQjZycXI2cnGCNnJw4lZyoyA2cnCTIDZycLMgNnKCNniSciNhoBF4gABRZQsCJDigEBi/+JJyI2GgRXAgA2GgNXAgA2GgJXAgA2GgFXAgCIAAonMCNPAlRQsCJDigQBKUmL/4v+i/1QUAGMAIsAgCBz7adTKZ19SDM52AgJodgFU72kAv/+W/7/////AAAAAaqMAYv9i/+L/OECi/6LAeEC4AISjABGAYknIjYaAVcCAIgADEkVFlcGAkxQULAiQ4oBASlHCYBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwAJy+MAScZjAKLAIv/UCcvUCcwUCcZUIwDiwMBjASLBIABAVAnGVABjAWLBIsFrYABAlAnGVABjAaLBVcAIIsGVwAQUIwHiweAMBoBEeo5f+aaSxuntkNLrNdkd0uE84USv2cw0qD2sPYkHqv//rFT//+5/v////+qq6qMCIsI5QKMCYsJjABGCYknIogABRZQsCJDigABKGSJNhoBSRUhBhJEiAACIkOKAQAoZCMSRDEAJyNkEkQnFmQyAxJEi/8yAxNEJxaL/2coImeJNhoBVwIAMRYiCUk4ECISRIgAAiJDigIAKUcDKGQiEkQnGGQlDEQrZFcAIDEAEklAAAonBGRXACAxABIRSUAACicFZFcAIDEAEhFJQAAKJwZkVwAgMQASEUlAAAonB2RXACAxABIRSUAACicIZFcAIDEAEhFBAAEAi/84CIGwmEYPRIv+VwBgjACL/ldgYIwBi/5XwGCMAov+gaACIQZYjAOLA4sCiwGLAIj92kQnCr1MSBRBAAknCiEMuUhCAAknCkm9RCEMCNMnCr1MSEQnCicYZCEMC4sBuycYZCIIJxhMZycWZDIDE0SxIrIQIQ2yCCcWZLIHI7IBsytkVwAgMgMSQQAKK2QjMQBdK0xniScEZFcAIDIDEkEADCcEZCMxAF0nBExniScFZFcAIDIDEkEADCcFZCMxAF0nBUxniScGZFcAIDIDEkEADCcGZCMxAF0nBkxniScHZFcAIDIDEkEADCcHZCMxAF0nB0xniScIZFcAIDIDEkEADycIZCMxAF0nCExnKCRniQCJMRYiCUk4ECISRDEWJAlJOBAiEkQxFiEECUk4ECISRDEWIQcJSTgQIhJEMRYhCAlJOBAiEkQxFiUJSTgQIhJEMRYhCQlJOBAiEkQ2GgVXAgA2GgRXAgA2GgNXAgA2GgJXAgA2GgFXAgCIAAIiQ4oMAChkJBJEi/0BvUxIFESL/QEjuUiL/zEAMgpQEkQnCiOBwAS6i/4SRIv5OACAIMavvHFQbKEXuTMBqjKg18U3ceHeGElQLzJ7aDXa0LbFEkSL+DgAgCBpLAcqL+ohHE1Wvsw8tnsASelCeXS0EJfmhS0dN+adOxJEi/c4AIAgG3FwU14dT91wy60R+XdoIibqH57d08RfCd9Tc+/De2oSRIv2OACAIEkD872YWMN64SLSfMdZ1jsnzyE+d2cevRanox3LWDu2EkSL9TgAgCDt3szibsXENraIYdHKKSNO/U4nTLKPt2AJPpYAVeTbORJEi/Q4AIAgrv9eKk3+zZ3NadXmF6frwNwsy4EPak2yxkljOmwboNMSRIv6OAAnFmQSRIv6OAcxABJEi/o4CCENEkQnFWQyAxJBAAsnFTEAZychi/1niScNZDIDEkEACycNMQBnJyCL/WeJJyZkMgMSQQALJyYxAGcnLYv9Z4knJGQyAxJBAAsnJDEAZycqi/1niSclZDIDEkEACyclMQBnJyuL/WeJJydkMgMSQQAPJycxAGcnLov9ZyghBGeJAIk2GgEXiAACIkOKAQAoZCEEEkSL/yMNSUEABov/IQkMEEQxACtkVwAgEklAAAoxACcEZFcAIBIRSUAACjEAJwVkVwAgEhFJQAAKMQAnBmRXACASEUlAAAoxACcHZFcAIBIRSUAACjEAJwhkVwAgEhEUQQABAIv/IhJJQQAJK2RXACAyAxMQQQAMJw9kIggnD0xnQgCpi/8kEklBAAonBGRXACAyAxMQQQAMJxBkIggnEExnQgCIi/8hBBJJQQAKJwVkVwAgMgMTEEEADCcRZCIIJxFMZ0IAZov/IQcSSUEACicGZFcAIDIDExBBAAwnEmQiCCcSTGdCAESL/yEIEklBAAonB2RXACAyAxMQQQAMJxNkIggnE0xnQgAii/8lEklBAAonCGRXACAyAxMQQQAMJxRkIggnFExnQgABADEAK2RXACASSUEABicaZCMSEEEABycaImdCAJIxACcEZFcAIBJJQQAGJxtkIxIQQQAHJxsiZ0IAdTEAJwVkVwAgEklBAAYnHGQjEhBBAAcnHCJnQgBYMQAnBmRXACASSUEABicdZCMSEEEABycdImdCADsxACcHZFcAIBJJQQAGJx5kIxIQQQAHJx4iZ0IAHjEAJwhkVwAgEklBAAYnH2QjEhBBAAcnHyJnQgABACcXZCIIJxdMZycXZCcOZBJBACAoIQdnJxcjZycaI2cnGyNnJxwjZycdI2cnHiNnJx8jZ4mIAAIiQ4oAAClJKGQhBxJEKjIDZyOMADIGJBgjEowBJw9kiwANSUAADicPZIsAEklBAAOLARARQQAMKitkVwAgZycPZIwAJxBkiwANSUAADicQZIsAEklBAAOLARARQQANKicEZFcAIGcnEGSMACcRZIsADUlAAA4nEWSLABJJQQADiwEQEUEADSonBWRXACBnJxFkjAAnEmSLAA1JQAAOJxJkiwASSUEAA4sBEBFBAA0qJwZkVwAgZycSZIwAJxNkiwANSUAADicTZIsAEklBAAOLARARQQANKicHZFcAIGcnE2SMACcUZIsADUlAAA4nFGSLABJJQQADiwEQEUEADSonCGRXACBnJxRkjAAqZDIDE0SLACMTRCpkK2RXACASQQAJK2QnDFwgK0xnKmQnBGRXACASQQALJwRkJwxcICcETGcqZCcFZFcAIBJBAAsnBWQnDFwgJwVMZypkJwZkVwAgEkEACycGZCcMXCAnBkxnKmQnB2RXACASQQALJwdkJwxcICcHTGcqZCcIZFcAIBJBAAsnCGQnDFwgJwhMZycOZCIJJw5MZycPI2cnECNnJxEjZycSI2cnEyNnJxQjZyghCGeJNhoBVwIAiAACIkOKAQApRwIoZCEIEkQqZDEAEkQnKIv/4QKMAIsAiPcxjAGLAYv/4QKMAosCJyFkEkEACicVMgNnKCEFZ4mLAicgZBJBAAUnDTIDZyoyA2cnDmQkDkEABSghBWeJKCVniTYaAVcCAIgAAiJDigEAKGQlEkQxACcVZBJEJyyL/2cnDWQyAxJBAAcoIQpnQgAEKCEJZ4k2GgFXAgCIAAIiQ4oBAChkIQkSRDEAJw1kEkQnDWQyAxNEJymL/2coIQpniTYaAkkVIQYSRDYaAUkVIQYSRIgAAiJDigIAKShkIQoSRDEAJxVkEkSL/zIDE0SL/4v+UAGMAIsAJyxkEkSL/ytkVwAgEkEACycJK2RXACBnQgB9i/8nBGRXACASQQAMJwknBGRXACBnQgBli/8nBWRXACASQQAMJwknBWRXACBnQgBNi/8nBmRXACASQQAMJwknBmRXACBnQgA1i/8nB2RXACASQQAMJwknB2RXACBnQgAdi/8nCGRXACASQQAMJwknCGRXACBnQgAFJwkyA2cnDWQyAxJBAAcoIQtnQgAEKCEOZ4k2GgJJFSEGEkQ2GgFJFSEGEkSIAAIiQ4oCACkoZCEOEkQxACcNZBJEJwtkMgMSRIv/MgMTRIv/i/5QAYwAiwAnKWQSRIv/K2RXACASQQALJwsrZFcAIGdCAH2L/ycEZFcAIBJBAAwnCycEZFcAIGdCAGWL/ycFZFcAIBJBAAwnCycFZFcAIGdCAE2L/ycGZFcAIBJBAAwnCycGZFcAIGdCADWL/ycHZFcAIBJBAAwnCycHZFcAIGdCAB2L/ycIZFcAIBJBAAwnCycIZFcAIGdCAAUnCzIDZyghC2eJiAACIkOKAAAoZCELEkQnCWQyAxJJQAAIJwlkJwtkEhFBAA8nCTIDZycLMgNnKCEEZ4knCWQrZFcAIBJBABMqK2RXACBnK2QnDFwgK0xnQgCwJwlkJwRkVwAgEkEAFionBGRXACBnJwRkJwxcICcETGdCAI0nCWQnBWRXACASQQAWKicFZFcAIGcnBWQnDFwgJwVMZ0IAaicJZCcGZFcAIBJBABYqJwZkVwAgZycGZCcMXCAnBkxnQgBHJwlkJwdkVwAgEkEAFionB2RXACBnJwdkJwxcICcHTGdCACQnCWQnCGRXACASQQAWKicIZFcAIGcnCGQnDFwgJwhMZ0IAAQAnDmQiCScOTGcnCTIDZycLMgNnJw5kJA5BAAUoIQVniSghD2eJNhoBVwIAiAACIkOKAQApRwIoZCEPEkQqZDEAEkQnKIv/4QKMAIsAiPOAjAGLAYv/4QKMAosCJyFkEkEACighBWcnFTIDZ4mLAicgZBJBAAUnDTIDZyoyA2coIQRniYgAAiJDigAAKShkIQUSRCcKvCchZAG8JyBkAbwnLWQBvCcqZAG8JytkAbwnLmQBvIHAhD0yAAmMALEishCLALIIK2RXACCyBzIAsgGzsSKyEIsAsggnBGRXACCyBzIAsgGzsSKyEIsAsggnBWRXACCyBzIAsgGzsSKyEIsAsggnBmRXACCyBzIAsgGzsSKyEIsAsggnB2RXACCyBzIAsgGzsSKyEIsAsggnCGRXACCyBzIAsgGziYgAAiJDigAAKGQhBRJEsSKyECcjZLIJI7IBs4mABLhEezY2GgCOAfEcAIAEcM7qG4AEoBe9jIAE13LNvIAE9UC6LIAE/2MO/YAEVNkr44AEmwe/j4AET7Ehu4AExCNhaYAE7p82GoAEC151hYAEyGRYdYAE7cSGu4AEdzdi5YAEOZXtaoAE72Wml4AEattFODYaAI4R8T/xU/HH8rHywfL09ID2nvi9+oP67fsh+038Mv0O/jT+kgCABCSHwyw2GgCOAf87AA==","clear":"Cg=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":3,"minor":27,"patch":0,"commitHash":"f54f0997"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


/**
 * The argument types for the TownHall contract
 */
export type TownHallArgs = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication()void': Record<string, never>
    'dummyOpUp(uint64)uint64': {
      i: bigint | number
    }
    'dlog(byte[],byte[],byte[],byte[])bool': {
      g: Uint8Array
      x: Uint8Array
      v: Uint8Array
      z: Uint8Array
    }
    'hashPointToPoint(byte[])byte[]': {
      point: Uint8Array
    }
    'getGameState()uint64': Record<string, never>
    'setLSIGFunderAddress(address)void': {
      funderLSigAddress: string
    }
    'joinGameLobby(pay,byte[])void': {
      depositTxn: AppMethodCallTransactionArgument
      nizkDlog: Uint8Array
    }
    'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void': {
      msg: Uint8Array
      pkAll: Uint8Array
      keyImage: Uint8Array
      sig: Uint8Array
      challenges: Uint8Array
      funderLSigTxn: AppMethodCallTransactionArgument
      ringLSigTxn0: AppMethodCallTransactionArgument
      ringLSigTxn1: AppMethodCallTransactionArgument
      ringLSigTxn2: AppMethodCallTransactionArgument
      ringLSigTxn3: AppMethodCallTransactionArgument
      ringLSigTxn4: AppMethodCallTransactionArgument
      ringLSigTxn5: AppMethodCallTransactionArgument
    }
    'dayStageVote(uint64)void': {
      vote: bigint | number
    }
    'dayStageEliminate()void': Record<string, never>
    'dayStageUnmasking(byte[])void': {
      blsSk: Uint8Array
    }
    'nightStageMafiaCommit(byte[])void': {
      commitment: Uint8Array
    }
    'nightStageDoctorCommit(byte[])void': {
      commitment: Uint8Array
    }
    'dawnStageMafiaReveal(address,byte[32])void': {
      victimAim: string
      blinder: Uint8Array
    }
    'dawnStageDoctorReveal(address,byte[32])void': {
      patientAim: string
      blinder: Uint8Array
    }
    'dawnStageDeadOrSaved()void': Record<string, never>
    'dawnStageUnmasking(byte[])void': {
      blsSk: Uint8Array
    }
    'gameOver()void': Record<string, never>
    'deleteApplication()void': Record<string, never>
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication()void': []
    'dummyOpUp(uint64)uint64': [i: bigint | number]
    'dlog(byte[],byte[],byte[],byte[])bool': [g: Uint8Array, x: Uint8Array, v: Uint8Array, z: Uint8Array]
    'hashPointToPoint(byte[])byte[]': [point: Uint8Array]
    'getGameState()uint64': []
    'setLSIGFunderAddress(address)void': [funderLSigAddress: string]
    'joinGameLobby(pay,byte[])void': [depositTxn: AppMethodCallTransactionArgument, nizkDlog: Uint8Array]
    'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void': [msg: Uint8Array, pkAll: Uint8Array, keyImage: Uint8Array, sig: Uint8Array, challenges: Uint8Array, funderLSigTxn: AppMethodCallTransactionArgument, ringLSigTxn0: AppMethodCallTransactionArgument, ringLSigTxn1: AppMethodCallTransactionArgument, ringLSigTxn2: AppMethodCallTransactionArgument, ringLSigTxn3: AppMethodCallTransactionArgument, ringLSigTxn4: AppMethodCallTransactionArgument, ringLSigTxn5: AppMethodCallTransactionArgument]
    'dayStageVote(uint64)void': [vote: bigint | number]
    'dayStageEliminate()void': []
    'dayStageUnmasking(byte[])void': [blsSk: Uint8Array]
    'nightStageMafiaCommit(byte[])void': [commitment: Uint8Array]
    'nightStageDoctorCommit(byte[])void': [commitment: Uint8Array]
    'dawnStageMafiaReveal(address,byte[32])void': [victimAim: string, blinder: Uint8Array]
    'dawnStageDoctorReveal(address,byte[32])void': [patientAim: string, blinder: Uint8Array]
    'dawnStageDeadOrSaved()void': []
    'dawnStageUnmasking(byte[])void': [blsSk: Uint8Array]
    'gameOver()void': []
    'deleteApplication()void': []
  }
}

/**
 * The return type for each method
 */
export type TownHallReturns = {
  'createApplication()void': void
  'dummyOpUp(uint64)uint64': bigint
  'dlog(byte[],byte[],byte[],byte[])bool': boolean
  'hashPointToPoint(byte[])byte[]': Uint8Array
  'getGameState()uint64': bigint
  'setLSIGFunderAddress(address)void': void
  'joinGameLobby(pay,byte[])void': void
  'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void': void
  'dayStageVote(uint64)void': void
  'dayStageEliminate()void': void
  'dayStageUnmasking(byte[])void': void
  'nightStageMafiaCommit(byte[])void': void
  'nightStageDoctorCommit(byte[])void': void
  'dawnStageMafiaReveal(address,byte[32])void': void
  'dawnStageDoctorReveal(address,byte[32])void': void
  'dawnStageDeadOrSaved()void': void
  'dawnStageUnmasking(byte[])void': void
  'gameOver()void': void
  'deleteApplication()void': void
}

/**
 * Defines the types of available calls and state of the TownHall smart contract.
 */
export type TownHallTypes = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication()void' | 'createApplication', {
      argsObj: TownHallArgs['obj']['createApplication()void']
      argsTuple: TownHallArgs['tuple']['createApplication()void']
      returns: TownHallReturns['createApplication()void']
    }>
    & Record<'dummyOpUp(uint64)uint64' | 'dummyOpUp', {
      argsObj: TownHallArgs['obj']['dummyOpUp(uint64)uint64']
      argsTuple: TownHallArgs['tuple']['dummyOpUp(uint64)uint64']
      /**
       * the number (but we do nothing with it)
       */
      returns: TownHallReturns['dummyOpUp(uint64)uint64']
    }>
    & Record<'dlog(byte[],byte[],byte[],byte[])bool' | 'dlog', {
      argsObj: TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool']
      argsTuple: TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']
      returns: TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool']
    }>
    & Record<'hashPointToPoint(byte[])byte[]' | 'hashPointToPoint', {
      argsObj: TownHallArgs['obj']['hashPointToPoint(byte[])byte[]']
      argsTuple: TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']
      returns: TownHallReturns['hashPointToPoint(byte[])byte[]']
    }>
    & Record<'getGameState()uint64' | 'getGameState', {
      argsObj: TownHallArgs['obj']['getGameState()uint64']
      argsTuple: TownHallArgs['tuple']['getGameState()uint64']
      returns: TownHallReturns['getGameState()uint64']
    }>
    & Record<'setLSIGFunderAddress(address)void' | 'setLSIGFunderAddress', {
      argsObj: TownHallArgs['obj']['setLSIGFunderAddress(address)void']
      argsTuple: TownHallArgs['tuple']['setLSIGFunderAddress(address)void']
      returns: TownHallReturns['setLSIGFunderAddress(address)void']
    }>
    & Record<'joinGameLobby(pay,byte[])void' | 'joinGameLobby', {
      argsObj: TownHallArgs['obj']['joinGameLobby(pay,byte[])void']
      argsTuple: TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']
      returns: TownHallReturns['joinGameLobby(pay,byte[])void']
    }>
    & Record<'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void' | 'assignRole', {
      argsObj: TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']
      argsTuple: TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']
      returns: TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']
    }>
    & Record<'dayStageVote(uint64)void' | 'dayStageVote', {
      argsObj: TownHallArgs['obj']['dayStageVote(uint64)void']
      argsTuple: TownHallArgs['tuple']['dayStageVote(uint64)void']
      returns: TownHallReturns['dayStageVote(uint64)void']
    }>
    & Record<'dayStageEliminate()void' | 'dayStageEliminate', {
      argsObj: TownHallArgs['obj']['dayStageEliminate()void']
      argsTuple: TownHallArgs['tuple']['dayStageEliminate()void']
      returns: TownHallReturns['dayStageEliminate()void']
    }>
    & Record<'dayStageUnmasking(byte[])void' | 'dayStageUnmasking', {
      argsObj: TownHallArgs['obj']['dayStageUnmasking(byte[])void']
      argsTuple: TownHallArgs['tuple']['dayStageUnmasking(byte[])void']
      returns: TownHallReturns['dayStageUnmasking(byte[])void']
    }>
    & Record<'nightStageMafiaCommit(byte[])void' | 'nightStageMafiaCommit', {
      argsObj: TownHallArgs['obj']['nightStageMafiaCommit(byte[])void']
      argsTuple: TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']
      returns: TownHallReturns['nightStageMafiaCommit(byte[])void']
    }>
    & Record<'nightStageDoctorCommit(byte[])void' | 'nightStageDoctorCommit', {
      argsObj: TownHallArgs['obj']['nightStageDoctorCommit(byte[])void']
      argsTuple: TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']
      returns: TownHallReturns['nightStageDoctorCommit(byte[])void']
    }>
    & Record<'dawnStageMafiaReveal(address,byte[32])void' | 'dawnStageMafiaReveal', {
      argsObj: TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void']
      argsTuple: TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']
      returns: TownHallReturns['dawnStageMafiaReveal(address,byte[32])void']
    }>
    & Record<'dawnStageDoctorReveal(address,byte[32])void' | 'dawnStageDoctorReveal', {
      argsObj: TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void']
      argsTuple: TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']
      returns: TownHallReturns['dawnStageDoctorReveal(address,byte[32])void']
    }>
    & Record<'dawnStageDeadOrSaved()void' | 'dawnStageDeadOrSaved', {
      argsObj: TownHallArgs['obj']['dawnStageDeadOrSaved()void']
      argsTuple: TownHallArgs['tuple']['dawnStageDeadOrSaved()void']
      returns: TownHallReturns['dawnStageDeadOrSaved()void']
    }>
    & Record<'dawnStageUnmasking(byte[])void' | 'dawnStageUnmasking', {
      argsObj: TownHallArgs['obj']['dawnStageUnmasking(byte[])void']
      argsTuple: TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']
      returns: TownHallReturns['dawnStageUnmasking(byte[])void']
    }>
    & Record<'gameOver()void' | 'gameOver', {
      argsObj: TownHallArgs['obj']['gameOver()void']
      argsTuple: TownHallArgs['tuple']['gameOver()void']
      returns: TownHallReturns['gameOver()void']
    }>
    & Record<'deleteApplication()void' | 'deleteApplication', {
      argsObj: TownHallArgs['obj']['deleteApplication()void']
      argsTuple: TownHallArgs['tuple']['deleteApplication()void']
      returns: TownHallReturns['deleteApplication()void']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        creatorAddress: string
        player1AlgoAddr: [string, bigint]
        player2AlgoAddr: [string, bigint]
        player3AlgoAddr: [string, bigint]
        player4AlgoAddr: [string, bigint]
        player5AlgoAddr: [string, bigint]
        player6AlgoAddr: [string, bigint]
        mafia: string
        mafiaKeyImage: BinaryState
        doctor: string
        doctorKeyImage: BinaryState
        farmer: string
        farmerKeyImage: BinaryState
        butcher: string
        butcherKeyImage: BinaryState
        innkeep: string
        innkeepKeyImage: BinaryState
        grocer: string
        grocerKeyImage: BinaryState
        lsigFunderAddress: string
        player1HasVoted: bigint
        player1ReceivedVotes: bigint
        player2HasVoted: bigint
        player2ReceivedVotes: bigint
        player3HasVoted: bigint
        player3ReceivedVotes: bigint
        player4HasVoted: bigint
        player4ReceivedVotes: bigint
        player5HasVoted: bigint
        player5ReceivedVotes: bigint
        player6HasVoted: bigint
        player6ReceivedVotes: bigint
        playersVoted: bigint
        playersAlive: bigint
        justEliminatedPlayer: string
        mafiaCommitment: BinaryState
        doctorCommitment: BinaryState
        mafiaVictim: string
        doctorPatient: string
        playersJoined: bigint
        gameState: bigint
      }
      maps: {}
    }
    box: {
      keys: {}
      maps: {
        quickAccessPkBoxes: Map<bigint | number, Uint8Array>
        hashFilter: Map<Uint8Array | string, Uint8Array>
      }
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type TownHallSignatures = keyof TownHallTypes['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type TownHallNonVoidMethodSignatures = keyof TownHallTypes['methods'] extends infer T ? T extends keyof TownHallTypes['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the TownHall smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends TownHallSignatures> = TownHallTypes['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the TownHall smart contract to the method's return type
 */
export type MethodReturn<TSignature extends TownHallSignatures> = TownHallTypes['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = TownHallTypes['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = TownHallTypes['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type TownHallCreateCallParams =
  | Expand<CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & {method: 'createApplication()void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines supported delete method params for this smart contract
 */
export type TownHallDeleteCallParams =
  | Expand<CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication'}>
  | Expand<CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication()void'}>
/**
 * Defines arguments required for the deploy method.
 */
export type TownHallDeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: TownHallCreateCallParams
  /**
   * Delete transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  deleteParams?: TownHallDeleteCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the TownHall smart contract
 */
export abstract class TownHallParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends TownHallCreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication()void':
            return TownHallParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the TownHall smart contract using the createApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Gets available delete ABI call param factories
   */
  static get delete() {
    return {
      _resolveByMethod<TParams extends TownHallDeleteCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'deleteApplication':
          case 'deleteApplication()void':
            return TownHallParamsFactory.delete.deleteApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs delete ABI call params for the TownHall smart contract using the deleteApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      deleteApplication(params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']>): AppClientMethodCallParams {
        return {
          ...params,
          method: 'deleteApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the dummyOpUp(uint64)uint64 ABI method
   *
  * Dummy Op Up
  Dummy operation to get more opcode budget
  - The number to return, necssary to deduplicate the name

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dummyOpUp(params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dummyOpUp(uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.i],
    }
  }
  /**
   * Constructs a no op call for the dlog(byte[],byte[],byte[],byte[])bool ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dlog(params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dlog(byte[],byte[],byte[],byte[])bool' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.g, params.args.x, params.args.v, params.args.z],
    }
  }
  /**
   * Constructs a no op call for the hashPointToPoint(byte[])byte[] ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hashPointToPoint(params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hashPointToPoint(byte[])byte[]' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.point],
    }
  }
  /**
   * Constructs a no op call for the getGameState()uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getGameState(params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getGameState()uint64' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the setLSIGFunderAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setLsigFunderAddress(params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setLSIGFunderAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.funderLSigAddress],
    }
  }
  /**
   * Constructs a no op call for the joinGameLobby(pay,byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static joinGameLobby(params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'joinGameLobby(pay,byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.depositTxn, params.args.nizkDlog],
    }
  }
  /**
   * Constructs a no op call for the assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static assignRole(params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.msg, params.args.pkAll, params.args.keyImage, params.args.sig, params.args.challenges, params.args.funderLSigTxn, params.args.ringLSigTxn0, params.args.ringLSigTxn1, params.args.ringLSigTxn2, params.args.ringLSigTxn3, params.args.ringLSigTxn4, params.args.ringLSigTxn5],
    }
  }
  /**
   * Constructs a no op call for the dayStageVote(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageVote(params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageVote(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.vote],
    }
  }
  /**
   * Constructs a no op call for the dayStageEliminate()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageEliminate(params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageEliminate()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the dayStageUnmasking(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageUnmasking(params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageUnmasking(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.blsSk],
    }
  }
  /**
   * Constructs a no op call for the nightStageMafiaCommit(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static nightStageMafiaCommit(params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'nightStageMafiaCommit(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.commitment],
    }
  }
  /**
   * Constructs a no op call for the nightStageDoctorCommit(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static nightStageDoctorCommit(params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'nightStageDoctorCommit(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.commitment],
    }
  }
  /**
   * Constructs a no op call for the dawnStageMafiaReveal(address,byte[32])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageMafiaReveal(params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageMafiaReveal(address,byte[32])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.victimAim, params.args.blinder],
    }
  }
  /**
   * Constructs a no op call for the dawnStageDoctorReveal(address,byte[32])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageDoctorReveal(params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageDoctorReveal(address,byte[32])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.patientAim, params.args.blinder],
    }
  }
  /**
   * Constructs a no op call for the dawnStageDeadOrSaved()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageDeadOrSaved(params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageDeadOrSaved()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the dawnStageUnmasking(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageUnmasking(params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageUnmasking(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.blsSk],
    }
  }
  /**
   * Constructs a no op call for the gameOver()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static gameOver(params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'gameOver()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the TownHall smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class TownHallFactory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `TownHallFactory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new TownHallClient(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new TownHallClient(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the TownHall smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: TownHallDeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? TownHallParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (TownHallCreateCallParams & { args: Uint8Array[] }) : undefined,
      deleteParams: params.deleteParams?.method ? TownHallParamsFactory.delete._resolveByMethod(params.deleteParams) : params.deleteParams ? params.deleteParams as (TownHallDeleteCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new TownHallClient(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.params.create(TownHallParamsFactory.create.createApplication(params))
      },
    },

    /**
     * Gets available deployDelete methods
     */
    deployDelete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the deleteApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The deployDelete params
       */
      deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appFactory.params.deployDelete(TownHallParamsFactory.delete.deleteApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.createTransaction.create(TownHallParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using an ABI method call using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        const result = await this.appFactory.send.create(TownHallParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | TownHallReturns['createApplication()void']) }, appClient: new TownHallClient(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the TownHall smart contract
 */
export class TownHallClient {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `TownHallClient`
   *
   * @param appClient An `AppClient` instance which has been created with the TownHall app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `TownHallClient`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends TownHallNonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `TownHallClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<TownHallClient> {
    return new TownHallClient(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `TownHallClient` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<TownHallClient> {
    return new TownHallClient(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete params
       */
      deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.params.delete(TownHallParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call params: the number (but we do nothing with it)
     */
    dummyOpUp: (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dummyOpUp(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dlog: (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dlog(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hashPointToPoint: (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.hashPointToPoint(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getGameState: (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.getGameState(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `setLSIGFunderAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setLsigFunderAddress: (params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.setLsigFunderAddress(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(pay,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    joinGameLobby: (params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.joinGameLobby(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    assignRole: (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.assignRole(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageVote: (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageVote(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageEliminate: (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageEliminate(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageUnmasking: (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    nightStageMafiaCommit: (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.nightStageMafiaCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    nightStageDoctorCommit: (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.nightStageDoctorCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageMafiaReveal: (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageDoctorReveal: (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageDeadOrSaved: (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageUnmasking: (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    gameOver: (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.gameOver(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete transaction
       */
      deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.createTransaction.delete(TownHallParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call transaction: the number (but we do nothing with it)
     */
    dummyOpUp: (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dummyOpUp(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dlog: (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dlog(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hashPointToPoint: (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.hashPointToPoint(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getGameState: (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.getGameState(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `setLSIGFunderAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setLsigFunderAddress: (params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.setLsigFunderAddress(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(pay,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    joinGameLobby: (params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.joinGameLobby(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    assignRole: (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.assignRole(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageVote: (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageVote(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageEliminate: (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageEliminate(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageUnmasking: (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    nightStageMafiaCommit: (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.nightStageMafiaCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    nightStageDoctorCommit: (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.nightStageDoctorCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageMafiaReveal: (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageDoctorReveal: (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageDeadOrSaved: (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageUnmasking: (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    gameOver: (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.gameOver(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete result
       */
      deleteApplication: async (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> & SendParams = {args: []}) => {
        const result = await this.appClient.send.delete(TownHallParamsFactory.delete.deleteApplication(params))
        return {...result, return: result.return as unknown as (undefined | TownHallReturns['deleteApplication()void'])}
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call result: the number (but we do nothing with it)
     */
    dummyOpUp: async (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dummyOpUp(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dummyOpUp(uint64)uint64'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dlog: async (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dlog(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hashPointToPoint: async (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.hashPointToPoint(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['hashPointToPoint(byte[])byte[]'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getGameState: async (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.getGameState(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['getGameState()uint64'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `setLSIGFunderAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setLsigFunderAddress: async (params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.setLsigFunderAddress(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['setLSIGFunderAddress(address)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(pay,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    joinGameLobby: async (params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.joinGameLobby(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['joinGameLobby(pay,byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    assignRole: async (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.assignRole(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageVote: async (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageVote(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageVote(uint64)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageEliminate: async (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageEliminate(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageEliminate()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageUnmasking: async (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageUnmasking(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageUnmasking(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    nightStageMafiaCommit: async (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.nightStageMafiaCommit(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['nightStageMafiaCommit(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    nightStageDoctorCommit: async (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.nightStageDoctorCommit(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['nightStageDoctorCommit(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageMafiaReveal: async (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageMafiaReveal(address,byte[32])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageDoctorReveal: async (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageDoctorReveal(address,byte[32])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageDeadOrSaved: async (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageDeadOrSaved()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageUnmasking: async (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageUnmasking(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageUnmasking(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    gameOver: async (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.gameOver(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['gameOver()void'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new TownHallClient(this.appClient.clone(params))
  }

  /**
   * Methods to access state for the current TownHall app
   */
  state = {
    /**
     * Methods to access global state for the current TownHall app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          creatorAddress: result.creatorAddress,
          player1AlgoAddr: result.player1AlgoAddr,
          player2AlgoAddr: result.player2AlgoAddr,
          player3AlgoAddr: result.player3AlgoAddr,
          player4AlgoAddr: result.player4AlgoAddr,
          player5AlgoAddr: result.player5AlgoAddr,
          player6AlgoAddr: result.player6AlgoAddr,
          mafia: result.mafia,
          mafiaKeyImage: new BinaryStateValue(result.mafiaKeyImage),
          doctor: result.doctor,
          doctorKeyImage: new BinaryStateValue(result.doctorKeyImage),
          farmer: result.farmer,
          farmerKeyImage: new BinaryStateValue(result.farmerKeyImage),
          butcher: result.butcher,
          butcherKeyImage: new BinaryStateValue(result.butcherKeyImage),
          innkeep: result.innkeep,
          innkeepKeyImage: new BinaryStateValue(result.innkeepKeyImage),
          grocer: result.grocer,
          grocerKeyImage: new BinaryStateValue(result.grocerKeyImage),
          lsigFunderAddress: result.lsigFunderAddress,
          player1HasVoted: result.player1HasVoted,
          player1ReceivedVotes: result.player1ReceivedVotes,
          player2HasVoted: result.player2HasVoted,
          player2ReceivedVotes: result.player2ReceivedVotes,
          player3HasVoted: result.player3HasVoted,
          player3ReceivedVotes: result.player3ReceivedVotes,
          player4HasVoted: result.player4HasVoted,
          player4ReceivedVotes: result.player4ReceivedVotes,
          player5HasVoted: result.player5HasVoted,
          player5ReceivedVotes: result.player5ReceivedVotes,
          player6HasVoted: result.player6HasVoted,
          player6ReceivedVotes: result.player6ReceivedVotes,
          playersVoted: result.playersVoted,
          playersAlive: result.playersAlive,
          justEliminatedPlayer: result.justEliminatedPlayer,
          mafiaCommitment: new BinaryStateValue(result.mafiaCommitment),
          doctorCommitment: new BinaryStateValue(result.doctorCommitment),
          mafiaVictim: result.mafiaVictim,
          doctorPatient: result.doctorPatient,
          playersJoined: result.playersJoined,
          gameState: result.gameState,
        }
      },
      /**
       * Get the current value of the creatorAddress key in global state
       */
      creatorAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("creatorAddress")) as string | undefined },
      /**
       * Get the current value of the player1AlgoAddr key in global state
       */
      player1AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player1AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player2AlgoAddr key in global state
       */
      player2AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player2AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player3AlgoAddr key in global state
       */
      player3AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player3AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player4AlgoAddr key in global state
       */
      player4AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player4AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player5AlgoAddr key in global state
       */
      player5AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player5AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player6AlgoAddr key in global state
       */
      player6AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player6AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the mafia key in global state
       */
      mafia: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("mafia")) as string | undefined },
      /**
       * Get the current value of the mafiaKeyImage key in global state
       */
      mafiaKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("mafiaKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the doctor key in global state
       */
      doctor: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("doctor")) as string | undefined },
      /**
       * Get the current value of the doctorKeyImage key in global state
       */
      doctorKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("doctorKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the farmer key in global state
       */
      farmer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("farmer")) as string | undefined },
      /**
       * Get the current value of the farmerKeyImage key in global state
       */
      farmerKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("farmerKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the butcher key in global state
       */
      butcher: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("butcher")) as string | undefined },
      /**
       * Get the current value of the butcherKeyImage key in global state
       */
      butcherKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("butcherKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the innkeep key in global state
       */
      innkeep: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("innkeep")) as string | undefined },
      /**
       * Get the current value of the innkeepKeyImage key in global state
       */
      innkeepKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("innkeepKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the grocer key in global state
       */
      grocer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("grocer")) as string | undefined },
      /**
       * Get the current value of the grocerKeyImage key in global state
       */
      grocerKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("grocerKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the lsigFunderAddress key in global state
       */
      lsigFunderAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("lsigFunderAddress")) as string | undefined },
      /**
       * Get the current value of the player1HasVoted key in global state
       */
      player1HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player1HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player1ReceivedVotes key in global state
       */
      player1ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player1ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player2HasVoted key in global state
       */
      player2HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player2HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player2ReceivedVotes key in global state
       */
      player2ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player2ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player3HasVoted key in global state
       */
      player3HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player3HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player3ReceivedVotes key in global state
       */
      player3ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player3ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player4HasVoted key in global state
       */
      player4HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player4HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player4ReceivedVotes key in global state
       */
      player4ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player4ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player5HasVoted key in global state
       */
      player5HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player5HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player5ReceivedVotes key in global state
       */
      player5ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player5ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player6HasVoted key in global state
       */
      player6HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player6HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player6ReceivedVotes key in global state
       */
      player6ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player6ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the playersVoted key in global state
       */
      playersVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersVoted")) as bigint | undefined },
      /**
       * Get the current value of the playersAlive key in global state
       */
      playersAlive: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersAlive")) as bigint | undefined },
      /**
       * Get the current value of the justEliminatedPlayer key in global state
       */
      justEliminatedPlayer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("justEliminatedPlayer")) as string | undefined },
      /**
       * Get the current value of the mafiaCommitment key in global state
       */
      mafiaCommitment: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("mafiaCommitment")) as Uint8Array | undefined) },
      /**
       * Get the current value of the doctorCommitment key in global state
       */
      doctorCommitment: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("doctorCommitment")) as Uint8Array | undefined) },
      /**
       * Get the current value of the mafiaVictim key in global state
       */
      mafiaVictim: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("mafiaVictim")) as string | undefined },
      /**
       * Get the current value of the doctorPatient key in global state
       */
      doctorPatient: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("doctorPatient")) as string | undefined },
      /**
       * Get the current value of the playersJoined key in global state
       */
      playersJoined: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersJoined")) as bigint | undefined },
      /**
       * Get the current value of the gameState key in global state
       */
      gameState: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("gameState")) as bigint | undefined },
    },
    /**
     * Methods to access box state for the current TownHall app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
        }
      },
      /**
       * Get values from the quickAccessPKBoxes map in box state
       */
      quickAccessPkBoxes: {
        /**
         * Get all current values of the quickAccessPKBoxes map in box state
         */
        getMap: async (): Promise<Map<bigint, Uint8Array>> => { return (await this.appClient.state.box.getMap("quickAccessPKBoxes")) as Map<bigint, Uint8Array> },
        /**
         * Get a current value of the quickAccessPKBoxes map by key from box state
         */
        value: async (key: bigint | number): Promise<Uint8Array | undefined> => { return await this.appClient.state.box.getMapValue("quickAccessPKBoxes", key) as Uint8Array | undefined },
      },
      /**
       * Get values from the hashFilter map in box state
       */
      hashFilter: {
        /**
         * Get all current values of the hashFilter map in box state
         */
        getMap: async (): Promise<Map<Uint8Array, Uint8Array>> => { return (await this.appClient.state.box.getMap("hashFilter")) as Map<Uint8Array, Uint8Array> },
        /**
         * Get a current value of the hashFilter map by key from box state
         */
        value: async (key: Uint8Array | string): Promise<Uint8Array | undefined> => { return await this.appClient.state.box.getMapValue("hashFilter", key) as Uint8Array | undefined },
      },
    },
  }

  public newGroup(): TownHallComposer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a dummyOpUp(uint64)uint64 method call against the TownHall contract
       */
      dummyOpUp(params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dummyOpUp(params)))
        resultMappers.push((v) => client.decodeReturnValue('dummyOpUp(uint64)uint64', v))
        return this
      },
      /**
       * Add a dlog(byte[],byte[],byte[],byte[])bool method call against the TownHall contract
       */
      dlog(params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dlog(params)))
        resultMappers.push((v) => client.decodeReturnValue('dlog(byte[],byte[],byte[],byte[])bool', v))
        return this
      },
      /**
       * Add a hashPointToPoint(byte[])byte[] method call against the TownHall contract
       */
      hashPointToPoint(params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hashPointToPoint(params)))
        resultMappers.push((v) => client.decodeReturnValue('hashPointToPoint(byte[])byte[]', v))
        return this
      },
      /**
       * Add a getGameState()uint64 method call against the TownHall contract
       */
      getGameState(params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getGameState(params)))
        resultMappers.push((v) => client.decodeReturnValue('getGameState()uint64', v))
        return this
      },
      /**
       * Add a setLSIGFunderAddress(address)void method call against the TownHall contract
       */
      setLsigFunderAddress(params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setLsigFunderAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a joinGameLobby(pay,byte[])void method call against the TownHall contract
       */
      joinGameLobby(params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.joinGameLobby(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void method call against the TownHall contract
       */
      assignRole(params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.assignRole(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageVote(uint64)void method call against the TownHall contract
       */
      dayStageVote(params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageVote(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageEliminate()void method call against the TownHall contract
       */
      dayStageEliminate(params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageEliminate(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageUnmasking(byte[])void method call against the TownHall contract
       */
      dayStageUnmasking(params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageUnmasking(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a nightStageMafiaCommit(byte[])void method call against the TownHall contract
       */
      nightStageMafiaCommit(params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.nightStageMafiaCommit(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a nightStageDoctorCommit(byte[])void method call against the TownHall contract
       */
      nightStageDoctorCommit(params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.nightStageDoctorCommit(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageMafiaReveal(address,byte[32])void method call against the TownHall contract
       */
      dawnStageMafiaReveal(params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageMafiaReveal(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageDoctorReveal(address,byte[32])void method call against the TownHall contract
       */
      dawnStageDoctorReveal(params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageDoctorReveal(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageDeadOrSaved()void method call against the TownHall contract
       */
      dawnStageDeadOrSaved(params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageDeadOrSaved(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageUnmasking(byte[])void method call against the TownHall contract
       */
      dawnStageUnmasking(params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageUnmasking(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a gameOver()void method call against the TownHall contract
       */
      gameOver(params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.gameOver(params)))
        resultMappers.push(undefined)
        return this
      },
      get delete() {
        return {
          deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']>) => {
            promiseChain = promiseChain.then(async () => composer.addAppDeleteMethodCall(await client.params.delete.deleteApplication(params)))
            resultMappers.push(undefined)
            return this
          },
        }
      },
      /**
       * Add a clear state call to the TownHall contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as TownHallComposer
  }
}
export type TownHallComposer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the dummyOpUp(uint64)uint64 ABI method.
   *
  * Dummy Op Up
  Dummy operation to get more opcode budget
  - The number to return, necssary to deduplicate the name

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dummyOpUp(params?: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']>): TownHallComposer<[...TReturns, TownHallReturns['dummyOpUp(uint64)uint64'] | undefined]>

  /**
   * Calls the dlog(byte[],byte[],byte[],byte[])bool ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dlog(params?: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']>): TownHallComposer<[...TReturns, TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool'] | undefined]>

  /**
   * Calls the hashPointToPoint(byte[])byte[] ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hashPointToPoint(params?: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']>): TownHallComposer<[...TReturns, TownHallReturns['hashPointToPoint(byte[])byte[]'] | undefined]>

  /**
   * Calls the getGameState()uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getGameState(params?: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']>): TownHallComposer<[...TReturns, TownHallReturns['getGameState()uint64'] | undefined]>

  /**
   * Calls the setLSIGFunderAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setLsigFunderAddress(params?: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']>): TownHallComposer<[...TReturns, TownHallReturns['setLSIGFunderAddress(address)void'] | undefined]>

  /**
   * Calls the joinGameLobby(pay,byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  joinGameLobby(params?: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['joinGameLobby(pay,byte[])void'] | undefined]>

  /**
   * Calls the assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  assignRole(params?: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']>): TownHallComposer<[...TReturns, TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | undefined]>

  /**
   * Calls the dayStageVote(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageVote(params?: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageVote(uint64)void'] | undefined]>

  /**
   * Calls the dayStageEliminate()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageEliminate(params?: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageEliminate()void'] | undefined]>

  /**
   * Calls the dayStageUnmasking(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageUnmasking(params?: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageUnmasking(byte[])void'] | undefined]>

  /**
   * Calls the nightStageMafiaCommit(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  nightStageMafiaCommit(params?: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['nightStageMafiaCommit(byte[])void'] | undefined]>

  /**
   * Calls the nightStageDoctorCommit(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  nightStageDoctorCommit(params?: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['nightStageDoctorCommit(byte[])void'] | undefined]>

  /**
   * Calls the dawnStageMafiaReveal(address,byte[32])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageMafiaReveal(params?: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageMafiaReveal(address,byte[32])void'] | undefined]>

  /**
   * Calls the dawnStageDoctorReveal(address,byte[32])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageDoctorReveal(params?: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageDoctorReveal(address,byte[32])void'] | undefined]>

  /**
   * Calls the dawnStageDeadOrSaved()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageDeadOrSaved(params?: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageDeadOrSaved()void'] | undefined]>

  /**
   * Calls the dawnStageUnmasking(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageUnmasking(params?: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageUnmasking(byte[])void'] | undefined]>

  /**
   * Calls the gameOver()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  gameOver(params?: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']>): TownHallComposer<[...TReturns, TownHallReturns['gameOver()void'] | undefined]>

  /**
   * Gets available delete methods
   */
  readonly delete: {
    /**
     * Deletes an existing instance of the TownHall smart contract using the deleteApplication()void ABI method.
     *
     * @param args The arguments for the smart contract call
     * @param params Any additional parameters for the call
     * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
     */
    deleteApplication(params?: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']>): TownHallComposer<[...TReturns, TownHallReturns['deleteApplication()void'] | undefined]>
  }

  /**
   * Makes a clear_state call to an existing instance of the TownHall smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): TownHallComposer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): TownHallComposer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): TransactionComposer
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<TownHallComposerResults<TReturns>>
}
export type TownHallComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

