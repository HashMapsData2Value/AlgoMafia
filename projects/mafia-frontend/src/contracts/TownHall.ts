/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { AlgorandClientInterface } from '@algorandfoundation/algokit-utils/types/algorand-client-interface'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"TownHall","desc":"","methods":[{"name":"createApplication","args":[],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"dummyOpUp","desc":"Dummy Op Up\nDummy operation to get more opcode budget\n - The number to return, necssary to deduplicate the name","args":[{"name":"i","type":"uint64"}],"returns":{"type":"uint64","desc":"the number (but we do nothing with it)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dlog","args":[{"name":"g","type":"byte[]"},{"name":"x","type":"byte[]"},{"name":"v","type":"byte[]"},{"name":"z","type":"byte[]"}],"returns":{"type":"bool"},"actions":{"create":[],"call":["NoOp"]}},{"name":"hashPointToPoint","args":[{"name":"point","type":"byte[]"}],"returns":{"type":"byte[]"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getGameState","args":[],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setLSIGFunderAddress","args":[{"name":"funderLSigAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"joinGameLobby","args":[{"name":"depositTxn","type":"pay"},{"name":"NIZK_DLOG","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"assignRole","args":[{"name":"msg","type":"byte[]"},{"name":"pkAll","type":"byte[]"},{"name":"keyImage","type":"byte[]"},{"name":"sig","type":"byte[]"},{"name":"challenges","type":"byte[]"},{"name":"funderLSigTxn","type":"pay"},{"name":"ringLSigTxn0","type":"pay"},{"name":"ringLSigTxn1","type":"pay"},{"name":"ringLSigTxn2","type":"pay"},{"name":"ringLSigTxn3","type":"pay"},{"name":"ringLSigTxn4","type":"pay"},{"name":"ringLSigTxn5","type":"pay"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageVote","args":[{"name":"vote","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageEliminate","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageUnmasking","args":[{"name":"blsSk","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"nightStageMafiaCommit","args":[{"name":"commitment","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"nightStageDoctorCommit","args":[{"name":"commitment","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageMafiaReveal","args":[{"name":"victimAim","type":"address"},{"name":"blinder","type":"byte[32]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageDoctorReveal","args":[{"name":"patientAim","type":"address"},{"name":"blinder","type":"byte[32]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageDeadOrSaved","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageUnmasking","args":[{"name":"blsSk","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"gameOver","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"deleteApplication","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["DeleteApplication"]}}],"arcs":[4,56],"structs":{},"state":{"schema":{"global":{"bytes":25,"ints":16},"local":{"bytes":0,"ints":0}},"keys":{"global":{"creatorAddress":{"key":"Y3JlYXRvckFkZHJlc3M=","keyType":"AVMBytes","valueType":"address"},"player1AlgoAddr":{"key":"cGxheWVyMUFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player2AlgoAddr":{"key":"cGxheWVyMkFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player3AlgoAddr":{"key":"cGxheWVyM0FsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player4AlgoAddr":{"key":"cGxheWVyNEFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player5AlgoAddr":{"key":"cGxheWVyNUFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player6AlgoAddr":{"key":"cGxheWVyNkFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"mafia":{"key":"bWFmaWE=","keyType":"AVMBytes","valueType":"address"},"mafiaKeyImage":{"key":"bWFmaWFLZXlJbWFnZQ==","keyType":"AVMBytes","valueType":"AVMBytes"},"doctor":{"key":"ZG9jdG9y","keyType":"AVMBytes","valueType":"address"},"doctorKeyImage":{"key":"ZG9jdG9yS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"farmer":{"key":"ZmFybWVy","keyType":"AVMBytes","valueType":"address"},"farmerKeyImage":{"key":"ZmFybWVyS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"butcher":{"key":"YnV0Y2hlcg==","keyType":"AVMBytes","valueType":"address"},"butcherKeyImage":{"key":"YnV0Y2hlcktleUltYWdl","keyType":"AVMBytes","valueType":"AVMBytes"},"innkeep":{"key":"aW5ua2VlcA==","keyType":"AVMBytes","valueType":"address"},"innkeepKeyImage":{"key":"aW5ua2VlcEtleUltYWdl","keyType":"AVMBytes","valueType":"AVMBytes"},"grocer":{"key":"Z3JvY2Vy","keyType":"AVMBytes","valueType":"address"},"grocerKeyImage":{"key":"Z3JvY2VyS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"lsigFunderAddress":{"key":"bHNpZ0Z1bmRlckFkZHJlc3M=","keyType":"AVMBytes","valueType":"address"},"player1HasVoted":{"key":"cGxheWVyMUhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player1ReceivedVotes":{"key":"cGxheWVyMVJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player2HasVoted":{"key":"cGxheWVyMkhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player2ReceivedVotes":{"key":"cGxheWVyMlJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player3HasVoted":{"key":"cGxheWVyM0hhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player3ReceivedVotes":{"key":"cGxheWVyM1JlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player4HasVoted":{"key":"cGxheWVyNEhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player4ReceivedVotes":{"key":"cGxheWVyNFJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player5HasVoted":{"key":"cGxheWVyNUhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player5ReceivedVotes":{"key":"cGxheWVyNVJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player6HasVoted":{"key":"cGxheWVyNkhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player6ReceivedVotes":{"key":"cGxheWVyNlJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"playersVoted":{"key":"cGxheWVyc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"playersAlive":{"key":"cGxheWVyc0FsaXZl","keyType":"AVMBytes","valueType":"uint64"},"justEliminatedPlayer":{"key":"anVzdEVsaW1pbmF0ZWRQbGF5ZXI=","keyType":"AVMBytes","valueType":"address"},"mafiaCommitment":{"key":"bWFmaWFDb21taXRtZW50","keyType":"AVMBytes","valueType":"AVMBytes"},"doctorCommitment":{"key":"ZG9jdG9yQ29tbWl0bWVudA==","keyType":"AVMBytes","valueType":"AVMBytes"},"mafiaVictim":{"key":"bWFmaWFWaWN0aW0=","keyType":"AVMBytes","valueType":"address"},"doctorPatient":{"key":"ZG9jdG9yUGF0aWVudA==","keyType":"AVMBytes","valueType":"address"},"playersJoined":{"key":"cGxheWVyc0pvaW5lZA==","keyType":"AVMBytes","valueType":"uint64"},"gameState":{"key":"Z2FtZVN0YXRl","keyType":"AVMBytes","valueType":"uint64"}},"local":{},"box":{}},"maps":{"global":{},"local":{},"box":{"quickAccessPKBoxes":{"keyType":"uint64","valueType":"AVMBytes"},"hashFilter":{"keyType":"AVMBytes","valueType":"AVMBytes"}}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/TownHall.algo.ts:33","pc":[0]},{"teal":2,"source":"contracts/TownHall.algo.ts:33","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]},{"teal":3,"source":"contracts/TownHall.algo.ts:33","pc":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758]},{"teal":15,"source":"contracts/TownHall.algo.ts:33","pc":[759,760]},{"teal":16,"source":"contracts/TownHall.algo.ts:33","pc":[761]},{"teal":17,"source":"contracts/TownHall.algo.ts:33","pc":[762]},{"teal":18,"source":"contracts/TownHall.algo.ts:33","pc":[763]},{"teal":19,"source":"contracts/TownHall.algo.ts:33","pc":[764,765]},{"teal":20,"source":"contracts/TownHall.algo.ts:33","pc":[766]},{"teal":21,"source":"contracts/TownHall.algo.ts:33","pc":[767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792]},{"teal":25,"source":"contracts/TownHall.algo.ts:33","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[793]},{"teal":30,"source":"contracts/TownHall.algo.ts:133","pc":[794,795,796]},{"teal":31,"source":"contracts/TownHall.algo.ts:133","pc":[797]},{"teal":32,"source":"contracts/TownHall.algo.ts:133","pc":[798]},{"teal":36,"source":"contracts/TownHall.algo.ts:133","pc":[799,800,801]},{"teal":40,"source":"contracts/TownHall.algo.ts:134","pc":[802,803]},{"teal":41,"source":"contracts/TownHall.algo.ts:134","pc":[804,805]},{"teal":42,"source":"contracts/TownHall.algo.ts:134","pc":[806]},{"teal":46,"source":"contracts/TownHall.algo.ts:136","pc":[807,808]},{"teal":47,"source":"contracts/TownHall.algo.ts:136","pc":[809,810]},{"teal":48,"source":"contracts/TownHall.algo.ts:136","pc":[811]},{"teal":52,"source":"contracts/TownHall.algo.ts:138","pc":[812]},{"teal":53,"source":"contracts/TownHall.algo.ts:138","pc":[813,814]},{"teal":54,"source":"contracts/TownHall.algo.ts:138","pc":[815,816]},{"teal":55,"source":"contracts/TownHall.algo.ts:138","pc":[817]},{"teal":56,"source":"contracts/TownHall.algo.ts:138","pc":[818]},{"teal":60,"source":"contracts/TownHall.algo.ts:139","pc":[819]},{"teal":61,"source":"contracts/TownHall.algo.ts:139","pc":[820,821]},{"teal":62,"source":"contracts/TownHall.algo.ts:139","pc":[822,823]},{"teal":63,"source":"contracts/TownHall.algo.ts:139","pc":[824]},{"teal":64,"source":"contracts/TownHall.algo.ts:139","pc":[825]},{"teal":68,"source":"contracts/TownHall.algo.ts:140","pc":[826,827]},{"teal":69,"source":"contracts/TownHall.algo.ts:140","pc":[828,829]},{"teal":70,"source":"contracts/TownHall.algo.ts:140","pc":[830,831]},{"teal":71,"source":"contracts/TownHall.algo.ts:140","pc":[832]},{"teal":72,"source":"contracts/TownHall.algo.ts:140","pc":[833]},{"teal":76,"source":"contracts/TownHall.algo.ts:141","pc":[834,835]},{"teal":77,"source":"contracts/TownHall.algo.ts:141","pc":[836,837]},{"teal":78,"source":"contracts/TownHall.algo.ts:141","pc":[838,839]},{"teal":79,"source":"contracts/TownHall.algo.ts:141","pc":[840]},{"teal":80,"source":"contracts/TownHall.algo.ts:141","pc":[841]},{"teal":84,"source":"contracts/TownHall.algo.ts:142","pc":[842,843]},{"teal":85,"source":"contracts/TownHall.algo.ts:142","pc":[844,845]},{"teal":86,"source":"contracts/TownHall.algo.ts:142","pc":[846,847]},{"teal":87,"source":"contracts/TownHall.algo.ts:142","pc":[848]},{"teal":88,"source":"contracts/TownHall.algo.ts:142","pc":[849]},{"teal":92,"source":"contracts/TownHall.algo.ts:143","pc":[850,851]},{"teal":93,"source":"contracts/TownHall.algo.ts:143","pc":[852,853]},{"teal":94,"source":"contracts/TownHall.algo.ts:143","pc":[854,855]},{"teal":95,"source":"contracts/TownHall.algo.ts:143","pc":[856]},{"teal":96,"source":"contracts/TownHall.algo.ts:143","pc":[857]},{"teal":100,"source":"contracts/TownHall.algo.ts:145","pc":[858,859]},{"teal":101,"source":"contracts/TownHall.algo.ts:145","pc":[860,861]},{"teal":102,"source":"contracts/TownHall.algo.ts:145","pc":[862]},{"teal":106,"source":"contracts/TownHall.algo.ts:146","pc":[863,864]},{"teal":107,"source":"contracts/TownHall.algo.ts:146","pc":[865,866]},{"teal":108,"source":"contracts/TownHall.algo.ts:146","pc":[867]},{"teal":112,"source":"contracts/TownHall.algo.ts:147","pc":[868,869]},{"teal":113,"source":"contracts/TownHall.algo.ts:147","pc":[870,871]},{"teal":114,"source":"contracts/TownHall.algo.ts:147","pc":[872]},{"teal":118,"source":"contracts/TownHall.algo.ts:148","pc":[873,874]},{"teal":119,"source":"contracts/TownHall.algo.ts:148","pc":[875,876]},{"teal":120,"source":"contracts/TownHall.algo.ts:148","pc":[877]},{"teal":124,"source":"contracts/TownHall.algo.ts:149","pc":[878,879]},{"teal":125,"source":"contracts/TownHall.algo.ts:149","pc":[880,881]},{"teal":126,"source":"contracts/TownHall.algo.ts:149","pc":[882]},{"teal":130,"source":"contracts/TownHall.algo.ts:150","pc":[883,884]},{"teal":131,"source":"contracts/TownHall.algo.ts:150","pc":[885,886]},{"teal":132,"source":"contracts/TownHall.algo.ts:150","pc":[887]},{"teal":136,"source":"contracts/TownHall.algo.ts:152","pc":[888,889]},{"teal":137,"source":"contracts/TownHall.algo.ts:152","pc":[890]},{"teal":138,"source":"contracts/TownHall.algo.ts:152","pc":[891]},{"teal":142,"source":"contracts/TownHall.algo.ts:153","pc":[892,893]},{"teal":143,"source":"contracts/TownHall.algo.ts:153","pc":[894]},{"teal":144,"source":"contracts/TownHall.algo.ts:153","pc":[895]},{"teal":148,"source":"contracts/TownHall.algo.ts:154","pc":[896,897]},{"teal":149,"source":"contracts/TownHall.algo.ts:154","pc":[898]},{"teal":150,"source":"contracts/TownHall.algo.ts:154","pc":[899]},{"teal":154,"source":"contracts/TownHall.algo.ts:155","pc":[900,901]},{"teal":155,"source":"contracts/TownHall.algo.ts:155","pc":[902]},{"teal":156,"source":"contracts/TownHall.algo.ts:155","pc":[903]},{"teal":160,"source":"contracts/TownHall.algo.ts:156","pc":[904,905]},{"teal":161,"source":"contracts/TownHall.algo.ts:156","pc":[906]},{"teal":162,"source":"contracts/TownHall.algo.ts:156","pc":[907]},{"teal":166,"source":"contracts/TownHall.algo.ts:157","pc":[908,909]},{"teal":167,"source":"contracts/TownHall.algo.ts:157","pc":[910]},{"teal":168,"source":"contracts/TownHall.algo.ts:157","pc":[911]},{"teal":172,"source":"contracts/TownHall.algo.ts:158","pc":[912,913]},{"teal":173,"source":"contracts/TownHall.algo.ts:158","pc":[914]},{"teal":174,"source":"contracts/TownHall.algo.ts:158","pc":[915]},{"teal":178,"source":"contracts/TownHall.algo.ts:160","pc":[916,917]},{"teal":179,"source":"contracts/TownHall.algo.ts:160","pc":[918]},{"teal":180,"source":"contracts/TownHall.algo.ts:160","pc":[919]},{"teal":184,"source":"contracts/TownHall.algo.ts:161","pc":[920,921]},{"teal":185,"source":"contracts/TownHall.algo.ts:161","pc":[922]},{"teal":186,"source":"contracts/TownHall.algo.ts:161","pc":[923]},{"teal":190,"source":"contracts/TownHall.algo.ts:162","pc":[924,925]},{"teal":191,"source":"contracts/TownHall.algo.ts:162","pc":[926]},{"teal":192,"source":"contracts/TownHall.algo.ts:162","pc":[927]},{"teal":196,"source":"contracts/TownHall.algo.ts:163","pc":[928,929]},{"teal":197,"source":"contracts/TownHall.algo.ts:163","pc":[930]},{"teal":198,"source":"contracts/TownHall.algo.ts:163","pc":[931]},{"teal":202,"source":"contracts/TownHall.algo.ts:164","pc":[932,933]},{"teal":203,"source":"contracts/TownHall.algo.ts:164","pc":[934]},{"teal":204,"source":"contracts/TownHall.algo.ts:164","pc":[935]},{"teal":208,"source":"contracts/TownHall.algo.ts:165","pc":[936,937]},{"teal":209,"source":"contracts/TownHall.algo.ts:165","pc":[938]},{"teal":210,"source":"contracts/TownHall.algo.ts:165","pc":[939]},{"teal":214,"source":"contracts/TownHall.algo.ts:166","pc":[940,941]},{"teal":215,"source":"contracts/TownHall.algo.ts:166","pc":[942]},{"teal":216,"source":"contracts/TownHall.algo.ts:166","pc":[943]},{"teal":220,"source":"contracts/TownHall.algo.ts:168","pc":[944,945]},{"teal":221,"source":"contracts/TownHall.algo.ts:168","pc":[946]},{"teal":222,"source":"contracts/TownHall.algo.ts:168","pc":[947]},{"teal":226,"source":"contracts/TownHall.algo.ts:169","pc":[948,949]},{"teal":227,"source":"contracts/TownHall.algo.ts:169","pc":[950]},{"teal":228,"source":"contracts/TownHall.algo.ts:169","pc":[951]},{"teal":232,"source":"contracts/TownHall.algo.ts:171","pc":[952]},{"teal":233,"source":"contracts/TownHall.algo.ts:171","pc":[953,954]},{"teal":234,"source":"contracts/TownHall.algo.ts:171","pc":[955]},{"teal":238,"source":"contracts/TownHall.algo.ts:172","pc":[956,957]},{"teal":239,"source":"contracts/TownHall.algo.ts:172","pc":[958,959]},{"teal":240,"source":"contracts/TownHall.algo.ts:172","pc":[960]},{"teal":244,"source":"contracts/TownHall.algo.ts:173","pc":[961,962]},{"teal":245,"source":"contracts/TownHall.algo.ts:173","pc":[963,964]},{"teal":246,"source":"contracts/TownHall.algo.ts:173","pc":[965]},{"teal":250,"source":"contracts/TownHall.algo.ts:175","pc":[966]},{"teal":251,"source":"contracts/TownHall.algo.ts:175","pc":[967]},{"teal":252,"source":"contracts/TownHall.algo.ts:175","pc":[968]},{"teal":253,"source":"contracts/TownHall.algo.ts:133","pc":[969]},{"teal":258,"source":"contracts/TownHall.algo.ts:183","pc":[970,971]},{"teal":261,"source":"contracts/TownHall.algo.ts:183","pc":[972,973,974]},{"teal":262,"source":"contracts/TownHall.algo.ts:183","pc":[975]},{"teal":265,"source":"contracts/TownHall.algo.ts:183","pc":[976,977,978]},{"teal":266,"source":"contracts/TownHall.algo.ts:183","pc":[979]},{"teal":267,"source":"contracts/TownHall.algo.ts:183","pc":[980]},{"teal":268,"source":"contracts/TownHall.algo.ts:183","pc":[981]},{"teal":269,"source":"contracts/TownHall.algo.ts:183","pc":[982]},{"teal":270,"source":"contracts/TownHall.algo.ts:183","pc":[983]},{"teal":279,"source":"contracts/TownHall.algo.ts:183","pc":[984,985,986]},{"teal":283,"source":"contracts/TownHall.algo.ts:184","pc":[987,988]},{"teal":284,"source":"contracts/TownHall.algo.ts:183","pc":[989]},{"teal":289,"source":"contracts/TownHall.algo.ts:205","pc":[990,991]},{"teal":292,"source":"contracts/TownHall.algo.ts:205","pc":[992,993,994]},{"teal":293,"source":"contracts/TownHall.algo.ts:205","pc":[995,996,997]},{"teal":296,"source":"contracts/TownHall.algo.ts:205","pc":[998,999,1000]},{"teal":297,"source":"contracts/TownHall.algo.ts:205","pc":[1001,1002,1003]},{"teal":300,"source":"contracts/TownHall.algo.ts:205","pc":[1004,1005,1006]},{"teal":301,"source":"contracts/TownHall.algo.ts:205","pc":[1007,1008,1009]},{"teal":304,"source":"contracts/TownHall.algo.ts:205","pc":[1010,1011,1012]},{"teal":305,"source":"contracts/TownHall.algo.ts:205","pc":[1013,1014,1015]},{"teal":308,"source":"contracts/TownHall.algo.ts:205","pc":[1016,1017,1018]},{"teal":309,"source":"contracts/TownHall.algo.ts:205","pc":[1019,1020,1021]},{"teal":310,"source":"contracts/TownHall.algo.ts:205","pc":[1022]},{"teal":311,"source":"contracts/TownHall.algo.ts:205","pc":[1023,1024]},{"teal":312,"source":"contracts/TownHall.algo.ts:205","pc":[1025]},{"teal":313,"source":"contracts/TownHall.algo.ts:205","pc":[1026]},{"teal":314,"source":"contracts/TownHall.algo.ts:205","pc":[1027]},{"teal":315,"source":"contracts/TownHall.algo.ts:205","pc":[1028]},{"teal":316,"source":"contracts/TownHall.algo.ts:205","pc":[1029]},{"teal":320,"source":"contracts/TownHall.algo.ts:205","pc":[1030,1031,1032]},{"teal":323,"source":"contracts/TownHall.algo.ts:205","pc":[1033,1034]},{"teal":324,"source":"contracts/TownHall.algo.ts:205","pc":[1035]},{"teal":328,"source":"contracts/TownHall.algo.ts:207","pc":[1036,1037]},{"teal":329,"source":"contracts/TownHall.algo.ts:207","pc":[1038,1039]},{"teal":330,"source":"contracts/TownHall.algo.ts:207","pc":[1040,1041]},{"teal":331,"source":"contracts/TownHall.algo.ts:207","pc":[1042]},{"teal":332,"source":"contracts/TownHall.algo.ts:207","pc":[1043]},{"teal":333,"source":"contracts/TownHall.algo.ts:207","pc":[1044]},{"teal":334,"source":"contracts/TownHall.algo.ts:207","pc":[1045,1046]},{"teal":338,"source":"contracts/TownHall.algo.ts:208","pc":[1047,1048]},{"teal":339,"source":"contracts/TownHall.algo.ts:208","pc":[1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082]},{"teal":340,"source":"contracts/TownHall.algo.ts:208","pc":[1083]},{"teal":341,"source":"contracts/TownHall.algo.ts:208","pc":[1084,1085]},{"teal":347,"source":"contracts/TownHall.algo.ts:211","pc":[1086,1087]},{"teal":348,"source":"contracts/TownHall.algo.ts:211","pc":[1088,1089]},{"teal":349,"source":"contracts/TownHall.algo.ts:211","pc":[1090,1091]},{"teal":350,"source":"contracts/TownHall.algo.ts:211","pc":[1092,1093]},{"teal":351,"source":"contracts/TownHall.algo.ts:211","pc":[1094,1095]},{"teal":352,"source":"contracts/TownHall.algo.ts:211","pc":[1096,1097]},{"teal":353,"source":"contracts/TownHall.algo.ts:211","pc":[1098,1099]},{"teal":354,"source":"contracts/TownHall.algo.ts:211","pc":[1100,1101]},{"teal":355,"source":"contracts/TownHall.algo.ts:211","pc":[1102]},{"teal":358,"source":"contracts/TownHall.algo.ts:205","pc":[1103,1104]},{"teal":361,"source":"contracts/TownHall.algo.ts:205","pc":[1105,1106]},{"teal":362,"source":"contracts/TownHall.algo.ts:205","pc":[1107]},{"teal":367,"source":"contracts/TownHall.algo.ts:215","pc":[1108,1109]},{"teal":370,"source":"contracts/TownHall.algo.ts:215","pc":[1110,1111,1112]},{"teal":371,"source":"contracts/TownHall.algo.ts:215","pc":[1113,1114,1115]},{"teal":374,"source":"contracts/TownHall.algo.ts:215","pc":[1116,1117,1118]},{"teal":375,"source":"contracts/TownHall.algo.ts:215","pc":[1119]},{"teal":376,"source":"contracts/TownHall.algo.ts:215","pc":[1120]},{"teal":377,"source":"contracts/TownHall.algo.ts:215","pc":[1121]},{"teal":378,"source":"contracts/TownHall.algo.ts:215","pc":[1122,1123,1124]},{"teal":379,"source":"contracts/TownHall.algo.ts:215","pc":[1125]},{"teal":380,"source":"contracts/TownHall.algo.ts:215","pc":[1126]},{"teal":381,"source":"contracts/TownHall.algo.ts:215","pc":[1127]},{"teal":382,"source":"contracts/TownHall.algo.ts:215","pc":[1128]},{"teal":383,"source":"contracts/TownHall.algo.ts:215","pc":[1129]},{"teal":384,"source":"contracts/TownHall.algo.ts:215","pc":[1130]},{"teal":388,"source":"contracts/TownHall.algo.ts:215","pc":[1131,1132,1133]},{"teal":391,"source":"contracts/TownHall.algo.ts:215","pc":[1134,1135]},{"teal":392,"source":"contracts/TownHall.algo.ts:215","pc":[1136,1137]},{"teal":396,"source":"contracts/TownHall.algo.ts:216","pc":[1138,1139]},{"teal":397,"source":"contracts/TownHall.algo.ts:216","pc":[1140]},{"teal":398,"source":"contracts/TownHall.algo.ts:216","pc":[1141,1142]},{"teal":402,"source":"contracts/TownHall.algo.ts:217","pc":[1143,1144]},{"teal":403,"source":"contracts/TownHall.algo.ts:217","pc":[1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194]},{"teal":404,"source":"contracts/TownHall.algo.ts:217","pc":[1195]},{"teal":405,"source":"contracts/TownHall.algo.ts:217","pc":[1196,1197]},{"teal":409,"source":"contracts/TownHall.algo.ts:220","pc":[1198,1199]},{"teal":410,"source":"contracts/TownHall.algo.ts:220","pc":[1200,1201]},{"teal":411,"source":"contracts/TownHall.algo.ts:220","pc":[1202,1203]},{"teal":415,"source":"contracts/TownHall.algo.ts:221","pc":[1204,1205]},{"teal":418,"source":"contracts/TownHall.algo.ts:215","pc":[1206,1207]},{"teal":421,"source":"contracts/TownHall.algo.ts:215","pc":[1208,1209]},{"teal":422,"source":"contracts/TownHall.algo.ts:215","pc":[1210]},{"teal":427,"source":"contracts/TownHall.algo.ts:226","pc":[1211,1212]},{"teal":430,"source":"contracts/TownHall.algo.ts:226","pc":[1213,1214,1215]},{"teal":431,"source":"contracts/TownHall.algo.ts:226","pc":[1216]},{"teal":432,"source":"contracts/TownHall.algo.ts:226","pc":[1217]},{"teal":433,"source":"contracts/TownHall.algo.ts:226","pc":[1218]},{"teal":434,"source":"contracts/TownHall.algo.ts:226","pc":[1219]},{"teal":435,"source":"contracts/TownHall.algo.ts:226","pc":[1220]},{"teal":439,"source":"contracts/TownHall.algo.ts:226","pc":[1221,1222,1223]},{"teal":443,"source":"contracts/TownHall.algo.ts:227","pc":[1224]},{"teal":444,"source":"contracts/TownHall.algo.ts:227","pc":[1225]},{"teal":445,"source":"contracts/TownHall.algo.ts:226","pc":[1226]},{"teal":450,"source":"contracts/TownHall.algo.ts:230","pc":[1227,1228,1229]},{"teal":451,"source":"contracts/TownHall.algo.ts:230","pc":[1230]},{"teal":452,"source":"contracts/TownHall.algo.ts:230","pc":[1231]},{"teal":453,"source":"contracts/TownHall.algo.ts:230","pc":[1232,1233]},{"teal":454,"source":"contracts/TownHall.algo.ts:230","pc":[1234]},{"teal":457,"source":"contracts/TownHall.algo.ts:230","errorMessage":"argument 0 (funderLSigAddress) for setLSIGFunderAddress must be a address","pc":[1235]},{"teal":460,"source":"contracts/TownHall.algo.ts:230","pc":[1236,1237,1238]},{"teal":461,"source":"contracts/TownHall.algo.ts:230","pc":[1239]},{"teal":462,"source":"contracts/TownHall.algo.ts:230","pc":[1240]},{"teal":466,"source":"contracts/TownHall.algo.ts:230","pc":[1241,1242,1243]},{"teal":473,"source":"contracts/TownHall.algo.ts:232","pc":[1244]},{"teal":474,"source":"contracts/TownHall.algo.ts:232","pc":[1245]},{"teal":475,"source":"contracts/TownHall.algo.ts:232","pc":[1246]},{"teal":476,"source":"contracts/TownHall.algo.ts:232","pc":[1247]},{"teal":479,"source":"contracts/TownHall.algo.ts:231","errorMessage":"Invalid method call: Contract is not in Set LSig Funder Address state.","pc":[1248]},{"teal":486,"source":"contracts/TownHall.algo.ts:237","pc":[1249,1250]},{"teal":487,"source":"contracts/TownHall.algo.ts:237","pc":[1251,1252]},{"teal":488,"source":"contracts/TownHall.algo.ts:237","pc":[1253]},{"teal":489,"source":"contracts/TownHall.algo.ts:237","pc":[1254]},{"teal":492,"source":"contracts/TownHall.algo.ts:236","errorMessage":"Error state: Only the creator can set the LSig Funder Address!","pc":[1255]},{"teal":496,"source":"contracts/TownHall.algo.ts:241","pc":[1256,1257]},{"teal":497,"source":"contracts/TownHall.algo.ts:241","pc":[1258]},{"teal":498,"source":"contracts/TownHall.algo.ts:241","pc":[1259,1260]},{"teal":499,"source":"contracts/TownHall.algo.ts:241","pc":[1261]},{"teal":502,"source":"contracts/TownHall.algo.ts:241","errorMessage":"Error state: LSig Funder Address already set!","pc":[1262]},{"teal":506,"source":"contracts/TownHall.algo.ts:243","pc":[1263,1264]},{"teal":507,"source":"contracts/TownHall.algo.ts:243","pc":[1265,1266]},{"teal":508,"source":"contracts/TownHall.algo.ts:243","pc":[1267]},{"teal":511,"source":"contracts/TownHall.algo.ts:243","errorMessage":"Error state: LSig Funder Address cannot be the zero address.","pc":[1268]},{"teal":515,"source":"contracts/TownHall.algo.ts:246","pc":[1269,1270]},{"teal":516,"source":"contracts/TownHall.algo.ts:246","pc":[1271,1272]},{"teal":517,"source":"contracts/TownHall.algo.ts:246","pc":[1273]},{"teal":521,"source":"contracts/TownHall.algo.ts:248","pc":[1274]},{"teal":522,"source":"contracts/Constants.ts:17","pc":[1275]},{"teal":523,"source":"contracts/TownHall.algo.ts:248","pc":[1276]},{"teal":524,"source":"contracts/TownHall.algo.ts:230","pc":[1277]},{"teal":529,"source":"contracts/TownHall.algo.ts:251","pc":[1278,1279,1280]},{"teal":530,"source":"contracts/TownHall.algo.ts:251","pc":[1281,1282,1283]},{"teal":533,"source":"contracts/TownHall.algo.ts:251","pc":[1284,1285]},{"teal":534,"source":"contracts/TownHall.algo.ts:251","pc":[1286]},{"teal":535,"source":"contracts/TownHall.algo.ts:251","pc":[1287]},{"teal":536,"source":"contracts/TownHall.algo.ts:251","pc":[1288]},{"teal":537,"source":"contracts/TownHall.algo.ts:251","pc":[1289,1290]},{"teal":538,"source":"contracts/TownHall.algo.ts:251","pc":[1291]},{"teal":539,"source":"contracts/TownHall.algo.ts:251","pc":[1292]},{"teal":542,"source":"contracts/TownHall.algo.ts:251","errorMessage":"argument 1 (depositTxn) for joinGameLobby must be a pay transaction","pc":[1293]},{"teal":545,"source":"contracts/TownHall.algo.ts:251","pc":[1294,1295,1296]},{"teal":546,"source":"contracts/TownHall.algo.ts:251","pc":[1297]},{"teal":547,"source":"contracts/TownHall.algo.ts:251","pc":[1298]},{"teal":551,"source":"contracts/TownHall.algo.ts:251","pc":[1299,1300,1301]},{"teal":554,"source":"contracts/TownHall.algo.ts:251","pc":[1302,1303]},{"teal":555,"source":"contracts/TownHall.algo.ts:251","pc":[1304,1305]},{"teal":559,"source":"contracts/TownHall.algo.ts:252","pc":[1306]},{"teal":560,"source":"contracts/TownHall.algo.ts:252","pc":[1307]},{"teal":561,"source":"contracts/Constants.ts:17","pc":[1308]},{"teal":562,"source":"contracts/TownHall.algo.ts:252","pc":[1309]},{"teal":565,"source":"contracts/TownHall.algo.ts:252","errorMessage":"Invalid method call: Game is not in Join Game Lobby state.","pc":[1310]},{"teal":572,"source":"contracts/TownHall.algo.ts:255","pc":[1311,1312]},{"teal":573,"source":"contracts/TownHall.algo.ts:255","pc":[1313]},{"teal":574,"source":"contracts/TownHall.algo.ts:255","pc":[1314]},{"teal":575,"source":"contracts/TownHall.algo.ts:255","pc":[1315]},{"teal":578,"source":"contracts/TownHall.algo.ts:254","errorMessage":"Max players already joined! Error, game should have moved to the next stage already.","pc":[1316]},{"teal":588,"source":"contracts/TownHall.algo.ts:260","pc":[1317]},{"teal":589,"source":"contracts/TownHall.algo.ts:260","pc":[1318]},{"teal":590,"source":"contracts/TownHall.algo.ts:260","pc":[1319,1320,1321]},{"teal":591,"source":"contracts/TownHall.algo.ts:260","pc":[1322,1323]},{"teal":592,"source":"contracts/TownHall.algo.ts:260","pc":[1324]},{"teal":593,"source":"contracts/TownHall.algo.ts:260","pc":[1325]},{"teal":594,"source":"contracts/TownHall.algo.ts:260","pc":[1326,1327,1328]},{"teal":595,"source":"contracts/TownHall.algo.ts:261","pc":[1329]},{"teal":596,"source":"contracts/TownHall.algo.ts:261","pc":[1330]},{"teal":597,"source":"contracts/TownHall.algo.ts:261","pc":[1331,1332,1333]},{"teal":598,"source":"contracts/TownHall.algo.ts:261","pc":[1334,1335]},{"teal":599,"source":"contracts/TownHall.algo.ts:261","pc":[1336]},{"teal":600,"source":"contracts/TownHall.algo.ts:260","pc":[1337]},{"teal":603,"source":"contracts/TownHall.algo.ts:261","pc":[1338]},{"teal":604,"source":"contracts/TownHall.algo.ts:261","pc":[1339,1340,1341]},{"teal":605,"source":"contracts/TownHall.algo.ts:262","pc":[1342,1343]},{"teal":606,"source":"contracts/TownHall.algo.ts:262","pc":[1344]},{"teal":607,"source":"contracts/TownHall.algo.ts:262","pc":[1345,1346,1347]},{"teal":608,"source":"contracts/TownHall.algo.ts:262","pc":[1348,1349]},{"teal":609,"source":"contracts/TownHall.algo.ts:262","pc":[1350]},{"teal":610,"source":"contracts/TownHall.algo.ts:261","pc":[1351]},{"teal":613,"source":"contracts/TownHall.algo.ts:262","pc":[1352]},{"teal":614,"source":"contracts/TownHall.algo.ts:262","pc":[1353,1354,1355]},{"teal":615,"source":"contracts/TownHall.algo.ts:263","pc":[1356,1357]},{"teal":616,"source":"contracts/TownHall.algo.ts:263","pc":[1358]},{"teal":617,"source":"contracts/TownHall.algo.ts:263","pc":[1359,1360,1361]},{"teal":618,"source":"contracts/TownHall.algo.ts:263","pc":[1362,1363]},{"teal":619,"source":"contracts/TownHall.algo.ts:263","pc":[1364]},{"teal":620,"source":"contracts/TownHall.algo.ts:262","pc":[1365]},{"teal":623,"source":"contracts/TownHall.algo.ts:263","pc":[1366]},{"teal":624,"source":"contracts/TownHall.algo.ts:263","pc":[1367,1368,1369]},{"teal":625,"source":"contracts/TownHall.algo.ts:264","pc":[1370,1371]},{"teal":626,"source":"contracts/TownHall.algo.ts:264","pc":[1372]},{"teal":627,"source":"contracts/TownHall.algo.ts:264","pc":[1373,1374,1375]},{"teal":628,"source":"contracts/TownHall.algo.ts:264","pc":[1376,1377]},{"teal":629,"source":"contracts/TownHall.algo.ts:264","pc":[1378]},{"teal":630,"source":"contracts/TownHall.algo.ts:263","pc":[1379]},{"teal":633,"source":"contracts/TownHall.algo.ts:264","pc":[1380]},{"teal":634,"source":"contracts/TownHall.algo.ts:264","pc":[1381,1382,1383]},{"teal":635,"source":"contracts/TownHall.algo.ts:265","pc":[1384,1385]},{"teal":636,"source":"contracts/TownHall.algo.ts:265","pc":[1386]},{"teal":637,"source":"contracts/TownHall.algo.ts:265","pc":[1387,1388,1389]},{"teal":638,"source":"contracts/TownHall.algo.ts:265","pc":[1390,1391]},{"teal":639,"source":"contracts/TownHall.algo.ts:265","pc":[1392]},{"teal":640,"source":"contracts/TownHall.algo.ts:264","pc":[1393]},{"teal":643,"source":"contracts/TownHall.algo.ts:259","pc":[1394,1395,1396]},{"teal":647,"source":"contracts/TownHall.algo.ts:267","errorMessage":"Error state: Player already joined the game!","pc":[1397]},{"teal":652,"source":"contracts/TownHall.algo.ts:272","pc":[1398,1399]},{"teal":653,"source":"contracts/TownHall.algo.ts:272","pc":[1400,1401]},{"teal":654,"source":"contracts/TownHall.algo.ts:272","pc":[1402,1403,1404,1405]},{"teal":655,"source":"contracts/TownHall.algo.ts:272","pc":[1406]},{"teal":658,"source":"contracts/TownHall.algo.ts:272","errorMessage":"Invalid FunderLSig amount!","pc":[1407]},{"teal":662,"source":"contracts/TownHall.algo.ts:274","pc":[1408,1409]},{"teal":663,"source":"contracts/TownHall.algo.ts:274","pc":[1410,1411,1412]},{"teal":664,"source":"contracts/TownHall.algo.ts:274","pc":[1413,1414]},{"teal":668,"source":"contracts/TownHall.algo.ts:275","pc":[1415,1416]},{"teal":669,"source":"contracts/TownHall.algo.ts:275","pc":[1417,1418,1419]},{"teal":670,"source":"contracts/TownHall.algo.ts:275","pc":[1420,1421]},{"teal":674,"source":"contracts/TownHall.algo.ts:276","pc":[1422,1423]},{"teal":675,"source":"contracts/TownHall.algo.ts:276","pc":[1424,1425,1426]},{"teal":676,"source":"contracts/TownHall.algo.ts:276","pc":[1427,1428]},{"teal":680,"source":"contracts/TownHall.algo.ts:277","pc":[1429,1430]},{"teal":681,"source":"contracts/TownHall.algo.ts:277","pc":[1431,1432,1433]},{"teal":682,"source":"contracts/TownHall.algo.ts:277","pc":[1434,1435]},{"teal":683,"source":"contracts/TownHall.algo.ts:277","pc":[1436]},{"teal":684,"source":"contracts/TownHall.algo.ts:277","pc":[1437,1438]},{"teal":688,"source":"contracts/TownHall.algo.ts:282","pc":[1439,1440]},{"teal":689,"source":"contracts/TownHall.algo.ts:282","pc":[1441,1442]},{"teal":690,"source":"contracts/TownHall.algo.ts:282","pc":[1443,1444]},{"teal":691,"source":"contracts/TownHall.algo.ts:282","pc":[1445,1446]},{"teal":692,"source":"contracts/TownHall.algo.ts:282","pc":[1447,1448,1449]},{"teal":695,"source":"contracts/TownHall.algo.ts:282","errorMessage":"DLOG NIZK Proof failed!","pc":[1450]},{"teal":700,"source":"contracts/TownHall.algo.ts:284","pc":[1451,1452]},{"teal":701,"source":"contracts/TownHall.algo.ts:284","pc":[1453]},{"teal":702,"source":"contracts/TownHall.algo.ts:284","pc":[1454]},{"teal":703,"source":"contracts/TownHall.algo.ts:284","pc":[1455]},{"teal":704,"source":"contracts/TownHall.algo.ts:284","pc":[1456]},{"teal":705,"source":"contracts/TownHall.algo.ts:284","pc":[1457,1458,1459]},{"teal":710,"source":"contracts/TownHall.algo.ts:285","pc":[1460,1461]},{"teal":711,"source":"contracts/TownHall.algo.ts:285","pc":[1462,1463]},{"teal":712,"source":"contracts/TownHall.algo.ts:285","pc":[1464]},{"teal":713,"source":"contracts/TownHall.algo.ts:285","pc":[1465]},{"teal":714,"source":"contracts/TownHall.algo.ts:284","pc":[1466,1467,1468]},{"teal":719,"source":"contracts/TownHall.algo.ts:287","pc":[1469,1470]},{"teal":720,"source":"contracts/TownHall.algo.ts:287","pc":[1471]},{"teal":721,"source":"contracts/TownHall.algo.ts:287","pc":[1472]},{"teal":724,"source":"contracts/TownHall.algo.ts:287","errorMessage":"box value does not exist: this.quickAccessPKBoxes(0).size","pc":[1473]},{"teal":725,"source":"contracts/TownHall.algo.ts:287","pc":[1474,1475]},{"teal":726,"source":"contracts/TownHall.algo.ts:287","pc":[1476]},{"teal":727,"source":"contracts/TownHall.algo.ts:287","pc":[1477]},{"teal":732,"source":"contracts/TownHall.algo.ts:291","pc":[1478,1479]},{"teal":733,"source":"contracts/TownHall.algo.ts:291","pc":[1480]},{"teal":734,"source":"contracts/TownHall.algo.ts:291","pc":[1481]},{"teal":735,"source":"contracts/TownHall.algo.ts:291","pc":[1482]},{"teal":738,"source":"contracts/TownHall.algo.ts:291","errorMessage":"PK Box failed to be created.","pc":[1483]},{"teal":742,"source":"contracts/TownHall.algo.ts:293","pc":[1484,1485]},{"teal":743,"source":"contracts/TownHall.algo.ts:293","pc":[1486,1487]},{"teal":744,"source":"contracts/TownHall.algo.ts:293","pc":[1488]},{"teal":745,"source":"contracts/TownHall.algo.ts:293","pc":[1489,1490]},{"teal":746,"source":"contracts/TownHall.algo.ts:293","pc":[1491]},{"teal":747,"source":"contracts/TownHall.algo.ts:293","pc":[1492,1493]},{"teal":748,"source":"contracts/TownHall.algo.ts:293","pc":[1494]},{"teal":752,"source":"contracts/TownHall.algo.ts:294","pc":[1495,1496]},{"teal":753,"source":"contracts/TownHall.algo.ts:294","pc":[1497]},{"teal":754,"source":"contracts/TownHall.algo.ts:294","pc":[1498]},{"teal":755,"source":"contracts/TownHall.algo.ts:294","pc":[1499]},{"teal":756,"source":"contracts/TownHall.algo.ts:294","pc":[1500,1501]},{"teal":757,"source":"contracts/TownHall.algo.ts:294","pc":[1502]},{"teal":758,"source":"contracts/TownHall.algo.ts:294","pc":[1503]},{"teal":762,"source":"contracts/TownHall.algo.ts:296","pc":[1504,1505]},{"teal":763,"source":"contracts/TownHall.algo.ts:296","pc":[1506]},{"teal":764,"source":"contracts/TownHall.algo.ts:296","pc":[1507,1508]},{"teal":765,"source":"contracts/TownHall.algo.ts:296","pc":[1509]},{"teal":768,"source":"contracts/TownHall.algo.ts:296","errorMessage":"Error state: LSig Funder Address not set!","pc":[1510]},{"teal":775,"source":"contracts/TownHall.algo.ts:299","pc":[1511]},{"teal":776,"source":"contracts/TownHall.algo.ts:299","pc":[1512]},{"teal":777,"source":"contracts/TownHall.algo.ts:299","pc":[1513,1514]},{"teal":781,"source":"contracts/TownHall.algo.ts:300","pc":[1515,1516]},{"teal":782,"source":"contracts/TownHall.algo.ts:300","pc":[1517,1518]},{"teal":786,"source":"contracts/TownHall.algo.ts:301","pc":[1519,1520]},{"teal":787,"source":"contracts/TownHall.algo.ts:301","pc":[1521]},{"teal":788,"source":"contracts/TownHall.algo.ts:301","pc":[1522,1523]},{"teal":791,"source":"contracts/TownHall.algo.ts:299","pc":[1524]},{"teal":792,"source":"contracts/TownHall.algo.ts:299","pc":[1525,1526]},{"teal":795,"source":"contracts/TownHall.algo.ts:299","pc":[1527]},{"teal":800,"source":"contracts/TownHall.algo.ts:304","pc":[1528]},{"teal":801,"source":"contracts/TownHall.algo.ts:304","pc":[1529]},{"teal":802,"source":"contracts/TownHall.algo.ts:304","pc":[1530,1531,1532]},{"teal":803,"source":"contracts/TownHall.algo.ts:304","pc":[1533,1534]},{"teal":804,"source":"contracts/TownHall.algo.ts:304","pc":[1535]},{"teal":805,"source":"contracts/TownHall.algo.ts:304","pc":[1536,1537,1538]},{"teal":810,"source":"contracts/TownHall.algo.ts:305","pc":[1539]},{"teal":811,"source":"contracts/TownHall.algo.ts:305","pc":[1540]},{"teal":812,"source":"contracts/TownHall.algo.ts:305","pc":[1541]},{"teal":813,"source":"contracts/TownHall.algo.ts:305","pc":[1542,1543]},{"teal":814,"source":"contracts/TownHall.algo.ts:305","pc":[1544]},{"teal":815,"source":"contracts/TownHall.algo.ts:305","pc":[1545]},{"teal":816,"source":"contracts/TownHall.algo.ts:305","pc":[1546]},{"teal":817,"source":"contracts/TownHall.algo.ts:305","pc":[1547]},{"teal":821,"source":"contracts/TownHall.algo.ts:306","pc":[1548]},{"teal":827,"source":"contracts/TownHall.algo.ts:308","pc":[1549]},{"teal":828,"source":"contracts/TownHall.algo.ts:308","pc":[1550]},{"teal":829,"source":"contracts/TownHall.algo.ts:308","pc":[1551,1552,1553]},{"teal":830,"source":"contracts/TownHall.algo.ts:308","pc":[1554,1555]},{"teal":831,"source":"contracts/TownHall.algo.ts:308","pc":[1556]},{"teal":832,"source":"contracts/TownHall.algo.ts:308","pc":[1557,1558,1559]},{"teal":837,"source":"contracts/TownHall.algo.ts:309","pc":[1560]},{"teal":838,"source":"contracts/TownHall.algo.ts:309","pc":[1561]},{"teal":839,"source":"contracts/TownHall.algo.ts:309","pc":[1562]},{"teal":840,"source":"contracts/TownHall.algo.ts:309","pc":[1563,1564]},{"teal":841,"source":"contracts/TownHall.algo.ts:309","pc":[1565]},{"teal":842,"source":"contracts/TownHall.algo.ts:309","pc":[1566]},{"teal":843,"source":"contracts/TownHall.algo.ts:309","pc":[1567]},{"teal":844,"source":"contracts/TownHall.algo.ts:309","pc":[1568]},{"teal":848,"source":"contracts/TownHall.algo.ts:310","pc":[1569]},{"teal":854,"source":"contracts/TownHall.algo.ts:312","pc":[1570,1571]},{"teal":855,"source":"contracts/TownHall.algo.ts:312","pc":[1572]},{"teal":856,"source":"contracts/TownHall.algo.ts:312","pc":[1573,1574,1575]},{"teal":857,"source":"contracts/TownHall.algo.ts:312","pc":[1576,1577]},{"teal":858,"source":"contracts/TownHall.algo.ts:312","pc":[1578]},{"teal":859,"source":"contracts/TownHall.algo.ts:312","pc":[1579,1580,1581]},{"teal":864,"source":"contracts/TownHall.algo.ts:313","pc":[1582,1583]},{"teal":865,"source":"contracts/TownHall.algo.ts:313","pc":[1584]},{"teal":866,"source":"contracts/TownHall.algo.ts:313","pc":[1585]},{"teal":867,"source":"contracts/TownHall.algo.ts:313","pc":[1586,1587]},{"teal":868,"source":"contracts/TownHall.algo.ts:313","pc":[1588]},{"teal":869,"source":"contracts/TownHall.algo.ts:313","pc":[1589,1590]},{"teal":870,"source":"contracts/TownHall.algo.ts:313","pc":[1591]},{"teal":871,"source":"contracts/TownHall.algo.ts:313","pc":[1592]},{"teal":875,"source":"contracts/TownHall.algo.ts:314","pc":[1593]},{"teal":881,"source":"contracts/TownHall.algo.ts:316","pc":[1594,1595]},{"teal":882,"source":"contracts/TownHall.algo.ts:316","pc":[1596]},{"teal":883,"source":"contracts/TownHall.algo.ts:316","pc":[1597,1598,1599]},{"teal":884,"source":"contracts/TownHall.algo.ts:316","pc":[1600,1601]},{"teal":885,"source":"contracts/TownHall.algo.ts:316","pc":[1602]},{"teal":886,"source":"contracts/TownHall.algo.ts:316","pc":[1603,1604,1605]},{"teal":891,"source":"contracts/TownHall.algo.ts:317","pc":[1606,1607]},{"teal":892,"source":"contracts/TownHall.algo.ts:317","pc":[1608]},{"teal":893,"source":"contracts/TownHall.algo.ts:317","pc":[1609]},{"teal":894,"source":"contracts/TownHall.algo.ts:317","pc":[1610,1611]},{"teal":895,"source":"contracts/TownHall.algo.ts:317","pc":[1612]},{"teal":896,"source":"contracts/TownHall.algo.ts:317","pc":[1613,1614]},{"teal":897,"source":"contracts/TownHall.algo.ts:317","pc":[1615]},{"teal":898,"source":"contracts/TownHall.algo.ts:317","pc":[1616]},{"teal":902,"source":"contracts/TownHall.algo.ts:318","pc":[1617]},{"teal":908,"source":"contracts/TownHall.algo.ts:320","pc":[1618,1619]},{"teal":909,"source":"contracts/TownHall.algo.ts:320","pc":[1620]},{"teal":910,"source":"contracts/TownHall.algo.ts:320","pc":[1621,1622,1623]},{"teal":911,"source":"contracts/TownHall.algo.ts:320","pc":[1624,1625]},{"teal":912,"source":"contracts/TownHall.algo.ts:320","pc":[1626]},{"teal":913,"source":"contracts/TownHall.algo.ts:320","pc":[1627,1628,1629]},{"teal":918,"source":"contracts/TownHall.algo.ts:321","pc":[1630,1631]},{"teal":919,"source":"contracts/TownHall.algo.ts:321","pc":[1632]},{"teal":920,"source":"contracts/TownHall.algo.ts:321","pc":[1633]},{"teal":921,"source":"contracts/TownHall.algo.ts:321","pc":[1634,1635]},{"teal":922,"source":"contracts/TownHall.algo.ts:321","pc":[1636]},{"teal":923,"source":"contracts/TownHall.algo.ts:321","pc":[1637,1638]},{"teal":924,"source":"contracts/TownHall.algo.ts:321","pc":[1639]},{"teal":925,"source":"contracts/TownHall.algo.ts:321","pc":[1640]},{"teal":929,"source":"contracts/TownHall.algo.ts:322","pc":[1641]},{"teal":935,"source":"contracts/TownHall.algo.ts:324","pc":[1642,1643]},{"teal":936,"source":"contracts/TownHall.algo.ts:324","pc":[1644]},{"teal":937,"source":"contracts/TownHall.algo.ts:324","pc":[1645,1646,1647]},{"teal":938,"source":"contracts/TownHall.algo.ts:324","pc":[1648,1649]},{"teal":939,"source":"contracts/TownHall.algo.ts:324","pc":[1650]},{"teal":940,"source":"contracts/TownHall.algo.ts:324","pc":[1651,1652,1653]},{"teal":945,"source":"contracts/TownHall.algo.ts:325","pc":[1654,1655]},{"teal":946,"source":"contracts/TownHall.algo.ts:325","pc":[1656]},{"teal":947,"source":"contracts/TownHall.algo.ts:325","pc":[1657]},{"teal":948,"source":"contracts/TownHall.algo.ts:325","pc":[1658,1659]},{"teal":949,"source":"contracts/TownHall.algo.ts:325","pc":[1660]},{"teal":950,"source":"contracts/TownHall.algo.ts:325","pc":[1661,1662]},{"teal":951,"source":"contracts/TownHall.algo.ts:325","pc":[1663]},{"teal":952,"source":"contracts/TownHall.algo.ts:325","pc":[1664]},{"teal":956,"source":"contracts/TownHall.algo.ts:326","pc":[1665]},{"teal":957,"source":"contracts/Constants.ts:18","pc":[1666]},{"teal":958,"source":"contracts/TownHall.algo.ts:326","pc":[1667]},{"teal":962,"source":"contracts/TownHall.algo.ts:327","pc":[1668]},{"teal":966,"source":"contracts/TownHall.algo.ts:330","errorMessage":"Invalid state! Error, game should have moved to the next stage already.","pc":[1669]},{"teal":967,"source":"contracts/TownHall.algo.ts:251","pc":[1670]},{"teal":972,"source":"contracts/TownHall.algo.ts:345","pc":[1671,1672]},{"teal":973,"source":"contracts/TownHall.algo.ts:345","pc":[1673]},{"teal":974,"source":"contracts/TownHall.algo.ts:345","pc":[1674]},{"teal":975,"source":"contracts/TownHall.algo.ts:345","pc":[1675]},{"teal":976,"source":"contracts/TownHall.algo.ts:345","pc":[1676,1677]},{"teal":977,"source":"contracts/TownHall.algo.ts:345","pc":[1678]},{"teal":978,"source":"contracts/TownHall.algo.ts:345","pc":[1679]},{"teal":981,"source":"contracts/TownHall.algo.ts:345","errorMessage":"argument 0 (ringLSigTxn5) for assignRole must be a pay transaction","pc":[1680]},{"teal":984,"source":"contracts/TownHall.algo.ts:344","pc":[1681,1682]},{"teal":985,"source":"contracts/TownHall.algo.ts:344","pc":[1683]},{"teal":986,"source":"contracts/TownHall.algo.ts:344","pc":[1684]},{"teal":987,"source":"contracts/TownHall.algo.ts:344","pc":[1685]},{"teal":988,"source":"contracts/TownHall.algo.ts:344","pc":[1686,1687]},{"teal":989,"source":"contracts/TownHall.algo.ts:344","pc":[1688]},{"teal":990,"source":"contracts/TownHall.algo.ts:344","pc":[1689]},{"teal":993,"source":"contracts/TownHall.algo.ts:344","errorMessage":"argument 1 (ringLSigTxn4) for assignRole must be a pay transaction","pc":[1690]},{"teal":996,"source":"contracts/TownHall.algo.ts:343","pc":[1691,1692]},{"teal":997,"source":"contracts/TownHall.algo.ts:343","pc":[1693,1694]},{"teal":998,"source":"contracts/TownHall.algo.ts:343","pc":[1695]},{"teal":999,"source":"contracts/TownHall.algo.ts:343","pc":[1696]},{"teal":1000,"source":"contracts/TownHall.algo.ts:343","pc":[1697,1698]},{"teal":1001,"source":"contracts/TownHall.algo.ts:343","pc":[1699]},{"teal":1002,"source":"contracts/TownHall.algo.ts:343","pc":[1700]},{"teal":1005,"source":"contracts/TownHall.algo.ts:343","errorMessage":"argument 2 (ringLSigTxn3) for assignRole must be a pay transaction","pc":[1701]},{"teal":1008,"source":"contracts/TownHall.algo.ts:342","pc":[1702,1703]},{"teal":1009,"source":"contracts/TownHall.algo.ts:342","pc":[1704,1705]},{"teal":1010,"source":"contracts/TownHall.algo.ts:342","pc":[1706]},{"teal":1011,"source":"contracts/TownHall.algo.ts:342","pc":[1707]},{"teal":1012,"source":"contracts/TownHall.algo.ts:342","pc":[1708,1709]},{"teal":1013,"source":"contracts/TownHall.algo.ts:342","pc":[1710]},{"teal":1014,"source":"contracts/TownHall.algo.ts:342","pc":[1711]},{"teal":1017,"source":"contracts/TownHall.algo.ts:342","errorMessage":"argument 3 (ringLSigTxn2) for assignRole must be a pay transaction","pc":[1712]},{"teal":1020,"source":"contracts/TownHall.algo.ts:341","pc":[1713,1714]},{"teal":1021,"source":"contracts/TownHall.algo.ts:341","pc":[1715,1716]},{"teal":1022,"source":"contracts/TownHall.algo.ts:341","pc":[1717]},{"teal":1023,"source":"contracts/TownHall.algo.ts:341","pc":[1718]},{"teal":1024,"source":"contracts/TownHall.algo.ts:341","pc":[1719,1720]},{"teal":1025,"source":"contracts/TownHall.algo.ts:341","pc":[1721]},{"teal":1026,"source":"contracts/TownHall.algo.ts:341","pc":[1722]},{"teal":1029,"source":"contracts/TownHall.algo.ts:341","errorMessage":"argument 4 (ringLSigTxn1) for assignRole must be a pay transaction","pc":[1723]},{"teal":1032,"source":"contracts/TownHall.algo.ts:340","pc":[1724,1725]},{"teal":1033,"source":"contracts/TownHall.algo.ts:340","pc":[1726]},{"teal":1034,"source":"contracts/TownHall.algo.ts:340","pc":[1727]},{"teal":1035,"source":"contracts/TownHall.algo.ts:340","pc":[1728]},{"teal":1036,"source":"contracts/TownHall.algo.ts:340","pc":[1729,1730]},{"teal":1037,"source":"contracts/TownHall.algo.ts:340","pc":[1731]},{"teal":1038,"source":"contracts/TownHall.algo.ts:340","pc":[1732]},{"teal":1041,"source":"contracts/TownHall.algo.ts:340","errorMessage":"argument 5 (ringLSigTxn0) for assignRole must be a pay transaction","pc":[1733]},{"teal":1044,"source":"contracts/TownHall.algo.ts:339","pc":[1734,1735]},{"teal":1045,"source":"contracts/TownHall.algo.ts:339","pc":[1736,1737]},{"teal":1046,"source":"contracts/TownHall.algo.ts:339","pc":[1738]},{"teal":1047,"source":"contracts/TownHall.algo.ts:339","pc":[1739]},{"teal":1048,"source":"contracts/TownHall.algo.ts:339","pc":[1740,1741]},{"teal":1049,"source":"contracts/TownHall.algo.ts:339","pc":[1742]},{"teal":1050,"source":"contracts/TownHall.algo.ts:339","pc":[1743]},{"teal":1053,"source":"contracts/TownHall.algo.ts:339","errorMessage":"argument 6 (funderLSigTxn) for assignRole must be a pay transaction","pc":[1744]},{"teal":1056,"source":"contracts/TownHall.algo.ts:338","pc":[1745,1746,1747]},{"teal":1057,"source":"contracts/TownHall.algo.ts:338","pc":[1748,1749,1750]},{"teal":1060,"source":"contracts/TownHall.algo.ts:337","pc":[1751,1752,1753]},{"teal":1061,"source":"contracts/TownHall.algo.ts:337","pc":[1754,1755,1756]},{"teal":1064,"source":"contracts/TownHall.algo.ts:336","pc":[1757,1758,1759]},{"teal":1065,"source":"contracts/TownHall.algo.ts:336","pc":[1760,1761,1762]},{"teal":1068,"source":"contracts/TownHall.algo.ts:335","pc":[1763,1764,1765]},{"teal":1069,"source":"contracts/TownHall.algo.ts:335","pc":[1766,1767,1768]},{"teal":1072,"source":"contracts/TownHall.algo.ts:334","pc":[1769,1770,1771]},{"teal":1073,"source":"contracts/TownHall.algo.ts:334","pc":[1772,1773,1774]},{"teal":1076,"source":"contracts/TownHall.algo.ts:333","pc":[1775,1776,1777]},{"teal":1077,"source":"contracts/TownHall.algo.ts:333","pc":[1778]},{"teal":1078,"source":"contracts/TownHall.algo.ts:333","pc":[1779]},{"teal":1082,"source":"contracts/TownHall.algo.ts:333","pc":[1780,1781,1782]},{"teal":1086,"source":"contracts/TownHall.algo.ts:347","pc":[1783]},{"teal":1087,"source":"contracts/TownHall.algo.ts:347","pc":[1784]},{"teal":1088,"source":"contracts/Constants.ts:18","pc":[1785]},{"teal":1089,"source":"contracts/TownHall.algo.ts:347","pc":[1786]},{"teal":1092,"source":"contracts/TownHall.algo.ts:347","errorMessage":"Invalid method call: Game is not in Assign Role state.","pc":[1787]},{"teal":1099,"source":"contracts/TownHall.algo.ts:357","pc":[1788,1789]},{"teal":1100,"source":"contracts/TownHall.algo.ts:357","pc":[1790]},{"teal":1101,"source":"contracts/TownHall.algo.ts:357","pc":[1791]},{"teal":1102,"source":"contracts/TownHall.algo.ts:357","pc":[1792]},{"teal":1103,"source":"contracts/TownHall.algo.ts:357","pc":[1793]},{"teal":1104,"source":"contracts/TownHall.algo.ts:357","pc":[1794]},{"teal":1107,"source":"contracts/TownHall.algo.ts:356","errorMessage":"KeyImage already in store. Are you trying to double-dip with your ring signature?","pc":[1795]},{"teal":1111,"source":"contracts/TownHall.algo.ts:360","pc":[1796,1797]},{"teal":1112,"source":"contracts/TownHall.algo.ts:360","pc":[1798]},{"teal":1113,"source":"contracts/TownHall.algo.ts:360","pc":[1799]},{"teal":1114,"source":"contracts/TownHall.algo.ts:360","pc":[1800]},{"teal":1115,"source":"contracts/TownHall.algo.ts:360","pc":[1801]},{"teal":1119,"source":"contracts/TownHall.algo.ts:364","pc":[1802,1803]},{"teal":1120,"source":"contracts/TownHall.algo.ts:364","pc":[1804,1805]},{"teal":1121,"source":"contracts/TownHall.algo.ts:364","pc":[1806,1807]},{"teal":1122,"source":"contracts/TownHall.algo.ts:364","pc":[1808]},{"teal":1123,"source":"contracts/TownHall.algo.ts:364","pc":[1809]},{"teal":1124,"source":"contracts/TownHall.algo.ts:364","pc":[1810]},{"teal":1131,"source":"contracts/TownHall.algo.ts:368","pc":[1811,1812]},{"teal":1132,"source":"contracts/TownHall.algo.ts:368","pc":[1813]},{"teal":1133,"source":"contracts/TownHall.algo.ts:368","pc":[1814,1815,1816]},{"teal":1134,"source":"contracts/TownHall.algo.ts:368","pc":[1817]},{"teal":1135,"source":"contracts/TownHall.algo.ts:368","pc":[1818,1819]},{"teal":1136,"source":"contracts/TownHall.algo.ts:368","pc":[1820]},{"teal":1139,"source":"contracts/TownHall.algo.ts:367","errorMessage":"Invalid PKs! Are you trying to pass in a different ring of PKs?","pc":[1821]},{"teal":1144,"source":"contracts/TownHall.algo.ts:374","pc":[1822,1823]},{"teal":1145,"source":"contracts/TownHall.algo.ts:374","pc":[1824,1825]},{"teal":1146,"source":"contracts/TownHall.algo.ts:374","pc":[1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859]},{"teal":1147,"source":"contracts/TownHall.algo.ts:374","pc":[1860]},{"teal":1150,"source":"contracts/TownHall.algo.ts:374","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn0\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig0.address())\"}","pc":[1861]},{"teal":1155,"source":"contracts/TownHall.algo.ts:375","pc":[1862,1863]},{"teal":1156,"source":"contracts/TownHall.algo.ts:375","pc":[1864,1865]},{"teal":1157,"source":"contracts/TownHall.algo.ts:375","pc":[1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899]},{"teal":1158,"source":"contracts/TownHall.algo.ts:375","pc":[1900]},{"teal":1161,"source":"contracts/TownHall.algo.ts:375","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn1\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig1.address())\"}","pc":[1901]},{"teal":1166,"source":"contracts/TownHall.algo.ts:376","pc":[1902,1903]},{"teal":1167,"source":"contracts/TownHall.algo.ts:376","pc":[1904,1905]},{"teal":1168,"source":"contracts/TownHall.algo.ts:376","pc":[1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939]},{"teal":1169,"source":"contracts/TownHall.algo.ts:376","pc":[1940]},{"teal":1172,"source":"contracts/TownHall.algo.ts:376","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn2\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig2.address())\"}","pc":[1941]},{"teal":1177,"source":"contracts/TownHall.algo.ts:377","pc":[1942,1943]},{"teal":1178,"source":"contracts/TownHall.algo.ts:377","pc":[1944,1945]},{"teal":1179,"source":"contracts/TownHall.algo.ts:377","pc":[1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979]},{"teal":1180,"source":"contracts/TownHall.algo.ts:377","pc":[1980]},{"teal":1183,"source":"contracts/TownHall.algo.ts:377","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn3\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig3.address())\"}","pc":[1981]},{"teal":1188,"source":"contracts/TownHall.algo.ts:378","pc":[1982,1983]},{"teal":1189,"source":"contracts/TownHall.algo.ts:378","pc":[1984,1985]},{"teal":1190,"source":"contracts/TownHall.algo.ts:378","pc":[1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019]},{"teal":1191,"source":"contracts/TownHall.algo.ts:378","pc":[2020]},{"teal":1194,"source":"contracts/TownHall.algo.ts:378","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn4\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig4.address())\"}","pc":[2021]},{"teal":1199,"source":"contracts/TownHall.algo.ts:379","pc":[2022,2023]},{"teal":1200,"source":"contracts/TownHall.algo.ts:379","pc":[2024,2025]},{"teal":1201,"source":"contracts/TownHall.algo.ts:379","pc":[2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059]},{"teal":1202,"source":"contracts/TownHall.algo.ts:379","pc":[2060]},{"teal":1205,"source":"contracts/TownHall.algo.ts:379","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn5\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig5.address())\"}","pc":[2061]},{"teal":1214,"source":"contracts/TownHall.algo.ts:382","pc":[2062,2063]},{"teal":1215,"source":"contracts/TownHall.algo.ts:383","pc":[2064,2065]},{"teal":1216,"source":"contracts/TownHall.algo.ts:383","pc":[2066,2067]},{"teal":1217,"source":"contracts/TownHall.algo.ts:383","pc":[2068]},{"teal":1218,"source":"contracts/TownHall.algo.ts:383","pc":[2069]},{"teal":1221,"source":"contracts/TownHall.algo.ts:383","errorMessage":"transaction verification failed: {\"txn\":\"funderLSigTxn\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(this.lsigFunderAddress.value)\"}","pc":[2070]},{"teal":1224,"source":"contracts/TownHall.algo.ts:382","pc":[2071,2072]},{"teal":1225,"source":"contracts/TownHall.algo.ts:384","pc":[2073,2074]},{"teal":1226,"source":"contracts/TownHall.algo.ts:384","pc":[2075,2076]},{"teal":1227,"source":"contracts/TownHall.algo.ts:384","pc":[2077]},{"teal":1230,"source":"contracts/TownHall.algo.ts:384","errorMessage":"transaction verification failed: {\"txn\":\"funderLSigTxn\",\"field\":\"receiver\",\"expected\":\"this.txn.sender\"}","pc":[2078]},{"teal":1233,"source":"contracts/TownHall.algo.ts:382","pc":[2079,2080]},{"teal":1234,"source":"contracts/TownHall.algo.ts:385","pc":[2081,2082]},{"teal":1235,"source":"contracts/TownHall.algo.ts:385","pc":[2083,2084]},{"teal":1236,"source":"contracts/TownHall.algo.ts:385","pc":[2085]},{"teal":1239,"source":"contracts/TownHall.algo.ts:385","errorMessage":"transaction verification failed: {\"txn\":\"funderLSigTxn\",\"field\":\"amount\",\"expected\":\"LSIG_FUND_AMOUNT\"}","pc":[2086]},{"teal":1244,"source":"contracts/TownHall.algo.ts:393","pc":[2087,2088]},{"teal":1245,"source":"contracts/TownHall.algo.ts:393","pc":[2089]},{"teal":1246,"source":"contracts/TownHall.algo.ts:393","pc":[2090,2091]},{"teal":1247,"source":"contracts/TownHall.algo.ts:393","pc":[2092]},{"teal":1248,"source":"contracts/TownHall.algo.ts:393","pc":[2093,2094,2095]},{"teal":1253,"source":"contracts/TownHall.algo.ts:394","pc":[2096,2097]},{"teal":1254,"source":"contracts/TownHall.algo.ts:394","pc":[2098,2099]},{"teal":1255,"source":"contracts/TownHall.algo.ts:394","pc":[2100]},{"teal":1259,"source":"contracts/TownHall.algo.ts:395","pc":[2101,2102]},{"teal":1260,"source":"contracts/TownHall.algo.ts:395","pc":[2103,2104]},{"teal":1261,"source":"contracts/TownHall.algo.ts:395","pc":[2105]},{"teal":1265,"source":"contracts/TownHall.algo.ts:396","pc":[2106]},{"teal":1271,"source":"contracts/TownHall.algo.ts:398","pc":[2107,2108]},{"teal":1272,"source":"contracts/TownHall.algo.ts:398","pc":[2109]},{"teal":1273,"source":"contracts/TownHall.algo.ts:398","pc":[2110,2111]},{"teal":1274,"source":"contracts/TownHall.algo.ts:398","pc":[2112]},{"teal":1275,"source":"contracts/TownHall.algo.ts:398","pc":[2113,2114,2115]},{"teal":1280,"source":"contracts/TownHall.algo.ts:399","pc":[2116,2117]},{"teal":1281,"source":"contracts/TownHall.algo.ts:399","pc":[2118,2119]},{"teal":1282,"source":"contracts/TownHall.algo.ts:399","pc":[2120]},{"teal":1286,"source":"contracts/TownHall.algo.ts:400","pc":[2121,2122]},{"teal":1287,"source":"contracts/TownHall.algo.ts:400","pc":[2123,2124]},{"teal":1288,"source":"contracts/TownHall.algo.ts:400","pc":[2125]},{"teal":1292,"source":"contracts/TownHall.algo.ts:401","pc":[2126]},{"teal":1298,"source":"contracts/TownHall.algo.ts:403","pc":[2127,2128]},{"teal":1299,"source":"contracts/TownHall.algo.ts:403","pc":[2129]},{"teal":1300,"source":"contracts/TownHall.algo.ts:403","pc":[2130,2131]},{"teal":1301,"source":"contracts/TownHall.algo.ts:403","pc":[2132]},{"teal":1302,"source":"contracts/TownHall.algo.ts:403","pc":[2133,2134,2135]},{"teal":1307,"source":"contracts/TownHall.algo.ts:404","pc":[2136,2137]},{"teal":1308,"source":"contracts/TownHall.algo.ts:404","pc":[2138,2139]},{"teal":1309,"source":"contracts/TownHall.algo.ts:404","pc":[2140]},{"teal":1313,"source":"contracts/TownHall.algo.ts:405","pc":[2141,2142]},{"teal":1314,"source":"contracts/TownHall.algo.ts:405","pc":[2143,2144]},{"teal":1315,"source":"contracts/TownHall.algo.ts:405","pc":[2145]},{"teal":1319,"source":"contracts/TownHall.algo.ts:406","pc":[2146]},{"teal":1325,"source":"contracts/TownHall.algo.ts:408","pc":[2147,2148]},{"teal":1326,"source":"contracts/TownHall.algo.ts:408","pc":[2149]},{"teal":1327,"source":"contracts/TownHall.algo.ts:408","pc":[2150,2151]},{"teal":1328,"source":"contracts/TownHall.algo.ts:408","pc":[2152]},{"teal":1329,"source":"contracts/TownHall.algo.ts:408","pc":[2153,2154,2155]},{"teal":1334,"source":"contracts/TownHall.algo.ts:409","pc":[2156,2157]},{"teal":1335,"source":"contracts/TownHall.algo.ts:409","pc":[2158,2159]},{"teal":1336,"source":"contracts/TownHall.algo.ts:409","pc":[2160]},{"teal":1340,"source":"contracts/TownHall.algo.ts:410","pc":[2161,2162]},{"teal":1341,"source":"contracts/TownHall.algo.ts:410","pc":[2163,2164]},{"teal":1342,"source":"contracts/TownHall.algo.ts:410","pc":[2165]},{"teal":1346,"source":"contracts/TownHall.algo.ts:411","pc":[2166]},{"teal":1352,"source":"contracts/TownHall.algo.ts:413","pc":[2167,2168]},{"teal":1353,"source":"contracts/TownHall.algo.ts:413","pc":[2169]},{"teal":1354,"source":"contracts/TownHall.algo.ts:413","pc":[2170,2171]},{"teal":1355,"source":"contracts/TownHall.algo.ts:413","pc":[2172]},{"teal":1356,"source":"contracts/TownHall.algo.ts:413","pc":[2173,2174,2175]},{"teal":1361,"source":"contracts/TownHall.algo.ts:414","pc":[2176,2177]},{"teal":1362,"source":"contracts/TownHall.algo.ts:414","pc":[2178,2179]},{"teal":1363,"source":"contracts/TownHall.algo.ts:414","pc":[2180]},{"teal":1367,"source":"contracts/TownHall.algo.ts:415","pc":[2181,2182]},{"teal":1368,"source":"contracts/TownHall.algo.ts:415","pc":[2183,2184]},{"teal":1369,"source":"contracts/TownHall.algo.ts:415","pc":[2185]},{"teal":1373,"source":"contracts/TownHall.algo.ts:416","pc":[2186]},{"teal":1379,"source":"contracts/TownHall.algo.ts:418","pc":[2187,2188]},{"teal":1380,"source":"contracts/TownHall.algo.ts:418","pc":[2189]},{"teal":1381,"source":"contracts/TownHall.algo.ts:418","pc":[2190,2191]},{"teal":1382,"source":"contracts/TownHall.algo.ts:418","pc":[2192]},{"teal":1383,"source":"contracts/TownHall.algo.ts:418","pc":[2193,2194,2195]},{"teal":1388,"source":"contracts/TownHall.algo.ts:419","pc":[2196,2197]},{"teal":1389,"source":"contracts/TownHall.algo.ts:419","pc":[2198,2199]},{"teal":1390,"source":"contracts/TownHall.algo.ts:419","pc":[2200]},{"teal":1394,"source":"contracts/TownHall.algo.ts:420","pc":[2201,2202]},{"teal":1395,"source":"contracts/TownHall.algo.ts:420","pc":[2203,2204]},{"teal":1396,"source":"contracts/TownHall.algo.ts:420","pc":[2205]},{"teal":1400,"source":"contracts/TownHall.algo.ts:421","pc":[2206]},{"teal":1401,"source":"contracts/Constants.ts:19","pc":[2207,2208]},{"teal":1402,"source":"contracts/TownHall.algo.ts:421","pc":[2209]},{"teal":1406,"source":"contracts/TownHall.algo.ts:422","pc":[2210]},{"teal":1410,"source":"contracts/TownHall.algo.ts:425","errorMessage":"Invalid state! Error, game should have moved to the next stage already.","pc":[2211]},{"teal":1411,"source":"contracts/TownHall.algo.ts:333","pc":[2212]},{"teal":1416,"source":"contracts/TownHall.algo.ts:428","pc":[2213,2214,2215]},{"teal":1417,"source":"contracts/TownHall.algo.ts:428","pc":[2216]},{"teal":1420,"source":"contracts/TownHall.algo.ts:428","pc":[2217,2218,2219]},{"teal":1421,"source":"contracts/TownHall.algo.ts:428","pc":[2220]},{"teal":1422,"source":"contracts/TownHall.algo.ts:428","pc":[2221]},{"teal":1426,"source":"contracts/TownHall.algo.ts:428","pc":[2222,2223,2224]},{"teal":1430,"source":"contracts/TownHall.algo.ts:429","pc":[2225]},{"teal":1431,"source":"contracts/TownHall.algo.ts:429","pc":[2226]},{"teal":1432,"source":"contracts/Constants.ts:19","pc":[2227,2228]},{"teal":1433,"source":"contracts/TownHall.algo.ts:429","pc":[2229]},{"teal":1436,"source":"contracts/TownHall.algo.ts:429","errorMessage":"Invalid method call: Game is not in Day Stage Vote state.","pc":[2230]},{"teal":1440,"source":"contracts/TownHall.algo.ts:431","pc":[2231,2232]},{"teal":1441,"source":"contracts/TownHall.algo.ts:431","pc":[2233]},{"teal":1442,"source":"contracts/TownHall.algo.ts:431","pc":[2234]},{"teal":1443,"source":"contracts/TownHall.algo.ts:431","pc":[2235]},{"teal":1444,"source":"contracts/TownHall.algo.ts:431","pc":[2236,2237,2238]},{"teal":1445,"source":"contracts/TownHall.algo.ts:431","pc":[2239,2240]},{"teal":1446,"source":"contracts/TownHall.algo.ts:431","pc":[2241,2242]},{"teal":1447,"source":"contracts/TownHall.algo.ts:431","pc":[2243]},{"teal":1448,"source":"contracts/TownHall.algo.ts:431","pc":[2244]},{"teal":1452,"source":"contracts/TownHall.algo.ts:431","errorMessage":"Invalid vote: Vote must be int 1 <= n <= 6.","pc":[2245]},{"teal":1464,"source":"contracts/TownHall.algo.ts:435","pc":[2246,2247]},{"teal":1465,"source":"contracts/TownHall.algo.ts:435","pc":[2248]},{"teal":1466,"source":"contracts/TownHall.algo.ts:435","pc":[2249]},{"teal":1467,"source":"contracts/TownHall.algo.ts:435","pc":[2250,2251,2252]},{"teal":1468,"source":"contracts/TownHall.algo.ts:435","pc":[2253]},{"teal":1469,"source":"contracts/TownHall.algo.ts:435","pc":[2254]},{"teal":1470,"source":"contracts/TownHall.algo.ts:435","pc":[2255,2256,2257]},{"teal":1471,"source":"contracts/TownHall.algo.ts:436","pc":[2258,2259]},{"teal":1472,"source":"contracts/TownHall.algo.ts:436","pc":[2260]},{"teal":1473,"source":"contracts/TownHall.algo.ts:436","pc":[2261]},{"teal":1474,"source":"contracts/TownHall.algo.ts:436","pc":[2262,2263,2264]},{"teal":1475,"source":"contracts/TownHall.algo.ts:436","pc":[2265]},{"teal":1476,"source":"contracts/TownHall.algo.ts:435","pc":[2266]},{"teal":1479,"source":"contracts/TownHall.algo.ts:436","pc":[2267]},{"teal":1480,"source":"contracts/TownHall.algo.ts:436","pc":[2268,2269,2270]},{"teal":1481,"source":"contracts/TownHall.algo.ts:437","pc":[2271,2272]},{"teal":1482,"source":"contracts/TownHall.algo.ts:437","pc":[2273,2274]},{"teal":1483,"source":"contracts/TownHall.algo.ts:437","pc":[2275]},{"teal":1484,"source":"contracts/TownHall.algo.ts:437","pc":[2276,2277,2278]},{"teal":1485,"source":"contracts/TownHall.algo.ts:437","pc":[2279]},{"teal":1486,"source":"contracts/TownHall.algo.ts:436","pc":[2280]},{"teal":1489,"source":"contracts/TownHall.algo.ts:437","pc":[2281]},{"teal":1490,"source":"contracts/TownHall.algo.ts:437","pc":[2282,2283,2284]},{"teal":1491,"source":"contracts/TownHall.algo.ts:438","pc":[2285,2286]},{"teal":1492,"source":"contracts/TownHall.algo.ts:438","pc":[2287,2288]},{"teal":1493,"source":"contracts/TownHall.algo.ts:438","pc":[2289]},{"teal":1494,"source":"contracts/TownHall.algo.ts:438","pc":[2290,2291,2292]},{"teal":1495,"source":"contracts/TownHall.algo.ts:438","pc":[2293]},{"teal":1496,"source":"contracts/TownHall.algo.ts:437","pc":[2294]},{"teal":1499,"source":"contracts/TownHall.algo.ts:438","pc":[2295]},{"teal":1500,"source":"contracts/TownHall.algo.ts:438","pc":[2296,2297,2298]},{"teal":1501,"source":"contracts/TownHall.algo.ts:439","pc":[2299,2300]},{"teal":1502,"source":"contracts/TownHall.algo.ts:439","pc":[2301,2302]},{"teal":1503,"source":"contracts/TownHall.algo.ts:439","pc":[2303]},{"teal":1504,"source":"contracts/TownHall.algo.ts:439","pc":[2304,2305,2306]},{"teal":1505,"source":"contracts/TownHall.algo.ts:439","pc":[2307]},{"teal":1506,"source":"contracts/TownHall.algo.ts:438","pc":[2308]},{"teal":1509,"source":"contracts/TownHall.algo.ts:439","pc":[2309]},{"teal":1510,"source":"contracts/TownHall.algo.ts:439","pc":[2310,2311,2312]},{"teal":1511,"source":"contracts/TownHall.algo.ts:440","pc":[2313,2314]},{"teal":1512,"source":"contracts/TownHall.algo.ts:440","pc":[2315,2316]},{"teal":1513,"source":"contracts/TownHall.algo.ts:440","pc":[2317]},{"teal":1514,"source":"contracts/TownHall.algo.ts:440","pc":[2318,2319,2320]},{"teal":1515,"source":"contracts/TownHall.algo.ts:440","pc":[2321]},{"teal":1516,"source":"contracts/TownHall.algo.ts:439","pc":[2322]},{"teal":1519,"source":"contracts/TownHall.algo.ts:434","pc":[2323]},{"teal":1520,"source":"contracts/TownHall.algo.ts:433","pc":[2324,2325,2326]},{"teal":1524,"source":"contracts/TownHall.algo.ts:443","errorMessage":"Illegal call: Address sender not allowed to vote.","pc":[2327]},{"teal":1530,"source":"contracts/TownHall.algo.ts:446","pc":[2328,2329]},{"teal":1531,"source":"contracts/TownHall.algo.ts:446","pc":[2330]},{"teal":1532,"source":"contracts/TownHall.algo.ts:446","pc":[2331]},{"teal":1533,"source":"contracts/TownHall.algo.ts:446","pc":[2332]},{"teal":1534,"source":"contracts/TownHall.algo.ts:446","pc":[2333,2334,2335]},{"teal":1535,"source":"contracts/TownHall.algo.ts:446","pc":[2336]},{"teal":1536,"source":"contracts/TownHall.algo.ts:446","pc":[2337]},{"teal":1537,"source":"contracts/TownHall.algo.ts:446","pc":[2338,2339,2340]},{"teal":1538,"source":"contracts/TownHall.algo.ts:446","pc":[2341,2342]},{"teal":1539,"source":"contracts/TownHall.algo.ts:446","pc":[2343]},{"teal":1540,"source":"contracts/TownHall.algo.ts:446","pc":[2344]},{"teal":1543,"source":"contracts/TownHall.algo.ts:446","pc":[2345,2346,2347]},{"teal":1548,"source":"contracts/TownHall.algo.ts:447","pc":[2348,2349]},{"teal":1549,"source":"contracts/TownHall.algo.ts:447","pc":[2350]},{"teal":1550,"source":"contracts/TownHall.algo.ts:447","pc":[2351]},{"teal":1551,"source":"contracts/TownHall.algo.ts:447","pc":[2352]},{"teal":1552,"source":"contracts/TownHall.algo.ts:447","pc":[2353,2354]},{"teal":1553,"source":"contracts/TownHall.algo.ts:447","pc":[2355]},{"teal":1554,"source":"contracts/TownHall.algo.ts:447","pc":[2356]},{"teal":1555,"source":"contracts/TownHall.algo.ts:446","pc":[2357,2358,2359]},{"teal":1560,"source":"contracts/TownHall.algo.ts:448","pc":[2360,2361]},{"teal":1561,"source":"contracts/TownHall.algo.ts:448","pc":[2362]},{"teal":1562,"source":"contracts/TownHall.algo.ts:448","pc":[2363]},{"teal":1563,"source":"contracts/TownHall.algo.ts:448","pc":[2364]},{"teal":1564,"source":"contracts/TownHall.algo.ts:448","pc":[2365,2366,2367]},{"teal":1565,"source":"contracts/TownHall.algo.ts:448","pc":[2368]},{"teal":1566,"source":"contracts/TownHall.algo.ts:448","pc":[2369]},{"teal":1567,"source":"contracts/TownHall.algo.ts:448","pc":[2370,2371,2372]},{"teal":1568,"source":"contracts/TownHall.algo.ts:448","pc":[2373,2374]},{"teal":1569,"source":"contracts/TownHall.algo.ts:448","pc":[2375]},{"teal":1570,"source":"contracts/TownHall.algo.ts:448","pc":[2376]},{"teal":1573,"source":"contracts/TownHall.algo.ts:448","pc":[2377,2378,2379]},{"teal":1578,"source":"contracts/TownHall.algo.ts:449","pc":[2380,2381]},{"teal":1579,"source":"contracts/TownHall.algo.ts:449","pc":[2382]},{"teal":1580,"source":"contracts/TownHall.algo.ts:449","pc":[2383]},{"teal":1581,"source":"contracts/TownHall.algo.ts:449","pc":[2384]},{"teal":1582,"source":"contracts/TownHall.algo.ts:449","pc":[2385,2386]},{"teal":1583,"source":"contracts/TownHall.algo.ts:449","pc":[2387]},{"teal":1584,"source":"contracts/TownHall.algo.ts:449","pc":[2388]},{"teal":1585,"source":"contracts/TownHall.algo.ts:448","pc":[2389,2390,2391]},{"teal":1590,"source":"contracts/TownHall.algo.ts:450","pc":[2392,2393]},{"teal":1591,"source":"contracts/TownHall.algo.ts:450","pc":[2394,2395]},{"teal":1592,"source":"contracts/TownHall.algo.ts:450","pc":[2396]},{"teal":1593,"source":"contracts/TownHall.algo.ts:450","pc":[2397]},{"teal":1594,"source":"contracts/TownHall.algo.ts:450","pc":[2398,2399,2400]},{"teal":1595,"source":"contracts/TownHall.algo.ts:450","pc":[2401,2402]},{"teal":1596,"source":"contracts/TownHall.algo.ts:450","pc":[2403]},{"teal":1597,"source":"contracts/TownHall.algo.ts:450","pc":[2404,2405,2406]},{"teal":1598,"source":"contracts/TownHall.algo.ts:450","pc":[2407,2408]},{"teal":1599,"source":"contracts/TownHall.algo.ts:450","pc":[2409]},{"teal":1600,"source":"contracts/TownHall.algo.ts:450","pc":[2410]},{"teal":1603,"source":"contracts/TownHall.algo.ts:450","pc":[2411,2412,2413]},{"teal":1608,"source":"contracts/TownHall.algo.ts:451","pc":[2414,2415]},{"teal":1609,"source":"contracts/TownHall.algo.ts:451","pc":[2416]},{"teal":1610,"source":"contracts/TownHall.algo.ts:451","pc":[2417]},{"teal":1611,"source":"contracts/TownHall.algo.ts:451","pc":[2418]},{"teal":1612,"source":"contracts/TownHall.algo.ts:451","pc":[2419,2420]},{"teal":1613,"source":"contracts/TownHall.algo.ts:451","pc":[2421]},{"teal":1614,"source":"contracts/TownHall.algo.ts:451","pc":[2422]},{"teal":1615,"source":"contracts/TownHall.algo.ts:450","pc":[2423,2424,2425]},{"teal":1620,"source":"contracts/TownHall.algo.ts:452","pc":[2426,2427]},{"teal":1621,"source":"contracts/TownHall.algo.ts:452","pc":[2428,2429]},{"teal":1622,"source":"contracts/TownHall.algo.ts:452","pc":[2430]},{"teal":1623,"source":"contracts/TownHall.algo.ts:452","pc":[2431]},{"teal":1624,"source":"contracts/TownHall.algo.ts:452","pc":[2432,2433,2434]},{"teal":1625,"source":"contracts/TownHall.algo.ts:452","pc":[2435,2436]},{"teal":1626,"source":"contracts/TownHall.algo.ts:452","pc":[2437]},{"teal":1627,"source":"contracts/TownHall.algo.ts:452","pc":[2438,2439,2440]},{"teal":1628,"source":"contracts/TownHall.algo.ts:452","pc":[2441,2442]},{"teal":1629,"source":"contracts/TownHall.algo.ts:452","pc":[2443]},{"teal":1630,"source":"contracts/TownHall.algo.ts:452","pc":[2444]},{"teal":1633,"source":"contracts/TownHall.algo.ts:452","pc":[2445,2446,2447]},{"teal":1638,"source":"contracts/TownHall.algo.ts:453","pc":[2448,2449]},{"teal":1639,"source":"contracts/TownHall.algo.ts:453","pc":[2450]},{"teal":1640,"source":"contracts/TownHall.algo.ts:453","pc":[2451]},{"teal":1641,"source":"contracts/TownHall.algo.ts:453","pc":[2452]},{"teal":1642,"source":"contracts/TownHall.algo.ts:453","pc":[2453,2454]},{"teal":1643,"source":"contracts/TownHall.algo.ts:453","pc":[2455]},{"teal":1644,"source":"contracts/TownHall.algo.ts:453","pc":[2456]},{"teal":1645,"source":"contracts/TownHall.algo.ts:452","pc":[2457,2458,2459]},{"teal":1650,"source":"contracts/TownHall.algo.ts:454","pc":[2460,2461]},{"teal":1651,"source":"contracts/TownHall.algo.ts:454","pc":[2462,2463]},{"teal":1652,"source":"contracts/TownHall.algo.ts:454","pc":[2464]},{"teal":1653,"source":"contracts/TownHall.algo.ts:454","pc":[2465]},{"teal":1654,"source":"contracts/TownHall.algo.ts:454","pc":[2466,2467,2468]},{"teal":1655,"source":"contracts/TownHall.algo.ts:454","pc":[2469,2470]},{"teal":1656,"source":"contracts/TownHall.algo.ts:454","pc":[2471]},{"teal":1657,"source":"contracts/TownHall.algo.ts:454","pc":[2472,2473,2474]},{"teal":1658,"source":"contracts/TownHall.algo.ts:454","pc":[2475,2476]},{"teal":1659,"source":"contracts/TownHall.algo.ts:454","pc":[2477]},{"teal":1660,"source":"contracts/TownHall.algo.ts:454","pc":[2478]},{"teal":1663,"source":"contracts/TownHall.algo.ts:454","pc":[2479,2480,2481]},{"teal":1668,"source":"contracts/TownHall.algo.ts:455","pc":[2482,2483]},{"teal":1669,"source":"contracts/TownHall.algo.ts:455","pc":[2484]},{"teal":1670,"source":"contracts/TownHall.algo.ts:455","pc":[2485]},{"teal":1671,"source":"contracts/TownHall.algo.ts:455","pc":[2486]},{"teal":1672,"source":"contracts/TownHall.algo.ts:455","pc":[2487,2488]},{"teal":1673,"source":"contracts/TownHall.algo.ts:455","pc":[2489]},{"teal":1674,"source":"contracts/TownHall.algo.ts:455","pc":[2490]},{"teal":1675,"source":"contracts/TownHall.algo.ts:454","pc":[2491,2492,2493]},{"teal":1680,"source":"contracts/TownHall.algo.ts:456","pc":[2494,2495]},{"teal":1681,"source":"contracts/TownHall.algo.ts:456","pc":[2496]},{"teal":1682,"source":"contracts/TownHall.algo.ts:456","pc":[2497]},{"teal":1683,"source":"contracts/TownHall.algo.ts:456","pc":[2498]},{"teal":1684,"source":"contracts/TownHall.algo.ts:456","pc":[2499,2500,2501]},{"teal":1685,"source":"contracts/TownHall.algo.ts:456","pc":[2502,2503]},{"teal":1686,"source":"contracts/TownHall.algo.ts:456","pc":[2504]},{"teal":1687,"source":"contracts/TownHall.algo.ts:456","pc":[2505,2506,2507]},{"teal":1688,"source":"contracts/TownHall.algo.ts:456","pc":[2508,2509]},{"teal":1689,"source":"contracts/TownHall.algo.ts:456","pc":[2510]},{"teal":1690,"source":"contracts/TownHall.algo.ts:456","pc":[2511]},{"teal":1693,"source":"contracts/TownHall.algo.ts:456","pc":[2512,2513,2514]},{"teal":1698,"source":"contracts/TownHall.algo.ts:457","pc":[2515,2516]},{"teal":1699,"source":"contracts/TownHall.algo.ts:457","pc":[2517]},{"teal":1700,"source":"contracts/TownHall.algo.ts:457","pc":[2518]},{"teal":1701,"source":"contracts/TownHall.algo.ts:457","pc":[2519]},{"teal":1702,"source":"contracts/TownHall.algo.ts:457","pc":[2520,2521]},{"teal":1703,"source":"contracts/TownHall.algo.ts:457","pc":[2522]},{"teal":1704,"source":"contracts/TownHall.algo.ts:457","pc":[2523]},{"teal":1705,"source":"contracts/TownHall.algo.ts:456","pc":[2524,2525,2526]},{"teal":1709,"source":"contracts/TownHall.algo.ts:459","errorMessage":"Invalid vote: Is player still alive?","pc":[2527]},{"teal":1715,"source":"contracts/TownHall.algo.ts:462","pc":[2528,2529]},{"teal":1716,"source":"contracts/TownHall.algo.ts:462","pc":[2530]},{"teal":1717,"source":"contracts/TownHall.algo.ts:462","pc":[2531]},{"teal":1718,"source":"contracts/TownHall.algo.ts:462","pc":[2532,2533,2534]},{"teal":1719,"source":"contracts/TownHall.algo.ts:462","pc":[2535]},{"teal":1720,"source":"contracts/TownHall.algo.ts:462","pc":[2536]},{"teal":1721,"source":"contracts/TownHall.algo.ts:462","pc":[2537,2538,2539]},{"teal":1722,"source":"contracts/TownHall.algo.ts:462","pc":[2540,2541]},{"teal":1723,"source":"contracts/TownHall.algo.ts:462","pc":[2542]},{"teal":1724,"source":"contracts/TownHall.algo.ts:462","pc":[2543]},{"teal":1725,"source":"contracts/TownHall.algo.ts:462","pc":[2544]},{"teal":1726,"source":"contracts/TownHall.algo.ts:462","pc":[2545]},{"teal":1729,"source":"contracts/TownHall.algo.ts:462","pc":[2546,2547,2548]},{"teal":1734,"source":"contracts/TownHall.algo.ts:463","pc":[2549,2550]},{"teal":1735,"source":"contracts/TownHall.algo.ts:463","pc":[2551]},{"teal":1736,"source":"contracts/TownHall.algo.ts:463","pc":[2552]},{"teal":1737,"source":"contracts/TownHall.algo.ts:462","pc":[2553,2554,2555]},{"teal":1742,"source":"contracts/TownHall.algo.ts:464","pc":[2556,2557]},{"teal":1743,"source":"contracts/TownHall.algo.ts:464","pc":[2558]},{"teal":1744,"source":"contracts/TownHall.algo.ts:464","pc":[2559]},{"teal":1745,"source":"contracts/TownHall.algo.ts:464","pc":[2560,2561,2562]},{"teal":1746,"source":"contracts/TownHall.algo.ts:464","pc":[2563]},{"teal":1747,"source":"contracts/TownHall.algo.ts:464","pc":[2564]},{"teal":1748,"source":"contracts/TownHall.algo.ts:464","pc":[2565,2566,2567]},{"teal":1749,"source":"contracts/TownHall.algo.ts:464","pc":[2568,2569]},{"teal":1750,"source":"contracts/TownHall.algo.ts:464","pc":[2570]},{"teal":1751,"source":"contracts/TownHall.algo.ts:464","pc":[2571]},{"teal":1752,"source":"contracts/TownHall.algo.ts:464","pc":[2572]},{"teal":1753,"source":"contracts/TownHall.algo.ts:464","pc":[2573]},{"teal":1756,"source":"contracts/TownHall.algo.ts:464","pc":[2574,2575,2576]},{"teal":1761,"source":"contracts/TownHall.algo.ts:465","pc":[2577,2578]},{"teal":1762,"source":"contracts/TownHall.algo.ts:465","pc":[2579]},{"teal":1763,"source":"contracts/TownHall.algo.ts:465","pc":[2580]},{"teal":1764,"source":"contracts/TownHall.algo.ts:464","pc":[2581,2582,2583]},{"teal":1769,"source":"contracts/TownHall.algo.ts:466","pc":[2584,2585]},{"teal":1770,"source":"contracts/TownHall.algo.ts:466","pc":[2586,2587]},{"teal":1771,"source":"contracts/TownHall.algo.ts:466","pc":[2588]},{"teal":1772,"source":"contracts/TownHall.algo.ts:466","pc":[2589,2590,2591]},{"teal":1773,"source":"contracts/TownHall.algo.ts:466","pc":[2592]},{"teal":1774,"source":"contracts/TownHall.algo.ts:466","pc":[2593]},{"teal":1775,"source":"contracts/TownHall.algo.ts:466","pc":[2594,2595,2596]},{"teal":1776,"source":"contracts/TownHall.algo.ts:466","pc":[2597,2598]},{"teal":1777,"source":"contracts/TownHall.algo.ts:466","pc":[2599]},{"teal":1778,"source":"contracts/TownHall.algo.ts:466","pc":[2600]},{"teal":1779,"source":"contracts/TownHall.algo.ts:466","pc":[2601]},{"teal":1780,"source":"contracts/TownHall.algo.ts:466","pc":[2602]},{"teal":1783,"source":"contracts/TownHall.algo.ts:466","pc":[2603,2604,2605]},{"teal":1788,"source":"contracts/TownHall.algo.ts:467","pc":[2606,2607]},{"teal":1789,"source":"contracts/TownHall.algo.ts:467","pc":[2608]},{"teal":1790,"source":"contracts/TownHall.algo.ts:467","pc":[2609]},{"teal":1791,"source":"contracts/TownHall.algo.ts:466","pc":[2610,2611,2612]},{"teal":1796,"source":"contracts/TownHall.algo.ts:468","pc":[2613,2614]},{"teal":1797,"source":"contracts/TownHall.algo.ts:468","pc":[2615,2616]},{"teal":1798,"source":"contracts/TownHall.algo.ts:468","pc":[2617]},{"teal":1799,"source":"contracts/TownHall.algo.ts:468","pc":[2618,2619,2620]},{"teal":1800,"source":"contracts/TownHall.algo.ts:468","pc":[2621]},{"teal":1801,"source":"contracts/TownHall.algo.ts:468","pc":[2622]},{"teal":1802,"source":"contracts/TownHall.algo.ts:468","pc":[2623,2624,2625]},{"teal":1803,"source":"contracts/TownHall.algo.ts:468","pc":[2626,2627]},{"teal":1804,"source":"contracts/TownHall.algo.ts:468","pc":[2628]},{"teal":1805,"source":"contracts/TownHall.algo.ts:468","pc":[2629]},{"teal":1806,"source":"contracts/TownHall.algo.ts:468","pc":[2630]},{"teal":1807,"source":"contracts/TownHall.algo.ts:468","pc":[2631]},{"teal":1810,"source":"contracts/TownHall.algo.ts:468","pc":[2632,2633,2634]},{"teal":1815,"source":"contracts/TownHall.algo.ts:469","pc":[2635,2636]},{"teal":1816,"source":"contracts/TownHall.algo.ts:469","pc":[2637]},{"teal":1817,"source":"contracts/TownHall.algo.ts:469","pc":[2638]},{"teal":1818,"source":"contracts/TownHall.algo.ts:468","pc":[2639,2640,2641]},{"teal":1823,"source":"contracts/TownHall.algo.ts:470","pc":[2642,2643]},{"teal":1824,"source":"contracts/TownHall.algo.ts:470","pc":[2644,2645]},{"teal":1825,"source":"contracts/TownHall.algo.ts:470","pc":[2646]},{"teal":1826,"source":"contracts/TownHall.algo.ts:470","pc":[2647,2648,2649]},{"teal":1827,"source":"contracts/TownHall.algo.ts:470","pc":[2650]},{"teal":1828,"source":"contracts/TownHall.algo.ts:470","pc":[2651]},{"teal":1829,"source":"contracts/TownHall.algo.ts:470","pc":[2652,2653,2654]},{"teal":1830,"source":"contracts/TownHall.algo.ts:470","pc":[2655,2656]},{"teal":1831,"source":"contracts/TownHall.algo.ts:470","pc":[2657]},{"teal":1832,"source":"contracts/TownHall.algo.ts:470","pc":[2658]},{"teal":1833,"source":"contracts/TownHall.algo.ts:470","pc":[2659]},{"teal":1834,"source":"contracts/TownHall.algo.ts:470","pc":[2660]},{"teal":1837,"source":"contracts/TownHall.algo.ts:470","pc":[2661,2662,2663]},{"teal":1842,"source":"contracts/TownHall.algo.ts:471","pc":[2664,2665]},{"teal":1843,"source":"contracts/TownHall.algo.ts:471","pc":[2666]},{"teal":1844,"source":"contracts/TownHall.algo.ts:471","pc":[2667]},{"teal":1845,"source":"contracts/TownHall.algo.ts:470","pc":[2668,2669,2670]},{"teal":1850,"source":"contracts/TownHall.algo.ts:472","pc":[2671,2672]},{"teal":1851,"source":"contracts/TownHall.algo.ts:472","pc":[2673,2674]},{"teal":1852,"source":"contracts/TownHall.algo.ts:472","pc":[2675]},{"teal":1853,"source":"contracts/TownHall.algo.ts:472","pc":[2676,2677,2678]},{"teal":1854,"source":"contracts/TownHall.algo.ts:472","pc":[2679]},{"teal":1855,"source":"contracts/TownHall.algo.ts:472","pc":[2680]},{"teal":1856,"source":"contracts/TownHall.algo.ts:472","pc":[2681,2682,2683]},{"teal":1857,"source":"contracts/TownHall.algo.ts:472","pc":[2684,2685]},{"teal":1858,"source":"contracts/TownHall.algo.ts:472","pc":[2686]},{"teal":1859,"source":"contracts/TownHall.algo.ts:472","pc":[2687]},{"teal":1860,"source":"contracts/TownHall.algo.ts:472","pc":[2688]},{"teal":1861,"source":"contracts/TownHall.algo.ts:472","pc":[2689]},{"teal":1864,"source":"contracts/TownHall.algo.ts:472","pc":[2690,2691,2692]},{"teal":1869,"source":"contracts/TownHall.algo.ts:473","pc":[2693,2694]},{"teal":1870,"source":"contracts/TownHall.algo.ts:473","pc":[2695]},{"teal":1871,"source":"contracts/TownHall.algo.ts:473","pc":[2696]},{"teal":1872,"source":"contracts/TownHall.algo.ts:472","pc":[2697,2698,2699]},{"teal":1876,"source":"contracts/TownHall.algo.ts:475","errorMessage":"Address not allowed to vote.","pc":[2700]},{"teal":1881,"source":"contracts/TownHall.algo.ts:478","pc":[2701,2702]},{"teal":1882,"source":"contracts/TownHall.algo.ts:478","pc":[2703]},{"teal":1883,"source":"contracts/TownHall.algo.ts:478","pc":[2704]},{"teal":1884,"source":"contracts/TownHall.algo.ts:478","pc":[2705]},{"teal":1885,"source":"contracts/TownHall.algo.ts:478","pc":[2706,2707]},{"teal":1886,"source":"contracts/TownHall.algo.ts:478","pc":[2708]},{"teal":1887,"source":"contracts/TownHall.algo.ts:478","pc":[2709]},{"teal":1892,"source":"contracts/TownHall.algo.ts:480","pc":[2710,2711]},{"teal":1893,"source":"contracts/TownHall.algo.ts:480","pc":[2712]},{"teal":1894,"source":"contracts/TownHall.algo.ts:480","pc":[2713,2714]},{"teal":1895,"source":"contracts/TownHall.algo.ts:480","pc":[2715]},{"teal":1896,"source":"contracts/TownHall.algo.ts:480","pc":[2716]},{"teal":1897,"source":"contracts/TownHall.algo.ts:480","pc":[2717,2718,2719]},{"teal":1902,"source":"contracts/TownHall.algo.ts:482","pc":[2720]},{"teal":1903,"source":"contracts/Constants.ts:20","pc":[2721,2722]},{"teal":1904,"source":"contracts/TownHall.algo.ts:482","pc":[2723]},{"teal":1908,"source":"contracts/TownHall.algo.ts:485","pc":[2724,2725]},{"teal":1909,"source":"contracts/TownHall.algo.ts:485","pc":[2726]},{"teal":1910,"source":"contracts/TownHall.algo.ts:485","pc":[2727]},{"teal":1914,"source":"contracts/TownHall.algo.ts:486","pc":[2728,2729]},{"teal":1915,"source":"contracts/TownHall.algo.ts:486","pc":[2730]},{"teal":1916,"source":"contracts/TownHall.algo.ts:486","pc":[2731]},{"teal":1920,"source":"contracts/TownHall.algo.ts:487","pc":[2732,2733]},{"teal":1921,"source":"contracts/TownHall.algo.ts:487","pc":[2734]},{"teal":1922,"source":"contracts/TownHall.algo.ts:487","pc":[2735]},{"teal":1926,"source":"contracts/TownHall.algo.ts:488","pc":[2736,2737]},{"teal":1927,"source":"contracts/TownHall.algo.ts:488","pc":[2738]},{"teal":1928,"source":"contracts/TownHall.algo.ts:488","pc":[2739]},{"teal":1932,"source":"contracts/TownHall.algo.ts:489","pc":[2740,2741]},{"teal":1933,"source":"contracts/TownHall.algo.ts:489","pc":[2742]},{"teal":1934,"source":"contracts/TownHall.algo.ts:489","pc":[2743]},{"teal":1938,"source":"contracts/TownHall.algo.ts:490","pc":[2744,2745]},{"teal":1939,"source":"contracts/TownHall.algo.ts:490","pc":[2746]},{"teal":1940,"source":"contracts/TownHall.algo.ts:490","pc":[2747]},{"teal":1944,"source":"contracts/TownHall.algo.ts:491","pc":[2748,2749]},{"teal":1945,"source":"contracts/TownHall.algo.ts:491","pc":[2750]},{"teal":1946,"source":"contracts/TownHall.algo.ts:491","pc":[2751]},{"teal":1949,"source":"contracts/TownHall.algo.ts:428","pc":[2752]},{"teal":1954,"source":"contracts/TownHall.algo.ts:497","pc":[2753,2754,2755]},{"teal":1955,"source":"contracts/TownHall.algo.ts:497","pc":[2756]},{"teal":1956,"source":"contracts/TownHall.algo.ts:497","pc":[2757]},{"teal":1960,"source":"contracts/TownHall.algo.ts:497","pc":[2758,2759,2760]},{"teal":1963,"source":"contracts/TownHall.algo.ts:497","pc":[2761,2762]},{"teal":1964,"source":"contracts/TownHall.algo.ts:497","pc":[2763]},{"teal":1971,"source":"contracts/TownHall.algo.ts:499","pc":[2764]},{"teal":1972,"source":"contracts/TownHall.algo.ts:499","pc":[2765]},{"teal":1973,"source":"contracts/Constants.ts:20","pc":[2766,2767]},{"teal":1974,"source":"contracts/TownHall.algo.ts:499","pc":[2768]},{"teal":1977,"source":"contracts/TownHall.algo.ts:498","errorMessage":"Invalid method call: Game is not in Day Stage Eliminate state.","pc":[2769]},{"teal":1981,"source":"contracts/TownHall.algo.ts:503","pc":[2770]},{"teal":1982,"source":"contracts/TownHall.algo.ts:503","pc":[2771,2772]},{"teal":1983,"source":"contracts/TownHall.algo.ts:503","pc":[2773]},{"teal":1987,"source":"contracts/TownHall.algo.ts:504","pc":[2774]},{"teal":1988,"source":"contracts/TownHall.algo.ts:504","pc":[2775,2776]},{"teal":1992,"source":"contracts/TownHall.algo.ts:510","pc":[2777,2778]},{"teal":1993,"source":"contracts/TownHall.algo.ts:510","pc":[2779]},{"teal":1994,"source":"contracts/TownHall.algo.ts:510","pc":[2780]},{"teal":1995,"source":"contracts/TownHall.algo.ts:510","pc":[2781]},{"teal":1996,"source":"contracts/TownHall.algo.ts:510","pc":[2782]},{"teal":1997,"source":"contracts/TownHall.algo.ts:510","pc":[2783,2784]},{"teal":2002,"source":"contracts/TownHall.algo.ts:512","pc":[2785,2786]},{"teal":2003,"source":"contracts/TownHall.algo.ts:512","pc":[2787]},{"teal":2004,"source":"contracts/TownHall.algo.ts:512","pc":[2788,2789]},{"teal":2005,"source":"contracts/TownHall.algo.ts:512","pc":[2790]},{"teal":2006,"source":"contracts/TownHall.algo.ts:512","pc":[2791]},{"teal":2007,"source":"contracts/TownHall.algo.ts:512","pc":[2792,2793,2794]},{"teal":2008,"source":"contracts/TownHall.algo.ts:512","pc":[2795,2796]},{"teal":2009,"source":"contracts/TownHall.algo.ts:512","pc":[2797]},{"teal":2010,"source":"contracts/TownHall.algo.ts:512","pc":[2798,2799]},{"teal":2011,"source":"contracts/TownHall.algo.ts:512","pc":[2800]},{"teal":2012,"source":"contracts/TownHall.algo.ts:512","pc":[2801]},{"teal":2013,"source":"contracts/TownHall.algo.ts:512","pc":[2802,2803,2804]},{"teal":2014,"source":"contracts/TownHall.algo.ts:512","pc":[2805,2806]},{"teal":2015,"source":"contracts/TownHall.algo.ts:512","pc":[2807]},{"teal":2018,"source":"contracts/TownHall.algo.ts:512","pc":[2808]},{"teal":2021,"source":"contracts/TownHall.algo.ts:512","pc":[2809,2810,2811]},{"teal":2026,"source":"contracts/TownHall.algo.ts:513","pc":[2812]},{"teal":2027,"source":"contracts/TownHall.algo.ts:513","pc":[2813]},{"teal":2028,"source":"contracts/TownHall.algo.ts:513","pc":[2814]},{"teal":2029,"source":"contracts/TownHall.algo.ts:513","pc":[2815,2816,2817]},{"teal":2030,"source":"contracts/TownHall.algo.ts:513","pc":[2818]},{"teal":2034,"source":"contracts/TownHall.algo.ts:514","pc":[2819,2820]},{"teal":2035,"source":"contracts/TownHall.algo.ts:514","pc":[2821]},{"teal":2036,"source":"contracts/TownHall.algo.ts:514","pc":[2822,2823]},{"teal":2042,"source":"contracts/TownHall.algo.ts:517","pc":[2824,2825]},{"teal":2043,"source":"contracts/TownHall.algo.ts:517","pc":[2826]},{"teal":2044,"source":"contracts/TownHall.algo.ts:517","pc":[2827,2828]},{"teal":2045,"source":"contracts/TownHall.algo.ts:517","pc":[2829]},{"teal":2046,"source":"contracts/TownHall.algo.ts:517","pc":[2830]},{"teal":2047,"source":"contracts/TownHall.algo.ts:517","pc":[2831,2832,2833]},{"teal":2048,"source":"contracts/TownHall.algo.ts:517","pc":[2834,2835]},{"teal":2049,"source":"contracts/TownHall.algo.ts:517","pc":[2836]},{"teal":2050,"source":"contracts/TownHall.algo.ts:517","pc":[2837,2838]},{"teal":2051,"source":"contracts/TownHall.algo.ts:517","pc":[2839]},{"teal":2052,"source":"contracts/TownHall.algo.ts:517","pc":[2840]},{"teal":2053,"source":"contracts/TownHall.algo.ts:517","pc":[2841,2842,2843]},{"teal":2054,"source":"contracts/TownHall.algo.ts:517","pc":[2844,2845]},{"teal":2055,"source":"contracts/TownHall.algo.ts:517","pc":[2846]},{"teal":2058,"source":"contracts/TownHall.algo.ts:517","pc":[2847]},{"teal":2061,"source":"contracts/TownHall.algo.ts:517","pc":[2848,2849,2850]},{"teal":2066,"source":"contracts/TownHall.algo.ts:518","pc":[2851]},{"teal":2067,"source":"contracts/TownHall.algo.ts:518","pc":[2852]},{"teal":2068,"source":"contracts/TownHall.algo.ts:518","pc":[2853]},{"teal":2069,"source":"contracts/TownHall.algo.ts:518","pc":[2854,2855,2856]},{"teal":2070,"source":"contracts/TownHall.algo.ts:518","pc":[2857]},{"teal":2074,"source":"contracts/TownHall.algo.ts:519","pc":[2858,2859]},{"teal":2075,"source":"contracts/TownHall.algo.ts:519","pc":[2860]},{"teal":2076,"source":"contracts/TownHall.algo.ts:519","pc":[2861,2862]},{"teal":2082,"source":"contracts/TownHall.algo.ts:522","pc":[2863,2864]},{"teal":2083,"source":"contracts/TownHall.algo.ts:522","pc":[2865]},{"teal":2084,"source":"contracts/TownHall.algo.ts:522","pc":[2866,2867]},{"teal":2085,"source":"contracts/TownHall.algo.ts:522","pc":[2868]},{"teal":2086,"source":"contracts/TownHall.algo.ts:522","pc":[2869]},{"teal":2087,"source":"contracts/TownHall.algo.ts:522","pc":[2870,2871,2872]},{"teal":2088,"source":"contracts/TownHall.algo.ts:522","pc":[2873,2874]},{"teal":2089,"source":"contracts/TownHall.algo.ts:522","pc":[2875]},{"teal":2090,"source":"contracts/TownHall.algo.ts:522","pc":[2876,2877]},{"teal":2091,"source":"contracts/TownHall.algo.ts:522","pc":[2878]},{"teal":2092,"source":"contracts/TownHall.algo.ts:522","pc":[2879]},{"teal":2093,"source":"contracts/TownHall.algo.ts:522","pc":[2880,2881,2882]},{"teal":2094,"source":"contracts/TownHall.algo.ts:522","pc":[2883,2884]},{"teal":2095,"source":"contracts/TownHall.algo.ts:522","pc":[2885]},{"teal":2098,"source":"contracts/TownHall.algo.ts:522","pc":[2886]},{"teal":2101,"source":"contracts/TownHall.algo.ts:522","pc":[2887,2888,2889]},{"teal":2106,"source":"contracts/TownHall.algo.ts:523","pc":[2890]},{"teal":2107,"source":"contracts/TownHall.algo.ts:523","pc":[2891,2892]},{"teal":2108,"source":"contracts/TownHall.algo.ts:523","pc":[2893]},{"teal":2109,"source":"contracts/TownHall.algo.ts:523","pc":[2894,2895,2896]},{"teal":2110,"source":"contracts/TownHall.algo.ts:523","pc":[2897]},{"teal":2114,"source":"contracts/TownHall.algo.ts:524","pc":[2898,2899]},{"teal":2115,"source":"contracts/TownHall.algo.ts:524","pc":[2900]},{"teal":2116,"source":"contracts/TownHall.algo.ts:524","pc":[2901,2902]},{"teal":2122,"source":"contracts/TownHall.algo.ts:527","pc":[2903,2904]},{"teal":2123,"source":"contracts/TownHall.algo.ts:527","pc":[2905]},{"teal":2124,"source":"contracts/TownHall.algo.ts:527","pc":[2906,2907]},{"teal":2125,"source":"contracts/TownHall.algo.ts:527","pc":[2908]},{"teal":2126,"source":"contracts/TownHall.algo.ts:527","pc":[2909]},{"teal":2127,"source":"contracts/TownHall.algo.ts:527","pc":[2910,2911,2912]},{"teal":2128,"source":"contracts/TownHall.algo.ts:527","pc":[2913,2914]},{"teal":2129,"source":"contracts/TownHall.algo.ts:527","pc":[2915]},{"teal":2130,"source":"contracts/TownHall.algo.ts:527","pc":[2916,2917]},{"teal":2131,"source":"contracts/TownHall.algo.ts:527","pc":[2918]},{"teal":2132,"source":"contracts/TownHall.algo.ts:527","pc":[2919]},{"teal":2133,"source":"contracts/TownHall.algo.ts:527","pc":[2920,2921,2922]},{"teal":2134,"source":"contracts/TownHall.algo.ts:527","pc":[2923,2924]},{"teal":2135,"source":"contracts/TownHall.algo.ts:527","pc":[2925]},{"teal":2138,"source":"contracts/TownHall.algo.ts:527","pc":[2926]},{"teal":2141,"source":"contracts/TownHall.algo.ts:527","pc":[2927,2928,2929]},{"teal":2146,"source":"contracts/TownHall.algo.ts:528","pc":[2930]},{"teal":2147,"source":"contracts/TownHall.algo.ts:528","pc":[2931,2932]},{"teal":2148,"source":"contracts/TownHall.algo.ts:528","pc":[2933]},{"teal":2149,"source":"contracts/TownHall.algo.ts:528","pc":[2934,2935,2936]},{"teal":2150,"source":"contracts/TownHall.algo.ts:528","pc":[2937]},{"teal":2154,"source":"contracts/TownHall.algo.ts:529","pc":[2938,2939]},{"teal":2155,"source":"contracts/TownHall.algo.ts:529","pc":[2940]},{"teal":2156,"source":"contracts/TownHall.algo.ts:529","pc":[2941,2942]},{"teal":2162,"source":"contracts/TownHall.algo.ts:532","pc":[2943,2944]},{"teal":2163,"source":"contracts/TownHall.algo.ts:532","pc":[2945]},{"teal":2164,"source":"contracts/TownHall.algo.ts:532","pc":[2946,2947]},{"teal":2165,"source":"contracts/TownHall.algo.ts:532","pc":[2948]},{"teal":2166,"source":"contracts/TownHall.algo.ts:532","pc":[2949]},{"teal":2167,"source":"contracts/TownHall.algo.ts:532","pc":[2950,2951,2952]},{"teal":2168,"source":"contracts/TownHall.algo.ts:532","pc":[2953,2954]},{"teal":2169,"source":"contracts/TownHall.algo.ts:532","pc":[2955]},{"teal":2170,"source":"contracts/TownHall.algo.ts:532","pc":[2956,2957]},{"teal":2171,"source":"contracts/TownHall.algo.ts:532","pc":[2958]},{"teal":2172,"source":"contracts/TownHall.algo.ts:532","pc":[2959]},{"teal":2173,"source":"contracts/TownHall.algo.ts:532","pc":[2960,2961,2962]},{"teal":2174,"source":"contracts/TownHall.algo.ts:532","pc":[2963,2964]},{"teal":2175,"source":"contracts/TownHall.algo.ts:532","pc":[2965]},{"teal":2178,"source":"contracts/TownHall.algo.ts:532","pc":[2966]},{"teal":2181,"source":"contracts/TownHall.algo.ts:532","pc":[2967,2968,2969]},{"teal":2186,"source":"contracts/TownHall.algo.ts:533","pc":[2970]},{"teal":2187,"source":"contracts/TownHall.algo.ts:533","pc":[2971,2972]},{"teal":2188,"source":"contracts/TownHall.algo.ts:533","pc":[2973]},{"teal":2189,"source":"contracts/TownHall.algo.ts:533","pc":[2974,2975,2976]},{"teal":2190,"source":"contracts/TownHall.algo.ts:533","pc":[2977]},{"teal":2194,"source":"contracts/TownHall.algo.ts:534","pc":[2978,2979]},{"teal":2195,"source":"contracts/TownHall.algo.ts:534","pc":[2980]},{"teal":2196,"source":"contracts/TownHall.algo.ts:534","pc":[2981,2982]},{"teal":2202,"source":"contracts/TownHall.algo.ts:537","pc":[2983,2984]},{"teal":2203,"source":"contracts/TownHall.algo.ts:537","pc":[2985]},{"teal":2204,"source":"contracts/TownHall.algo.ts:537","pc":[2986,2987]},{"teal":2205,"source":"contracts/TownHall.algo.ts:537","pc":[2988]},{"teal":2206,"source":"contracts/TownHall.algo.ts:537","pc":[2989]},{"teal":2207,"source":"contracts/TownHall.algo.ts:537","pc":[2990,2991,2992]},{"teal":2208,"source":"contracts/TownHall.algo.ts:537","pc":[2993,2994]},{"teal":2209,"source":"contracts/TownHall.algo.ts:537","pc":[2995]},{"teal":2210,"source":"contracts/TownHall.algo.ts:537","pc":[2996,2997]},{"teal":2211,"source":"contracts/TownHall.algo.ts:537","pc":[2998]},{"teal":2212,"source":"contracts/TownHall.algo.ts:537","pc":[2999]},{"teal":2213,"source":"contracts/TownHall.algo.ts:537","pc":[3000,3001,3002]},{"teal":2214,"source":"contracts/TownHall.algo.ts:537","pc":[3003,3004]},{"teal":2215,"source":"contracts/TownHall.algo.ts:537","pc":[3005]},{"teal":2218,"source":"contracts/TownHall.algo.ts:537","pc":[3006]},{"teal":2221,"source":"contracts/TownHall.algo.ts:537","pc":[3007,3008,3009]},{"teal":2226,"source":"contracts/TownHall.algo.ts:538","pc":[3010]},{"teal":2227,"source":"contracts/TownHall.algo.ts:538","pc":[3011,3012]},{"teal":2228,"source":"contracts/TownHall.algo.ts:538","pc":[3013]},{"teal":2229,"source":"contracts/TownHall.algo.ts:538","pc":[3014,3015,3016]},{"teal":2230,"source":"contracts/TownHall.algo.ts:538","pc":[3017]},{"teal":2234,"source":"contracts/TownHall.algo.ts:539","pc":[3018,3019]},{"teal":2235,"source":"contracts/TownHall.algo.ts:539","pc":[3020]},{"teal":2236,"source":"contracts/TownHall.algo.ts:539","pc":[3021,3022]},{"teal":2241,"source":"contracts/TownHall.algo.ts:542","pc":[3023]},{"teal":2242,"source":"contracts/TownHall.algo.ts:542","pc":[3024]},{"teal":2243,"source":"contracts/TownHall.algo.ts:542","pc":[3025,3026]},{"teal":2244,"source":"contracts/TownHall.algo.ts:542","pc":[3027]},{"teal":2247,"source":"contracts/TownHall.algo.ts:542","errorMessage":"Error state: Zero Address won vote!","pc":[3028]},{"teal":2251,"source":"contracts/TownHall.algo.ts:543","pc":[3029,3030]},{"teal":2252,"source":"contracts/TownHall.algo.ts:543","pc":[3031]},{"teal":2253,"source":"contracts/TownHall.algo.ts:543","pc":[3032]},{"teal":2256,"source":"contracts/TownHall.algo.ts:543","errorMessage":"Error state: No votes were cast!","pc":[3033]},{"teal":2261,"source":"contracts/TownHall.algo.ts:548","pc":[3034]},{"teal":2262,"source":"contracts/TownHall.algo.ts:548","pc":[3035]},{"teal":2263,"source":"contracts/TownHall.algo.ts:548","pc":[3036]},{"teal":2264,"source":"contracts/TownHall.algo.ts:548","pc":[3037]},{"teal":2265,"source":"contracts/TownHall.algo.ts:548","pc":[3038,3039,3040]},{"teal":2266,"source":"contracts/TownHall.algo.ts:548","pc":[3041]},{"teal":2267,"source":"contracts/TownHall.algo.ts:548","pc":[3042,3043,3044]},{"teal":2272,"source":"contracts/TownHall.algo.ts:549","pc":[3045]},{"teal":2273,"source":"contracts/TownHall.algo.ts:549","pc":[3046]},{"teal":2274,"source":"contracts/TownHall.algo.ts:549","pc":[3047,3048]},{"teal":2275,"source":"contracts/TownHall.algo.ts:549","pc":[3049,3050]},{"teal":2276,"source":"contracts/TownHall.algo.ts:549","pc":[3051]},{"teal":2277,"source":"contracts/TownHall.algo.ts:549","pc":[3052]},{"teal":2278,"source":"contracts/TownHall.algo.ts:549","pc":[3053]},{"teal":2284,"source":"contracts/TownHall.algo.ts:552","pc":[3054]},{"teal":2285,"source":"contracts/TownHall.algo.ts:552","pc":[3055]},{"teal":2286,"source":"contracts/TownHall.algo.ts:552","pc":[3056]},{"teal":2287,"source":"contracts/TownHall.algo.ts:552","pc":[3057]},{"teal":2288,"source":"contracts/TownHall.algo.ts:552","pc":[3058,3059,3060]},{"teal":2289,"source":"contracts/TownHall.algo.ts:552","pc":[3061]},{"teal":2290,"source":"contracts/TownHall.algo.ts:552","pc":[3062,3063,3064]},{"teal":2295,"source":"contracts/TownHall.algo.ts:553","pc":[3065]},{"teal":2296,"source":"contracts/TownHall.algo.ts:553","pc":[3066]},{"teal":2297,"source":"contracts/TownHall.algo.ts:553","pc":[3067,3068]},{"teal":2298,"source":"contracts/TownHall.algo.ts:553","pc":[3069,3070]},{"teal":2299,"source":"contracts/TownHall.algo.ts:553","pc":[3071]},{"teal":2300,"source":"contracts/TownHall.algo.ts:553","pc":[3072]},{"teal":2301,"source":"contracts/TownHall.algo.ts:553","pc":[3073]},{"teal":2307,"source":"contracts/TownHall.algo.ts:556","pc":[3074]},{"teal":2308,"source":"contracts/TownHall.algo.ts:556","pc":[3075]},{"teal":2309,"source":"contracts/TownHall.algo.ts:556","pc":[3076,3077]},{"teal":2310,"source":"contracts/TownHall.algo.ts:556","pc":[3078]},{"teal":2311,"source":"contracts/TownHall.algo.ts:556","pc":[3079,3080,3081]},{"teal":2312,"source":"contracts/TownHall.algo.ts:556","pc":[3082]},{"teal":2313,"source":"contracts/TownHall.algo.ts:556","pc":[3083,3084,3085]},{"teal":2318,"source":"contracts/TownHall.algo.ts:557","pc":[3086,3087]},{"teal":2319,"source":"contracts/TownHall.algo.ts:557","pc":[3088]},{"teal":2320,"source":"contracts/TownHall.algo.ts:557","pc":[3089,3090]},{"teal":2321,"source":"contracts/TownHall.algo.ts:557","pc":[3091,3092]},{"teal":2322,"source":"contracts/TownHall.algo.ts:557","pc":[3093,3094]},{"teal":2323,"source":"contracts/TownHall.algo.ts:557","pc":[3095]},{"teal":2324,"source":"contracts/TownHall.algo.ts:557","pc":[3096]},{"teal":2330,"source":"contracts/TownHall.algo.ts:560","pc":[3097]},{"teal":2331,"source":"contracts/TownHall.algo.ts:560","pc":[3098]},{"teal":2332,"source":"contracts/TownHall.algo.ts:560","pc":[3099,3100]},{"teal":2333,"source":"contracts/TownHall.algo.ts:560","pc":[3101]},{"teal":2334,"source":"contracts/TownHall.algo.ts:560","pc":[3102,3103,3104]},{"teal":2335,"source":"contracts/TownHall.algo.ts:560","pc":[3105]},{"teal":2336,"source":"contracts/TownHall.algo.ts:560","pc":[3106,3107,3108]},{"teal":2341,"source":"contracts/TownHall.algo.ts:561","pc":[3109,3110]},{"teal":2342,"source":"contracts/TownHall.algo.ts:561","pc":[3111]},{"teal":2343,"source":"contracts/TownHall.algo.ts:561","pc":[3112,3113]},{"teal":2344,"source":"contracts/TownHall.algo.ts:561","pc":[3114,3115]},{"teal":2345,"source":"contracts/TownHall.algo.ts:561","pc":[3116,3117]},{"teal":2346,"source":"contracts/TownHall.algo.ts:561","pc":[3118]},{"teal":2347,"source":"contracts/TownHall.algo.ts:561","pc":[3119]},{"teal":2353,"source":"contracts/TownHall.algo.ts:564","pc":[3120]},{"teal":2354,"source":"contracts/TownHall.algo.ts:564","pc":[3121]},{"teal":2355,"source":"contracts/TownHall.algo.ts:564","pc":[3122,3123]},{"teal":2356,"source":"contracts/TownHall.algo.ts:564","pc":[3124]},{"teal":2357,"source":"contracts/TownHall.algo.ts:564","pc":[3125,3126,3127]},{"teal":2358,"source":"contracts/TownHall.algo.ts:564","pc":[3128]},{"teal":2359,"source":"contracts/TownHall.algo.ts:564","pc":[3129,3130,3131]},{"teal":2364,"source":"contracts/TownHall.algo.ts:565","pc":[3132,3133]},{"teal":2365,"source":"contracts/TownHall.algo.ts:565","pc":[3134]},{"teal":2366,"source":"contracts/TownHall.algo.ts:565","pc":[3135,3136]},{"teal":2367,"source":"contracts/TownHall.algo.ts:565","pc":[3137,3138]},{"teal":2368,"source":"contracts/TownHall.algo.ts:565","pc":[3139,3140]},{"teal":2369,"source":"contracts/TownHall.algo.ts:565","pc":[3141]},{"teal":2370,"source":"contracts/TownHall.algo.ts:565","pc":[3142]},{"teal":2376,"source":"contracts/TownHall.algo.ts:568","pc":[3143]},{"teal":2377,"source":"contracts/TownHall.algo.ts:568","pc":[3144]},{"teal":2378,"source":"contracts/TownHall.algo.ts:568","pc":[3145,3146]},{"teal":2379,"source":"contracts/TownHall.algo.ts:568","pc":[3147]},{"teal":2380,"source":"contracts/TownHall.algo.ts:568","pc":[3148,3149,3150]},{"teal":2381,"source":"contracts/TownHall.algo.ts:568","pc":[3151]},{"teal":2382,"source":"contracts/TownHall.algo.ts:568","pc":[3152,3153,3154]},{"teal":2387,"source":"contracts/TownHall.algo.ts:569","pc":[3155,3156]},{"teal":2388,"source":"contracts/TownHall.algo.ts:569","pc":[3157]},{"teal":2389,"source":"contracts/TownHall.algo.ts:569","pc":[3158,3159]},{"teal":2390,"source":"contracts/TownHall.algo.ts:569","pc":[3160,3161]},{"teal":2391,"source":"contracts/TownHall.algo.ts:569","pc":[3162,3163]},{"teal":2392,"source":"contracts/TownHall.algo.ts:569","pc":[3164]},{"teal":2393,"source":"contracts/TownHall.algo.ts:569","pc":[3165]},{"teal":2398,"source":"contracts/TownHall.algo.ts:572","pc":[3166,3167]},{"teal":2399,"source":"contracts/TownHall.algo.ts:572","pc":[3168]},{"teal":2400,"source":"contracts/TownHall.algo.ts:572","pc":[3169]},{"teal":2401,"source":"contracts/TownHall.algo.ts:572","pc":[3170]},{"teal":2402,"source":"contracts/TownHall.algo.ts:572","pc":[3171,3172]},{"teal":2403,"source":"contracts/TownHall.algo.ts:572","pc":[3173]},{"teal":2404,"source":"contracts/TownHall.algo.ts:572","pc":[3174]},{"teal":2408,"source":"contracts/TownHall.algo.ts:576","pc":[3175,3176]},{"teal":2409,"source":"contracts/TownHall.algo.ts:576","pc":[3177]},{"teal":2410,"source":"contracts/TownHall.algo.ts:576","pc":[3178]},{"teal":2414,"source":"contracts/TownHall.algo.ts:577","pc":[3179,3180]},{"teal":2415,"source":"contracts/TownHall.algo.ts:577","pc":[3181]},{"teal":2416,"source":"contracts/TownHall.algo.ts:577","pc":[3182]},{"teal":2420,"source":"contracts/TownHall.algo.ts:578","pc":[3183,3184]},{"teal":2421,"source":"contracts/TownHall.algo.ts:578","pc":[3185]},{"teal":2422,"source":"contracts/TownHall.algo.ts:578","pc":[3186]},{"teal":2426,"source":"contracts/TownHall.algo.ts:579","pc":[3187,3188]},{"teal":2427,"source":"contracts/TownHall.algo.ts:579","pc":[3189]},{"teal":2428,"source":"contracts/TownHall.algo.ts:579","pc":[3190]},{"teal":2432,"source":"contracts/TownHall.algo.ts:580","pc":[3191,3192]},{"teal":2433,"source":"contracts/TownHall.algo.ts:580","pc":[3193]},{"teal":2434,"source":"contracts/TownHall.algo.ts:580","pc":[3194]},{"teal":2438,"source":"contracts/TownHall.algo.ts:581","pc":[3195,3196]},{"teal":2439,"source":"contracts/TownHall.algo.ts:581","pc":[3197]},{"teal":2440,"source":"contracts/TownHall.algo.ts:581","pc":[3198]},{"teal":2444,"source":"contracts/TownHall.algo.ts:583","pc":[3199]},{"teal":2445,"source":"contracts/Constants.ts:21","pc":[3200,3201]},{"teal":2446,"source":"contracts/TownHall.algo.ts:583","pc":[3202]},{"teal":2447,"source":"contracts/TownHall.algo.ts:497","pc":[3203]},{"teal":2452,"source":"contracts/TownHall.algo.ts:586","pc":[3204,3205,3206]},{"teal":2453,"source":"contracts/TownHall.algo.ts:586","pc":[3207,3208,3209]},{"teal":2456,"source":"contracts/TownHall.algo.ts:586","pc":[3210,3211,3212]},{"teal":2457,"source":"contracts/TownHall.algo.ts:586","pc":[3213]},{"teal":2458,"source":"contracts/TownHall.algo.ts:586","pc":[3214]},{"teal":2462,"source":"contracts/TownHall.algo.ts:586","pc":[3215,3216,3217]},{"teal":2465,"source":"contracts/TownHall.algo.ts:586","pc":[3218,3219]},{"teal":2466,"source":"contracts/TownHall.algo.ts:586","pc":[3220,3221]},{"teal":2473,"source":"contracts/TownHall.algo.ts:588","pc":[3222]},{"teal":2474,"source":"contracts/TownHall.algo.ts:588","pc":[3223]},{"teal":2475,"source":"contracts/Constants.ts:21","pc":[3224,3225]},{"teal":2476,"source":"contracts/TownHall.algo.ts:588","pc":[3226]},{"teal":2479,"source":"contracts/TownHall.algo.ts:587","errorMessage":"Invalid method call: Game is not in Day Stage Reveal state.","pc":[3227]},{"teal":2483,"source":"contracts/TownHall.algo.ts:592","pc":[3228]},{"teal":2484,"source":"contracts/TownHall.algo.ts:592","pc":[3229]},{"teal":2485,"source":"contracts/TownHall.algo.ts:592","pc":[3230,3231]},{"teal":2486,"source":"contracts/TownHall.algo.ts:592","pc":[3232]},{"teal":2489,"source":"contracts/TownHall.algo.ts:592","errorMessage":"Error state: Other player called method.","pc":[3233]},{"teal":2493,"source":"contracts/TownHall.algo.ts:595","pc":[3234,3235]},{"teal":2494,"source":"contracts/TownHall.algo.ts:595","pc":[3236,3237]},{"teal":2495,"source":"contracts/TownHall.algo.ts:595","pc":[3238,3239]},{"teal":2496,"source":"contracts/TownHall.algo.ts:595","pc":[3240,3241]},{"teal":2500,"source":"contracts/TownHall.algo.ts:596","pc":[3242,3243]},{"teal":2501,"source":"contracts/TownHall.algo.ts:596","pc":[3244,3245,3246]},{"teal":2502,"source":"contracts/TownHall.algo.ts:596","pc":[3247,3248]},{"teal":2506,"source":"contracts/TownHall.algo.ts:597","pc":[3249,3250]},{"teal":2507,"source":"contracts/TownHall.algo.ts:597","pc":[3251,3252]},{"teal":2508,"source":"contracts/TownHall.algo.ts:597","pc":[3253,3254]},{"teal":2509,"source":"contracts/TownHall.algo.ts:597","pc":[3255,3256]},{"teal":2514,"source":"contracts/TownHall.algo.ts:599","pc":[3257,3258]},{"teal":2515,"source":"contracts/TownHall.algo.ts:599","pc":[3259,3260]},{"teal":2516,"source":"contracts/TownHall.algo.ts:599","pc":[3261]},{"teal":2517,"source":"contracts/TownHall.algo.ts:599","pc":[3262]},{"teal":2518,"source":"contracts/TownHall.algo.ts:599","pc":[3263,3264,3265]},{"teal":2523,"source":"contracts/TownHall.algo.ts:602","pc":[3266,3267]},{"teal":2524,"source":"contracts/TownHall.algo.ts:602","pc":[3268,3269]},{"teal":2525,"source":"contracts/TownHall.algo.ts:602","pc":[3270]},{"teal":2529,"source":"contracts/TownHall.algo.ts:603","pc":[3271]},{"teal":2530,"source":"contracts/Constants.ts:28","pc":[3272,3273]},{"teal":2531,"source":"contracts/TownHall.algo.ts:603","pc":[3274]},{"teal":2535,"source":"contracts/TownHall.algo.ts:604","pc":[3275]},{"teal":2541,"source":"contracts/TownHall.algo.ts:607","pc":[3276,3277]},{"teal":2542,"source":"contracts/TownHall.algo.ts:607","pc":[3278,3279]},{"teal":2543,"source":"contracts/TownHall.algo.ts:607","pc":[3280]},{"teal":2544,"source":"contracts/TownHall.algo.ts:607","pc":[3281]},{"teal":2545,"source":"contracts/TownHall.algo.ts:607","pc":[3282,3283,3284]},{"teal":2550,"source":"contracts/TownHall.algo.ts:609","pc":[3285,3286]},{"teal":2551,"source":"contracts/TownHall.algo.ts:609","pc":[3287,3288]},{"teal":2552,"source":"contracts/TownHall.algo.ts:609","pc":[3289]},{"teal":2557,"source":"contracts/TownHall.algo.ts:612","pc":[3290]},{"teal":2558,"source":"contracts/TownHall.algo.ts:612","pc":[3291,3292]},{"teal":2559,"source":"contracts/TownHall.algo.ts:612","pc":[3293]},{"teal":2564,"source":"contracts/TownHall.algo.ts:614","pc":[3294,3295]},{"teal":2565,"source":"contracts/TownHall.algo.ts:614","pc":[3296]},{"teal":2566,"source":"contracts/TownHall.algo.ts:614","pc":[3297]},{"teal":2567,"source":"contracts/TownHall.algo.ts:614","pc":[3298]},{"teal":2568,"source":"contracts/TownHall.algo.ts:614","pc":[3299,3300,3301]},{"teal":2573,"source":"contracts/TownHall.algo.ts:617","pc":[3302]},{"teal":2574,"source":"contracts/Constants.ts:28","pc":[3303,3304]},{"teal":2575,"source":"contracts/TownHall.algo.ts:617","pc":[3305]},{"teal":2579,"source":"contracts/TownHall.algo.ts:618","pc":[3306]},{"teal":2584,"source":"contracts/TownHall.algo.ts:621","pc":[3307]},{"teal":2585,"source":"contracts/Constants.ts:22","pc":[3308]},{"teal":2586,"source":"contracts/TownHall.algo.ts:621","pc":[3309]},{"teal":2587,"source":"contracts/TownHall.algo.ts:586","pc":[3310]},{"teal":2592,"source":"contracts/TownHall.algo.ts:624","pc":[3311,3312,3313]},{"teal":2593,"source":"contracts/TownHall.algo.ts:624","pc":[3314,3315,3316]},{"teal":2596,"source":"contracts/TownHall.algo.ts:624","pc":[3317,3318,3319]},{"teal":2597,"source":"contracts/TownHall.algo.ts:624","pc":[3320]},{"teal":2598,"source":"contracts/TownHall.algo.ts:624","pc":[3321]},{"teal":2602,"source":"contracts/TownHall.algo.ts:624","pc":[3322,3323,3324]},{"teal":2609,"source":"contracts/TownHall.algo.ts:626","pc":[3325]},{"teal":2610,"source":"contracts/TownHall.algo.ts:626","pc":[3326]},{"teal":2611,"source":"contracts/Constants.ts:22","pc":[3327]},{"teal":2612,"source":"contracts/TownHall.algo.ts:626","pc":[3328]},{"teal":2615,"source":"contracts/TownHall.algo.ts:625","errorMessage":"Invalid method call: Game is not in Night Stage Maffia Commit state.","pc":[3329]},{"teal":2619,"source":"contracts/TownHall.algo.ts:630","pc":[3330,3331]},{"teal":2620,"source":"contracts/TownHall.algo.ts:630","pc":[3332,3333]},{"teal":2621,"source":"contracts/TownHall.algo.ts:630","pc":[3334]},{"teal":2622,"source":"contracts/TownHall.algo.ts:630","pc":[3335]},{"teal":2625,"source":"contracts/TownHall.algo.ts:630","errorMessage":"Error state: Non-mafia player called method.","pc":[3336]},{"teal":2629,"source":"contracts/TownHall.algo.ts:632","pc":[3337,3338]},{"teal":2630,"source":"contracts/TownHall.algo.ts:632","pc":[3339,3340]},{"teal":2631,"source":"contracts/TownHall.algo.ts:632","pc":[3341]},{"teal":2636,"source":"contracts/TownHall.algo.ts:634","pc":[3342,3343]},{"teal":2637,"source":"contracts/TownHall.algo.ts:634","pc":[3344]},{"teal":2638,"source":"contracts/TownHall.algo.ts:634","pc":[3345,3346]},{"teal":2639,"source":"contracts/TownHall.algo.ts:634","pc":[3347]},{"teal":2640,"source":"contracts/TownHall.algo.ts:634","pc":[3348,3349,3350]},{"teal":2645,"source":"contracts/TownHall.algo.ts:636","pc":[3351]},{"teal":2646,"source":"contracts/Constants.ts:24","pc":[3352,3353]},{"teal":2647,"source":"contracts/TownHall.algo.ts:636","pc":[3354]},{"teal":2648,"source":"contracts/TownHall.algo.ts:634","pc":[3355,3356,3357]},{"teal":2653,"source":"contracts/TownHall.algo.ts:638","pc":[3358]},{"teal":2654,"source":"contracts/Constants.ts:23","pc":[3359,3360]},{"teal":2655,"source":"contracts/TownHall.algo.ts:638","pc":[3361]},{"teal":2658,"source":"contracts/TownHall.algo.ts:624","pc":[3362]},{"teal":2663,"source":"contracts/TownHall.algo.ts:642","pc":[3363,3364,3365]},{"teal":2664,"source":"contracts/TownHall.algo.ts:642","pc":[3366,3367,3368]},{"teal":2667,"source":"contracts/TownHall.algo.ts:642","pc":[3369,3370,3371]},{"teal":2668,"source":"contracts/TownHall.algo.ts:642","pc":[3372]},{"teal":2669,"source":"contracts/TownHall.algo.ts:642","pc":[3373]},{"teal":2673,"source":"contracts/TownHall.algo.ts:642","pc":[3374,3375,3376]},{"teal":2680,"source":"contracts/TownHall.algo.ts:644","pc":[3377]},{"teal":2681,"source":"contracts/TownHall.algo.ts:644","pc":[3378]},{"teal":2682,"source":"contracts/Constants.ts:23","pc":[3379,3380]},{"teal":2683,"source":"contracts/TownHall.algo.ts:644","pc":[3381]},{"teal":2686,"source":"contracts/TownHall.algo.ts:643","errorMessage":"Invalid method call: Game is not in Night Stage Doctor Commit state.","pc":[3382]},{"teal":2690,"source":"contracts/TownHall.algo.ts:648","pc":[3383,3384]},{"teal":2691,"source":"contracts/TownHall.algo.ts:648","pc":[3385,3386]},{"teal":2692,"source":"contracts/TownHall.algo.ts:648","pc":[3387]},{"teal":2693,"source":"contracts/TownHall.algo.ts:648","pc":[3388]},{"teal":2696,"source":"contracts/TownHall.algo.ts:648","errorMessage":"Error state: Non-doctor player called method.","pc":[3389]},{"teal":2703,"source":"contracts/TownHall.algo.ts:650","pc":[3390,3391]},{"teal":2704,"source":"contracts/TownHall.algo.ts:650","pc":[3392]},{"teal":2705,"source":"contracts/TownHall.algo.ts:650","pc":[3393,3394]},{"teal":2706,"source":"contracts/TownHall.algo.ts:650","pc":[3395]},{"teal":2709,"source":"contracts/TownHall.algo.ts:649","errorMessage":"Error state: Doctor is dead, should not have entered this state.","pc":[3396]},{"teal":2713,"source":"contracts/TownHall.algo.ts:654","pc":[3397,3398]},{"teal":2714,"source":"contracts/TownHall.algo.ts:654","pc":[3399,3400]},{"teal":2715,"source":"contracts/TownHall.algo.ts:654","pc":[3401]},{"teal":2719,"source":"contracts/TownHall.algo.ts:656","pc":[3402]},{"teal":2720,"source":"contracts/Constants.ts:24","pc":[3403,3404]},{"teal":2721,"source":"contracts/TownHall.algo.ts:656","pc":[3405]},{"teal":2722,"source":"contracts/TownHall.algo.ts:642","pc":[3406]},{"teal":2727,"source":"contracts/TownHall.algo.ts:659","pc":[3407,3408,3409]},{"teal":2728,"source":"contracts/TownHall.algo.ts:659","pc":[3410]},{"teal":2729,"source":"contracts/TownHall.algo.ts:659","pc":[3411]},{"teal":2730,"source":"contracts/TownHall.algo.ts:659","pc":[3412,3413]},{"teal":2731,"source":"contracts/TownHall.algo.ts:659","pc":[3414]},{"teal":2734,"source":"contracts/TownHall.algo.ts:659","errorMessage":"argument 0 (blinder) for dawnStageMafiaReveal must be a byte[32]","pc":[3415]},{"teal":2737,"source":"contracts/TownHall.algo.ts:659","pc":[3416,3417,3418]},{"teal":2738,"source":"contracts/TownHall.algo.ts:659","pc":[3419]},{"teal":2739,"source":"contracts/TownHall.algo.ts:659","pc":[3420]},{"teal":2740,"source":"contracts/TownHall.algo.ts:659","pc":[3421,3422]},{"teal":2741,"source":"contracts/TownHall.algo.ts:659","pc":[3423]},{"teal":2744,"source":"contracts/TownHall.algo.ts:659","errorMessage":"argument 1 (victimAim) for dawnStageMafiaReveal must be a address","pc":[3424]},{"teal":2747,"source":"contracts/TownHall.algo.ts:659","pc":[3425,3426,3427]},{"teal":2748,"source":"contracts/TownHall.algo.ts:659","pc":[3428]},{"teal":2749,"source":"contracts/TownHall.algo.ts:659","pc":[3429]},{"teal":2753,"source":"contracts/TownHall.algo.ts:659","pc":[3430,3431,3432]},{"teal":2756,"source":"contracts/TownHall.algo.ts:659","pc":[3433,3434]},{"teal":2763,"source":"contracts/TownHall.algo.ts:661","pc":[3435]},{"teal":2764,"source":"contracts/TownHall.algo.ts:661","pc":[3436]},{"teal":2765,"source":"contracts/Constants.ts:24","pc":[3437,3438]},{"teal":2766,"source":"contracts/TownHall.algo.ts:661","pc":[3439]},{"teal":2769,"source":"contracts/TownHall.algo.ts:660","errorMessage":"Invalid method call: Game is not in Dawn Stage Maffia Reveal state.","pc":[3440]},{"teal":2773,"source":"contracts/TownHall.algo.ts:665","pc":[3441,3442]},{"teal":2774,"source":"contracts/TownHall.algo.ts:665","pc":[3443,3444]},{"teal":2775,"source":"contracts/TownHall.algo.ts:665","pc":[3445]},{"teal":2776,"source":"contracts/TownHall.algo.ts:665","pc":[3446]},{"teal":2779,"source":"contracts/TownHall.algo.ts:665","errorMessage":"Error state: Non-mafia player called method.","pc":[3447]},{"teal":2783,"source":"contracts/TownHall.algo.ts:667","pc":[3448,3449]},{"teal":2784,"source":"contracts/TownHall.algo.ts:667","pc":[3450,3451]},{"teal":2785,"source":"contracts/TownHall.algo.ts:667","pc":[3452]},{"teal":2788,"source":"contracts/TownHall.algo.ts:667","errorMessage":"Error state: Victim must be a valid address.","pc":[3453]},{"teal":2792,"source":"contracts/TownHall.algo.ts:671","pc":[3454,3455]},{"teal":2793,"source":"contracts/TownHall.algo.ts:671","pc":[3456,3457]},{"teal":2794,"source":"contracts/TownHall.algo.ts:671","pc":[3458]},{"teal":2795,"source":"contracts/TownHall.algo.ts:671","pc":[3459]},{"teal":2796,"source":"contracts/TownHall.algo.ts:671","pc":[3460,3461]},{"teal":2803,"source":"contracts/TownHall.algo.ts:674","pc":[3462,3463]},{"teal":2804,"source":"contracts/TownHall.algo.ts:674","pc":[3464,3465]},{"teal":2805,"source":"contracts/TownHall.algo.ts:674","pc":[3466]},{"teal":2806,"source":"contracts/TownHall.algo.ts:674","pc":[3467]},{"teal":2809,"source":"contracts/TownHall.algo.ts:673","errorMessage":"Error state: Provided address + blinder does NOT match commitment.","pc":[3468]},{"teal":2814,"source":"contracts/TownHall.algo.ts:678","pc":[3469,3470]},{"teal":2815,"source":"contracts/TownHall.algo.ts:678","pc":[3471]},{"teal":2816,"source":"contracts/TownHall.algo.ts:678","pc":[3472]},{"teal":2817,"source":"contracts/TownHall.algo.ts:678","pc":[3473,3474,3475]},{"teal":2818,"source":"contracts/TownHall.algo.ts:678","pc":[3476]},{"teal":2819,"source":"contracts/TownHall.algo.ts:678","pc":[3477,3478,3479]},{"teal":2824,"source":"contracts/TownHall.algo.ts:679","pc":[3480,3481]},{"teal":2825,"source":"contracts/TownHall.algo.ts:679","pc":[3482]},{"teal":2826,"source":"contracts/TownHall.algo.ts:679","pc":[3483]},{"teal":2827,"source":"contracts/TownHall.algo.ts:679","pc":[3484,3485,3486]},{"teal":2828,"source":"contracts/TownHall.algo.ts:679","pc":[3487]},{"teal":2829,"source":"contracts/TownHall.algo.ts:678","pc":[3488,3489,3490]},{"teal":2834,"source":"contracts/TownHall.algo.ts:680","pc":[3491,3492]},{"teal":2835,"source":"contracts/TownHall.algo.ts:680","pc":[3493]},{"teal":2836,"source":"contracts/TownHall.algo.ts:680","pc":[3494]},{"teal":2837,"source":"contracts/TownHall.algo.ts:680","pc":[3495,3496,3497]},{"teal":2838,"source":"contracts/TownHall.algo.ts:680","pc":[3498]},{"teal":2839,"source":"contracts/TownHall.algo.ts:680","pc":[3499,3500,3501]},{"teal":2844,"source":"contracts/TownHall.algo.ts:681","pc":[3502,3503]},{"teal":2845,"source":"contracts/TownHall.algo.ts:681","pc":[3504]},{"teal":2846,"source":"contracts/TownHall.algo.ts:681","pc":[3505]},{"teal":2847,"source":"contracts/TownHall.algo.ts:681","pc":[3506,3507,3508]},{"teal":2848,"source":"contracts/TownHall.algo.ts:681","pc":[3509]},{"teal":2849,"source":"contracts/TownHall.algo.ts:680","pc":[3510,3511,3512]},{"teal":2854,"source":"contracts/TownHall.algo.ts:682","pc":[3513,3514]},{"teal":2855,"source":"contracts/TownHall.algo.ts:682","pc":[3515,3516]},{"teal":2856,"source":"contracts/TownHall.algo.ts:682","pc":[3517]},{"teal":2857,"source":"contracts/TownHall.algo.ts:682","pc":[3518,3519,3520]},{"teal":2858,"source":"contracts/TownHall.algo.ts:682","pc":[3521]},{"teal":2859,"source":"contracts/TownHall.algo.ts:682","pc":[3522,3523,3524]},{"teal":2864,"source":"contracts/TownHall.algo.ts:683","pc":[3525,3526]},{"teal":2865,"source":"contracts/TownHall.algo.ts:683","pc":[3527,3528]},{"teal":2866,"source":"contracts/TownHall.algo.ts:683","pc":[3529]},{"teal":2867,"source":"contracts/TownHall.algo.ts:683","pc":[3530,3531,3532]},{"teal":2868,"source":"contracts/TownHall.algo.ts:683","pc":[3533]},{"teal":2869,"source":"contracts/TownHall.algo.ts:682","pc":[3534,3535,3536]},{"teal":2874,"source":"contracts/TownHall.algo.ts:684","pc":[3537,3538]},{"teal":2875,"source":"contracts/TownHall.algo.ts:684","pc":[3539,3540]},{"teal":2876,"source":"contracts/TownHall.algo.ts:684","pc":[3541]},{"teal":2877,"source":"contracts/TownHall.algo.ts:684","pc":[3542,3543,3544]},{"teal":2878,"source":"contracts/TownHall.algo.ts:684","pc":[3545]},{"teal":2879,"source":"contracts/TownHall.algo.ts:684","pc":[3546,3547,3548]},{"teal":2884,"source":"contracts/TownHall.algo.ts:685","pc":[3549,3550]},{"teal":2885,"source":"contracts/TownHall.algo.ts:685","pc":[3551,3552]},{"teal":2886,"source":"contracts/TownHall.algo.ts:685","pc":[3553]},{"teal":2887,"source":"contracts/TownHall.algo.ts:685","pc":[3554,3555,3556]},{"teal":2888,"source":"contracts/TownHall.algo.ts:685","pc":[3557]},{"teal":2889,"source":"contracts/TownHall.algo.ts:684","pc":[3558,3559,3560]},{"teal":2894,"source":"contracts/TownHall.algo.ts:686","pc":[3561,3562]},{"teal":2895,"source":"contracts/TownHall.algo.ts:686","pc":[3563,3564]},{"teal":2896,"source":"contracts/TownHall.algo.ts:686","pc":[3565]},{"teal":2897,"source":"contracts/TownHall.algo.ts:686","pc":[3566,3567,3568]},{"teal":2898,"source":"contracts/TownHall.algo.ts:686","pc":[3569]},{"teal":2899,"source":"contracts/TownHall.algo.ts:686","pc":[3570,3571,3572]},{"teal":2904,"source":"contracts/TownHall.algo.ts:687","pc":[3573,3574]},{"teal":2905,"source":"contracts/TownHall.algo.ts:687","pc":[3575,3576]},{"teal":2906,"source":"contracts/TownHall.algo.ts:687","pc":[3577]},{"teal":2907,"source":"contracts/TownHall.algo.ts:687","pc":[3578,3579,3580]},{"teal":2908,"source":"contracts/TownHall.algo.ts:687","pc":[3581]},{"teal":2909,"source":"contracts/TownHall.algo.ts:686","pc":[3582,3583,3584]},{"teal":2914,"source":"contracts/TownHall.algo.ts:688","pc":[3585,3586]},{"teal":2915,"source":"contracts/TownHall.algo.ts:688","pc":[3587,3588]},{"teal":2916,"source":"contracts/TownHall.algo.ts:688","pc":[3589]},{"teal":2917,"source":"contracts/TownHall.algo.ts:688","pc":[3590,3591,3592]},{"teal":2918,"source":"contracts/TownHall.algo.ts:688","pc":[3593]},{"teal":2919,"source":"contracts/TownHall.algo.ts:688","pc":[3594,3595,3596]},{"teal":2924,"source":"contracts/TownHall.algo.ts:689","pc":[3597,3598]},{"teal":2925,"source":"contracts/TownHall.algo.ts:689","pc":[3599,3600]},{"teal":2926,"source":"contracts/TownHall.algo.ts:689","pc":[3601]},{"teal":2927,"source":"contracts/TownHall.algo.ts:689","pc":[3602,3603,3604]},{"teal":2928,"source":"contracts/TownHall.algo.ts:689","pc":[3605]},{"teal":2929,"source":"contracts/TownHall.algo.ts:688","pc":[3606,3607,3608]},{"teal":2934,"source":"contracts/TownHall.algo.ts:691","pc":[3609,3610]},{"teal":2935,"source":"contracts/TownHall.algo.ts:691","pc":[3611,3612]},{"teal":2936,"source":"contracts/TownHall.algo.ts:691","pc":[3613]},{"teal":2942,"source":"contracts/TownHall.algo.ts:697","pc":[3614,3615]},{"teal":2943,"source":"contracts/TownHall.algo.ts:697","pc":[3616]},{"teal":2944,"source":"contracts/TownHall.algo.ts:697","pc":[3617,3618]},{"teal":2945,"source":"contracts/TownHall.algo.ts:697","pc":[3619]},{"teal":2946,"source":"contracts/TownHall.algo.ts:697","pc":[3620,3621,3622]},{"teal":2951,"source":"contracts/TownHall.algo.ts:699","pc":[3623]},{"teal":2952,"source":"contracts/Constants.ts:26","pc":[3624,3625]},{"teal":2953,"source":"contracts/TownHall.algo.ts:699","pc":[3626]},{"teal":2954,"source":"contracts/TownHall.algo.ts:697","pc":[3627,3628,3629]},{"teal":2959,"source":"contracts/TownHall.algo.ts:702","pc":[3630]},{"teal":2960,"source":"contracts/Constants.ts:25","pc":[3631,3632]},{"teal":2961,"source":"contracts/TownHall.algo.ts:702","pc":[3633]},{"teal":2964,"source":"contracts/TownHall.algo.ts:659","pc":[3634]},{"teal":2969,"source":"contracts/TownHall.algo.ts:706","pc":[3635,3636,3637]},{"teal":2970,"source":"contracts/TownHall.algo.ts:706","pc":[3638]},{"teal":2971,"source":"contracts/TownHall.algo.ts:706","pc":[3639]},{"teal":2972,"source":"contracts/TownHall.algo.ts:706","pc":[3640,3641]},{"teal":2973,"source":"contracts/TownHall.algo.ts:706","pc":[3642]},{"teal":2976,"source":"contracts/TownHall.algo.ts:706","errorMessage":"argument 0 (blinder) for dawnStageDoctorReveal must be a byte[32]","pc":[3643]},{"teal":2979,"source":"contracts/TownHall.algo.ts:706","pc":[3644,3645,3646]},{"teal":2980,"source":"contracts/TownHall.algo.ts:706","pc":[3647]},{"teal":2981,"source":"contracts/TownHall.algo.ts:706","pc":[3648]},{"teal":2982,"source":"contracts/TownHall.algo.ts:706","pc":[3649,3650]},{"teal":2983,"source":"contracts/TownHall.algo.ts:706","pc":[3651]},{"teal":2986,"source":"contracts/TownHall.algo.ts:706","errorMessage":"argument 1 (patientAim) for dawnStageDoctorReveal must be a address","pc":[3652]},{"teal":2989,"source":"contracts/TownHall.algo.ts:706","pc":[3653,3654,3655]},{"teal":2990,"source":"contracts/TownHall.algo.ts:706","pc":[3656]},{"teal":2991,"source":"contracts/TownHall.algo.ts:706","pc":[3657]},{"teal":2995,"source":"contracts/TownHall.algo.ts:706","pc":[3658,3659,3660]},{"teal":2998,"source":"contracts/TownHall.algo.ts:706","pc":[3661,3662]},{"teal":3005,"source":"contracts/TownHall.algo.ts:708","pc":[3663]},{"teal":3006,"source":"contracts/TownHall.algo.ts:708","pc":[3664]},{"teal":3007,"source":"contracts/Constants.ts:25","pc":[3665,3666]},{"teal":3008,"source":"contracts/TownHall.algo.ts:708","pc":[3667]},{"teal":3011,"source":"contracts/TownHall.algo.ts:707","errorMessage":"Invalid method call: Game is not in Dawn Stage Doctor Reveal state.","pc":[3668]},{"teal":3015,"source":"contracts/TownHall.algo.ts:712","pc":[3669,3670]},{"teal":3016,"source":"contracts/TownHall.algo.ts:712","pc":[3671,3672]},{"teal":3017,"source":"contracts/TownHall.algo.ts:712","pc":[3673]},{"teal":3018,"source":"contracts/TownHall.algo.ts:712","pc":[3674]},{"teal":3021,"source":"contracts/TownHall.algo.ts:712","errorMessage":"Error state: Non-doctor player called method.","pc":[3675]},{"teal":3025,"source":"contracts/TownHall.algo.ts:714","pc":[3676,3677]},{"teal":3026,"source":"contracts/TownHall.algo.ts:714","pc":[3678]},{"teal":3027,"source":"contracts/TownHall.algo.ts:714","pc":[3679,3680]},{"teal":3028,"source":"contracts/TownHall.algo.ts:714","pc":[3681]},{"teal":3031,"source":"contracts/TownHall.algo.ts:714","errorMessage":"Error state: Doctor has already committed to a patient.","pc":[3682]},{"teal":3035,"source":"contracts/TownHall.algo.ts:716","pc":[3683,3684]},{"teal":3036,"source":"contracts/TownHall.algo.ts:716","pc":[3685,3686]},{"teal":3037,"source":"contracts/TownHall.algo.ts:716","pc":[3687]},{"teal":3040,"source":"contracts/TownHall.algo.ts:716","errorMessage":"Error state: Patient must be a valid address.","pc":[3688]},{"teal":3044,"source":"contracts/TownHall.algo.ts:720","pc":[3689,3690]},{"teal":3045,"source":"contracts/TownHall.algo.ts:720","pc":[3691,3692]},{"teal":3046,"source":"contracts/TownHall.algo.ts:720","pc":[3693]},{"teal":3047,"source":"contracts/TownHall.algo.ts:720","pc":[3694]},{"teal":3048,"source":"contracts/TownHall.algo.ts:720","pc":[3695,3696]},{"teal":3055,"source":"contracts/TownHall.algo.ts:723","pc":[3697,3698]},{"teal":3056,"source":"contracts/TownHall.algo.ts:723","pc":[3699,3700]},{"teal":3057,"source":"contracts/TownHall.algo.ts:723","pc":[3701]},{"teal":3058,"source":"contracts/TownHall.algo.ts:723","pc":[3702]},{"teal":3061,"source":"contracts/TownHall.algo.ts:722","errorMessage":"Error state: Provided address + blinder does NOT match commitment.","pc":[3703]},{"teal":3066,"source":"contracts/TownHall.algo.ts:727","pc":[3704,3705]},{"teal":3067,"source":"contracts/TownHall.algo.ts:727","pc":[3706]},{"teal":3068,"source":"contracts/TownHall.algo.ts:727","pc":[3707]},{"teal":3069,"source":"contracts/TownHall.algo.ts:727","pc":[3708,3709,3710]},{"teal":3070,"source":"contracts/TownHall.algo.ts:727","pc":[3711]},{"teal":3071,"source":"contracts/TownHall.algo.ts:727","pc":[3712,3713,3714]},{"teal":3076,"source":"contracts/TownHall.algo.ts:728","pc":[3715,3716]},{"teal":3077,"source":"contracts/TownHall.algo.ts:728","pc":[3717]},{"teal":3078,"source":"contracts/TownHall.algo.ts:728","pc":[3718]},{"teal":3079,"source":"contracts/TownHall.algo.ts:728","pc":[3719,3720,3721]},{"teal":3080,"source":"contracts/TownHall.algo.ts:728","pc":[3722]},{"teal":3081,"source":"contracts/TownHall.algo.ts:727","pc":[3723,3724,3725]},{"teal":3086,"source":"contracts/TownHall.algo.ts:729","pc":[3726,3727]},{"teal":3087,"source":"contracts/TownHall.algo.ts:729","pc":[3728]},{"teal":3088,"source":"contracts/TownHall.algo.ts:729","pc":[3729]},{"teal":3089,"source":"contracts/TownHall.algo.ts:729","pc":[3730,3731,3732]},{"teal":3090,"source":"contracts/TownHall.algo.ts:729","pc":[3733]},{"teal":3091,"source":"contracts/TownHall.algo.ts:729","pc":[3734,3735,3736]},{"teal":3096,"source":"contracts/TownHall.algo.ts:730","pc":[3737,3738]},{"teal":3097,"source":"contracts/TownHall.algo.ts:730","pc":[3739]},{"teal":3098,"source":"contracts/TownHall.algo.ts:730","pc":[3740]},{"teal":3099,"source":"contracts/TownHall.algo.ts:730","pc":[3741,3742,3743]},{"teal":3100,"source":"contracts/TownHall.algo.ts:730","pc":[3744]},{"teal":3101,"source":"contracts/TownHall.algo.ts:729","pc":[3745,3746,3747]},{"teal":3106,"source":"contracts/TownHall.algo.ts:731","pc":[3748,3749]},{"teal":3107,"source":"contracts/TownHall.algo.ts:731","pc":[3750,3751]},{"teal":3108,"source":"contracts/TownHall.algo.ts:731","pc":[3752]},{"teal":3109,"source":"contracts/TownHall.algo.ts:731","pc":[3753,3754,3755]},{"teal":3110,"source":"contracts/TownHall.algo.ts:731","pc":[3756]},{"teal":3111,"source":"contracts/TownHall.algo.ts:731","pc":[3757,3758,3759]},{"teal":3116,"source":"contracts/TownHall.algo.ts:732","pc":[3760,3761]},{"teal":3117,"source":"contracts/TownHall.algo.ts:732","pc":[3762,3763]},{"teal":3118,"source":"contracts/TownHall.algo.ts:732","pc":[3764]},{"teal":3119,"source":"contracts/TownHall.algo.ts:732","pc":[3765,3766,3767]},{"teal":3120,"source":"contracts/TownHall.algo.ts:732","pc":[3768]},{"teal":3121,"source":"contracts/TownHall.algo.ts:731","pc":[3769,3770,3771]},{"teal":3126,"source":"contracts/TownHall.algo.ts:733","pc":[3772,3773]},{"teal":3127,"source":"contracts/TownHall.algo.ts:733","pc":[3774,3775]},{"teal":3128,"source":"contracts/TownHall.algo.ts:733","pc":[3776]},{"teal":3129,"source":"contracts/TownHall.algo.ts:733","pc":[3777,3778,3779]},{"teal":3130,"source":"contracts/TownHall.algo.ts:733","pc":[3780]},{"teal":3131,"source":"contracts/TownHall.algo.ts:733","pc":[3781,3782,3783]},{"teal":3136,"source":"contracts/TownHall.algo.ts:734","pc":[3784,3785]},{"teal":3137,"source":"contracts/TownHall.algo.ts:734","pc":[3786,3787]},{"teal":3138,"source":"contracts/TownHall.algo.ts:734","pc":[3788]},{"teal":3139,"source":"contracts/TownHall.algo.ts:734","pc":[3789,3790,3791]},{"teal":3140,"source":"contracts/TownHall.algo.ts:734","pc":[3792]},{"teal":3141,"source":"contracts/TownHall.algo.ts:733","pc":[3793,3794,3795]},{"teal":3146,"source":"contracts/TownHall.algo.ts:735","pc":[3796,3797]},{"teal":3147,"source":"contracts/TownHall.algo.ts:735","pc":[3798,3799]},{"teal":3148,"source":"contracts/TownHall.algo.ts:735","pc":[3800]},{"teal":3149,"source":"contracts/TownHall.algo.ts:735","pc":[3801,3802,3803]},{"teal":3150,"source":"contracts/TownHall.algo.ts:735","pc":[3804]},{"teal":3151,"source":"contracts/TownHall.algo.ts:735","pc":[3805,3806,3807]},{"teal":3156,"source":"contracts/TownHall.algo.ts:736","pc":[3808,3809]},{"teal":3157,"source":"contracts/TownHall.algo.ts:736","pc":[3810,3811]},{"teal":3158,"source":"contracts/TownHall.algo.ts:736","pc":[3812]},{"teal":3159,"source":"contracts/TownHall.algo.ts:736","pc":[3813,3814,3815]},{"teal":3160,"source":"contracts/TownHall.algo.ts:736","pc":[3816]},{"teal":3161,"source":"contracts/TownHall.algo.ts:735","pc":[3817,3818,3819]},{"teal":3166,"source":"contracts/TownHall.algo.ts:737","pc":[3820,3821]},{"teal":3167,"source":"contracts/TownHall.algo.ts:737","pc":[3822,3823]},{"teal":3168,"source":"contracts/TownHall.algo.ts:737","pc":[3824]},{"teal":3169,"source":"contracts/TownHall.algo.ts:737","pc":[3825,3826,3827]},{"teal":3170,"source":"contracts/TownHall.algo.ts:737","pc":[3828]},{"teal":3171,"source":"contracts/TownHall.algo.ts:737","pc":[3829,3830,3831]},{"teal":3176,"source":"contracts/TownHall.algo.ts:738","pc":[3832,3833]},{"teal":3177,"source":"contracts/TownHall.algo.ts:738","pc":[3834,3835]},{"teal":3178,"source":"contracts/TownHall.algo.ts:738","pc":[3836]},{"teal":3179,"source":"contracts/TownHall.algo.ts:738","pc":[3837,3838,3839]},{"teal":3180,"source":"contracts/TownHall.algo.ts:738","pc":[3840]},{"teal":3181,"source":"contracts/TownHall.algo.ts:737","pc":[3841,3842,3843]},{"teal":3186,"source":"contracts/TownHall.algo.ts:740","pc":[3844,3845]},{"teal":3187,"source":"contracts/TownHall.algo.ts:740","pc":[3846,3847]},{"teal":3188,"source":"contracts/TownHall.algo.ts:740","pc":[3848]},{"teal":3193,"source":"contracts/TownHall.algo.ts:746","pc":[3849]},{"teal":3194,"source":"contracts/Constants.ts:26","pc":[3850,3851]},{"teal":3195,"source":"contracts/TownHall.algo.ts:746","pc":[3852]},{"teal":3196,"source":"contracts/TownHall.algo.ts:706","pc":[3853]},{"teal":3201,"source":"contracts/TownHall.algo.ts:749","pc":[3854,3855,3856]},{"teal":3202,"source":"contracts/TownHall.algo.ts:749","pc":[3857]},{"teal":3203,"source":"contracts/TownHall.algo.ts:749","pc":[3858]},{"teal":3207,"source":"contracts/TownHall.algo.ts:749","pc":[3859,3860,3861]},{"teal":3214,"source":"contracts/TownHall.algo.ts:751","pc":[3862]},{"teal":3215,"source":"contracts/TownHall.algo.ts:751","pc":[3863]},{"teal":3216,"source":"contracts/Constants.ts:26","pc":[3864,3865]},{"teal":3217,"source":"contracts/TownHall.algo.ts:751","pc":[3866]},{"teal":3220,"source":"contracts/TownHall.algo.ts:750","errorMessage":"Invalid method call: Game is not in Dawn Stage DeadOrSaved? state.","pc":[3867]},{"teal":3225,"source":"contracts/TownHall.algo.ts:755","pc":[3868,3869]},{"teal":3226,"source":"contracts/TownHall.algo.ts:755","pc":[3870]},{"teal":3227,"source":"contracts/TownHall.algo.ts:755","pc":[3871,3872]},{"teal":3228,"source":"contracts/TownHall.algo.ts:755","pc":[3873]},{"teal":3229,"source":"contracts/TownHall.algo.ts:755","pc":[3874]},{"teal":3230,"source":"contracts/TownHall.algo.ts:755","pc":[3875,3876,3877]},{"teal":3231,"source":"contracts/TownHall.algo.ts:755","pc":[3878,3879]},{"teal":3232,"source":"contracts/TownHall.algo.ts:755","pc":[3880]},{"teal":3233,"source":"contracts/TownHall.algo.ts:755","pc":[3881,3882]},{"teal":3234,"source":"contracts/TownHall.algo.ts:755","pc":[3883]},{"teal":3235,"source":"contracts/TownHall.algo.ts:755","pc":[3884]},{"teal":3236,"source":"contracts/TownHall.algo.ts:755","pc":[3885]},{"teal":3239,"source":"contracts/TownHall.algo.ts:755","pc":[3886,3887,3888]},{"teal":3244,"source":"contracts/TownHall.algo.ts:760","pc":[3889,3890]},{"teal":3245,"source":"contracts/TownHall.algo.ts:760","pc":[3891,3892]},{"teal":3246,"source":"contracts/TownHall.algo.ts:760","pc":[3893]},{"teal":3250,"source":"contracts/TownHall.algo.ts:761","pc":[3894,3895]},{"teal":3251,"source":"contracts/TownHall.algo.ts:761","pc":[3896,3897]},{"teal":3252,"source":"contracts/TownHall.algo.ts:761","pc":[3898]},{"teal":3256,"source":"contracts/TownHall.algo.ts:762","pc":[3899]},{"teal":3257,"source":"contracts/Constants.ts:19","pc":[3900,3901]},{"teal":3258,"source":"contracts/TownHall.algo.ts:762","pc":[3902]},{"teal":3262,"source":"contracts/TownHall.algo.ts:763","pc":[3903]},{"teal":3268,"source":"contracts/TownHall.algo.ts:768","pc":[3904,3905]},{"teal":3269,"source":"contracts/TownHall.algo.ts:768","pc":[3906]},{"teal":3270,"source":"contracts/TownHall.algo.ts:768","pc":[3907]},{"teal":3271,"source":"contracts/TownHall.algo.ts:768","pc":[3908]},{"teal":3272,"source":"contracts/TownHall.algo.ts:768","pc":[3909,3910,3911]},{"teal":3273,"source":"contracts/TownHall.algo.ts:768","pc":[3912]},{"teal":3274,"source":"contracts/TownHall.algo.ts:768","pc":[3913,3914,3915]},{"teal":3279,"source":"contracts/TownHall.algo.ts:769","pc":[3916]},{"teal":3280,"source":"contracts/TownHall.algo.ts:769","pc":[3917]},{"teal":3281,"source":"contracts/TownHall.algo.ts:769","pc":[3918]},{"teal":3282,"source":"contracts/TownHall.algo.ts:769","pc":[3919,3920,3921]},{"teal":3283,"source":"contracts/TownHall.algo.ts:769","pc":[3922]},{"teal":3287,"source":"contracts/TownHall.algo.ts:770","pc":[3923]},{"teal":3288,"source":"contracts/TownHall.algo.ts:770","pc":[3924]},{"teal":3289,"source":"contracts/TownHall.algo.ts:770","pc":[3925,3926]},{"teal":3290,"source":"contracts/TownHall.algo.ts:770","pc":[3927,3928]},{"teal":3291,"source":"contracts/TownHall.algo.ts:770","pc":[3929]},{"teal":3292,"source":"contracts/TownHall.algo.ts:770","pc":[3930]},{"teal":3293,"source":"contracts/TownHall.algo.ts:770","pc":[3931]},{"teal":3294,"source":"contracts/TownHall.algo.ts:768","pc":[3932,3933,3934]},{"teal":3299,"source":"contracts/TownHall.algo.ts:771","pc":[3935,3936]},{"teal":3300,"source":"contracts/TownHall.algo.ts:771","pc":[3937]},{"teal":3301,"source":"contracts/TownHall.algo.ts:771","pc":[3938]},{"teal":3302,"source":"contracts/TownHall.algo.ts:771","pc":[3939]},{"teal":3303,"source":"contracts/TownHall.algo.ts:771","pc":[3940,3941,3942]},{"teal":3304,"source":"contracts/TownHall.algo.ts:771","pc":[3943]},{"teal":3305,"source":"contracts/TownHall.algo.ts:771","pc":[3944,3945,3946]},{"teal":3310,"source":"contracts/TownHall.algo.ts:772","pc":[3947]},{"teal":3311,"source":"contracts/TownHall.algo.ts:772","pc":[3948]},{"teal":3312,"source":"contracts/TownHall.algo.ts:772","pc":[3949]},{"teal":3313,"source":"contracts/TownHall.algo.ts:772","pc":[3950,3951,3952]},{"teal":3314,"source":"contracts/TownHall.algo.ts:772","pc":[3953]},{"teal":3318,"source":"contracts/TownHall.algo.ts:773","pc":[3954]},{"teal":3319,"source":"contracts/TownHall.algo.ts:773","pc":[3955]},{"teal":3320,"source":"contracts/TownHall.algo.ts:773","pc":[3956,3957]},{"teal":3321,"source":"contracts/TownHall.algo.ts:773","pc":[3958,3959]},{"teal":3322,"source":"contracts/TownHall.algo.ts:773","pc":[3960]},{"teal":3323,"source":"contracts/TownHall.algo.ts:773","pc":[3961]},{"teal":3324,"source":"contracts/TownHall.algo.ts:773","pc":[3962]},{"teal":3325,"source":"contracts/TownHall.algo.ts:771","pc":[3963,3964,3965]},{"teal":3330,"source":"contracts/TownHall.algo.ts:774","pc":[3966,3967]},{"teal":3331,"source":"contracts/TownHall.algo.ts:774","pc":[3968]},{"teal":3332,"source":"contracts/TownHall.algo.ts:774","pc":[3969,3970]},{"teal":3333,"source":"contracts/TownHall.algo.ts:774","pc":[3971]},{"teal":3334,"source":"contracts/TownHall.algo.ts:774","pc":[3972,3973,3974]},{"teal":3335,"source":"contracts/TownHall.algo.ts:774","pc":[3975]},{"teal":3336,"source":"contracts/TownHall.algo.ts:774","pc":[3976,3977,3978]},{"teal":3341,"source":"contracts/TownHall.algo.ts:775","pc":[3979]},{"teal":3342,"source":"contracts/TownHall.algo.ts:775","pc":[3980,3981]},{"teal":3343,"source":"contracts/TownHall.algo.ts:775","pc":[3982]},{"teal":3344,"source":"contracts/TownHall.algo.ts:775","pc":[3983,3984,3985]},{"teal":3345,"source":"contracts/TownHall.algo.ts:775","pc":[3986]},{"teal":3349,"source":"contracts/TownHall.algo.ts:776","pc":[3987,3988]},{"teal":3350,"source":"contracts/TownHall.algo.ts:776","pc":[3989]},{"teal":3351,"source":"contracts/TownHall.algo.ts:776","pc":[3990,3991]},{"teal":3352,"source":"contracts/TownHall.algo.ts:776","pc":[3992,3993]},{"teal":3353,"source":"contracts/TownHall.algo.ts:776","pc":[3994,3995]},{"teal":3354,"source":"contracts/TownHall.algo.ts:776","pc":[3996]},{"teal":3355,"source":"contracts/TownHall.algo.ts:776","pc":[3997]},{"teal":3356,"source":"contracts/TownHall.algo.ts:774","pc":[3998,3999,4000]},{"teal":3361,"source":"contracts/TownHall.algo.ts:777","pc":[4001,4002]},{"teal":3362,"source":"contracts/TownHall.algo.ts:777","pc":[4003]},{"teal":3363,"source":"contracts/TownHall.algo.ts:777","pc":[4004,4005]},{"teal":3364,"source":"contracts/TownHall.algo.ts:777","pc":[4006]},{"teal":3365,"source":"contracts/TownHall.algo.ts:777","pc":[4007,4008,4009]},{"teal":3366,"source":"contracts/TownHall.algo.ts:777","pc":[4010]},{"teal":3367,"source":"contracts/TownHall.algo.ts:777","pc":[4011,4012,4013]},{"teal":3372,"source":"contracts/TownHall.algo.ts:778","pc":[4014]},{"teal":3373,"source":"contracts/TownHall.algo.ts:778","pc":[4015,4016]},{"teal":3374,"source":"contracts/TownHall.algo.ts:778","pc":[4017]},{"teal":3375,"source":"contracts/TownHall.algo.ts:778","pc":[4018,4019,4020]},{"teal":3376,"source":"contracts/TownHall.algo.ts:778","pc":[4021]},{"teal":3380,"source":"contracts/TownHall.algo.ts:779","pc":[4022,4023]},{"teal":3381,"source":"contracts/TownHall.algo.ts:779","pc":[4024]},{"teal":3382,"source":"contracts/TownHall.algo.ts:779","pc":[4025,4026]},{"teal":3383,"source":"contracts/TownHall.algo.ts:779","pc":[4027,4028]},{"teal":3384,"source":"contracts/TownHall.algo.ts:779","pc":[4029,4030]},{"teal":3385,"source":"contracts/TownHall.algo.ts:779","pc":[4031]},{"teal":3386,"source":"contracts/TownHall.algo.ts:779","pc":[4032]},{"teal":3387,"source":"contracts/TownHall.algo.ts:777","pc":[4033,4034,4035]},{"teal":3392,"source":"contracts/TownHall.algo.ts:780","pc":[4036,4037]},{"teal":3393,"source":"contracts/TownHall.algo.ts:780","pc":[4038]},{"teal":3394,"source":"contracts/TownHall.algo.ts:780","pc":[4039,4040]},{"teal":3395,"source":"contracts/TownHall.algo.ts:780","pc":[4041]},{"teal":3396,"source":"contracts/TownHall.algo.ts:780","pc":[4042,4043,4044]},{"teal":3397,"source":"contracts/TownHall.algo.ts:780","pc":[4045]},{"teal":3398,"source":"contracts/TownHall.algo.ts:780","pc":[4046,4047,4048]},{"teal":3403,"source":"contracts/TownHall.algo.ts:781","pc":[4049]},{"teal":3404,"source":"contracts/TownHall.algo.ts:781","pc":[4050,4051]},{"teal":3405,"source":"contracts/TownHall.algo.ts:781","pc":[4052]},{"teal":3406,"source":"contracts/TownHall.algo.ts:781","pc":[4053,4054,4055]},{"teal":3407,"source":"contracts/TownHall.algo.ts:781","pc":[4056]},{"teal":3411,"source":"contracts/TownHall.algo.ts:782","pc":[4057,4058]},{"teal":3412,"source":"contracts/TownHall.algo.ts:782","pc":[4059]},{"teal":3413,"source":"contracts/TownHall.algo.ts:782","pc":[4060,4061]},{"teal":3414,"source":"contracts/TownHall.algo.ts:782","pc":[4062,4063]},{"teal":3415,"source":"contracts/TownHall.algo.ts:782","pc":[4064,4065]},{"teal":3416,"source":"contracts/TownHall.algo.ts:782","pc":[4066]},{"teal":3417,"source":"contracts/TownHall.algo.ts:782","pc":[4067]},{"teal":3418,"source":"contracts/TownHall.algo.ts:780","pc":[4068,4069,4070]},{"teal":3423,"source":"contracts/TownHall.algo.ts:783","pc":[4071,4072]},{"teal":3424,"source":"contracts/TownHall.algo.ts:783","pc":[4073]},{"teal":3425,"source":"contracts/TownHall.algo.ts:783","pc":[4074,4075]},{"teal":3426,"source":"contracts/TownHall.algo.ts:783","pc":[4076]},{"teal":3427,"source":"contracts/TownHall.algo.ts:783","pc":[4077,4078,4079]},{"teal":3428,"source":"contracts/TownHall.algo.ts:783","pc":[4080]},{"teal":3429,"source":"contracts/TownHall.algo.ts:783","pc":[4081,4082,4083]},{"teal":3434,"source":"contracts/TownHall.algo.ts:784","pc":[4084]},{"teal":3435,"source":"contracts/TownHall.algo.ts:784","pc":[4085,4086]},{"teal":3436,"source":"contracts/TownHall.algo.ts:784","pc":[4087]},{"teal":3437,"source":"contracts/TownHall.algo.ts:784","pc":[4088,4089,4090]},{"teal":3438,"source":"contracts/TownHall.algo.ts:784","pc":[4091]},{"teal":3442,"source":"contracts/TownHall.algo.ts:785","pc":[4092,4093]},{"teal":3443,"source":"contracts/TownHall.algo.ts:785","pc":[4094]},{"teal":3444,"source":"contracts/TownHall.algo.ts:785","pc":[4095,4096]},{"teal":3445,"source":"contracts/TownHall.algo.ts:785","pc":[4097,4098]},{"teal":3446,"source":"contracts/TownHall.algo.ts:785","pc":[4099,4100]},{"teal":3447,"source":"contracts/TownHall.algo.ts:785","pc":[4101]},{"teal":3448,"source":"contracts/TownHall.algo.ts:785","pc":[4102]},{"teal":3449,"source":"contracts/TownHall.algo.ts:783","pc":[4103,4104,4105]},{"teal":3453,"source":"contracts/TownHall.algo.ts:787","errorMessage":"Error state: Victim must be a player! Should not have entered this state.","pc":[4106]},{"teal":3458,"source":"contracts/TownHall.algo.ts:790","pc":[4107,4108]},{"teal":3459,"source":"contracts/TownHall.algo.ts:790","pc":[4109]},{"teal":3460,"source":"contracts/TownHall.algo.ts:790","pc":[4110]},{"teal":3461,"source":"contracts/TownHall.algo.ts:790","pc":[4111]},{"teal":3462,"source":"contracts/TownHall.algo.ts:790","pc":[4112,4113]},{"teal":3463,"source":"contracts/TownHall.algo.ts:790","pc":[4114]},{"teal":3464,"source":"contracts/TownHall.algo.ts:790","pc":[4115]},{"teal":3468,"source":"contracts/TownHall.algo.ts:792","pc":[4116,4117]},{"teal":3469,"source":"contracts/TownHall.algo.ts:792","pc":[4118,4119]},{"teal":3470,"source":"contracts/TownHall.algo.ts:792","pc":[4120]},{"teal":3474,"source":"contracts/TownHall.algo.ts:793","pc":[4121,4122]},{"teal":3475,"source":"contracts/TownHall.algo.ts:793","pc":[4123,4124]},{"teal":3476,"source":"contracts/TownHall.algo.ts:793","pc":[4125]},{"teal":3481,"source":"contracts/TownHall.algo.ts:795","pc":[4126,4127]},{"teal":3482,"source":"contracts/TownHall.algo.ts:795","pc":[4128]},{"teal":3483,"source":"contracts/TownHall.algo.ts:795","pc":[4129]},{"teal":3484,"source":"contracts/TownHall.algo.ts:795","pc":[4130]},{"teal":3485,"source":"contracts/TownHall.algo.ts:795","pc":[4131,4132,4133]},{"teal":3490,"source":"contracts/TownHall.algo.ts:798","pc":[4134]},{"teal":3491,"source":"contracts/Constants.ts:28","pc":[4135,4136]},{"teal":3492,"source":"contracts/TownHall.algo.ts:798","pc":[4137]},{"teal":3496,"source":"contracts/TownHall.algo.ts:799","pc":[4138]},{"teal":3501,"source":"contracts/TownHall.algo.ts:802","pc":[4139]},{"teal":3502,"source":"contracts/Constants.ts:27","pc":[4140,4141]},{"teal":3503,"source":"contracts/TownHall.algo.ts:802","pc":[4142]},{"teal":3504,"source":"contracts/TownHall.algo.ts:749","pc":[4143]},{"teal":3509,"source":"contracts/TownHall.algo.ts:805","pc":[4144,4145,4146]},{"teal":3510,"source":"contracts/TownHall.algo.ts:805","pc":[4147,4148,4149]},{"teal":3513,"source":"contracts/TownHall.algo.ts:805","pc":[4150,4151,4152]},{"teal":3514,"source":"contracts/TownHall.algo.ts:805","pc":[4153]},{"teal":3515,"source":"contracts/TownHall.algo.ts:805","pc":[4154]},{"teal":3519,"source":"contracts/TownHall.algo.ts:805","pc":[4155,4156,4157]},{"teal":3522,"source":"contracts/TownHall.algo.ts:805","pc":[4158,4159]},{"teal":3523,"source":"contracts/TownHall.algo.ts:805","pc":[4160,4161]},{"teal":3530,"source":"contracts/TownHall.algo.ts:812","pc":[4162]},{"teal":3531,"source":"contracts/TownHall.algo.ts:812","pc":[4163]},{"teal":3532,"source":"contracts/Constants.ts:27","pc":[4164,4165]},{"teal":3533,"source":"contracts/TownHall.algo.ts:812","pc":[4166]},{"teal":3536,"source":"contracts/TownHall.algo.ts:811","errorMessage":"Invalid method call: Game is not in Dawn Stage Unmasking state.","pc":[4167]},{"teal":3540,"source":"contracts/TownHall.algo.ts:816","pc":[4168]},{"teal":3541,"source":"contracts/TownHall.algo.ts:816","pc":[4169]},{"teal":3542,"source":"contracts/TownHall.algo.ts:816","pc":[4170,4171]},{"teal":3543,"source":"contracts/TownHall.algo.ts:816","pc":[4172]},{"teal":3546,"source":"contracts/TownHall.algo.ts:816","errorMessage":"Error state: Other player called method.","pc":[4173]},{"teal":3550,"source":"contracts/TownHall.algo.ts:819","pc":[4174,4175]},{"teal":3551,"source":"contracts/TownHall.algo.ts:819","pc":[4176,4177]},{"teal":3552,"source":"contracts/TownHall.algo.ts:819","pc":[4178,4179]},{"teal":3553,"source":"contracts/TownHall.algo.ts:819","pc":[4180,4181]},{"teal":3557,"source":"contracts/TownHall.algo.ts:820","pc":[4182,4183]},{"teal":3558,"source":"contracts/TownHall.algo.ts:820","pc":[4184,4185,4186]},{"teal":3559,"source":"contracts/TownHall.algo.ts:820","pc":[4187,4188]},{"teal":3563,"source":"contracts/TownHall.algo.ts:821","pc":[4189,4190]},{"teal":3564,"source":"contracts/TownHall.algo.ts:821","pc":[4191,4192]},{"teal":3565,"source":"contracts/TownHall.algo.ts:821","pc":[4193,4194]},{"teal":3566,"source":"contracts/TownHall.algo.ts:821","pc":[4195,4196]},{"teal":3571,"source":"contracts/TownHall.algo.ts:823","pc":[4197,4198]},{"teal":3572,"source":"contracts/TownHall.algo.ts:823","pc":[4199,4200]},{"teal":3573,"source":"contracts/TownHall.algo.ts:823","pc":[4201]},{"teal":3574,"source":"contracts/TownHall.algo.ts:823","pc":[4202]},{"teal":3575,"source":"contracts/TownHall.algo.ts:823","pc":[4203,4204,4205]},{"teal":3580,"source":"contracts/TownHall.algo.ts:827","pc":[4206]},{"teal":3581,"source":"contracts/Constants.ts:28","pc":[4207,4208]},{"teal":3582,"source":"contracts/TownHall.algo.ts:827","pc":[4209]},{"teal":3586,"source":"contracts/TownHall.algo.ts:828","pc":[4210,4211]},{"teal":3587,"source":"contracts/TownHall.algo.ts:828","pc":[4212,4213]},{"teal":3588,"source":"contracts/TownHall.algo.ts:828","pc":[4214]},{"teal":3592,"source":"contracts/TownHall.algo.ts:829","pc":[4215]},{"teal":3598,"source":"contracts/TownHall.algo.ts:832","pc":[4216,4217]},{"teal":3599,"source":"contracts/TownHall.algo.ts:832","pc":[4218,4219]},{"teal":3600,"source":"contracts/TownHall.algo.ts:832","pc":[4220]},{"teal":3601,"source":"contracts/TownHall.algo.ts:832","pc":[4221]},{"teal":3602,"source":"contracts/TownHall.algo.ts:832","pc":[4222,4223,4224]},{"teal":3607,"source":"contracts/TownHall.algo.ts:834","pc":[4225,4226]},{"teal":3608,"source":"contracts/TownHall.algo.ts:834","pc":[4227,4228]},{"teal":3609,"source":"contracts/TownHall.algo.ts:834","pc":[4229]},{"teal":3614,"source":"contracts/TownHall.algo.ts:838","pc":[4230]},{"teal":3615,"source":"contracts/TownHall.algo.ts:838","pc":[4231,4232]},{"teal":3616,"source":"contracts/TownHall.algo.ts:838","pc":[4233]},{"teal":3620,"source":"contracts/TownHall.algo.ts:840","pc":[4234]},{"teal":3621,"source":"contracts/Constants.ts:19","pc":[4235,4236]},{"teal":3622,"source":"contracts/TownHall.algo.ts:840","pc":[4237]},{"teal":3623,"source":"contracts/TownHall.algo.ts:805","pc":[4238]},{"teal":3628,"source":"contracts/TownHall.algo.ts:844","pc":[4239,4240,4241]},{"teal":3629,"source":"contracts/TownHall.algo.ts:844","pc":[4242]},{"teal":3630,"source":"contracts/TownHall.algo.ts:844","pc":[4243]},{"teal":3634,"source":"contracts/TownHall.algo.ts:844","pc":[4244,4245,4246]},{"teal":3637,"source":"contracts/TownHall.algo.ts:844","pc":[4247,4248]},{"teal":3641,"source":"contracts/TownHall.algo.ts:845","pc":[4249]},{"teal":3642,"source":"contracts/TownHall.algo.ts:845","pc":[4250]},{"teal":3643,"source":"contracts/Constants.ts:28","pc":[4251,4252]},{"teal":3644,"source":"contracts/TownHall.algo.ts:845","pc":[4253]},{"teal":3647,"source":"contracts/TownHall.algo.ts:845","errorMessage":"Invalid method call: Game is not in Game Over state.","pc":[4254]},{"teal":3651,"source":"contracts/TownHall.algo.ts:846","pc":[4255,4256]},{"teal":3652,"source":"contracts/TownHall.algo.ts:846","pc":[4257]},{"teal":3656,"source":"contracts/TownHall.algo.ts:847","pc":[4258,4259]},{"teal":3657,"source":"contracts/TownHall.algo.ts:847","pc":[4260]},{"teal":3658,"source":"contracts/TownHall.algo.ts:847","pc":[4261]},{"teal":3659,"source":"contracts/TownHall.algo.ts:847","pc":[4262]},{"teal":3663,"source":"contracts/TownHall.algo.ts:848","pc":[4263,4264]},{"teal":3664,"source":"contracts/TownHall.algo.ts:848","pc":[4265]},{"teal":3665,"source":"contracts/TownHall.algo.ts:848","pc":[4266]},{"teal":3666,"source":"contracts/TownHall.algo.ts:848","pc":[4267]},{"teal":3670,"source":"contracts/TownHall.algo.ts:849","pc":[4268,4269]},{"teal":3671,"source":"contracts/TownHall.algo.ts:849","pc":[4270]},{"teal":3672,"source":"contracts/TownHall.algo.ts:849","pc":[4271]},{"teal":3673,"source":"contracts/TownHall.algo.ts:849","pc":[4272]},{"teal":3677,"source":"contracts/TownHall.algo.ts:850","pc":[4273,4274]},{"teal":3678,"source":"contracts/TownHall.algo.ts:850","pc":[4275]},{"teal":3679,"source":"contracts/TownHall.algo.ts:850","pc":[4276]},{"teal":3680,"source":"contracts/TownHall.algo.ts:850","pc":[4277]},{"teal":3684,"source":"contracts/TownHall.algo.ts:851","pc":[4278,4279]},{"teal":3685,"source":"contracts/TownHall.algo.ts:851","pc":[4280]},{"teal":3686,"source":"contracts/TownHall.algo.ts:851","pc":[4281]},{"teal":3687,"source":"contracts/TownHall.algo.ts:851","pc":[4282]},{"teal":3691,"source":"contracts/TownHall.algo.ts:852","pc":[4283,4284]},{"teal":3692,"source":"contracts/TownHall.algo.ts:852","pc":[4285]},{"teal":3693,"source":"contracts/TownHall.algo.ts:852","pc":[4286]},{"teal":3694,"source":"contracts/TownHall.algo.ts:852","pc":[4287]},{"teal":3698,"source":"contracts/TownHall.algo.ts:854","pc":[4288,4289,4290,4291]},{"teal":3699,"source":"contracts/TownHall.algo.ts:854","pc":[4292,4293]},{"teal":3700,"source":"contracts/TownHall.algo.ts:854","pc":[4294]},{"teal":3701,"source":"contracts/TownHall.algo.ts:854","pc":[4295,4296]},{"teal":3709,"source":"contracts/TownHall.algo.ts:856","pc":[4297]},{"teal":3710,"source":"contracts/TownHall.algo.ts:856","pc":[4298]},{"teal":3711,"source":"contracts/TownHall.algo.ts:856","pc":[4299,4300]},{"teal":3715,"source":"contracts/TownHall.algo.ts:857","pc":[4301,4302]},{"teal":3716,"source":"contracts/TownHall.algo.ts:857","pc":[4303,4304]},{"teal":3720,"source":"contracts/TownHall.algo.ts:858","pc":[4305]},{"teal":3721,"source":"contracts/TownHall.algo.ts:858","pc":[4306]},{"teal":3722,"source":"contracts/TownHall.algo.ts:858","pc":[4307,4308,4309]},{"teal":3723,"source":"contracts/TownHall.algo.ts:858","pc":[4310,4311]},{"teal":3727,"source":"contracts/TownHall.algo.ts:859","pc":[4312,4313]},{"teal":3728,"source":"contracts/TownHall.algo.ts:859","pc":[4314,4315]},{"teal":3731,"source":"contracts/TownHall.algo.ts:856","pc":[4316]},{"teal":3739,"source":"contracts/TownHall.algo.ts:862","pc":[4317]},{"teal":3740,"source":"contracts/TownHall.algo.ts:862","pc":[4318]},{"teal":3741,"source":"contracts/TownHall.algo.ts:862","pc":[4319,4320]},{"teal":3745,"source":"contracts/TownHall.algo.ts:863","pc":[4321,4322]},{"teal":3746,"source":"contracts/TownHall.algo.ts:863","pc":[4323,4324]},{"teal":3750,"source":"contracts/TownHall.algo.ts:864","pc":[4325]},{"teal":3751,"source":"contracts/TownHall.algo.ts:864","pc":[4326]},{"teal":3752,"source":"contracts/TownHall.algo.ts:864","pc":[4327,4328,4329]},{"teal":3753,"source":"contracts/TownHall.algo.ts:864","pc":[4330,4331]},{"teal":3757,"source":"contracts/TownHall.algo.ts:865","pc":[4332,4333]},{"teal":3758,"source":"contracts/TownHall.algo.ts:865","pc":[4334,4335]},{"teal":3761,"source":"contracts/TownHall.algo.ts:862","pc":[4336]},{"teal":3769,"source":"contracts/TownHall.algo.ts:867","pc":[4337]},{"teal":3770,"source":"contracts/TownHall.algo.ts:867","pc":[4338]},{"teal":3771,"source":"contracts/TownHall.algo.ts:867","pc":[4339,4340]},{"teal":3775,"source":"contracts/TownHall.algo.ts:868","pc":[4341,4342]},{"teal":3776,"source":"contracts/TownHall.algo.ts:868","pc":[4343,4344]},{"teal":3780,"source":"contracts/TownHall.algo.ts:869","pc":[4345,4346]},{"teal":3781,"source":"contracts/TownHall.algo.ts:869","pc":[4347]},{"teal":3782,"source":"contracts/TownHall.algo.ts:869","pc":[4348,4349,4350]},{"teal":3783,"source":"contracts/TownHall.algo.ts:869","pc":[4351,4352]},{"teal":3787,"source":"contracts/TownHall.algo.ts:870","pc":[4353,4354]},{"teal":3788,"source":"contracts/TownHall.algo.ts:870","pc":[4355,4356]},{"teal":3791,"source":"contracts/TownHall.algo.ts:867","pc":[4357]},{"teal":3799,"source":"contracts/TownHall.algo.ts:873","pc":[4358]},{"teal":3800,"source":"contracts/TownHall.algo.ts:873","pc":[4359]},{"teal":3801,"source":"contracts/TownHall.algo.ts:873","pc":[4360,4361]},{"teal":3805,"source":"contracts/TownHall.algo.ts:874","pc":[4362,4363]},{"teal":3806,"source":"contracts/TownHall.algo.ts:874","pc":[4364,4365]},{"teal":3810,"source":"contracts/TownHall.algo.ts:875","pc":[4366,4367]},{"teal":3811,"source":"contracts/TownHall.algo.ts:875","pc":[4368]},{"teal":3812,"source":"contracts/TownHall.algo.ts:875","pc":[4369,4370,4371]},{"teal":3813,"source":"contracts/TownHall.algo.ts:875","pc":[4372,4373]},{"teal":3817,"source":"contracts/TownHall.algo.ts:876","pc":[4374,4375]},{"teal":3818,"source":"contracts/TownHall.algo.ts:876","pc":[4376,4377]},{"teal":3821,"source":"contracts/TownHall.algo.ts:873","pc":[4378]},{"teal":3829,"source":"contracts/TownHall.algo.ts:879","pc":[4379]},{"teal":3830,"source":"contracts/TownHall.algo.ts:879","pc":[4380]},{"teal":3831,"source":"contracts/TownHall.algo.ts:879","pc":[4381,4382]},{"teal":3835,"source":"contracts/TownHall.algo.ts:880","pc":[4383,4384]},{"teal":3836,"source":"contracts/TownHall.algo.ts:880","pc":[4385,4386]},{"teal":3840,"source":"contracts/TownHall.algo.ts:881","pc":[4387,4388]},{"teal":3841,"source":"contracts/TownHall.algo.ts:881","pc":[4389]},{"teal":3842,"source":"contracts/TownHall.algo.ts:881","pc":[4390,4391,4392]},{"teal":3843,"source":"contracts/TownHall.algo.ts:881","pc":[4393,4394]},{"teal":3847,"source":"contracts/TownHall.algo.ts:882","pc":[4395,4396]},{"teal":3848,"source":"contracts/TownHall.algo.ts:882","pc":[4397,4398]},{"teal":3851,"source":"contracts/TownHall.algo.ts:879","pc":[4399]},{"teal":3859,"source":"contracts/TownHall.algo.ts:885","pc":[4400]},{"teal":3860,"source":"contracts/TownHall.algo.ts:885","pc":[4401]},{"teal":3861,"source":"contracts/TownHall.algo.ts:885","pc":[4402,4403]},{"teal":3865,"source":"contracts/TownHall.algo.ts:886","pc":[4404,4405]},{"teal":3866,"source":"contracts/TownHall.algo.ts:886","pc":[4406,4407]},{"teal":3870,"source":"contracts/TownHall.algo.ts:887","pc":[4408,4409]},{"teal":3871,"source":"contracts/TownHall.algo.ts:887","pc":[4410]},{"teal":3872,"source":"contracts/TownHall.algo.ts:887","pc":[4411,4412,4413]},{"teal":3873,"source":"contracts/TownHall.algo.ts:887","pc":[4414,4415]},{"teal":3877,"source":"contracts/TownHall.algo.ts:888","pc":[4416,4417]},{"teal":3878,"source":"contracts/TownHall.algo.ts:888","pc":[4418,4419]},{"teal":3881,"source":"contracts/TownHall.algo.ts:885","pc":[4420]},{"teal":3882,"source":"contracts/TownHall.algo.ts:844","pc":[4421]},{"teal":3887,"source":"contracts/TownHall.algo.ts:892","pc":[4422,4423,4424]},{"teal":3888,"source":"contracts/TownHall.algo.ts:892","pc":[4425]},{"teal":3889,"source":"contracts/TownHall.algo.ts:892","pc":[4426]},{"teal":3893,"source":"contracts/TownHall.algo.ts:892","pc":[4427,4428,4429]},{"teal":3897,"source":"contracts/TownHall.algo.ts:893","pc":[4430]},{"teal":3898,"source":"contracts/TownHall.algo.ts:893","pc":[4431]},{"teal":3899,"source":"contracts/Constants.ts:28","pc":[4432,4433]},{"teal":3900,"source":"contracts/TownHall.algo.ts:893","pc":[4434]},{"teal":3903,"source":"contracts/TownHall.algo.ts:893","errorMessage":"Invalid method call: Game is not in Game Over state.","pc":[4435]},{"teal":3907,"source":"contracts/TownHall.algo.ts:894","pc":[4436]},{"teal":3908,"source":"contracts/TownHall.algo.ts:894","pc":[4437]},{"teal":3909,"source":"contracts/TownHall.algo.ts:894","pc":[4438,4439]},{"teal":3913,"source":"contracts/TownHall.algo.ts:894","pc":[4440,4441]},{"teal":3914,"source":"contracts/TownHall.algo.ts:894","pc":[4442]},{"teal":3915,"source":"contracts/TownHall.algo.ts:894","pc":[4443,4444]},{"teal":3918,"source":"contracts/TownHall.algo.ts:894","pc":[4445]},{"teal":3919,"source":"contracts/TownHall.algo.ts:894","pc":[4446,4447]},{"teal":3922,"source":"contracts/TownHall.algo.ts:894","pc":[4448]},{"teal":3923,"source":"contracts/TownHall.algo.ts:892","pc":[4449]},{"teal":3926,"source":"contracts/TownHall.algo.ts:33","pc":[4450,4451,4452,4453,4454,4455]},{"teal":3927,"source":"contracts/TownHall.algo.ts:33","pc":[4456,4457,4458]},{"teal":3928,"source":"contracts/TownHall.algo.ts:33","pc":[4459,4460,4461,4462]},{"teal":3931,"source":"contracts/TownHall.algo.ts:33","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[4463]},{"teal":3934,"source":"contracts/TownHall.algo.ts:33","pc":[4464,4465,4466,4467,4468,4469]},{"teal":3935,"source":"contracts/TownHall.algo.ts:33","pc":[4470,4471,4472,4473,4474,4475]},{"teal":3936,"source":"contracts/TownHall.algo.ts:33","pc":[4476,4477,4478,4479,4480,4481]},{"teal":3937,"source":"contracts/TownHall.algo.ts:33","pc":[4482,4483,4484,4485,4486,4487]},{"teal":3938,"source":"contracts/TownHall.algo.ts:33","pc":[4488,4489,4490,4491,4492,4493]},{"teal":3939,"source":"contracts/TownHall.algo.ts:33","pc":[4494,4495,4496,4497,4498,4499]},{"teal":3940,"source":"contracts/TownHall.algo.ts:33","pc":[4500,4501,4502,4503,4504,4505]},{"teal":3941,"source":"contracts/TownHall.algo.ts:33","pc":[4506,4507,4508,4509,4510,4511]},{"teal":3942,"source":"contracts/TownHall.algo.ts:33","pc":[4512,4513,4514,4515,4516,4517]},{"teal":3943,"source":"contracts/TownHall.algo.ts:33","pc":[4518,4519,4520,4521,4522,4523]},{"teal":3944,"source":"contracts/TownHall.algo.ts:33","pc":[4524,4525,4526,4527,4528,4529]},{"teal":3945,"source":"contracts/TownHall.algo.ts:33","pc":[4530,4531,4532,4533,4534,4535]},{"teal":3946,"source":"contracts/TownHall.algo.ts:33","pc":[4536,4537,4538,4539,4540,4541]},{"teal":3947,"source":"contracts/TownHall.algo.ts:33","pc":[4542,4543,4544,4545,4546,4547]},{"teal":3948,"source":"contracts/TownHall.algo.ts:33","pc":[4548,4549,4550,4551,4552,4553]},{"teal":3949,"source":"contracts/TownHall.algo.ts:33","pc":[4554,4555,4556,4557,4558,4559]},{"teal":3950,"source":"contracts/TownHall.algo.ts:33","pc":[4560,4561,4562,4563,4564,4565]},{"teal":3951,"source":"contracts/TownHall.algo.ts:33","pc":[4566,4567,4568]},{"teal":3952,"source":"contracts/TownHall.algo.ts:33","pc":[4569,4570,4571,4572,4573,4574,4575,4576,4577,4578,4579,4580,4581,4582,4583,4584,4585,4586,4587,4588,4589,4590,4591,4592,4593,4594,4595,4596,4597,4598,4599,4600,4601,4602,4603,4604]},{"teal":3955,"source":"contracts/TownHall.algo.ts:33","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[4605]},{"teal":3958,"source":"contracts/TownHall.algo.ts:33","pc":[4606,4607,4608,4609,4610,4611]},{"teal":3959,"source":"contracts/TownHall.algo.ts:33","pc":[4612,4613,4614]},{"teal":3960,"source":"contracts/TownHall.algo.ts:33","pc":[4615,4616,4617,4618]},{"teal":3963,"source":"contracts/TownHall.algo.ts:33","errorMessage":"this contract does not implement the given ABI method for call DeleteApplication","pc":[4619]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDAgMiA2IDMgMTIgMzIgNCA1IDcgOCAxMCA5NiAxNTAwMDAgOSAxMQpieXRlY2Jsb2NrIDB4Njc2MTZkNjU1Mzc0NjE3NDY1IDB4NmE3NTczNzQ0NTZjNjk2ZDY5NmU2MTc0NjU2NDUwNmM2MTc5NjU3MiAweDcwNmM2MTc5NjU3MjMxNDE2YzY3NmY0MTY0NjQ3MiAweDcwNmM2MTc5NjU3MjMyNDE2YzY3NmY0MTY0NjQ3MiAweDcwNmM2MTc5NjU3MjMzNDE2YzY3NmY0MTY0NjQ3MiAweDcwNmM2MTc5NjU3MjM0NDE2YzY3NmY0MTY0NjQ3MiAweDcwNmM2MTc5NjU3MjM1NDE2YzY3NmY0MTY0NjQ3MiAweDcwNmM2MTc5NjU3MjM2NDE2YzY3NmY0MTY0NjQ3MiAweCAweDZkNjE2NjY5NjE1NjY5NjM3NDY5NmQgMHgwMDAwMDAwMDAwMDAwMDAwIDB4NjQ2ZjYzNzQ2ZjcyNTA2MTc0Njk2NTZlNzQgMHgwMDAwMDAwMDAwMDAwMDAxIDB4NjQ2ZjYzNzQ2ZjcyIDB4NzA2YzYxNzk2NTcyNzM0MTZjNjk3NjY1IDB4NzA2YzYxNzk2NTcyMzE1MjY1NjM2NTY5NzY2NTY0NTY2Zjc0NjU3MyAweDcwNmM2MTc5NjU3MjMyNTI2NTYzNjU2OTc2NjU2NDU2NmY3NDY1NzMgMHg3MDZjNjE3OTY1NzIzMzUyNjU2MzY1Njk3NjY1NjQ1NjZmNzQ2NTczIDB4NzA2YzYxNzk2NTcyMzQ1MjY1NjM2NTY5NzY2NTY0NTY2Zjc0NjU3MyAweDcwNmM2MTc5NjU3MjM1NTI2NTYzNjU2OTc2NjU2NDU2NmY3NDY1NzMgMHg3MDZjNjE3OTY1NzIzNjUyNjU2MzY1Njk3NjY1NjQ1NjZmNzQ2NTczIDB4NmQ2MTY2Njk2MSAweDZjNzM2OTY3NDY3NTZlNjQ2NTcyNDE2NDY0NzI2NTczNzMgMHg3MDZjNjE3OTY1NzI3MzU2NmY3NDY1NjQgMHg3MDZjNjE3OTY1NzI3MzRhNmY2OTZlNjU2NCAweDcwNmM2MTc5NjU3MjMxNDg2MTczNTY2Zjc0NjU2NCAweDcwNmM2MTc5NjU3MjMyNDg2MTczNTY2Zjc0NjU2NCAweDcwNmM2MTc5NjU3MjMzNDg2MTczNTY2Zjc0NjU2NCAweDcwNmM2MTc5NjU3MjM0NDg2MTczNTY2Zjc0NjU2NCAweDcwNmM2MTc5NjU3MjM1NDg2MTczNTY2Zjc0NjU2NCAweDcwNmM2MTc5NjU3MjM2NDg2MTczNTY2Zjc0NjU2NCAweDY0NmY2Mzc0NmY3MjRiNjU3OTQ5NmQ2MTY3NjUgMHg2ZDYxNjY2OTYxNGI2NTc5NDk2ZDYxNjc2NSAweDE1MWY3Yzc1IDB4NjM3MjY1NjE3NDZmNzI0MTY0NjQ3MjY1NzM3MyAweDYyNzU3NDYzNjg2NTcyIDB4Njk2ZTZlNmI2NTY1NzAgMHg2NjYxNzI2ZDY1NzIgMHg2NzcyNmY2MzY1NzIgMHgxN2YxZDNhNzMxOTdkNzk0MjY5NTYzOGM0ZmE5YWMwZmMzNjg4YzRmOTc3NGI5MDVhMTRlM2EzZjE3MWJhYzU4NmM1NWU4M2ZmOTdhMWFlZmZiM2FmMDBhZGIyMmM2YmIwOGIzZjQ4MWUzYWFhMGYxYTA5ZTMwZWQ3NDFkOGFlNGZjZjVlMDk1ZDVkMDBhZjYwMGRiMThjYjJjMDRiM2VkZDAzY2M3NDRhMjg4OGFlNDBjYWEyMzI5NDZjNWU3ZTEgMHg2NDZmNjM3NDZmNzI0MzZmNmQ2ZDY5NzQ2ZDY1NmU3NCAweDYyNzU3NDYzNjg2NTcyNGI2NTc5NDk2ZDYxNjc2NSAweDY5NmU2ZTZiNjU2NTcwNGI2NTc5NDk2ZDYxNjc2NSAweDZkNjE2NjY5NjE0MzZmNmQ2ZDY5NzQ2ZDY1NmU3NCAweDY2NjE3MjZkNjU3MjRiNjU3OTQ5NmQ2MTY3NjUgMHg2NzcyNmY2MzY1NzI0YjY1Nzk0OTZkNjE2NzY1CgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNi4yCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQppbnRjIDMgLy8gNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjYWxsX0RlbGV0ZUFwcGxpY2F0aW9uICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gY3JlYXRlQXBwbGljYXRpb24oKXZvaWQKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCS8vIGV4ZWN1dGUgY3JlYXRlQXBwbGljYXRpb24oKXZvaWQKCWNhbGxzdWIgY3JlYXRlQXBwbGljYXRpb24KCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIGNyZWF0ZUFwcGxpY2F0aW9uKCk6IHZvaWQKY3JlYXRlQXBwbGljYXRpb246Cglwcm90byAwIDAKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxMzQKCS8vIHRoaXMuY3JlYXRvckFkZHJlc3MudmFsdWUgPSB0aGlzLnR4bi5zZW5kZXIKCWJ5dGVjIDM0IC8vICAiY3JlYXRvckFkZHJlc3MiCgl0eG4gU2VuZGVyCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjEzNgoJLy8gdGhpcy5sc2lnRnVuZGVyQWRkcmVzcy52YWx1ZSA9IGdsb2JhbHMuemVyb0FkZHJlc3MKCWJ5dGVjIDIyIC8vICAibHNpZ0Z1bmRlckFkZHJlc3MiCglnbG9iYWwgWmVyb0FkZHJlc3MKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MTM4CgkvLyB0aGlzLnBsYXllcjFBbGdvQWRkci52YWx1ZSA9IHsgYWRkcmVzczogZ2xvYmFscy56ZXJvQWRkcmVzcywgZWxpbWluYXRlZDogMCB9CglieXRlYyAyIC8vICAicGxheWVyMUFsZ29BZGRyIgoJZ2xvYmFsIFplcm9BZGRyZXNzCglieXRlYyAxMCAvLyAweDAwMDAwMDAwMDAwMDAwMDAKCWNvbmNhdAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxMzkKCS8vIHRoaXMucGxheWVyMkFsZ29BZGRyLnZhbHVlID0geyBhZGRyZXNzOiBnbG9iYWxzLnplcm9BZGRyZXNzLCBlbGltaW5hdGVkOiAwIH0KCWJ5dGVjIDMgLy8gICJwbGF5ZXIyQWxnb0FkZHIiCglnbG9iYWwgWmVyb0FkZHJlc3MKCWJ5dGVjIDEwIC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJY29uY2F0CglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjE0MAoJLy8gdGhpcy5wbGF5ZXIzQWxnb0FkZHIudmFsdWUgPSB7IGFkZHJlc3M6IGdsb2JhbHMuemVyb0FkZHJlc3MsIGVsaW1pbmF0ZWQ6IDAgfQoJYnl0ZWMgNCAvLyAgInBsYXllcjNBbGdvQWRkciIKCWdsb2JhbCBaZXJvQWRkcmVzcwoJYnl0ZWMgMTAgLy8gMHgwMDAwMDAwMDAwMDAwMDAwCgljb25jYXQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MTQxCgkvLyB0aGlzLnBsYXllcjRBbGdvQWRkci52YWx1ZSA9IHsgYWRkcmVzczogZ2xvYmFscy56ZXJvQWRkcmVzcywgZWxpbWluYXRlZDogMCB9CglieXRlYyA1IC8vICAicGxheWVyNEFsZ29BZGRyIgoJZ2xvYmFsIFplcm9BZGRyZXNzCglieXRlYyAxMCAvLyAweDAwMDAwMDAwMDAwMDAwMDAKCWNvbmNhdAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxNDIKCS8vIHRoaXMucGxheWVyNUFsZ29BZGRyLnZhbHVlID0geyBhZGRyZXNzOiBnbG9iYWxzLnplcm9BZGRyZXNzLCBlbGltaW5hdGVkOiAwIH0KCWJ5dGVjIDYgLy8gICJwbGF5ZXI1QWxnb0FkZHIiCglnbG9iYWwgWmVyb0FkZHJlc3MKCWJ5dGVjIDEwIC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJY29uY2F0CglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjE0MwoJLy8gdGhpcy5wbGF5ZXI2QWxnb0FkZHIudmFsdWUgPSB7IGFkZHJlc3M6IGdsb2JhbHMuemVyb0FkZHJlc3MsIGVsaW1pbmF0ZWQ6IDAgfQoJYnl0ZWMgNyAvLyAgInBsYXllcjZBbGdvQWRkciIKCWdsb2JhbCBaZXJvQWRkcmVzcwoJYnl0ZWMgMTAgLy8gMHgwMDAwMDAwMDAwMDAwMDAwCgljb25jYXQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MTQ1CgkvLyB0aGlzLm1hZmlhLnZhbHVlID0gZ2xvYmFscy56ZXJvQWRkcmVzcwoJYnl0ZWMgMjEgLy8gICJtYWZpYSIKCWdsb2JhbCBaZXJvQWRkcmVzcwoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxNDYKCS8vIHRoaXMuZG9jdG9yLnZhbHVlID0gZ2xvYmFscy56ZXJvQWRkcmVzcwoJYnl0ZWMgMTMgLy8gICJkb2N0b3IiCglnbG9iYWwgWmVyb0FkZHJlc3MKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MTQ3CgkvLyB0aGlzLmZhcm1lci52YWx1ZSA9IGdsb2JhbHMuemVyb0FkZHJlc3MKCWJ5dGVjIDM3IC8vICAiZmFybWVyIgoJZ2xvYmFsIFplcm9BZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjE0OAoJLy8gdGhpcy5idXRjaGVyLnZhbHVlID0gZ2xvYmFscy56ZXJvQWRkcmVzcwoJYnl0ZWMgMzUgLy8gICJidXRjaGVyIgoJZ2xvYmFsIFplcm9BZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjE0OQoJLy8gdGhpcy5pbm5rZWVwLnZhbHVlID0gZ2xvYmFscy56ZXJvQWRkcmVzcwoJYnl0ZWMgMzYgLy8gICJpbm5rZWVwIgoJZ2xvYmFsIFplcm9BZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjE1MAoJLy8gdGhpcy5ncm9jZXIudmFsdWUgPSBnbG9iYWxzLnplcm9BZGRyZXNzCglieXRlYyAzOCAvLyAgImdyb2NlciIKCWdsb2JhbCBaZXJvQWRkcmVzcwoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxNTIKCS8vIHRoaXMucGxheWVyMUhhc1ZvdGVkLnZhbHVlID0gMAoJYnl0ZWMgMjUgLy8gICJwbGF5ZXIxSGFzVm90ZWQiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxNTMKCS8vIHRoaXMucGxheWVyMkhhc1ZvdGVkLnZhbHVlID0gMAoJYnl0ZWMgMjYgLy8gICJwbGF5ZXIySGFzVm90ZWQiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxNTQKCS8vIHRoaXMucGxheWVyM0hhc1ZvdGVkLnZhbHVlID0gMAoJYnl0ZWMgMjcgLy8gICJwbGF5ZXIzSGFzVm90ZWQiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxNTUKCS8vIHRoaXMucGxheWVyNEhhc1ZvdGVkLnZhbHVlID0gMAoJYnl0ZWMgMjggLy8gICJwbGF5ZXI0SGFzVm90ZWQiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxNTYKCS8vIHRoaXMucGxheWVyNUhhc1ZvdGVkLnZhbHVlID0gMAoJYnl0ZWMgMjkgLy8gICJwbGF5ZXI1SGFzVm90ZWQiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxNTcKCS8vIHRoaXMucGxheWVyNkhhc1ZvdGVkLnZhbHVlID0gMAoJYnl0ZWMgMzAgLy8gICJwbGF5ZXI2SGFzVm90ZWQiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxNTgKCS8vIHRoaXMucGxheWVyc1ZvdGVkLnZhbHVlID0gMAoJYnl0ZWMgMjMgLy8gICJwbGF5ZXJzVm90ZWQiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxNjAKCS8vIHRoaXMucGxheWVyMVJlY2VpdmVkVm90ZXMudmFsdWUgPSAwCglieXRlYyAxNSAvLyAgInBsYXllcjFSZWNlaXZlZFZvdGVzIgoJaW50YyAxIC8vIDAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MTYxCgkvLyB0aGlzLnBsYXllcjJSZWNlaXZlZFZvdGVzLnZhbHVlID0gMAoJYnl0ZWMgMTYgLy8gICJwbGF5ZXIyUmVjZWl2ZWRWb3RlcyIKCWludGMgMSAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjE2MgoJLy8gdGhpcy5wbGF5ZXIzUmVjZWl2ZWRWb3Rlcy52YWx1ZSA9IDAKCWJ5dGVjIDE3IC8vICAicGxheWVyM1JlY2VpdmVkVm90ZXMiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxNjMKCS8vIHRoaXMucGxheWVyNFJlY2VpdmVkVm90ZXMudmFsdWUgPSAwCglieXRlYyAxOCAvLyAgInBsYXllcjRSZWNlaXZlZFZvdGVzIgoJaW50YyAxIC8vIDAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MTY0CgkvLyB0aGlzLnBsYXllcjVSZWNlaXZlZFZvdGVzLnZhbHVlID0gMAoJYnl0ZWMgMTkgLy8gICJwbGF5ZXI1UmVjZWl2ZWRWb3RlcyIKCWludGMgMSAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjE2NQoJLy8gdGhpcy5wbGF5ZXI2UmVjZWl2ZWRWb3Rlcy52YWx1ZSA9IDAKCWJ5dGVjIDIwIC8vICAicGxheWVyNlJlY2VpdmVkVm90ZXMiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxNjYKCS8vIHRoaXMucGxheWVyc1ZvdGVkLnZhbHVlID0gMAoJYnl0ZWMgMjMgLy8gICJwbGF5ZXJzVm90ZWQiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxNjgKCS8vIHRoaXMucGxheWVyc0pvaW5lZC52YWx1ZSA9IDAKCWJ5dGVjIDI0IC8vICAicGxheWVyc0pvaW5lZCIKCWludGMgMSAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjE2OQoJLy8gdGhpcy5wbGF5ZXJzQWxpdmUudmFsdWUgPSA2CglieXRlYyAxNCAvLyAgInBsYXllcnNBbGl2ZSIKCWludGMgMyAvLyA2CglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjE3MQoJLy8gdGhpcy5qdXN0RWxpbWluYXRlZFBsYXllci52YWx1ZSA9IGdsb2JhbHMuemVyb0FkZHJlc3MKCWJ5dGVjIDEgLy8gICJqdXN0RWxpbWluYXRlZFBsYXllciIKCWdsb2JhbCBaZXJvQWRkcmVzcwoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoxNzIKCS8vIHRoaXMubWFmaWFWaWN0aW0udmFsdWUgPSBnbG9iYWxzLnplcm9BZGRyZXNzCglieXRlYyA5IC8vICAibWFmaWFWaWN0aW0iCglnbG9iYWwgWmVyb0FkZHJlc3MKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MTczCgkvLyB0aGlzLmRvY3RvclBhdGllbnQudmFsdWUgPSBnbG9iYWxzLnplcm9BZGRyZXNzCglieXRlYyAxMSAvLyAgImRvY3RvclBhdGllbnQiCglnbG9iYWwgWmVyb0FkZHJlc3MKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MTc1CgkvLyB0aGlzLmdhbWVTdGF0ZS52YWx1ZSA9IDAKCWJ5dGVjIDAgLy8gICJnYW1lU3RhdGUiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gZHVtbXlPcFVwKHVpbnQ2NCl1aW50NjQKKmFiaV9yb3V0ZV9kdW1teU9wVXA6CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCWJ5dGVjIDMzIC8vIDB4MTUxZjdjNzUKCgkvLyBpOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCgkvLyBleGVjdXRlIGR1bW15T3BVcCh1aW50NjQpdWludDY0CgljYWxsc3ViIGR1bW15T3BVcAoJaXRvYgoJY29uY2F0Cglsb2cKCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIGR1bW15T3BVcChpOiB1aW50NjQpOiB1aW50NjQKLy8KLy8gRHVtbXkgT3AgVXAKLy8gRHVtbXkgb3BlcmF0aW9uIHRvIGdldCBtb3JlIG9wY29kZSBidWRnZXQKLy8gQGkgLSBUaGUgbnVtYmVyIHRvIHJldHVybiwgbmVjc3NhcnkgdG8gZGVkdXBsaWNhdGUgdGhlIG5hbWUKLy8gQHJldHVybnMgdGhlIG51bWJlciAoYnV0IHdlIGRvIG5vdGhpbmcgd2l0aCBpdCkKZHVtbXlPcFVwOgoJcHJvdG8gMSAxCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MTg0CgkvLyByZXR1cm4gaTsKCWZyYW1lX2RpZyAtMSAvLyBpOiB1aW50NjQKCXJldHN1YgoKLy8gZGxvZyhieXRlW10sYnl0ZVtdLGJ5dGVbXSxieXRlW10pYm9vbAoqYWJpX3JvdXRlX2Rsb2c6CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCWJ5dGVjIDMzIC8vIDB4MTUxZjdjNzUKCgkvLyB6OiBieXRlW10KCXR4bmEgQXBwbGljYXRpb25BcmdzIDQKCWV4dHJhY3QgMiAwCgoJLy8gdjogYnl0ZVtdCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAzCglleHRyYWN0IDIgMAoKCS8vIHg6IGJ5dGVbXQoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgoJZXh0cmFjdCAyIDAKCgkvLyBnOiBieXRlW10KCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWV4dHJhY3QgMiAwCgoJLy8gZXhlY3V0ZSBkbG9nKGJ5dGVbXSxieXRlW10sYnl0ZVtdLGJ5dGVbXSlib29sCgljYWxsc3ViIGRsb2cKCXB1c2hieXRlcyAweDAwCglpbnRjIDEgLy8gMAoJdW5jb3ZlciAyCglzZXRiaXQKCWNvbmNhdAoJbG9nCglpbnRjIDAgLy8gMQoJcmV0dXJuCgovLyBkbG9nKGc6IGJ5dGVzLCB4OiBieXRlcywgdjogYnl0ZXMsIHo6IGJ5dGVzKTogYm9vbGVhbgpkbG9nOgoJcHJvdG8gNCAxCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGVjIDggLy8gMHgKCWR1cAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjIwNwoJLy8gaGFzaCA9IGtlY2NhazI1Nihjb25jYXQoZywgY29uY2F0KHgsIHYpKSkKCWZyYW1lX2RpZyAtMSAvLyBnOiBieXRlcwoJZnJhbWVfZGlnIC0yIC8vIHg6IGJ5dGVzCglmcmFtZV9kaWcgLTMgLy8gdjogYnl0ZXMKCWNvbmNhdAoJY29uY2F0CglrZWNjYWsyNTYKCWZyYW1lX2J1cnkgMCAvLyBoYXNoOiBieXRlWzMyXQoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjIwOAoJLy8gY2hhbGxlbmdlID0gYnRvYmlnaW50KGhhc2gpICUgYnRvYmlnaW50KGhleChCTFMxMjM4MV9DVVJWRV9PUkRFUl9IRVgpKQoJZnJhbWVfZGlnIDAgLy8gaGFzaDogYnl0ZVszMl0KCXB1c2hieXRlcyAweDczZWRhNzUzMjk5ZDdkNDgzMzM5ZDgwODA5YTFkODA1NTNiZGE0MDJmZmZlNWJmZWZmZmZmZmZmMDAwMDAwMDEKCWIlCglmcmFtZV9idXJ5IDEgLy8gY2hhbGxlbmdlOiBiaWdpbnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoyMTAKCS8vIHJldHVybiAoCgkvLyAgICAgICB2ID09PSBlY0FkZCgnQkxTMTJfMzgxZzEnLCBlY1NjYWxhck11bCgnQkxTMTJfMzgxZzEnLCBnLCB6KSwgZWNTY2FsYXJNdWwoJ0JMUzEyXzM4MWcxJywgeCwgcmF3Qnl0ZXMoY2hhbGxlbmdlKSkpCgkvLyAgICAgKTsKCWZyYW1lX2RpZyAtMyAvLyB2OiBieXRlcwoJZnJhbWVfZGlnIC0xIC8vIGc6IGJ5dGVzCglmcmFtZV9kaWcgLTQgLy8gejogYnl0ZXMKCWVjX3NjYWxhcl9tdWwgQkxTMTJfMzgxZzEKCWZyYW1lX2RpZyAtMiAvLyB4OiBieXRlcwoJZnJhbWVfZGlnIDEgLy8gY2hhbGxlbmdlOiBiaWdpbnQKCWVjX3NjYWxhcl9tdWwgQkxTMTJfMzgxZzEKCWVjX2FkZCBCTFMxMl8zODFnMQoJPT0KCgkvLyBzZXQgdGhlIHN1YnJvdXRpbmUgcmV0dXJuIHZhbHVlCglmcmFtZV9idXJ5IDAKCgkvLyBwb3AgYWxsIGxvY2FsIHZhcmlhYmxlcyBmcm9tIHRoZSBzdGFjawoJcG9wbiAxCglyZXRzdWIKCi8vIGhhc2hQb2ludFRvUG9pbnQoYnl0ZVtdKWJ5dGVbXQoqYWJpX3JvdXRlX2hhc2hQb2ludFRvUG9pbnQ6CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCWJ5dGVjIDMzIC8vIDB4MTUxZjdjNzUKCgkvLyBwb2ludDogYnl0ZVtdCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglleHRyYWN0IDIgMAoKCS8vIGV4ZWN1dGUgaGFzaFBvaW50VG9Qb2ludChieXRlW10pYnl0ZVtdCgljYWxsc3ViIGhhc2hQb2ludFRvUG9pbnQKCWR1cAoJbGVuCglpdG9iCglleHRyYWN0IDYgMgoJc3dhcAoJY29uY2F0Cgljb25jYXQKCWxvZwoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gaGFzaFBvaW50VG9Qb2ludChwb2ludDogYnl0ZXMpOiBieXRlcwpoYXNoUG9pbnRUb1BvaW50OgoJcHJvdG8gMSAxCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGVjIDggLy8gMHgKCWR1cG4gMgoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjIxNgoJLy8gaGFzaCA9IGtlY2NhazI1Nihwb2ludCkKCWZyYW1lX2RpZyAtMSAvLyBwb2ludDogYnl0ZXMKCWtlY2NhazI1NgoJZnJhbWVfYnVyeSAwIC8vIGhhc2g6IGJ5dGVbMzJdCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MjE3CgkvLyBmcEVsZW1lbnQgPSBidG9iaWdpbnQoaGFzaCkgJSBidG9iaWdpbnQoaGV4KEJMUzEyMzgxX0ZJRUxEX01PRFVMVVNfSEVYKSkKCWZyYW1lX2RpZyAwIC8vIGhhc2g6IGJ5dGVbMzJdCglwdXNoYnl0ZXMgMHgxYTAxMTFlYTM5N2ZlNjlhNGIxYmE3YjY0MzRiYWNkNzY0Nzc0Yjg0ZjM4NTEyYmY2NzMwZDJhMGY2YjBmNjI0MWVhYmZmZmViMTUzZmZmZmI5ZmVmZmZmZmZmZmFhYWIKCWIlCglmcmFtZV9idXJ5IDEgLy8gZnBFbGVtZW50OiBiaWdpbnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoyMjAKCS8vIHJlc3VsdCA9IGVjTWFwVG8oJ0JMUzEyXzM4MWcxJywgcmF3Qnl0ZXMoZnBFbGVtZW50KSkKCWZyYW1lX2RpZyAxIC8vIGZwRWxlbWVudDogYmlnaW50CgllY19tYXBfdG8gQkxTMTJfMzgxZzEKCWZyYW1lX2J1cnkgMiAvLyByZXN1bHQ6IGJ5dGVbXQoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjIyMQoJLy8gcmV0dXJuIHJlc3VsdDsKCWZyYW1lX2RpZyAyIC8vIHJlc3VsdDogYnl0ZVtdCgoJLy8gc2V0IHRoZSBzdWJyb3V0aW5lIHJldHVybiB2YWx1ZQoJZnJhbWVfYnVyeSAwCgoJLy8gcG9wIGFsbCBsb2NhbCB2YXJpYWJsZXMgZnJvbSB0aGUgc3RhY2sKCXBvcG4gMgoJcmV0c3ViCgovLyBnZXRHYW1lU3RhdGUoKXVpbnQ2NAoqYWJpX3JvdXRlX2dldEdhbWVTdGF0ZToKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJYnl0ZWMgMzMgLy8gMHgxNTFmN2M3NQoKCS8vIGV4ZWN1dGUgZ2V0R2FtZVN0YXRlKCl1aW50NjQKCWNhbGxzdWIgZ2V0R2FtZVN0YXRlCglpdG9iCgljb25jYXQKCWxvZwoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gZ2V0R2FtZVN0YXRlKCk6IHVpbnQ2NApnZXRHYW1lU3RhdGU6Cglwcm90byAwIDEKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoyMjcKCS8vIHJldHVybiB0aGlzLmdhbWVTdGF0ZS52YWx1ZTsKCWJ5dGVjIDAgLy8gICJnYW1lU3RhdGUiCglhcHBfZ2xvYmFsX2dldAoJcmV0c3ViCgovLyBzZXRMU0lHRnVuZGVyQWRkcmVzcyhhZGRyZXNzKXZvaWQKKmFiaV9yb3V0ZV9zZXRMU0lHRnVuZGVyQWRkcmVzczoKCS8vIGZ1bmRlckxTaWdBZGRyZXNzOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50YyA2IC8vIDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGZ1bmRlckxTaWdBZGRyZXNzKSBmb3Igc2V0TFNJR0Z1bmRlckFkZHJlc3MgbXVzdCBiZSBhIGFkZHJlc3MKCWFzc2VydAoKCS8vIGV4ZWN1dGUgc2V0TFNJR0Z1bmRlckFkZHJlc3MoYWRkcmVzcyl2b2lkCgljYWxsc3ViIHNldExTSUdGdW5kZXJBZGRyZXNzCglpbnRjIDAgLy8gMQoJcmV0dXJuCgovLyBzZXRMU0lHRnVuZGVyQWRkcmVzcyhmdW5kZXJMU2lnQWRkcmVzczogQWRkcmVzcyk6IHZvaWQKc2V0TFNJR0Z1bmRlckFkZHJlc3M6Cglwcm90byAxIDAKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoyMzEKCS8vIGFzc2VydCgKCS8vICAgICAgIHRoaXMuZ2FtZVN0YXRlLnZhbHVlID09PSBzdGF0ZVNldExTSUdGdW5kZXJBZGRyZXNzLAoJLy8gICAgICAgJ0ludmFsaWQgbWV0aG9kIGNhbGw6IENvbnRyYWN0IGlzIG5vdCBpbiBTZXQgTFNpZyBGdW5kZXIgQWRkcmVzcyBzdGF0ZS4nCgkvLyAgICAgKQoJYnl0ZWMgMCAvLyAgImdhbWVTdGF0ZSIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDEgLy8gMAoJPT0KCgkvLyBJbnZhbGlkIG1ldGhvZCBjYWxsOiBDb250cmFjdCBpcyBub3QgaW4gU2V0IExTaWcgRnVuZGVyIEFkZHJlc3Mgc3RhdGUuCglhc3NlcnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoyMzYKCS8vIGFzc2VydCgKCS8vICAgICAgIHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5jcmVhdG9yQWRkcmVzcy52YWx1ZSwKCS8vICAgICAgICdFcnJvciBzdGF0ZTogT25seSB0aGUgY3JlYXRvciBjYW4gc2V0IHRoZSBMU2lnIEZ1bmRlciBBZGRyZXNzIScKCS8vICAgICApCgl0eG4gU2VuZGVyCglieXRlYyAzNCAvLyAgImNyZWF0b3JBZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gRXJyb3Igc3RhdGU6IE9ubHkgdGhlIGNyZWF0b3IgY2FuIHNldCB0aGUgTFNpZyBGdW5kZXIgQWRkcmVzcyEKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjI0MQoJLy8gYXNzZXJ0KHRoaXMubHNpZ0Z1bmRlckFkZHJlc3MudmFsdWUgPT09IGdsb2JhbHMuemVyb0FkZHJlc3MsICdFcnJvciBzdGF0ZTogTFNpZyBGdW5kZXIgQWRkcmVzcyBhbHJlYWR5IHNldCEnKQoJYnl0ZWMgMjIgLy8gICJsc2lnRnVuZGVyQWRkcmVzcyIKCWFwcF9nbG9iYWxfZ2V0CglnbG9iYWwgWmVyb0FkZHJlc3MKCT09CgoJLy8gRXJyb3Igc3RhdGU6IExTaWcgRnVuZGVyIEFkZHJlc3MgYWxyZWFkeSBzZXQhCglhc3NlcnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoyNDMKCS8vIGFzc2VydChmdW5kZXJMU2lnQWRkcmVzcyAhPT0gZ2xvYmFscy56ZXJvQWRkcmVzcywgJ0Vycm9yIHN0YXRlOiBMU2lnIEZ1bmRlciBBZGRyZXNzIGNhbm5vdCBiZSB0aGUgemVybyBhZGRyZXNzLicpCglmcmFtZV9kaWcgLTEgLy8gZnVuZGVyTFNpZ0FkZHJlc3M6IEFkZHJlc3MKCWdsb2JhbCBaZXJvQWRkcmVzcwoJIT0KCgkvLyBFcnJvciBzdGF0ZTogTFNpZyBGdW5kZXIgQWRkcmVzcyBjYW5ub3QgYmUgdGhlIHplcm8gYWRkcmVzcy4KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjI0NgoJLy8gdGhpcy5sc2lnRnVuZGVyQWRkcmVzcy52YWx1ZSA9IGZ1bmRlckxTaWdBZGRyZXNzCglieXRlYyAyMiAvLyAgImxzaWdGdW5kZXJBZGRyZXNzIgoJZnJhbWVfZGlnIC0xIC8vIGZ1bmRlckxTaWdBZGRyZXNzOiBBZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjI0OAoJLy8gdGhpcy5nYW1lU3RhdGUudmFsdWUgPSBzdGF0ZUpvaW5HYW1lTG9iYnkKCWJ5dGVjIDAgLy8gICJnYW1lU3RhdGUiCglpbnRjIDAgLy8gMQoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gam9pbkdhbWVMb2JieShwYXksYnl0ZVtdKXZvaWQKKmFiaV9yb3V0ZV9qb2luR2FtZUxvYmJ5OgoJLy8gTklaS19ETE9HOiBieXRlW10KCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWV4dHJhY3QgMiAwCgoJLy8gZGVwb3NpdFR4bjogcGF5Cgl0eG4gR3JvdXBJbmRleAoJaW50YyAwIC8vIDEKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludGMgMCAvLyAgcGF5Cgk9PQoKCS8vIGFyZ3VtZW50IDEgKGRlcG9zaXRUeG4pIGZvciBqb2luR2FtZUxvYmJ5IG11c3QgYmUgYSBwYXkgdHJhbnNhY3Rpb24KCWFzc2VydAoKCS8vIGV4ZWN1dGUgam9pbkdhbWVMb2JieShwYXksYnl0ZVtdKXZvaWQKCWNhbGxzdWIgam9pbkdhbWVMb2JieQoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gam9pbkdhbWVMb2JieShkZXBvc2l0VHhuOiBQYXlUeG4sIE5JWktfRExPRzogYnl0ZXMpOiB2b2lkCmpvaW5HYW1lTG9iYnk6Cglwcm90byAyIDAKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZWMgOCAvLyAweAoJZHVwbiAzCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MjUyCgkvLyBhc3NlcnQodGhpcy5nYW1lU3RhdGUudmFsdWUgPT09IHN0YXRlSm9pbkdhbWVMb2JieSwgJ0ludmFsaWQgbWV0aG9kIGNhbGw6IEdhbWUgaXMgbm90IGluIEpvaW4gR2FtZSBMb2JieSBzdGF0ZS4nKQoJYnl0ZWMgMCAvLyAgImdhbWVTdGF0ZSIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDAgLy8gMQoJPT0KCgkvLyBJbnZhbGlkIG1ldGhvZCBjYWxsOiBHYW1lIGlzIG5vdCBpbiBKb2luIEdhbWUgTG9iYnkgc3RhdGUuCglhc3NlcnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoyNTQKCS8vIGFzc2VydCgKCS8vICAgICAgIHRoaXMucGxheWVyc0pvaW5lZC52YWx1ZSA8IDYsCgkvLyAgICAgICAnTWF4IHBsYXllcnMgYWxyZWFkeSBqb2luZWQhIEVycm9yLCBnYW1lIHNob3VsZCBoYXZlIG1vdmVkIHRvIHRoZSBuZXh0IHN0YWdlIGFscmVhZHkuJwoJLy8gICAgICkKCWJ5dGVjIDI0IC8vICAicGxheWVyc0pvaW5lZCIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDMgLy8gNgoJPAoKCS8vIE1heCBwbGF5ZXJzIGFscmVhZHkgam9pbmVkISBFcnJvciwgZ2FtZSBzaG91bGQgaGF2ZSBtb3ZlZCB0byB0aGUgbmV4dCBzdGFnZSBhbHJlYWR5LgoJYXNzZXJ0CgoJLy8gKmlmMF9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjI2MAoJLy8gdGhpcy5wbGF5ZXIxQWxnb0FkZHIudmFsdWUuYWRkcmVzcyA9PT0gdGhpcy50eG4uc2VuZGVyIHx8CgkvLyAgICAgICB0aGlzLnBsYXllcjJBbGdvQWRkci52YWx1ZS5hZGRyZXNzID09PSB0aGlzLnR4bi5zZW5kZXIgfHwKCS8vICAgICAgIHRoaXMucGxheWVyM0FsZ29BZGRyLnZhbHVlLmFkZHJlc3MgPT09IHRoaXMudHhuLnNlbmRlciB8fAoJLy8gICAgICAgdGhpcy5wbGF5ZXI0QWxnb0FkZHIudmFsdWUuYWRkcmVzcyA9PT0gdGhpcy50eG4uc2VuZGVyIHx8CgkvLyAgICAgICB0aGlzLnBsYXllcjVBbGdvQWRkci52YWx1ZS5hZGRyZXNzID09PSB0aGlzLnR4bi5zZW5kZXIgfHwKCS8vICAgICAgIHRoaXMucGxheWVyNkFsZ29BZGRyLnZhbHVlLmFkZHJlc3MgPT09IHRoaXMudHhuLnNlbmRlcgoJYnl0ZWMgMiAvLyAgInBsYXllcjFBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCXR4biBTZW5kZXIKCT09CglkdXAKCWJueiAqc2tpcF9vcjAKCWJ5dGVjIDMgLy8gICJwbGF5ZXIyQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCgl0eG4gU2VuZGVyCgk9PQoJfHwKCipza2lwX29yMDoKCWR1cAoJYm56ICpza2lwX29yMQoJYnl0ZWMgNCAvLyAgInBsYXllcjNBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCXR4biBTZW5kZXIKCT09Cgl8fAoKKnNraXBfb3IxOgoJZHVwCglibnogKnNraXBfb3IyCglieXRlYyA1IC8vICAicGxheWVyNEFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJdHhuIFNlbmRlcgoJPT0KCXx8Cgoqc2tpcF9vcjI6CglkdXAKCWJueiAqc2tpcF9vcjMKCWJ5dGVjIDYgLy8gICJwbGF5ZXI1QWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCgl0eG4gU2VuZGVyCgk9PQoJfHwKCipza2lwX29yMzoKCWR1cAoJYm56ICpza2lwX29yNAoJYnl0ZWMgNyAvLyAgInBsYXllcjZBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCXR4biBTZW5kZXIKCT09Cgl8fAoKKnNraXBfb3I0OgoJYnogKmlmMF9lbmQKCgkvLyAqaWYwX2NvbnNlcXVlbnQKCS8vIEVycm9yIHN0YXRlOiBQbGF5ZXIgYWxyZWFkeSBqb2luZWQgdGhlIGdhbWUhCgllcnIKCippZjBfZW5kOgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MjcyCgkvLyBhc3NlcnQoZGVwb3NpdFR4bi5hbW91bnQgPj0gTFNJR19GVU5EX0FNT1VOVCArIFNMQVNIX0RFUE9TSVRfQU1PVU5ULCAnSW52YWxpZCBGdW5kZXJMU2lnIGFtb3VudCEnKQoJZnJhbWVfZGlnIC0xIC8vIGRlcG9zaXRUeG46IFBheVR4bgoJZ3R4bnMgQW1vdW50CglwdXNoaW50IDExNTAwMDAKCT49CgoJLy8gSW52YWxpZCBGdW5kZXJMU2lnIGFtb3VudCEKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjI3NAoJLy8gZyA9IGV4dHJhY3QzKE5JWktfRExPRywgMCwgQkxTMTIzODFHMV9MRU5HVEgpCglmcmFtZV9kaWcgLTIgLy8gTklaS19ETE9HOiBieXRlcwoJZXh0cmFjdCAwIDk2CglmcmFtZV9idXJ5IDAgLy8gZzogYnl0ZVtdCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6Mjc1CgkvLyBSaW5nUEsgPSBleHRyYWN0MyhOSVpLX0RMT0csIEJMUzEyMzgxRzFfTEVOR1RILCBCTFMxMjM4MUcxX0xFTkdUSCkKCWZyYW1lX2RpZyAtMiAvLyBOSVpLX0RMT0c6IGJ5dGVzCglleHRyYWN0IDk2IDk2CglmcmFtZV9idXJ5IDEgLy8gUmluZ1BLOiBieXRlW10KCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoyNzYKCS8vIHYgPSBleHRyYWN0MyhOSVpLX0RMT0csIEJMUzEyMzgxRzFfTEVOR1RIICogMiwgQkxTMTIzODFHMV9MRU5HVEgpCglmcmFtZV9kaWcgLTIgLy8gTklaS19ETE9HOiBieXRlcwoJZXh0cmFjdCAxOTIgOTYKCWZyYW1lX2J1cnkgMiAvLyB2OiBieXRlW10KCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoyNzcKCS8vIHogPSBleHRyYWN0MyhOSVpLX0RMT0csIEJMUzEyMzgxRzFfTEVOR1RIICogMywgMzIpCglmcmFtZV9kaWcgLTIgLy8gTklaS19ETE9HOiBieXRlcwoJcHVzaGludCAyODgKCWludGMgNiAvLyAzMgoJZXh0cmFjdDMKCWZyYW1lX2J1cnkgMyAvLyB6OiBieXRlW10KCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoyODIKCS8vIGFzc2VydCh0aGlzLmRsb2coZywgUmluZ1BLLCB2LCB6KSwgJ0RMT0cgTklaSyBQcm9vZiBmYWlsZWQhJykKCWZyYW1lX2RpZyAzIC8vIHo6IGJ5dGVbXQoJZnJhbWVfZGlnIDIgLy8gdjogYnl0ZVtdCglmcmFtZV9kaWcgMSAvLyBSaW5nUEs6IGJ5dGVbXQoJZnJhbWVfZGlnIDAgLy8gZzogYnl0ZVtdCgljYWxsc3ViIGRsb2cKCgkvLyBETE9HIE5JWksgUHJvb2YgZmFpbGVkIQoJYXNzZXJ0CgoJLy8gKmlmMV9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjI4NAoJLy8gIXRoaXMucXVpY2tBY2Nlc3NQS0JveGVzKDApLmV4aXN0cwoJYnl0ZWMgMTAgLy8gMHgwMDAwMDAwMDAwMDAwMDAwCglib3hfbGVuCglzd2FwCglwb3AKCSEKCWJ6ICppZjFfZWxzZQoKCS8vICppZjFfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6Mjg1CgkvLyB0aGlzLnF1aWNrQWNjZXNzUEtCb3hlcygwKS5jcmVhdGUoQkxTMTIzODFHMV9MRU5HVEgpCglieXRlYyAxMCAvLyAweDAwMDAwMDAwMDAwMDAwMDAKCWludGMgMTIgLy8gOTYKCWJveF9jcmVhdGUKCXBvcAoJYiAqaWYxX2VuZAoKKmlmMV9lbHNlOgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6Mjg3CgkvLyB0aGlzLnF1aWNrQWNjZXNzUEtCb3hlcygwKS5yZXNpemUodGhpcy5xdWlja0FjY2Vzc1BLQm94ZXMoMCkuc2l6ZSArIEJMUzEyMzgxRzFfTEVOR1RIKQoJYnl0ZWMgMTAgLy8gMHgwMDAwMDAwMDAwMDAwMDAwCglkdXAKCWJveF9sZW4KCgkvLyBib3ggdmFsdWUgZG9lcyBub3QgZXhpc3Q6IHRoaXMucXVpY2tBY2Nlc3NQS0JveGVzKDApLnNpemUKCWFzc2VydAoJaW50YyAxMiAvLyA5NgoJKwoJYm94X3Jlc2l6ZQoKKmlmMV9lbmQ6CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoyOTEKCS8vIGFzc2VydCh0aGlzLnF1aWNrQWNjZXNzUEtCb3hlcygwKS5leGlzdHMsICdQSyBCb3ggZmFpbGVkIHRvIGJlIGNyZWF0ZWQuJykKCWJ5dGVjIDEwIC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJYm94X2xlbgoJc3dhcAoJcG9wCgoJLy8gUEsgQm94IGZhaWxlZCB0byBiZSBjcmVhdGVkLgoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MjkzCgkvLyB0aGlzLnF1aWNrQWNjZXNzUEtCb3hlcygwKS5yZXBsYWNlKHRoaXMucGxheWVyc0pvaW5lZC52YWx1ZSAqIEJMUzEyMzgxRzFfTEVOR1RILCBSaW5nUEspCglieXRlYyAxMCAvLyAweDAwMDAwMDAwMDAwMDAwMDAKCWJ5dGVjIDI0IC8vICAicGxheWVyc0pvaW5lZCIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDEyIC8vIDk2CgkqCglmcmFtZV9kaWcgMSAvLyBSaW5nUEs6IGJ5dGVbXQoJYm94X3JlcGxhY2UKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoyOTQKCS8vIHRoaXMucGxheWVyc0pvaW5lZC52YWx1ZSArPSAxCglieXRlYyAyNCAvLyAgInBsYXllcnNKb2luZWQiCglhcHBfZ2xvYmFsX2dldAoJaW50YyAwIC8vIDEKCSsKCWJ5dGVjIDI0IC8vICAicGxheWVyc0pvaW5lZCIKCXN3YXAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6Mjk2CgkvLyBhc3NlcnQodGhpcy5sc2lnRnVuZGVyQWRkcmVzcy52YWx1ZSAhPT0gZ2xvYmFscy56ZXJvQWRkcmVzcywgJ0Vycm9yIHN0YXRlOiBMU2lnIEZ1bmRlciBBZGRyZXNzIG5vdCBzZXQhJykKCWJ5dGVjIDIyIC8vICAibHNpZ0Z1bmRlckFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJZ2xvYmFsIFplcm9BZGRyZXNzCgkhPQoKCS8vIEVycm9yIHN0YXRlOiBMU2lnIEZ1bmRlciBBZGRyZXNzIG5vdCBzZXQhCglhc3NlcnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czoyOTkKCS8vIHNlbmRQYXltZW50KHsKCS8vICAgICAgIGFtb3VudDogTFNJR19GVU5EX0FNT1VOVCwKCS8vICAgICAgIHJlY2VpdmVyOiB0aGlzLmxzaWdGdW5kZXJBZGRyZXNzLnZhbHVlLAoJLy8gICAgIH0pCglpdHhuX2JlZ2luCglpbnRjIDAgLy8gIHBheQoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjMwMAoJLy8gYW1vdW50OiBMU0lHX0ZVTkRfQU1PVU5UCglpbnRjIDEzIC8vIDE1MDAwMAoJaXR4bl9maWVsZCBBbW91bnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czozMDEKCS8vIHJlY2VpdmVyOiB0aGlzLmxzaWdGdW5kZXJBZGRyZXNzLnZhbHVlCglieXRlYyAyMiAvLyAgImxzaWdGdW5kZXJBZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCWl0eG5fZmllbGQgUmVjZWl2ZXIKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnRjIDEgLy8gMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CgoJLy8gKmlmMl9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjMwNAoJLy8gdGhpcy5wbGF5ZXIxQWxnb0FkZHIudmFsdWUuYWRkcmVzcyA9PT0gZ2xvYmFscy56ZXJvQWRkcmVzcwoJYnl0ZWMgMiAvLyAgInBsYXllcjFBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWdsb2JhbCBaZXJvQWRkcmVzcwoJPT0KCWJ6ICppZjJfZW5kCgoJLy8gKmlmMl9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czozMDUKCS8vIHRoaXMucGxheWVyMUFsZ29BZGRyLnZhbHVlLmFkZHJlc3MgPSB0aGlzLnR4bi5zZW5kZXIKCWJ5dGVjIDIgLy8gICJwbGF5ZXIxQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJaW50YyAxIC8vIDAKCXR4biBTZW5kZXIKCXJlcGxhY2UzCglieXRlYyAyIC8vICAicGxheWVyMUFsZ29BZGRyIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czozMDYKCS8vIHJldHVybjsKCXJldHN1YgoKKmlmMl9lbmQ6CgkvLyAqaWYzX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MzA4CgkvLyB0aGlzLnBsYXllcjJBbGdvQWRkci52YWx1ZS5hZGRyZXNzID09PSBnbG9iYWxzLnplcm9BZGRyZXNzCglieXRlYyAzIC8vICAicGxheWVyMkFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJZ2xvYmFsIFplcm9BZGRyZXNzCgk9PQoJYnogKmlmM19lbmQKCgkvLyAqaWYzX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjMwOQoJLy8gdGhpcy5wbGF5ZXIyQWxnb0FkZHIudmFsdWUuYWRkcmVzcyA9IHRoaXMudHhuLnNlbmRlcgoJYnl0ZWMgMyAvLyAgInBsYXllcjJBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDEgLy8gMAoJdHhuIFNlbmRlcgoJcmVwbGFjZTMKCWJ5dGVjIDMgLy8gICJwbGF5ZXIyQWxnb0FkZHIiCglzd2FwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjMxMAoJLy8gcmV0dXJuOwoJcmV0c3ViCgoqaWYzX2VuZDoKCS8vICppZjRfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czozMTIKCS8vIHRoaXMucGxheWVyM0FsZ29BZGRyLnZhbHVlLmFkZHJlc3MgPT09IGdsb2JhbHMuemVyb0FkZHJlc3MKCWJ5dGVjIDQgLy8gICJwbGF5ZXIzQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCglnbG9iYWwgWmVyb0FkZHJlc3MKCT09CglieiAqaWY0X2VuZAoKCS8vICppZjRfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MzEzCgkvLyB0aGlzLnBsYXllcjNBbGdvQWRkci52YWx1ZS5hZGRyZXNzID0gdGhpcy50eG4uc2VuZGVyCglieXRlYyA0IC8vICAicGxheWVyM0FsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMSAvLyAwCgl0eG4gU2VuZGVyCglyZXBsYWNlMwoJYnl0ZWMgNCAvLyAgInBsYXllcjNBbGdvQWRkciIKCXN3YXAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MzE0CgkvLyByZXR1cm47CglyZXRzdWIKCippZjRfZW5kOgoJLy8gKmlmNV9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjMxNgoJLy8gdGhpcy5wbGF5ZXI0QWxnb0FkZHIudmFsdWUuYWRkcmVzcyA9PT0gZ2xvYmFscy56ZXJvQWRkcmVzcwoJYnl0ZWMgNSAvLyAgInBsYXllcjRBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWdsb2JhbCBaZXJvQWRkcmVzcwoJPT0KCWJ6ICppZjVfZW5kCgoJLy8gKmlmNV9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czozMTcKCS8vIHRoaXMucGxheWVyNEFsZ29BZGRyLnZhbHVlLmFkZHJlc3MgPSB0aGlzLnR4bi5zZW5kZXIKCWJ5dGVjIDUgLy8gICJwbGF5ZXI0QWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJaW50YyAxIC8vIDAKCXR4biBTZW5kZXIKCXJlcGxhY2UzCglieXRlYyA1IC8vICAicGxheWVyNEFsZ29BZGRyIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czozMTgKCS8vIHJldHVybjsKCXJldHN1YgoKKmlmNV9lbmQ6CgkvLyAqaWY2X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MzIwCgkvLyB0aGlzLnBsYXllcjVBbGdvQWRkci52YWx1ZS5hZGRyZXNzID09PSBnbG9iYWxzLnplcm9BZGRyZXNzCglieXRlYyA2IC8vICAicGxheWVyNUFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJZ2xvYmFsIFplcm9BZGRyZXNzCgk9PQoJYnogKmlmNl9lbmQKCgkvLyAqaWY2X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjMyMQoJLy8gdGhpcy5wbGF5ZXI1QWxnb0FkZHIudmFsdWUuYWRkcmVzcyA9IHRoaXMudHhuLnNlbmRlcgoJYnl0ZWMgNiAvLyAgInBsYXllcjVBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDEgLy8gMAoJdHhuIFNlbmRlcgoJcmVwbGFjZTMKCWJ5dGVjIDYgLy8gICJwbGF5ZXI1QWxnb0FkZHIiCglzd2FwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjMyMgoJLy8gcmV0dXJuOwoJcmV0c3ViCgoqaWY2X2VuZDoKCS8vICppZjdfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czozMjQKCS8vIHRoaXMucGxheWVyNkFsZ29BZGRyLnZhbHVlLmFkZHJlc3MgPT09IGdsb2JhbHMuemVyb0FkZHJlc3MKCWJ5dGVjIDcgLy8gICJwbGF5ZXI2QWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCglnbG9iYWwgWmVyb0FkZHJlc3MKCT09CglieiAqaWY3X2VuZAoKCS8vICppZjdfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MzI1CgkvLyB0aGlzLnBsYXllcjZBbGdvQWRkci52YWx1ZS5hZGRyZXNzID0gdGhpcy50eG4uc2VuZGVyCglieXRlYyA3IC8vICAicGxheWVyNkFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMSAvLyAwCgl0eG4gU2VuZGVyCglyZXBsYWNlMwoJYnl0ZWMgNyAvLyAgInBsYXllcjZBbGdvQWRkciIKCXN3YXAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MzI2CgkvLyB0aGlzLmdhbWVTdGF0ZS52YWx1ZSA9IHN0YXRlQXNzaWduUm9sZQoJYnl0ZWMgMCAvLyAgImdhbWVTdGF0ZSIKCWludGMgMiAvLyAyCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjMyNwoJLy8gcmV0dXJuOwoJcmV0c3ViCgoqaWY3X2VuZDoKCS8vIEludmFsaWQgc3RhdGUhIEVycm9yLCBnYW1lIHNob3VsZCBoYXZlIG1vdmVkIHRvIHRoZSBuZXh0IHN0YWdlIGFscmVhZHkuCgllcnIKCXJldHN1YgoKLy8gYXNzaWduUm9sZShieXRlW10sYnl0ZVtdLGJ5dGVbXSxieXRlW10sYnl0ZVtdLHBheSxwYXkscGF5LHBheSxwYXkscGF5LHBheSl2b2lkCiphYmlfcm91dGVfYXNzaWduUm9sZToKCS8vIHJpbmdMU2lnVHhuNTogcGF5Cgl0eG4gR3JvdXBJbmRleAoJaW50YyAwIC8vIDEKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludGMgMCAvLyAgcGF5Cgk9PQoKCS8vIGFyZ3VtZW50IDAgKHJpbmdMU2lnVHhuNSkgZm9yIGFzc2lnblJvbGUgbXVzdCBiZSBhIHBheSB0cmFuc2FjdGlvbgoJYXNzZXJ0CgoJLy8gcmluZ0xTaWdUeG40OiBwYXkKCXR4biBHcm91cEluZGV4CglpbnRjIDIgLy8gMgoJLQoJZHVwCglndHhucyBUeXBlRW51bQoJaW50YyAwIC8vICBwYXkKCT09CgoJLy8gYXJndW1lbnQgMSAocmluZ0xTaWdUeG40KSBmb3IgYXNzaWduUm9sZSBtdXN0IGJlIGEgcGF5IHRyYW5zYWN0aW9uCglhc3NlcnQKCgkvLyByaW5nTFNpZ1R4bjM6IHBheQoJdHhuIEdyb3VwSW5kZXgKCWludGMgNCAvLyAzCgktCglkdXAKCWd0eG5zIFR5cGVFbnVtCglpbnRjIDAgLy8gIHBheQoJPT0KCgkvLyBhcmd1bWVudCAyIChyaW5nTFNpZ1R4bjMpIGZvciBhc3NpZ25Sb2xlIG11c3QgYmUgYSBwYXkgdHJhbnNhY3Rpb24KCWFzc2VydAoKCS8vIHJpbmdMU2lnVHhuMjogcGF5Cgl0eG4gR3JvdXBJbmRleAoJaW50YyA3IC8vIDQKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludGMgMCAvLyAgcGF5Cgk9PQoKCS8vIGFyZ3VtZW50IDMgKHJpbmdMU2lnVHhuMikgZm9yIGFzc2lnblJvbGUgbXVzdCBiZSBhIHBheSB0cmFuc2FjdGlvbgoJYXNzZXJ0CgoJLy8gcmluZ0xTaWdUeG4xOiBwYXkKCXR4biBHcm91cEluZGV4CglpbnRjIDggLy8gNQoJLQoJZHVwCglndHhucyBUeXBlRW51bQoJaW50YyAwIC8vICBwYXkKCT09CgoJLy8gYXJndW1lbnQgNCAocmluZ0xTaWdUeG4xKSBmb3IgYXNzaWduUm9sZSBtdXN0IGJlIGEgcGF5IHRyYW5zYWN0aW9uCglhc3NlcnQKCgkvLyByaW5nTFNpZ1R4bjA6IHBheQoJdHhuIEdyb3VwSW5kZXgKCWludGMgMyAvLyA2CgktCglkdXAKCWd0eG5zIFR5cGVFbnVtCglpbnRjIDAgLy8gIHBheQoJPT0KCgkvLyBhcmd1bWVudCA1IChyaW5nTFNpZ1R4bjApIGZvciBhc3NpZ25Sb2xlIG11c3QgYmUgYSBwYXkgdHJhbnNhY3Rpb24KCWFzc2VydAoKCS8vIGZ1bmRlckxTaWdUeG46IHBheQoJdHhuIEdyb3VwSW5kZXgKCWludGMgOSAvLyA3CgktCglkdXAKCWd0eG5zIFR5cGVFbnVtCglpbnRjIDAgLy8gIHBheQoJPT0KCgkvLyBhcmd1bWVudCA2IChmdW5kZXJMU2lnVHhuKSBmb3IgYXNzaWduUm9sZSBtdXN0IGJlIGEgcGF5IHRyYW5zYWN0aW9uCglhc3NlcnQKCgkvLyBjaGFsbGVuZ2VzOiBieXRlW10KCXR4bmEgQXBwbGljYXRpb25BcmdzIDUKCWV4dHJhY3QgMiAwCgoJLy8gc2lnOiBieXRlW10KCXR4bmEgQXBwbGljYXRpb25BcmdzIDQKCWV4dHJhY3QgMiAwCgoJLy8ga2V5SW1hZ2U6IGJ5dGVbXQoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwoJZXh0cmFjdCAyIDAKCgkvLyBwa0FsbDogYnl0ZVtdCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglleHRyYWN0IDIgMAoKCS8vIG1zZzogYnl0ZVtdCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglleHRyYWN0IDIgMAoKCS8vIGV4ZWN1dGUgYXNzaWduUm9sZShieXRlW10sYnl0ZVtdLGJ5dGVbXSxieXRlW10sYnl0ZVtdLHBheSxwYXkscGF5LHBheSxwYXkscGF5LHBheSl2b2lkCgljYWxsc3ViIGFzc2lnblJvbGUKCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIGFzc2lnblJvbGUobXNnOiBieXRlcywgcGtBbGw6IGJ5dGVzLCBrZXlJbWFnZTogYnl0ZXMsIHNpZzogYnl0ZXMsIGNoYWxsZW5nZXM6IGJ5dGVzLCBmdW5kZXJMU2lnVHhuOiBQYXlUeG4sIHJpbmdMU2lnVHhuMDogUGF5VHhuLCByaW5nTFNpZ1R4bjE6IFBheVR4biwgcmluZ0xTaWdUeG4yOiBQYXlUeG4sIHJpbmdMU2lnVHhuMzogUGF5VHhuLCByaW5nTFNpZ1R4bjQ6IFBheVR4biwgcmluZ0xTaWdUeG41OiBQYXlUeG4pOiB2b2lkCmFzc2lnblJvbGU6Cglwcm90byAxMiAwCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MzQ3CgkvLyBhc3NlcnQodGhpcy5nYW1lU3RhdGUudmFsdWUgPT09IHN0YXRlQXNzaWduUm9sZSwgJ0ludmFsaWQgbWV0aG9kIGNhbGw6IEdhbWUgaXMgbm90IGluIEFzc2lnbiBSb2xlIHN0YXRlLicpCglieXRlYyAwIC8vICAiZ2FtZVN0YXRlIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMiAvLyAyCgk9PQoKCS8vIEludmFsaWQgbWV0aG9kIGNhbGw6IEdhbWUgaXMgbm90IGluIEFzc2lnbiBSb2xlIHN0YXRlLgoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MzU2CgkvLyBhc3NlcnQoCgkvLyAgICAgICAhdGhpcy5oYXNoRmlsdGVyKHJhd0J5dGVzKHNoYTI1NihrZXlJbWFnZSkpKS5leGlzdHMsCgkvLyAgICAgICAnS2V5SW1hZ2UgYWxyZWFkeSBpbiBzdG9yZS4gQXJlIHlvdSB0cnlpbmcgdG8gZG91YmxlLWRpcCB3aXRoIHlvdXIgcmluZyBzaWduYXR1cmU/JwoJLy8gICAgICkKCWZyYW1lX2RpZyAtMyAvLyBrZXlJbWFnZTogYnl0ZXMKCXNoYTI1NgoJYm94X2xlbgoJc3dhcAoJcG9wCgkhCgoJLy8gS2V5SW1hZ2UgYWxyZWFkeSBpbiBzdG9yZS4gQXJlIHlvdSB0cnlpbmcgdG8gZG91YmxlLWRpcCB3aXRoIHlvdXIgcmluZyBzaWduYXR1cmU/Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czozNjAKCS8vIHRoaXMuaGFzaEZpbHRlcihyYXdCeXRlcyhzaGEyNTYoa2V5SW1hZ2UpKSkuY3JlYXRlKDApCglmcmFtZV9kaWcgLTMgLy8ga2V5SW1hZ2U6IGJ5dGVzCglzaGEyNTYKCWludGMgMSAvLyAwCglib3hfY3JlYXRlCglwb3AKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czozNjQKCS8vIGFzc2VydChtc2cgPT09IGNvbmNhdChyYXdCeXRlcyh0aGlzLnR4bi5zZW5kZXIpLCByYXdCeXRlcyh0aGlzLmFwcC5hZGRyZXNzKSkpCglmcmFtZV9kaWcgLTEgLy8gbXNnOiBieXRlcwoJdHhuIFNlbmRlcgoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWNvbmNhdAoJPT0KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjM2NwoJLy8gYXNzZXJ0KAoJLy8gICAgICAgdGhpcy5xdWlja0FjY2Vzc1BLQm94ZXMoMCkuZXh0cmFjdCgwLCA2ICogQkxTMTIzODFHMV9MRU5HVEgpID09PSBwa0FsbCwKCS8vICAgICAgICdJbnZhbGlkIFBLcyEgQXJlIHlvdSB0cnlpbmcgdG8gcGFzcyBpbiBhIGRpZmZlcmVudCByaW5nIG9mIFBLcz8nCgkvLyAgICAgKQoJYnl0ZWMgMTAgLy8gMHgwMDAwMDAwMDAwMDAwMDAwCglpbnRjIDEgLy8gMAoJcHVzaGludCA1NzYKCWJveF9leHRyYWN0CglmcmFtZV9kaWcgLTIgLy8gcGtBbGw6IGJ5dGVzCgk9PQoKCS8vIEludmFsaWQgUEtzISBBcmUgeW91IHRyeWluZyB0byBwYXNzIGluIGEgZGlmZmVyZW50IHJpbmcgb2YgUEtzPwoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6Mzc0CgkvLyB2ZXJpZnlUeG4ocmluZ0xTaWdUeG4wLCB7IHNlbmRlcjogQWRkcmVzcy5mcm9tQnl0ZXMoUmluZ0xpbmtMU2lnMC5hZGRyZXNzKCkpIH0pCgkvLyB2ZXJpZnkgc2VuZGVyCglmcmFtZV9kaWcgLTcgLy8gcmluZ0xTaWdUeG4wOiBQYXlUeG4KCWd0eG5zIFNlbmRlcgoJcHVzaGJ5dGVzIDB4Y2NiNDI4YmFkODYxNTlhODBlMWU5Y2E0MjRlYmEzNjYxMmY0OTFkMDkwYTIyOTA3MWMwMzRhZDRiZmRlYmFjNyAvLyBhZGRyICJaUzJDUk9XWU1GTTJRRFE2VFNTQ0oyNURNWUpQSkVPUVNDUkNTQlk0QU5GTkpQNjZYTERWNjVLUEJRIgoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6InJpbmdMU2lnVHhuMCIsImZpZWxkIjoic2VuZGVyIiwiZXhwZWN0ZWQiOiJBZGRyZXNzLmZyb21CeXRlcyhSaW5nTGlua0xTaWcwLmFkZHJlc3MoKSkifQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6Mzc1CgkvLyB2ZXJpZnlUeG4ocmluZ0xTaWdUeG4xLCB7IHNlbmRlcjogQWRkcmVzcy5mcm9tQnl0ZXMoUmluZ0xpbmtMU2lnMS5hZGRyZXNzKCkpIH0pCgkvLyB2ZXJpZnkgc2VuZGVyCglmcmFtZV9kaWcgLTggLy8gcmluZ0xTaWdUeG4xOiBQYXlUeG4KCWd0eG5zIFNlbmRlcgoJcHVzaGJ5dGVzIDB4ZTA2ZTY0YmMwMGY3YmE2NWFiNTJlNjU0YWYxYzQ0MDYzYmQ2ODBlMDU0ZGM5ZTc5MjBkNTFiYTIyMzNiNTQ2NSAvLyBhZGRyICI0QlhHSlBBQTY2NUdMSzJTNFpLSzZIQ0VBWTU1TkFIQUtUT0o0NkpBMlVOMkVJWjNLUlNSN1JNREFRIgoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6InJpbmdMU2lnVHhuMSIsImZpZWxkIjoic2VuZGVyIiwiZXhwZWN0ZWQiOiJBZGRyZXNzLmZyb21CeXRlcyhSaW5nTGlua0xTaWcxLmFkZHJlc3MoKSkifQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6Mzc2CgkvLyB2ZXJpZnlUeG4ocmluZ0xTaWdUeG4yLCB7IHNlbmRlcjogQWRkcmVzcy5mcm9tQnl0ZXMoUmluZ0xpbmtMU2lnMi5hZGRyZXNzKCkpIH0pCgkvLyB2ZXJpZnkgc2VuZGVyCglmcmFtZV9kaWcgLTkgLy8gcmluZ0xTaWdUeG4yOiBQYXlUeG4KCWd0eG5zIFNlbmRlcgoJcHVzaGJ5dGVzIDB4NTkwNzczYmMzN2JmODljZGNjZjJkMzBkNThhMTdmZDczMzNhODE3NjljMzVkZjMxZTAxZmIyYWRjZjc2Mjk4NCAvLyBhZGRyICJMRURYSFBCWFg2RTQzVEhTMk1HVlJJTDcyNFpUVkFMV1RRMjU2TVBBRDZaSzNUM1dGR0NKTkwySDJRIgoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6InJpbmdMU2lnVHhuMiIsImZpZWxkIjoic2VuZGVyIiwiZXhwZWN0ZWQiOiJBZGRyZXNzLmZyb21CeXRlcyhSaW5nTGlua0xTaWcyLmFkZHJlc3MoKSkifQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6Mzc3CgkvLyB2ZXJpZnlUeG4ocmluZ0xTaWdUeG4zLCB7IHNlbmRlcjogQWRkcmVzcy5mcm9tQnl0ZXMoUmluZ0xpbmtMU2lnMy5hZGRyZXNzKCkpIH0pCgkvLyB2ZXJpZnkgc2VuZGVyCglmcmFtZV9kaWcgLTEwIC8vIHJpbmdMU2lnVHhuMzogUGF5VHhuCglndHhucyBTZW5kZXIKCXB1c2hieXRlcyAweDVkMDlmMmUzM2RlMDQyODUzMDRiYWM2NjE4ZDY5ZWNmOWE5MzlmM2QyNTZjNmVhZGM4YmFkNjc2YmJhMGYzNmIgLy8gYWRkciAiTFVFN0ZZWjU0QkJJS01DTFZSVEJSVlU2WjZOSkhIWjVFVldHNUxPSVhMTEhOTzVBNk5WVlpNUUFLNCIKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJyaW5nTFNpZ1R4bjMiLCJmaWVsZCI6InNlbmRlciIsImV4cGVjdGVkIjoiQWRkcmVzcy5mcm9tQnl0ZXMoUmluZ0xpbmtMU2lnMy5hZGRyZXNzKCkpIn0KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjM3OAoJLy8gdmVyaWZ5VHhuKHJpbmdMU2lnVHhuNCwgeyBzZW5kZXI6IEFkZHJlc3MuZnJvbUJ5dGVzKFJpbmdMaW5rTFNpZzQuYWRkcmVzcygpKSB9KQoJLy8gdmVyaWZ5IHNlbmRlcgoJZnJhbWVfZGlnIC0xMSAvLyByaW5nTFNpZ1R4bjQ6IFBheVR4bgoJZ3R4bnMgU2VuZGVyCglwdXNoYnl0ZXMgMHgzZmNmN2YyZjE0ODY3ZThjODRkYjE5NDY3ZTE3M2YwMmI0YWE3YjYzZTY3MGI2YzZhNzFkZTdjZTNjYjRhMWFlIC8vIGFkZHIgIkg3SFg2TFlVUVo3SVpCRzNERkRINEZaN0FLMktVNjNENFpZTE5SVkhEWFQ0NFBGVVVHWEEyQU5NR00iCgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoicmluZ0xTaWdUeG40IiwiZmllbGQiOiJzZW5kZXIiLCJleHBlY3RlZCI6IkFkZHJlc3MuZnJvbUJ5dGVzKFJpbmdMaW5rTFNpZzQuYWRkcmVzcygpKSJ9Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czozNzkKCS8vIHZlcmlmeVR4bihyaW5nTFNpZ1R4bjUsIHsgc2VuZGVyOiBBZGRyZXNzLmZyb21CeXRlcyhSaW5nTGlua0xTaWc1LmFkZHJlc3MoKSkgfSkKCS8vIHZlcmlmeSBzZW5kZXIKCWZyYW1lX2RpZyAtMTIgLy8gcmluZ0xTaWdUeG41OiBQYXlUeG4KCWd0eG5zIFNlbmRlcgoJcHVzaGJ5dGVzIDB4MDFmYzEwYThjZjNhZmE1MjdiZDcxM2ZjMTVkNWMyNTRjMWI4MGZmODJhNmUwMjkxYjBlMDFmZWQxNDVjNDU0YiAvLyBhZGRyICJBSDZCQktHUEhMNUZFNjZYQ1A2QkxWT0NLVEEzUUQ3WUZKWEFGRU5RNEFQNjJGQzRJVkZURkRIVVA0IgoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6InJpbmdMU2lnVHhuNSIsImZpZWxkIjoic2VuZGVyIiwiZXhwZWN0ZWQiOiJBZGRyZXNzLmZyb21CeXRlcyhSaW5nTGlua0xTaWc1LmFkZHJlc3MoKSkifQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6MzgyCgkvLyB2ZXJpZnlUeG4oZnVuZGVyTFNpZ1R4biwgewoJLy8gICAgICAgc2VuZGVyOiBBZGRyZXNzLmZyb21CeXRlcyh0aGlzLmxzaWdGdW5kZXJBZGRyZXNzLnZhbHVlKSwKCS8vICAgICAgIHJlY2VpdmVyOiB0aGlzLnR4bi5zZW5kZXIsCgkvLyAgICAgICBhbW91bnQ6IExTSUdfRlVORF9BTU9VTlQsCgkvLyAgICAgfSkKCS8vIHZlcmlmeSBzZW5kZXIKCWZyYW1lX2RpZyAtNiAvLyBmdW5kZXJMU2lnVHhuOiBQYXlUeG4KCWd0eG5zIFNlbmRlcgoJYnl0ZWMgMjIgLy8gICJsc2lnRnVuZGVyQWRkcmVzcyIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoiZnVuZGVyTFNpZ1R4biIsImZpZWxkIjoic2VuZGVyIiwiZXhwZWN0ZWQiOiJBZGRyZXNzLmZyb21CeXRlcyh0aGlzLmxzaWdGdW5kZXJBZGRyZXNzLnZhbHVlKSJ9Cglhc3NlcnQKCgkvLyB2ZXJpZnkgcmVjZWl2ZXIKCWZyYW1lX2RpZyAtNiAvLyBmdW5kZXJMU2lnVHhuOiBQYXlUeG4KCWd0eG5zIFJlY2VpdmVyCgl0eG4gU2VuZGVyCgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoiZnVuZGVyTFNpZ1R4biIsImZpZWxkIjoicmVjZWl2ZXIiLCJleHBlY3RlZCI6InRoaXMudHhuLnNlbmRlciJ9Cglhc3NlcnQKCgkvLyB2ZXJpZnkgYW1vdW50CglmcmFtZV9kaWcgLTYgLy8gZnVuZGVyTFNpZ1R4bjogUGF5VHhuCglndHhucyBBbW91bnQKCWludGMgMTMgLy8gMTUwMDAwCgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoiZnVuZGVyTFNpZ1R4biIsImZpZWxkIjoiYW1vdW50IiwiZXhwZWN0ZWQiOiJMU0lHX0ZVTkRfQU1PVU5UIn0KCWFzc2VydAoKCS8vICppZjhfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czozOTMKCS8vIHRoaXMubWFmaWEudmFsdWUgPT09IGdsb2JhbHMuemVyb0FkZHJlc3MKCWJ5dGVjIDIxIC8vICAibWFmaWEiCglhcHBfZ2xvYmFsX2dldAoJZ2xvYmFsIFplcm9BZGRyZXNzCgk9PQoJYnogKmlmOF9lbmQKCgkvLyAqaWY4X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjM5NAoJLy8gdGhpcy5tYWZpYS52YWx1ZSA9IHRoaXMudHhuLnNlbmRlcgoJYnl0ZWMgMjEgLy8gICJtYWZpYSIKCXR4biBTZW5kZXIKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6Mzk1CgkvLyB0aGlzLm1hZmlhS2V5SW1hZ2UudmFsdWUgPSBrZXlJbWFnZQoJYnl0ZWMgMzIgLy8gICJtYWZpYUtleUltYWdlIgoJZnJhbWVfZGlnIC0zIC8vIGtleUltYWdlOiBieXRlcwoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czozOTYKCS8vIHJldHVybjsKCXJldHN1YgoKKmlmOF9lbmQ6CgkvLyAqaWY5X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6Mzk4CgkvLyB0aGlzLmRvY3Rvci52YWx1ZSA9PT0gZ2xvYmFscy56ZXJvQWRkcmVzcwoJYnl0ZWMgMTMgLy8gICJkb2N0b3IiCglhcHBfZ2xvYmFsX2dldAoJZ2xvYmFsIFplcm9BZGRyZXNzCgk9PQoJYnogKmlmOV9lbmQKCgkvLyAqaWY5X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjM5OQoJLy8gdGhpcy5kb2N0b3IudmFsdWUgPSB0aGlzLnR4bi5zZW5kZXIKCWJ5dGVjIDEzIC8vICAiZG9jdG9yIgoJdHhuIFNlbmRlcgoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo0MDAKCS8vIHRoaXMuZG9jdG9yS2V5SW1hZ2UudmFsdWUgPSBrZXlJbWFnZQoJYnl0ZWMgMzEgLy8gICJkb2N0b3JLZXlJbWFnZSIKCWZyYW1lX2RpZyAtMyAvLyBrZXlJbWFnZTogYnl0ZXMKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDAxCgkvLyByZXR1cm47CglyZXRzdWIKCippZjlfZW5kOgoJLy8gKmlmMTBfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo0MDMKCS8vIHRoaXMuZmFybWVyLnZhbHVlID09PSBnbG9iYWxzLnplcm9BZGRyZXNzCglieXRlYyAzNyAvLyAgImZhcm1lciIKCWFwcF9nbG9iYWxfZ2V0CglnbG9iYWwgWmVyb0FkZHJlc3MKCT09CglieiAqaWYxMF9lbmQKCgkvLyAqaWYxMF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo0MDQKCS8vIHRoaXMuZmFybWVyLnZhbHVlID0gdGhpcy50eG4uc2VuZGVyCglieXRlYyAzNyAvLyAgImZhcm1lciIKCXR4biBTZW5kZXIKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDA1CgkvLyB0aGlzLmZhcm1lcktleUltYWdlLnZhbHVlID0ga2V5SW1hZ2UKCWJ5dGVjIDQ0IC8vICAiZmFybWVyS2V5SW1hZ2UiCglmcmFtZV9kaWcgLTMgLy8ga2V5SW1hZ2U6IGJ5dGVzCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQwNgoJLy8gcmV0dXJuOwoJcmV0c3ViCgoqaWYxMF9lbmQ6CgkvLyAqaWYxMV9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQwOAoJLy8gdGhpcy5idXRjaGVyLnZhbHVlID09PSBnbG9iYWxzLnplcm9BZGRyZXNzCglieXRlYyAzNSAvLyAgImJ1dGNoZXIiCglhcHBfZ2xvYmFsX2dldAoJZ2xvYmFsIFplcm9BZGRyZXNzCgk9PQoJYnogKmlmMTFfZW5kCgoJLy8gKmlmMTFfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDA5CgkvLyB0aGlzLmJ1dGNoZXIudmFsdWUgPSB0aGlzLnR4bi5zZW5kZXIKCWJ5dGVjIDM1IC8vICAiYnV0Y2hlciIKCXR4biBTZW5kZXIKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDEwCgkvLyB0aGlzLmJ1dGNoZXJLZXlJbWFnZS52YWx1ZSA9IGtleUltYWdlCglieXRlYyA0MSAvLyAgImJ1dGNoZXJLZXlJbWFnZSIKCWZyYW1lX2RpZyAtMyAvLyBrZXlJbWFnZTogYnl0ZXMKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDExCgkvLyByZXR1cm47CglyZXRzdWIKCippZjExX2VuZDoKCS8vICppZjEyX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDEzCgkvLyB0aGlzLmlubmtlZXAudmFsdWUgPT09IGdsb2JhbHMuemVyb0FkZHJlc3MKCWJ5dGVjIDM2IC8vICAiaW5ua2VlcCIKCWFwcF9nbG9iYWxfZ2V0CglnbG9iYWwgWmVyb0FkZHJlc3MKCT09CglieiAqaWYxMl9lbmQKCgkvLyAqaWYxMl9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo0MTQKCS8vIHRoaXMuaW5ua2VlcC52YWx1ZSA9IHRoaXMudHhuLnNlbmRlcgoJYnl0ZWMgMzYgLy8gICJpbm5rZWVwIgoJdHhuIFNlbmRlcgoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo0MTUKCS8vIHRoaXMuaW5ua2VlcEtleUltYWdlLnZhbHVlID0ga2V5SW1hZ2UKCWJ5dGVjIDQyIC8vICAiaW5ua2VlcEtleUltYWdlIgoJZnJhbWVfZGlnIC0zIC8vIGtleUltYWdlOiBieXRlcwoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo0MTYKCS8vIHJldHVybjsKCXJldHN1YgoKKmlmMTJfZW5kOgoJLy8gKmlmMTNfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo0MTgKCS8vIHRoaXMuZ3JvY2VyLnZhbHVlID09PSBnbG9iYWxzLnplcm9BZGRyZXNzCglieXRlYyAzOCAvLyAgImdyb2NlciIKCWFwcF9nbG9iYWxfZ2V0CglnbG9iYWwgWmVyb0FkZHJlc3MKCT09CglieiAqaWYxM19lbmQKCgkvLyAqaWYxM19jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo0MTkKCS8vIHRoaXMuZ3JvY2VyLnZhbHVlID0gdGhpcy50eG4uc2VuZGVyCglieXRlYyAzOCAvLyAgImdyb2NlciIKCXR4biBTZW5kZXIKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDIwCgkvLyB0aGlzLmdyb2NlcktleUltYWdlLnZhbHVlID0ga2V5SW1hZ2UKCWJ5dGVjIDQ1IC8vICAiZ3JvY2VyS2V5SW1hZ2UiCglmcmFtZV9kaWcgLTMgLy8ga2V5SW1hZ2U6IGJ5dGVzCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQyMQoJLy8gdGhpcy5nYW1lU3RhdGUudmFsdWUgPSBzdGF0ZURheVN0YWdlVm90ZQoJYnl0ZWMgMCAvLyAgImdhbWVTdGF0ZSIKCWludGMgNCAvLyAzCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQyMgoJLy8gcmV0dXJuOwoJcmV0c3ViCgoqaWYxM19lbmQ6CgkvLyBJbnZhbGlkIHN0YXRlISBFcnJvciwgZ2FtZSBzaG91bGQgaGF2ZSBtb3ZlZCB0byB0aGUgbmV4dCBzdGFnZSBhbHJlYWR5LgoJZXJyCglyZXRzdWIKCi8vIGRheVN0YWdlVm90ZSh1aW50NjQpdm9pZAoqYWJpX3JvdXRlX2RheVN0YWdlVm90ZToKCS8vIHZvdGU6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoKCS8vIGV4ZWN1dGUgZGF5U3RhZ2VWb3RlKHVpbnQ2NCl2b2lkCgljYWxsc3ViIGRheVN0YWdlVm90ZQoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gZGF5U3RhZ2VWb3RlKHZvdGU6IHVpbnQ2NCk6IHZvaWQKZGF5U3RhZ2VWb3RlOgoJcHJvdG8gMSAwCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDI5CgkvLyBhc3NlcnQodGhpcy5nYW1lU3RhdGUudmFsdWUgPT09IHN0YXRlRGF5U3RhZ2VWb3RlLCAnSW52YWxpZCBtZXRob2QgY2FsbDogR2FtZSBpcyBub3QgaW4gRGF5IFN0YWdlIFZvdGUgc3RhdGUuJykKCWJ5dGVjIDAgLy8gICJnYW1lU3RhdGUiCglhcHBfZ2xvYmFsX2dldAoJaW50YyA0IC8vIDMKCT09CgoJLy8gSW52YWxpZCBtZXRob2QgY2FsbDogR2FtZSBpcyBub3QgaW4gRGF5IFN0YWdlIFZvdGUgc3RhdGUuCglhc3NlcnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo0MzEKCS8vIGFzc2VydCh2b3RlID4gMCAmJiB2b3RlIDwgNywgJ0ludmFsaWQgdm90ZTogVm90ZSBtdXN0IGJlIGludCAxIDw9IG4gPD0gNi4nKQoJZnJhbWVfZGlnIC0xIC8vIHZvdGU6IHVpbnQ2NAoJaW50YyAxIC8vIDAKCT4KCWR1cAoJYnogKnNraXBfYW5kMAoJZnJhbWVfZGlnIC0xIC8vIHZvdGU6IHVpbnQ2NAoJaW50YyA5IC8vIDcKCTwKCSYmCgoqc2tpcF9hbmQwOgoJLy8gSW52YWxpZCB2b3RlOiBWb3RlIG11c3QgYmUgaW50IDEgPD0gbiA8PSA2LgoJYXNzZXJ0CgoJLy8gKmlmMTRfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo0MzQKCS8vICEoCgkvLyAgICAgICAgIHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5wbGF5ZXIxQWxnb0FkZHIudmFsdWUuYWRkcmVzcyB8fAoJLy8gICAgICAgICB0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMucGxheWVyMkFsZ29BZGRyLnZhbHVlLmFkZHJlc3MgfHwKCS8vICAgICAgICAgdGhpcy50eG4uc2VuZGVyID09PSB0aGlzLnBsYXllcjNBbGdvQWRkci52YWx1ZS5hZGRyZXNzIHx8CgkvLyAgICAgICAgIHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5wbGF5ZXI0QWxnb0FkZHIudmFsdWUuYWRkcmVzcyB8fAoJLy8gICAgICAgICB0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMucGxheWVyNUFsZ29BZGRyLnZhbHVlLmFkZHJlc3MgfHwKCS8vICAgICAgICAgdGhpcy50eG4uc2VuZGVyID09PSB0aGlzLnBsYXllcjZBbGdvQWRkci52YWx1ZS5hZGRyZXNzCgkvLyAgICAgICApCgl0eG4gU2VuZGVyCglieXRlYyAyIC8vICAicGxheWVyMUFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJPT0KCWR1cAoJYm56ICpza2lwX29yNQoJdHhuIFNlbmRlcgoJYnl0ZWMgMyAvLyAgInBsYXllcjJBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCT09Cgl8fAoKKnNraXBfb3I1OgoJZHVwCglibnogKnNraXBfb3I2Cgl0eG4gU2VuZGVyCglieXRlYyA0IC8vICAicGxheWVyM0FsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJPT0KCXx8Cgoqc2tpcF9vcjY6CglkdXAKCWJueiAqc2tpcF9vcjcKCXR4biBTZW5kZXIKCWJ5dGVjIDUgLy8gICJwbGF5ZXI0QWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCgk9PQoJfHwKCipza2lwX29yNzoKCWR1cAoJYm56ICpza2lwX29yOAoJdHhuIFNlbmRlcgoJYnl0ZWMgNiAvLyAgInBsYXllcjVBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCT09Cgl8fAoKKnNraXBfb3I4OgoJZHVwCglibnogKnNraXBfb3I5Cgl0eG4gU2VuZGVyCglieXRlYyA3IC8vICAicGxheWVyNkFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJPT0KCXx8Cgoqc2tpcF9vcjk6CgkhCglieiAqaWYxNF9lbmQKCgkvLyAqaWYxNF9jb25zZXF1ZW50CgkvLyBJbGxlZ2FsIGNhbGw6IEFkZHJlc3Mgc2VuZGVyIG5vdCBhbGxvd2VkIHRvIHZvdGUuCgllcnIKCippZjE0X2VuZDoKCS8vICppZjE1X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDQ2CgkvLyB2b3RlID09PSAxICYmIHRoaXMucGxheWVyMUFsZ29BZGRyLnZhbHVlLmFkZHJlc3MgIT09IGdsb2JhbHMuemVyb0FkZHJlc3MKCWZyYW1lX2RpZyAtMSAvLyB2b3RlOiB1aW50NjQKCWludGMgMCAvLyAxCgk9PQoJZHVwCglieiAqc2tpcF9hbmQxCglieXRlYyAyIC8vICAicGxheWVyMUFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJZ2xvYmFsIFplcm9BZGRyZXNzCgkhPQoJJiYKCipza2lwX2FuZDE6CglieiAqaWYxNV9lbHNlaWYxX2NvbmRpdGlvbgoKCS8vICppZjE1X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ0NwoJLy8gdGhpcy5wbGF5ZXIxUmVjZWl2ZWRWb3Rlcy52YWx1ZSArPSAxCglieXRlYyAxNSAvLyAgInBsYXllcjFSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAxCgkrCglieXRlYyAxNSAvLyAgInBsYXllcjFSZWNlaXZlZFZvdGVzIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMTVfZW5kCgoqaWYxNV9lbHNlaWYxX2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ0OAoJLy8gdm90ZSA9PT0gMiAmJiB0aGlzLnBsYXllcjJBbGdvQWRkci52YWx1ZS5hZGRyZXNzICE9PSBnbG9iYWxzLnplcm9BZGRyZXNzCglmcmFtZV9kaWcgLTEgLy8gdm90ZTogdWludDY0CglpbnRjIDIgLy8gMgoJPT0KCWR1cAoJYnogKnNraXBfYW5kMgoJYnl0ZWMgMyAvLyAgInBsYXllcjJBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWdsb2JhbCBaZXJvQWRkcmVzcwoJIT0KCSYmCgoqc2tpcF9hbmQyOgoJYnogKmlmMTVfZWxzZWlmMl9jb25kaXRpb24KCgkvLyAqaWYxNV9lbHNlaWYxX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ0OQoJLy8gdGhpcy5wbGF5ZXIyUmVjZWl2ZWRWb3Rlcy52YWx1ZSArPSAxCglieXRlYyAxNiAvLyAgInBsYXllcjJSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAxCgkrCglieXRlYyAxNiAvLyAgInBsYXllcjJSZWNlaXZlZFZvdGVzIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMTVfZW5kCgoqaWYxNV9lbHNlaWYyX2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ1MAoJLy8gdm90ZSA9PT0gMyAmJiB0aGlzLnBsYXllcjNBbGdvQWRkci52YWx1ZS5hZGRyZXNzICE9PSBnbG9iYWxzLnplcm9BZGRyZXNzCglmcmFtZV9kaWcgLTEgLy8gdm90ZTogdWludDY0CglpbnRjIDQgLy8gMwoJPT0KCWR1cAoJYnogKnNraXBfYW5kMwoJYnl0ZWMgNCAvLyAgInBsYXllcjNBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWdsb2JhbCBaZXJvQWRkcmVzcwoJIT0KCSYmCgoqc2tpcF9hbmQzOgoJYnogKmlmMTVfZWxzZWlmM19jb25kaXRpb24KCgkvLyAqaWYxNV9lbHNlaWYyX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ1MQoJLy8gdGhpcy5wbGF5ZXIzUmVjZWl2ZWRWb3Rlcy52YWx1ZSArPSAxCglieXRlYyAxNyAvLyAgInBsYXllcjNSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAxCgkrCglieXRlYyAxNyAvLyAgInBsYXllcjNSZWNlaXZlZFZvdGVzIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMTVfZW5kCgoqaWYxNV9lbHNlaWYzX2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ1MgoJLy8gdm90ZSA9PT0gNCAmJiB0aGlzLnBsYXllcjRBbGdvQWRkci52YWx1ZS5hZGRyZXNzICE9PSBnbG9iYWxzLnplcm9BZGRyZXNzCglmcmFtZV9kaWcgLTEgLy8gdm90ZTogdWludDY0CglpbnRjIDcgLy8gNAoJPT0KCWR1cAoJYnogKnNraXBfYW5kNAoJYnl0ZWMgNSAvLyAgInBsYXllcjRBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWdsb2JhbCBaZXJvQWRkcmVzcwoJIT0KCSYmCgoqc2tpcF9hbmQ0OgoJYnogKmlmMTVfZWxzZWlmNF9jb25kaXRpb24KCgkvLyAqaWYxNV9lbHNlaWYzX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ1MwoJLy8gdGhpcy5wbGF5ZXI0UmVjZWl2ZWRWb3Rlcy52YWx1ZSArPSAxCglieXRlYyAxOCAvLyAgInBsYXllcjRSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAxCgkrCglieXRlYyAxOCAvLyAgInBsYXllcjRSZWNlaXZlZFZvdGVzIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMTVfZW5kCgoqaWYxNV9lbHNlaWY0X2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ1NAoJLy8gdm90ZSA9PT0gNSAmJiB0aGlzLnBsYXllcjVBbGdvQWRkci52YWx1ZS5hZGRyZXNzICE9PSBnbG9iYWxzLnplcm9BZGRyZXNzCglmcmFtZV9kaWcgLTEgLy8gdm90ZTogdWludDY0CglpbnRjIDggLy8gNQoJPT0KCWR1cAoJYnogKnNraXBfYW5kNQoJYnl0ZWMgNiAvLyAgInBsYXllcjVBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWdsb2JhbCBaZXJvQWRkcmVzcwoJIT0KCSYmCgoqc2tpcF9hbmQ1OgoJYnogKmlmMTVfZWxzZWlmNV9jb25kaXRpb24KCgkvLyAqaWYxNV9lbHNlaWY0X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ1NQoJLy8gdGhpcy5wbGF5ZXI1UmVjZWl2ZWRWb3Rlcy52YWx1ZSArPSAxCglieXRlYyAxOSAvLyAgInBsYXllcjVSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAxCgkrCglieXRlYyAxOSAvLyAgInBsYXllcjVSZWNlaXZlZFZvdGVzIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMTVfZW5kCgoqaWYxNV9lbHNlaWY1X2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ1NgoJLy8gdm90ZSA9PT0gNiAmJiB0aGlzLnBsYXllcjZBbGdvQWRkci52YWx1ZS5hZGRyZXNzICE9PSBnbG9iYWxzLnplcm9BZGRyZXNzCglmcmFtZV9kaWcgLTEgLy8gdm90ZTogdWludDY0CglpbnRjIDMgLy8gNgoJPT0KCWR1cAoJYnogKnNraXBfYW5kNgoJYnl0ZWMgNyAvLyAgInBsYXllcjZBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWdsb2JhbCBaZXJvQWRkcmVzcwoJIT0KCSYmCgoqc2tpcF9hbmQ2OgoJYnogKmlmMTVfZWxzZQoKCS8vICppZjE1X2Vsc2VpZjVfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDU3CgkvLyB0aGlzLnBsYXllcjZSZWNlaXZlZFZvdGVzLnZhbHVlICs9IDEKCWJ5dGVjIDIwIC8vICAicGxheWVyNlJlY2VpdmVkVm90ZXMiCglhcHBfZ2xvYmFsX2dldAoJaW50YyAwIC8vIDEKCSsKCWJ5dGVjIDIwIC8vICAicGxheWVyNlJlY2VpdmVkVm90ZXMiCglzd2FwCglhcHBfZ2xvYmFsX3B1dAoJYiAqaWYxNV9lbmQKCippZjE1X2Vsc2U6CgkvLyBJbnZhbGlkIHZvdGU6IElzIHBsYXllciBzdGlsbCBhbGl2ZT8KCWVycgoKKmlmMTVfZW5kOgoJLy8gKmlmMTZfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo0NjIKCS8vIHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5wbGF5ZXIxQWxnb0FkZHIudmFsdWUuYWRkcmVzcyAmJiB0aGlzLnBsYXllcjFIYXNWb3RlZC52YWx1ZSA9PT0gMAoJdHhuIFNlbmRlcgoJYnl0ZWMgMiAvLyAgInBsYXllcjFBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCT09CglkdXAKCWJ6ICpza2lwX2FuZDcKCWJ5dGVjIDI1IC8vICAicGxheWVyMUhhc1ZvdGVkIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMSAvLyAwCgk9PQoJJiYKCipza2lwX2FuZDc6CglieiAqaWYxNl9lbHNlaWYxX2NvbmRpdGlvbgoKCS8vICppZjE2X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ2MwoJLy8gdGhpcy5wbGF5ZXIxSGFzVm90ZWQudmFsdWUgPSAxCglieXRlYyAyNSAvLyAgInBsYXllcjFIYXNWb3RlZCIKCWludGMgMCAvLyAxCglhcHBfZ2xvYmFsX3B1dAoJYiAqaWYxNl9lbmQKCippZjE2X2Vsc2VpZjFfY29uZGl0aW9uOgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDY0CgkvLyB0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMucGxheWVyMkFsZ29BZGRyLnZhbHVlLmFkZHJlc3MgJiYgdGhpcy5wbGF5ZXIySGFzVm90ZWQudmFsdWUgPT09IDAKCXR4biBTZW5kZXIKCWJ5dGVjIDMgLy8gICJwbGF5ZXIyQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCgk9PQoJZHVwCglieiAqc2tpcF9hbmQ4CglieXRlYyAyNiAvLyAgInBsYXllcjJIYXNWb3RlZCIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDEgLy8gMAoJPT0KCSYmCgoqc2tpcF9hbmQ4OgoJYnogKmlmMTZfZWxzZWlmMl9jb25kaXRpb24KCgkvLyAqaWYxNl9lbHNlaWYxX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ2NQoJLy8gdGhpcy5wbGF5ZXIySGFzVm90ZWQudmFsdWUgPSAxCglieXRlYyAyNiAvLyAgInBsYXllcjJIYXNWb3RlZCIKCWludGMgMCAvLyAxCglhcHBfZ2xvYmFsX3B1dAoJYiAqaWYxNl9lbmQKCippZjE2X2Vsc2VpZjJfY29uZGl0aW9uOgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDY2CgkvLyB0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMucGxheWVyM0FsZ29BZGRyLnZhbHVlLmFkZHJlc3MgJiYgdGhpcy5wbGF5ZXIzSGFzVm90ZWQudmFsdWUgPT09IDAKCXR4biBTZW5kZXIKCWJ5dGVjIDQgLy8gICJwbGF5ZXIzQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCgk9PQoJZHVwCglieiAqc2tpcF9hbmQ5CglieXRlYyAyNyAvLyAgInBsYXllcjNIYXNWb3RlZCIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDEgLy8gMAoJPT0KCSYmCgoqc2tpcF9hbmQ5OgoJYnogKmlmMTZfZWxzZWlmM19jb25kaXRpb24KCgkvLyAqaWYxNl9lbHNlaWYyX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ2NwoJLy8gdGhpcy5wbGF5ZXIzSGFzVm90ZWQudmFsdWUgPSAxCglieXRlYyAyNyAvLyAgInBsYXllcjNIYXNWb3RlZCIKCWludGMgMCAvLyAxCglhcHBfZ2xvYmFsX3B1dAoJYiAqaWYxNl9lbmQKCippZjE2X2Vsc2VpZjNfY29uZGl0aW9uOgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDY4CgkvLyB0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMucGxheWVyNEFsZ29BZGRyLnZhbHVlLmFkZHJlc3MgJiYgdGhpcy5wbGF5ZXI0SGFzVm90ZWQudmFsdWUgPT09IDAKCXR4biBTZW5kZXIKCWJ5dGVjIDUgLy8gICJwbGF5ZXI0QWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCgk9PQoJZHVwCglieiAqc2tpcF9hbmQxMAoJYnl0ZWMgMjggLy8gICJwbGF5ZXI0SGFzVm90ZWQiCglhcHBfZ2xvYmFsX2dldAoJaW50YyAxIC8vIDAKCT09CgkmJgoKKnNraXBfYW5kMTA6CglieiAqaWYxNl9lbHNlaWY0X2NvbmRpdGlvbgoKCS8vICppZjE2X2Vsc2VpZjNfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDY5CgkvLyB0aGlzLnBsYXllcjRIYXNWb3RlZC52YWx1ZSA9IDEKCWJ5dGVjIDI4IC8vICAicGxheWVyNEhhc1ZvdGVkIgoJaW50YyAwIC8vIDEKCWFwcF9nbG9iYWxfcHV0CgliICppZjE2X2VuZAoKKmlmMTZfZWxzZWlmNF9jb25kaXRpb246CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo0NzAKCS8vIHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5wbGF5ZXI1QWxnb0FkZHIudmFsdWUuYWRkcmVzcyAmJiB0aGlzLnBsYXllcjVIYXNWb3RlZC52YWx1ZSA9PT0gMAoJdHhuIFNlbmRlcgoJYnl0ZWMgNiAvLyAgInBsYXllcjVBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCT09CglkdXAKCWJ6ICpza2lwX2FuZDExCglieXRlYyAyOSAvLyAgInBsYXllcjVIYXNWb3RlZCIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDEgLy8gMAoJPT0KCSYmCgoqc2tpcF9hbmQxMToKCWJ6ICppZjE2X2Vsc2VpZjVfY29uZGl0aW9uCgoJLy8gKmlmMTZfZWxzZWlmNF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo0NzEKCS8vIHRoaXMucGxheWVyNUhhc1ZvdGVkLnZhbHVlID0gMQoJYnl0ZWMgMjkgLy8gICJwbGF5ZXI1SGFzVm90ZWQiCglpbnRjIDAgLy8gMQoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMTZfZW5kCgoqaWYxNl9lbHNlaWY1X2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ3MgoJLy8gdGhpcy50eG4uc2VuZGVyID09PSB0aGlzLnBsYXllcjZBbGdvQWRkci52YWx1ZS5hZGRyZXNzICYmIHRoaXMucGxheWVyNkhhc1ZvdGVkLnZhbHVlID09PSAwCgl0eG4gU2VuZGVyCglieXRlYyA3IC8vICAicGxheWVyNkFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJPT0KCWR1cAoJYnogKnNraXBfYW5kMTIKCWJ5dGVjIDMwIC8vICAicGxheWVyNkhhc1ZvdGVkIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMSAvLyAwCgk9PQoJJiYKCipza2lwX2FuZDEyOgoJYnogKmlmMTZfZWxzZQoKCS8vICppZjE2X2Vsc2VpZjVfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDczCgkvLyB0aGlzLnBsYXllcjZIYXNWb3RlZC52YWx1ZSA9IDEKCWJ5dGVjIDMwIC8vICAicGxheWVyNkhhc1ZvdGVkIgoJaW50YyAwIC8vIDEKCWFwcF9nbG9iYWxfcHV0CgliICppZjE2X2VuZAoKKmlmMTZfZWxzZToKCS8vIEFkZHJlc3Mgbm90IGFsbG93ZWQgdG8gdm90ZS4KCWVycgoKKmlmMTZfZW5kOgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDc4CgkvLyB0aGlzLnBsYXllcnNWb3RlZC52YWx1ZSArPSAxCglieXRlYyAyMyAvLyAgInBsYXllcnNWb3RlZCIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDAgLy8gMQoJKwoJYnl0ZWMgMjMgLy8gICJwbGF5ZXJzVm90ZWQiCglzd2FwCglhcHBfZ2xvYmFsX3B1dAoKCS8vICppZjE3X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NDgwCgkvLyB0aGlzLnBsYXllcnNWb3RlZC52YWx1ZSA9PT0gdGhpcy5wbGF5ZXJzQWxpdmUudmFsdWUKCWJ5dGVjIDIzIC8vICAicGxheWVyc1ZvdGVkIgoJYXBwX2dsb2JhbF9nZXQKCWJ5dGVjIDE0IC8vICAicGxheWVyc0FsaXZlIgoJYXBwX2dsb2JhbF9nZXQKCT09CglieiAqaWYxN19lbmQKCgkvLyAqaWYxN19jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo0ODIKCS8vIHRoaXMuZ2FtZVN0YXRlLnZhbHVlID0gc3RhdGVEYXlTdGFnZUVsaW1pbmF0ZQoJYnl0ZWMgMCAvLyAgImdhbWVTdGF0ZSIKCWludGMgNyAvLyA0CglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ4NQoJLy8gdGhpcy5wbGF5ZXJzVm90ZWQudmFsdWUgPSAwCglieXRlYyAyMyAvLyAgInBsYXllcnNWb3RlZCIKCWludGMgMSAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ4NgoJLy8gdGhpcy5wbGF5ZXIxSGFzVm90ZWQudmFsdWUgPSAwCglieXRlYyAyNSAvLyAgInBsYXllcjFIYXNWb3RlZCIKCWludGMgMSAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ4NwoJLy8gdGhpcy5wbGF5ZXIySGFzVm90ZWQudmFsdWUgPSAwCglieXRlYyAyNiAvLyAgInBsYXllcjJIYXNWb3RlZCIKCWludGMgMSAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ4OAoJLy8gdGhpcy5wbGF5ZXIzSGFzVm90ZWQudmFsdWUgPSAwCglieXRlYyAyNyAvLyAgInBsYXllcjNIYXNWb3RlZCIKCWludGMgMSAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ4OQoJLy8gdGhpcy5wbGF5ZXI0SGFzVm90ZWQudmFsdWUgPSAwCglieXRlYyAyOCAvLyAgInBsYXllcjRIYXNWb3RlZCIKCWludGMgMSAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ5MAoJLy8gdGhpcy5wbGF5ZXI1SGFzVm90ZWQudmFsdWUgPSAwCglieXRlYyAyOSAvLyAgInBsYXllcjVIYXNWb3RlZCIKCWludGMgMSAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjQ5MQoJLy8gdGhpcy5wbGF5ZXI2SGFzVm90ZWQudmFsdWUgPSAwCglieXRlYyAzMCAvLyAgInBsYXllcjZIYXNWb3RlZCIKCWludGMgMSAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKKmlmMTdfZW5kOgoJcmV0c3ViCgovLyBkYXlTdGFnZUVsaW1pbmF0ZSgpdm9pZAoqYWJpX3JvdXRlX2RheVN0YWdlRWxpbWluYXRlOgoJLy8gZXhlY3V0ZSBkYXlTdGFnZUVsaW1pbmF0ZSgpdm9pZAoJY2FsbHN1YiBkYXlTdGFnZUVsaW1pbmF0ZQoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gZGF5U3RhZ2VFbGltaW5hdGUoKTogdm9pZApkYXlTdGFnZUVsaW1pbmF0ZToKCXByb3RvIDAgMAoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlYyA4IC8vIDB4CglkdXAKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo0OTgKCS8vIGFzc2VydCgKCS8vICAgICAgIHRoaXMuZ2FtZVN0YXRlLnZhbHVlID09PSBzdGF0ZURheVN0YWdlRWxpbWluYXRlLAoJLy8gICAgICAgJ0ludmFsaWQgbWV0aG9kIGNhbGw6IEdhbWUgaXMgbm90IGluIERheSBTdGFnZSBFbGltaW5hdGUgc3RhdGUuJwoJLy8gICAgICkKCWJ5dGVjIDAgLy8gICJnYW1lU3RhdGUiCglhcHBfZ2xvYmFsX2dldAoJaW50YyA3IC8vIDQKCT09CgoJLy8gSW52YWxpZCBtZXRob2QgY2FsbDogR2FtZSBpcyBub3QgaW4gRGF5IFN0YWdlIEVsaW1pbmF0ZSBzdGF0ZS4KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUwMwoJLy8gdGhpcy5qdXN0RWxpbWluYXRlZFBsYXllci52YWx1ZSA9IGdsb2JhbHMuemVyb0FkZHJlc3MKCWJ5dGVjIDEgLy8gICJqdXN0RWxpbWluYXRlZFBsYXllciIKCWdsb2JhbCBaZXJvQWRkcmVzcwoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo1MDQKCS8vIHRvcFZvdGVzID0gMAoJaW50YyAxIC8vIDAKCWZyYW1lX2J1cnkgMCAvLyB0b3BWb3RlczogdWludDY0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NTEwCgkvLyBldmVuID0gZ2xvYmFscy5yb3VuZCAlIDIgPT09IDAKCWdsb2JhbCBSb3VuZAoJaW50YyAyIC8vIDIKCSUKCWludGMgMSAvLyAwCgk9PQoJZnJhbWVfYnVyeSAxIC8vIGV2ZW46IGJvb2wKCgkvLyAqaWYxOF9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUxMgoJLy8gdGhpcy5wbGF5ZXIxUmVjZWl2ZWRWb3Rlcy52YWx1ZSA+IHRvcFZvdGVzIHx8ICh0aGlzLnBsYXllcjFSZWNlaXZlZFZvdGVzLnZhbHVlID09PSB0b3BWb3RlcyAmJiBldmVuKQoJYnl0ZWMgMTUgLy8gICJwbGF5ZXIxUmVjZWl2ZWRWb3RlcyIKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgMCAvLyB0b3BWb3RlczogdWludDY0Cgk+CglkdXAKCWJueiAqc2tpcF9vcjEwCglieXRlYyAxNSAvLyAgInBsYXllcjFSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2RpZyAwIC8vIHRvcFZvdGVzOiB1aW50NjQKCT09CglkdXAKCWJ6ICpza2lwX2FuZDEzCglmcmFtZV9kaWcgMSAvLyBldmVuOiBib29sCgkmJgoKKnNraXBfYW5kMTM6Cgl8fAoKKnNraXBfb3IxMDoKCWJ6ICppZjE4X2VuZAoKCS8vICppZjE4X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUxMwoJLy8gdGhpcy5qdXN0RWxpbWluYXRlZFBsYXllci52YWx1ZSA9IHRoaXMucGxheWVyMUFsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWJ5dGVjIDEgLy8gICJqdXN0RWxpbWluYXRlZFBsYXllciIKCWJ5dGVjIDIgLy8gICJwbGF5ZXIxQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUxNAoJLy8gdG9wVm90ZXMgPSB0aGlzLnBsYXllcjFSZWNlaXZlZFZvdGVzLnZhbHVlCglieXRlYyAxNSAvLyAgInBsYXllcjFSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2J1cnkgMCAvLyB0b3BWb3RlczogdWludDY0CgoqaWYxOF9lbmQ6CgkvLyAqaWYxOV9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUxNwoJLy8gdGhpcy5wbGF5ZXIyUmVjZWl2ZWRWb3Rlcy52YWx1ZSA+IHRvcFZvdGVzIHx8ICh0aGlzLnBsYXllcjJSZWNlaXZlZFZvdGVzLnZhbHVlID09PSB0b3BWb3RlcyAmJiBldmVuKQoJYnl0ZWMgMTYgLy8gICJwbGF5ZXIyUmVjZWl2ZWRWb3RlcyIKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgMCAvLyB0b3BWb3RlczogdWludDY0Cgk+CglkdXAKCWJueiAqc2tpcF9vcjExCglieXRlYyAxNiAvLyAgInBsYXllcjJSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2RpZyAwIC8vIHRvcFZvdGVzOiB1aW50NjQKCT09CglkdXAKCWJ6ICpza2lwX2FuZDE0CglmcmFtZV9kaWcgMSAvLyBldmVuOiBib29sCgkmJgoKKnNraXBfYW5kMTQ6Cgl8fAoKKnNraXBfb3IxMToKCWJ6ICppZjE5X2VuZAoKCS8vICppZjE5X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUxOAoJLy8gdGhpcy5qdXN0RWxpbWluYXRlZFBsYXllci52YWx1ZSA9IHRoaXMucGxheWVyMkFsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWJ5dGVjIDEgLy8gICJqdXN0RWxpbWluYXRlZFBsYXllciIKCWJ5dGVjIDMgLy8gICJwbGF5ZXIyQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUxOQoJLy8gdG9wVm90ZXMgPSB0aGlzLnBsYXllcjJSZWNlaXZlZFZvdGVzLnZhbHVlCglieXRlYyAxNiAvLyAgInBsYXllcjJSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2J1cnkgMCAvLyB0b3BWb3RlczogdWludDY0CgoqaWYxOV9lbmQ6CgkvLyAqaWYyMF9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUyMgoJLy8gdGhpcy5wbGF5ZXIzUmVjZWl2ZWRWb3Rlcy52YWx1ZSA+IHRvcFZvdGVzIHx8ICh0aGlzLnBsYXllcjNSZWNlaXZlZFZvdGVzLnZhbHVlID09PSB0b3BWb3RlcyAmJiBldmVuKQoJYnl0ZWMgMTcgLy8gICJwbGF5ZXIzUmVjZWl2ZWRWb3RlcyIKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgMCAvLyB0b3BWb3RlczogdWludDY0Cgk+CglkdXAKCWJueiAqc2tpcF9vcjEyCglieXRlYyAxNyAvLyAgInBsYXllcjNSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2RpZyAwIC8vIHRvcFZvdGVzOiB1aW50NjQKCT09CglkdXAKCWJ6ICpza2lwX2FuZDE1CglmcmFtZV9kaWcgMSAvLyBldmVuOiBib29sCgkmJgoKKnNraXBfYW5kMTU6Cgl8fAoKKnNraXBfb3IxMjoKCWJ6ICppZjIwX2VuZAoKCS8vICppZjIwX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUyMwoJLy8gdGhpcy5qdXN0RWxpbWluYXRlZFBsYXllci52YWx1ZSA9IHRoaXMucGxheWVyM0FsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWJ5dGVjIDEgLy8gICJqdXN0RWxpbWluYXRlZFBsYXllciIKCWJ5dGVjIDQgLy8gICJwbGF5ZXIzQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUyNAoJLy8gdG9wVm90ZXMgPSB0aGlzLnBsYXllcjNSZWNlaXZlZFZvdGVzLnZhbHVlCglieXRlYyAxNyAvLyAgInBsYXllcjNSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2J1cnkgMCAvLyB0b3BWb3RlczogdWludDY0CgoqaWYyMF9lbmQ6CgkvLyAqaWYyMV9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUyNwoJLy8gdGhpcy5wbGF5ZXI0UmVjZWl2ZWRWb3Rlcy52YWx1ZSA+IHRvcFZvdGVzIHx8ICh0aGlzLnBsYXllcjRSZWNlaXZlZFZvdGVzLnZhbHVlID09PSB0b3BWb3RlcyAmJiBldmVuKQoJYnl0ZWMgMTggLy8gICJwbGF5ZXI0UmVjZWl2ZWRWb3RlcyIKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgMCAvLyB0b3BWb3RlczogdWludDY0Cgk+CglkdXAKCWJueiAqc2tpcF9vcjEzCglieXRlYyAxOCAvLyAgInBsYXllcjRSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2RpZyAwIC8vIHRvcFZvdGVzOiB1aW50NjQKCT09CglkdXAKCWJ6ICpza2lwX2FuZDE2CglmcmFtZV9kaWcgMSAvLyBldmVuOiBib29sCgkmJgoKKnNraXBfYW5kMTY6Cgl8fAoKKnNraXBfb3IxMzoKCWJ6ICppZjIxX2VuZAoKCS8vICppZjIxX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUyOAoJLy8gdGhpcy5qdXN0RWxpbWluYXRlZFBsYXllci52YWx1ZSA9IHRoaXMucGxheWVyNEFsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWJ5dGVjIDEgLy8gICJqdXN0RWxpbWluYXRlZFBsYXllciIKCWJ5dGVjIDUgLy8gICJwbGF5ZXI0QWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUyOQoJLy8gdG9wVm90ZXMgPSB0aGlzLnBsYXllcjRSZWNlaXZlZFZvdGVzLnZhbHVlCglieXRlYyAxOCAvLyAgInBsYXllcjRSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2J1cnkgMCAvLyB0b3BWb3RlczogdWludDY0CgoqaWYyMV9lbmQ6CgkvLyAqaWYyMl9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUzMgoJLy8gdGhpcy5wbGF5ZXI1UmVjZWl2ZWRWb3Rlcy52YWx1ZSA+IHRvcFZvdGVzIHx8ICh0aGlzLnBsYXllcjVSZWNlaXZlZFZvdGVzLnZhbHVlID09PSB0b3BWb3RlcyAmJiBldmVuKQoJYnl0ZWMgMTkgLy8gICJwbGF5ZXI1UmVjZWl2ZWRWb3RlcyIKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgMCAvLyB0b3BWb3RlczogdWludDY0Cgk+CglkdXAKCWJueiAqc2tpcF9vcjE0CglieXRlYyAxOSAvLyAgInBsYXllcjVSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2RpZyAwIC8vIHRvcFZvdGVzOiB1aW50NjQKCT09CglkdXAKCWJ6ICpza2lwX2FuZDE3CglmcmFtZV9kaWcgMSAvLyBldmVuOiBib29sCgkmJgoKKnNraXBfYW5kMTc6Cgl8fAoKKnNraXBfb3IxNDoKCWJ6ICppZjIyX2VuZAoKCS8vICppZjIyX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUzMwoJLy8gdGhpcy5qdXN0RWxpbWluYXRlZFBsYXllci52YWx1ZSA9IHRoaXMucGxheWVyNUFsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWJ5dGVjIDEgLy8gICJqdXN0RWxpbWluYXRlZFBsYXllciIKCWJ5dGVjIDYgLy8gICJwbGF5ZXI1QWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUzNAoJLy8gdG9wVm90ZXMgPSB0aGlzLnBsYXllcjVSZWNlaXZlZFZvdGVzLnZhbHVlCglieXRlYyAxOSAvLyAgInBsYXllcjVSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2J1cnkgMCAvLyB0b3BWb3RlczogdWludDY0CgoqaWYyMl9lbmQ6CgkvLyAqaWYyM19jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUzNwoJLy8gdGhpcy5wbGF5ZXI2UmVjZWl2ZWRWb3Rlcy52YWx1ZSA+IHRvcFZvdGVzIHx8ICh0aGlzLnBsYXllcjZSZWNlaXZlZFZvdGVzLnZhbHVlID09PSB0b3BWb3RlcyAmJiBldmVuKQoJYnl0ZWMgMjAgLy8gICJwbGF5ZXI2UmVjZWl2ZWRWb3RlcyIKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgMCAvLyB0b3BWb3RlczogdWludDY0Cgk+CglkdXAKCWJueiAqc2tpcF9vcjE1CglieXRlYyAyMCAvLyAgInBsYXllcjZSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2RpZyAwIC8vIHRvcFZvdGVzOiB1aW50NjQKCT09CglkdXAKCWJ6ICpza2lwX2FuZDE4CglmcmFtZV9kaWcgMSAvLyBldmVuOiBib29sCgkmJgoKKnNraXBfYW5kMTg6Cgl8fAoKKnNraXBfb3IxNToKCWJ6ICppZjIzX2VuZAoKCS8vICppZjIzX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUzOAoJLy8gdGhpcy5qdXN0RWxpbWluYXRlZFBsYXllci52YWx1ZSA9IHRoaXMucGxheWVyNkFsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWJ5dGVjIDEgLy8gICJqdXN0RWxpbWluYXRlZFBsYXllciIKCWJ5dGVjIDcgLy8gICJwbGF5ZXI2QWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjUzOQoJLy8gdG9wVm90ZXMgPSB0aGlzLnBsYXllcjZSZWNlaXZlZFZvdGVzLnZhbHVlCglieXRlYyAyMCAvLyAgInBsYXllcjZSZWNlaXZlZFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2J1cnkgMCAvLyB0b3BWb3RlczogdWludDY0CgoqaWYyM19lbmQ6CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo1NDIKCS8vIGFzc2VydCh0aGlzLmp1c3RFbGltaW5hdGVkUGxheWVyLnZhbHVlICE9PSBnbG9iYWxzLnplcm9BZGRyZXNzLCAnRXJyb3Igc3RhdGU6IFplcm8gQWRkcmVzcyB3b24gdm90ZSEnKQoJYnl0ZWMgMSAvLyAgImp1c3RFbGltaW5hdGVkUGxheWVyIgoJYXBwX2dsb2JhbF9nZXQKCWdsb2JhbCBaZXJvQWRkcmVzcwoJIT0KCgkvLyBFcnJvciBzdGF0ZTogWmVybyBBZGRyZXNzIHdvbiB2b3RlIQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NTQzCgkvLyBhc3NlcnQodG9wVm90ZXMgIT09IDAsICdFcnJvciBzdGF0ZTogTm8gdm90ZXMgd2VyZSBjYXN0IScpCglmcmFtZV9kaWcgMCAvLyB0b3BWb3RlczogdWludDY0CglpbnRjIDEgLy8gMAoJIT0KCgkvLyBFcnJvciBzdGF0ZTogTm8gdm90ZXMgd2VyZSBjYXN0IQoJYXNzZXJ0CgoJLy8gKmlmMjRfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo1NDgKCS8vIHRoaXMuanVzdEVsaW1pbmF0ZWRQbGF5ZXIudmFsdWUgPT09IHRoaXMucGxheWVyMUFsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWJ5dGVjIDEgLy8gICJqdXN0RWxpbWluYXRlZFBsYXllciIKCWFwcF9nbG9iYWxfZ2V0CglieXRlYyAyIC8vICAicGxheWVyMUFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJPT0KCWJ6ICppZjI0X2VuZAoKCS8vICppZjI0X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjU0OQoJLy8gdGhpcy5wbGF5ZXIxQWxnb0FkZHIudmFsdWUuZWxpbWluYXRlZCA9IDEKCWJ5dGVjIDIgLy8gICJwbGF5ZXIxQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJYnl0ZWMgMTIgLy8gMHgwMDAwMDAwMDAwMDAwMDAxCglyZXBsYWNlMiAzMgoJYnl0ZWMgMiAvLyAgInBsYXllcjFBbGdvQWRkciIKCXN3YXAKCWFwcF9nbG9iYWxfcHV0CgoqaWYyNF9lbmQ6CgkvLyAqaWYyNV9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjU1MgoJLy8gdGhpcy5qdXN0RWxpbWluYXRlZFBsYXllci52YWx1ZSA9PT0gdGhpcy5wbGF5ZXIyQWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgMSAvLyAgImp1c3RFbGltaW5hdGVkUGxheWVyIgoJYXBwX2dsb2JhbF9nZXQKCWJ5dGVjIDMgLy8gICJwbGF5ZXIyQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCgk9PQoJYnogKmlmMjVfZW5kCgoJLy8gKmlmMjVfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NTUzCgkvLyB0aGlzLnBsYXllcjJBbGdvQWRkci52YWx1ZS5lbGltaW5hdGVkID0gMQoJYnl0ZWMgMyAvLyAgInBsYXllcjJBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglieXRlYyAxMiAvLyAweDAwMDAwMDAwMDAwMDAwMDEKCXJlcGxhY2UyIDMyCglieXRlYyAzIC8vICAicGxheWVyMkFsZ29BZGRyIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCippZjI1X2VuZDoKCS8vICppZjI2X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NTU2CgkvLyB0aGlzLmp1c3RFbGltaW5hdGVkUGxheWVyLnZhbHVlID09PSB0aGlzLnBsYXllcjNBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglieXRlYyAxIC8vICAianVzdEVsaW1pbmF0ZWRQbGF5ZXIiCglhcHBfZ2xvYmFsX2dldAoJYnl0ZWMgNCAvLyAgInBsYXllcjNBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCT09CglieiAqaWYyNl9lbmQKCgkvLyAqaWYyNl9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo1NTcKCS8vIHRoaXMucGxheWVyM0FsZ29BZGRyLnZhbHVlLmVsaW1pbmF0ZWQgPSAxCglieXRlYyA0IC8vICAicGxheWVyM0FsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWJ5dGVjIDEyIC8vIDB4MDAwMDAwMDAwMDAwMDAwMQoJcmVwbGFjZTIgMzIKCWJ5dGVjIDQgLy8gICJwbGF5ZXIzQWxnb0FkZHIiCglzd2FwCglhcHBfZ2xvYmFsX3B1dAoKKmlmMjZfZW5kOgoJLy8gKmlmMjdfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo1NjAKCS8vIHRoaXMuanVzdEVsaW1pbmF0ZWRQbGF5ZXIudmFsdWUgPT09IHRoaXMucGxheWVyNEFsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWJ5dGVjIDEgLy8gICJqdXN0RWxpbWluYXRlZFBsYXllciIKCWFwcF9nbG9iYWxfZ2V0CglieXRlYyA1IC8vICAicGxheWVyNEFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJPT0KCWJ6ICppZjI3X2VuZAoKCS8vICppZjI3X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjU2MQoJLy8gdGhpcy5wbGF5ZXI0QWxnb0FkZHIudmFsdWUuZWxpbWluYXRlZCA9IDEKCWJ5dGVjIDUgLy8gICJwbGF5ZXI0QWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJYnl0ZWMgMTIgLy8gMHgwMDAwMDAwMDAwMDAwMDAxCglyZXBsYWNlMiAzMgoJYnl0ZWMgNSAvLyAgInBsYXllcjRBbGdvQWRkciIKCXN3YXAKCWFwcF9nbG9iYWxfcHV0CgoqaWYyN19lbmQ6CgkvLyAqaWYyOF9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjU2NAoJLy8gdGhpcy5qdXN0RWxpbWluYXRlZFBsYXllci52YWx1ZSA9PT0gdGhpcy5wbGF5ZXI1QWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgMSAvLyAgImp1c3RFbGltaW5hdGVkUGxheWVyIgoJYXBwX2dsb2JhbF9nZXQKCWJ5dGVjIDYgLy8gICJwbGF5ZXI1QWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCgk9PQoJYnogKmlmMjhfZW5kCgoJLy8gKmlmMjhfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NTY1CgkvLyB0aGlzLnBsYXllcjVBbGdvQWRkci52YWx1ZS5lbGltaW5hdGVkID0gMQoJYnl0ZWMgNiAvLyAgInBsYXllcjVBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglieXRlYyAxMiAvLyAweDAwMDAwMDAwMDAwMDAwMDEKCXJlcGxhY2UyIDMyCglieXRlYyA2IC8vICAicGxheWVyNUFsZ29BZGRyIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCippZjI4X2VuZDoKCS8vICppZjI5X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NTY4CgkvLyB0aGlzLmp1c3RFbGltaW5hdGVkUGxheWVyLnZhbHVlID09PSB0aGlzLnBsYXllcjZBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglieXRlYyAxIC8vICAianVzdEVsaW1pbmF0ZWRQbGF5ZXIiCglhcHBfZ2xvYmFsX2dldAoJYnl0ZWMgNyAvLyAgInBsYXllcjZBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCT09CglieiAqaWYyOV9lbmQKCgkvLyAqaWYyOV9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo1NjkKCS8vIHRoaXMucGxheWVyNkFsZ29BZGRyLnZhbHVlLmVsaW1pbmF0ZWQgPSAxCglieXRlYyA3IC8vICAicGxheWVyNkFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWJ5dGVjIDEyIC8vIDB4MDAwMDAwMDAwMDAwMDAwMQoJcmVwbGFjZTIgMzIKCWJ5dGVjIDcgLy8gICJwbGF5ZXI2QWxnb0FkZHIiCglzd2FwCglhcHBfZ2xvYmFsX3B1dAoKKmlmMjlfZW5kOgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NTcyCgkvLyB0aGlzLnBsYXllcnNBbGl2ZS52YWx1ZSAtPSAxCglieXRlYyAxNCAvLyAgInBsYXllcnNBbGl2ZSIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDAgLy8gMQoJLQoJYnl0ZWMgMTQgLy8gICJwbGF5ZXJzQWxpdmUiCglzd2FwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjU3NgoJLy8gdGhpcy5wbGF5ZXIxUmVjZWl2ZWRWb3Rlcy52YWx1ZSA9IDAKCWJ5dGVjIDE1IC8vICAicGxheWVyMVJlY2VpdmVkVm90ZXMiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo1NzcKCS8vIHRoaXMucGxheWVyMlJlY2VpdmVkVm90ZXMudmFsdWUgPSAwCglieXRlYyAxNiAvLyAgInBsYXllcjJSZWNlaXZlZFZvdGVzIgoJaW50YyAxIC8vIDAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NTc4CgkvLyB0aGlzLnBsYXllcjNSZWNlaXZlZFZvdGVzLnZhbHVlID0gMAoJYnl0ZWMgMTcgLy8gICJwbGF5ZXIzUmVjZWl2ZWRWb3RlcyIKCWludGMgMSAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjU3OQoJLy8gdGhpcy5wbGF5ZXI0UmVjZWl2ZWRWb3Rlcy52YWx1ZSA9IDAKCWJ5dGVjIDE4IC8vICAicGxheWVyNFJlY2VpdmVkVm90ZXMiCglpbnRjIDEgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo1ODAKCS8vIHRoaXMucGxheWVyNVJlY2VpdmVkVm90ZXMudmFsdWUgPSAwCglieXRlYyAxOSAvLyAgInBsYXllcjVSZWNlaXZlZFZvdGVzIgoJaW50YyAxIC8vIDAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NTgxCgkvLyB0aGlzLnBsYXllcjZSZWNlaXZlZFZvdGVzLnZhbHVlID0gMAoJYnl0ZWMgMjAgLy8gICJwbGF5ZXI2UmVjZWl2ZWRWb3RlcyIKCWludGMgMSAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjU4MwoJLy8gdGhpcy5nYW1lU3RhdGUudmFsdWUgPSBzdGF0ZURheVN0YWdlVW5tYXNraW5nCglieXRlYyAwIC8vICAiZ2FtZVN0YXRlIgoJaW50YyA4IC8vIDUKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIGRheVN0YWdlVW5tYXNraW5nKGJ5dGVbXSl2b2lkCiphYmlfcm91dGVfZGF5U3RhZ2VVbm1hc2tpbmc6CgkvLyBibHNTazogYnl0ZVtdCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglleHRyYWN0IDIgMAoKCS8vIGV4ZWN1dGUgZGF5U3RhZ2VVbm1hc2tpbmcoYnl0ZVtdKXZvaWQKCWNhbGxzdWIgZGF5U3RhZ2VVbm1hc2tpbmcKCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIGRheVN0YWdlVW5tYXNraW5nKGJsc1NrOiBieXRlcyk6IHZvaWQKZGF5U3RhZ2VVbm1hc2tpbmc6Cglwcm90byAxIDAKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZWMgOCAvLyAweAoJZHVwbiAyCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NTg3CgkvLyBhc3NlcnQoCgkvLyAgICAgICB0aGlzLmdhbWVTdGF0ZS52YWx1ZSA9PT0gc3RhdGVEYXlTdGFnZVVubWFza2luZywKCS8vICAgICAgICdJbnZhbGlkIG1ldGhvZCBjYWxsOiBHYW1lIGlzIG5vdCBpbiBEYXkgU3RhZ2UgUmV2ZWFsIHN0YXRlLicKCS8vICAgICApCglieXRlYyAwIC8vICAiZ2FtZVN0YXRlIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgOCAvLyA1Cgk9PQoKCS8vIEludmFsaWQgbWV0aG9kIGNhbGw6IEdhbWUgaXMgbm90IGluIERheSBTdGFnZSBSZXZlYWwgc3RhdGUuCglhc3NlcnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo1OTIKCS8vIGFzc2VydCh0aGlzLmp1c3RFbGltaW5hdGVkUGxheWVyLnZhbHVlID09PSB0aGlzLnR4bi5zZW5kZXIsICdFcnJvciBzdGF0ZTogT3RoZXIgcGxheWVyIGNhbGxlZCBtZXRob2QuJykKCWJ5dGVjIDEgLy8gICJqdXN0RWxpbWluYXRlZFBsYXllciIKCWFwcF9nbG9iYWxfZ2V0Cgl0eG4gU2VuZGVyCgk9PQoKCS8vIEVycm9yIHN0YXRlOiBPdGhlciBwbGF5ZXIgY2FsbGVkIG1ldGhvZC4KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjU5NQoJLy8gQkxTX1BLID0gZWNTY2FsYXJNdWwoJ0JMUzEyXzM4MWcxJywgaGV4KEJMUzEyMzgxRzFfQkFTRVBPSU5UX0JZVEVTKSwgYmxzU2spCglieXRlYyAzOSAvLyAweDE3ZjFkM2E3MzE5N2Q3OTQyNjk1NjM4YzRmYTlhYzBmYzM2ODhjNGY5Nzc0YjkwNWExNGUzYTNmMTcxYmFjNTg2YzU1ZTgzZmY5N2ExYWVmZmIzYWYwMGFkYjIyYzZiYjA4YjNmNDgxZTNhYWEwZjFhMDllMzBlZDc0MWQ4YWU0ZmNmNWUwOTVkNWQwMGFmNjAwZGIxOGNiMmMwNGIzZWRkMDNjYzc0NGEyODg4YWU0MGNhYTIzMjk0NmM1ZTdlMQoJZnJhbWVfZGlnIC0xIC8vIGJsc1NrOiBieXRlcwoJZWNfc2NhbGFyX211bCBCTFMxMl8zODFnMQoJZnJhbWVfYnVyeSAwIC8vIEJMU19QSzogYnl0ZVtdCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NTk2CgkvLyBoYXNoVG9Qb2ludCA9IHRoaXMuaGFzaFBvaW50VG9Qb2ludChCTFNfUEspCglmcmFtZV9kaWcgMCAvLyBCTFNfUEs6IGJ5dGVbXQoJY2FsbHN1YiBoYXNoUG9pbnRUb1BvaW50CglmcmFtZV9idXJ5IDEgLy8gaGFzaFRvUG9pbnQ6IGJ5dGVbXQoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjU5NwoJLy8gZ2VuS2V5SW1hZ2UgPSBlY1NjYWxhck11bCgnQkxTMTJfMzgxZzEnLCBoYXNoVG9Qb2ludCwgYmxzU2spCglmcmFtZV9kaWcgMSAvLyBoYXNoVG9Qb2ludDogYnl0ZVtdCglmcmFtZV9kaWcgLTEgLy8gYmxzU2s6IGJ5dGVzCgllY19zY2FsYXJfbXVsIEJMUzEyXzM4MWcxCglmcmFtZV9idXJ5IDIgLy8gZ2VuS2V5SW1hZ2U6IGJ5dGVbXQoKCS8vICppZjMwX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NTk5CgkvLyBnZW5LZXlJbWFnZSA9PT0gdGhpcy5tYWZpYUtleUltYWdlLnZhbHVlCglmcmFtZV9kaWcgMiAvLyBnZW5LZXlJbWFnZTogYnl0ZVtdCglieXRlYyAzMiAvLyAgIm1hZmlhS2V5SW1hZ2UiCglhcHBfZ2xvYmFsX2dldAoJPT0KCWJ6ICppZjMwX2VuZAoKCS8vICppZjMwX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjYwMgoJLy8gdGhpcy5tYWZpYS52YWx1ZSA9IGdsb2JhbHMuemVyb0FkZHJlc3MKCWJ5dGVjIDIxIC8vICAibWFmaWEiCglnbG9iYWwgWmVyb0FkZHJlc3MKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NjAzCgkvLyB0aGlzLmdhbWVTdGF0ZS52YWx1ZSA9IHN0YXRlR2FtZU92ZXIKCWJ5dGVjIDAgLy8gICJnYW1lU3RhdGUiCglpbnRjIDUgLy8gMTIKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NjA0CgkvLyByZXR1cm47CglyZXRzdWIKCippZjMwX2VuZDoKCS8vICppZjMxX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NjA3CgkvLyBnZW5LZXlJbWFnZSA9PT0gdGhpcy5kb2N0b3JLZXlJbWFnZS52YWx1ZQoJZnJhbWVfZGlnIDIgLy8gZ2VuS2V5SW1hZ2U6IGJ5dGVbXQoJYnl0ZWMgMzEgLy8gICJkb2N0b3JLZXlJbWFnZSIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoJYnogKmlmMzFfZW5kCgoJLy8gKmlmMzFfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NjA5CgkvLyB0aGlzLmRvY3Rvci52YWx1ZSA9IGdsb2JhbHMuemVyb0FkZHJlc3MKCWJ5dGVjIDEzIC8vICAiZG9jdG9yIgoJZ2xvYmFsIFplcm9BZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoKKmlmMzFfZW5kOgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NjEyCgkvLyB0aGlzLmp1c3RFbGltaW5hdGVkUGxheWVyLnZhbHVlID0gZ2xvYmFscy56ZXJvQWRkcmVzcwoJYnl0ZWMgMSAvLyAgImp1c3RFbGltaW5hdGVkUGxheWVyIgoJZ2xvYmFsIFplcm9BZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoKCS8vICppZjMyX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NjE0CgkvLyB0aGlzLnBsYXllcnNBbGl2ZS52YWx1ZSA8PSAyCglieXRlYyAxNCAvLyAgInBsYXllcnNBbGl2ZSIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDIgLy8gMgoJPD0KCWJ6ICppZjMyX2VuZAoKCS8vICppZjMyX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjYxNwoJLy8gdGhpcy5nYW1lU3RhdGUudmFsdWUgPSBzdGF0ZUdhbWVPdmVyCglieXRlYyAwIC8vICAiZ2FtZVN0YXRlIgoJaW50YyA1IC8vIDEyCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjYxOAoJLy8gcmV0dXJuOwoJcmV0c3ViCgoqaWYzMl9lbmQ6CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo2MjEKCS8vIHRoaXMuZ2FtZVN0YXRlLnZhbHVlID0gc3RhdGVOaWdodFN0YWdlTWFmaWFDb21taXQKCWJ5dGVjIDAgLy8gICJnYW1lU3RhdGUiCglpbnRjIDMgLy8gNgoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gbmlnaHRTdGFnZU1hZmlhQ29tbWl0KGJ5dGVbXSl2b2lkCiphYmlfcm91dGVfbmlnaHRTdGFnZU1hZmlhQ29tbWl0OgoJLy8gY29tbWl0bWVudDogYnl0ZVtdCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglleHRyYWN0IDIgMAoKCS8vIGV4ZWN1dGUgbmlnaHRTdGFnZU1hZmlhQ29tbWl0KGJ5dGVbXSl2b2lkCgljYWxsc3ViIG5pZ2h0U3RhZ2VNYWZpYUNvbW1pdAoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gbmlnaHRTdGFnZU1hZmlhQ29tbWl0KGNvbW1pdG1lbnQ6IGJ5dGVzKTogdm9pZApuaWdodFN0YWdlTWFmaWFDb21taXQ6Cglwcm90byAxIDAKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo2MjUKCS8vIGFzc2VydCgKCS8vICAgICAgIHRoaXMuZ2FtZVN0YXRlLnZhbHVlID09PSBzdGF0ZU5pZ2h0U3RhZ2VNYWZpYUNvbW1pdCwKCS8vICAgICAgICdJbnZhbGlkIG1ldGhvZCBjYWxsOiBHYW1lIGlzIG5vdCBpbiBOaWdodCBTdGFnZSBNYWZmaWEgQ29tbWl0IHN0YXRlLicKCS8vICAgICApCglieXRlYyAwIC8vICAiZ2FtZVN0YXRlIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMyAvLyA2Cgk9PQoKCS8vIEludmFsaWQgbWV0aG9kIGNhbGw6IEdhbWUgaXMgbm90IGluIE5pZ2h0IFN0YWdlIE1hZmZpYSBDb21taXQgc3RhdGUuCglhc3NlcnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo2MzAKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMubWFmaWEudmFsdWUsICdFcnJvciBzdGF0ZTogTm9uLW1hZmlhIHBsYXllciBjYWxsZWQgbWV0aG9kLicpCgl0eG4gU2VuZGVyCglieXRlYyAyMSAvLyAgIm1hZmlhIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gRXJyb3Igc3RhdGU6IE5vbi1tYWZpYSBwbGF5ZXIgY2FsbGVkIG1ldGhvZC4KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjYzMgoJLy8gdGhpcy5tYWZpYUNvbW1pdG1lbnQudmFsdWUgPSBjb21taXRtZW50CglieXRlYyA0MyAvLyAgIm1hZmlhQ29tbWl0bWVudCIKCWZyYW1lX2RpZyAtMSAvLyBjb21taXRtZW50OiBieXRlcwoJYXBwX2dsb2JhbF9wdXQKCgkvLyAqaWYzM19jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjYzNAoJLy8gdGhpcy5kb2N0b3IudmFsdWUgPT09IGdsb2JhbHMuemVyb0FkZHJlc3MKCWJ5dGVjIDEzIC8vICAiZG9jdG9yIgoJYXBwX2dsb2JhbF9nZXQKCWdsb2JhbCBaZXJvQWRkcmVzcwoJPT0KCWJ6ICppZjMzX2Vsc2UKCgkvLyAqaWYzM19jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo2MzYKCS8vIHRoaXMuZ2FtZVN0YXRlLnZhbHVlID0gc3RhdGVEYXduU3RhZ2VNYWZpYVJldmVhbAoJYnl0ZWMgMCAvLyAgImdhbWVTdGF0ZSIKCWludGMgMTAgLy8gOAoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMzNfZW5kCgoqaWYzM19lbHNlOgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NjM4CgkvLyB0aGlzLmdhbWVTdGF0ZS52YWx1ZSA9IHN0YXRlTmlnaHRTdGFnZURvY3RvckNvbW1pdAoJYnl0ZWMgMCAvLyAgImdhbWVTdGF0ZSIKCWludGMgOSAvLyA3CglhcHBfZ2xvYmFsX3B1dAoKKmlmMzNfZW5kOgoJcmV0c3ViCgovLyBuaWdodFN0YWdlRG9jdG9yQ29tbWl0KGJ5dGVbXSl2b2lkCiphYmlfcm91dGVfbmlnaHRTdGFnZURvY3RvckNvbW1pdDoKCS8vIGNvbW1pdG1lbnQ6IGJ5dGVbXQoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZXh0cmFjdCAyIDAKCgkvLyBleGVjdXRlIG5pZ2h0U3RhZ2VEb2N0b3JDb21taXQoYnl0ZVtdKXZvaWQKCWNhbGxzdWIgbmlnaHRTdGFnZURvY3RvckNvbW1pdAoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gbmlnaHRTdGFnZURvY3RvckNvbW1pdChjb21taXRtZW50OiBieXRlcyk6IHZvaWQKbmlnaHRTdGFnZURvY3RvckNvbW1pdDoKCXByb3RvIDEgMAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjY0MwoJLy8gYXNzZXJ0KAoJLy8gICAgICAgdGhpcy5nYW1lU3RhdGUudmFsdWUgPT09IHN0YXRlTmlnaHRTdGFnZURvY3RvckNvbW1pdCwKCS8vICAgICAgICdJbnZhbGlkIG1ldGhvZCBjYWxsOiBHYW1lIGlzIG5vdCBpbiBOaWdodCBTdGFnZSBEb2N0b3IgQ29tbWl0IHN0YXRlLicKCS8vICAgICApCglieXRlYyAwIC8vICAiZ2FtZVN0YXRlIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgOSAvLyA3Cgk9PQoKCS8vIEludmFsaWQgbWV0aG9kIGNhbGw6IEdhbWUgaXMgbm90IGluIE5pZ2h0IFN0YWdlIERvY3RvciBDb21taXQgc3RhdGUuCglhc3NlcnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo2NDgKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMuZG9jdG9yLnZhbHVlLCAnRXJyb3Igc3RhdGU6IE5vbi1kb2N0b3IgcGxheWVyIGNhbGxlZCBtZXRob2QuJykKCXR4biBTZW5kZXIKCWJ5dGVjIDEzIC8vICAiZG9jdG9yIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gRXJyb3Igc3RhdGU6IE5vbi1kb2N0b3IgcGxheWVyIGNhbGxlZCBtZXRob2QuCglhc3NlcnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo2NDkKCS8vIGFzc2VydCgKCS8vICAgICAgIHRoaXMuZG9jdG9yLnZhbHVlICE9PSBnbG9iYWxzLnplcm9BZGRyZXNzLAoJLy8gICAgICAgJ0Vycm9yIHN0YXRlOiBEb2N0b3IgaXMgZGVhZCwgc2hvdWxkIG5vdCBoYXZlIGVudGVyZWQgdGhpcyBzdGF0ZS4nCgkvLyAgICAgKQoJYnl0ZWMgMTMgLy8gICJkb2N0b3IiCglhcHBfZ2xvYmFsX2dldAoJZ2xvYmFsIFplcm9BZGRyZXNzCgkhPQoKCS8vIEVycm9yIHN0YXRlOiBEb2N0b3IgaXMgZGVhZCwgc2hvdWxkIG5vdCBoYXZlIGVudGVyZWQgdGhpcyBzdGF0ZS4KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjY1NAoJLy8gdGhpcy5kb2N0b3JDb21taXRtZW50LnZhbHVlID0gY29tbWl0bWVudAoJYnl0ZWMgNDAgLy8gICJkb2N0b3JDb21taXRtZW50IgoJZnJhbWVfZGlnIC0xIC8vIGNvbW1pdG1lbnQ6IGJ5dGVzCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjY1NgoJLy8gdGhpcy5nYW1lU3RhdGUudmFsdWUgPSBzdGF0ZURhd25TdGFnZU1hZmlhUmV2ZWFsCglieXRlYyAwIC8vICAiZ2FtZVN0YXRlIgoJaW50YyAxMCAvLyA4CglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyBkYXduU3RhZ2VNYWZpYVJldmVhbChhZGRyZXNzLGJ5dGVbMzJdKXZvaWQKKmFiaV9yb3V0ZV9kYXduU3RhZ2VNYWZpYVJldmVhbDoKCS8vIGJsaW5kZXI6IGJ5dGVbMzJdCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglkdXAKCWxlbgoJaW50YyA2IC8vIDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGJsaW5kZXIpIGZvciBkYXduU3RhZ2VNYWZpYVJldmVhbCBtdXN0IGJlIGEgYnl0ZVszMl0KCWFzc2VydAoKCS8vIHZpY3RpbUFpbTogYWRkcmVzcwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludGMgNiAvLyAzMgoJPT0KCgkvLyBhcmd1bWVudCAxICh2aWN0aW1BaW0pIGZvciBkYXduU3RhZ2VNYWZpYVJldmVhbCBtdXN0IGJlIGEgYWRkcmVzcwoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBkYXduU3RhZ2VNYWZpYVJldmVhbChhZGRyZXNzLGJ5dGVbMzJdKXZvaWQKCWNhbGxzdWIgZGF3blN0YWdlTWFmaWFSZXZlYWwKCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIGRhd25TdGFnZU1hZmlhUmV2ZWFsKHZpY3RpbUFpbTogQWRkcmVzcywgYmxpbmRlcjogYnl0ZXMzMik6IHZvaWQKZGF3blN0YWdlTWFmaWFSZXZlYWw6Cglwcm90byAyIDAKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZWMgOCAvLyAweAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjY2MAoJLy8gYXNzZXJ0KAoJLy8gICAgICAgdGhpcy5nYW1lU3RhdGUudmFsdWUgPT09IHN0YXRlRGF3blN0YWdlTWFmaWFSZXZlYWwsCgkvLyAgICAgICAnSW52YWxpZCBtZXRob2QgY2FsbDogR2FtZSBpcyBub3QgaW4gRGF3biBTdGFnZSBNYWZmaWEgUmV2ZWFsIHN0YXRlLicKCS8vICAgICApCglieXRlYyAwIC8vICAiZ2FtZVN0YXRlIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMTAgLy8gOAoJPT0KCgkvLyBJbnZhbGlkIG1ldGhvZCBjYWxsOiBHYW1lIGlzIG5vdCBpbiBEYXduIFN0YWdlIE1hZmZpYSBSZXZlYWwgc3RhdGUuCglhc3NlcnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo2NjUKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMubWFmaWEudmFsdWUsICdFcnJvciBzdGF0ZTogTm9uLW1hZmlhIHBsYXllciBjYWxsZWQgbWV0aG9kLicpCgl0eG4gU2VuZGVyCglieXRlYyAyMSAvLyAgIm1hZmlhIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gRXJyb3Igc3RhdGU6IE5vbi1tYWZpYSBwbGF5ZXIgY2FsbGVkIG1ldGhvZC4KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjY2NwoJLy8gYXNzZXJ0KHZpY3RpbUFpbSAhPT0gZ2xvYmFscy56ZXJvQWRkcmVzcywgJ0Vycm9yIHN0YXRlOiBWaWN0aW0gbXVzdCBiZSBhIHZhbGlkIGFkZHJlc3MuJykKCWZyYW1lX2RpZyAtMSAvLyB2aWN0aW1BaW06IEFkZHJlc3MKCWdsb2JhbCBaZXJvQWRkcmVzcwoJIT0KCgkvLyBFcnJvciBzdGF0ZTogVmljdGltIG11c3QgYmUgYSB2YWxpZCBhZGRyZXNzLgoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NjcxCgkvLyByZXZlYWwgPSBzaGEyNTYoY29uY2F0KHZpY3RpbUFpbSwgYmxpbmRlcikpCglmcmFtZV9kaWcgLTEgLy8gdmljdGltQWltOiBBZGRyZXNzCglmcmFtZV9kaWcgLTIgLy8gYmxpbmRlcjogYnl0ZXMzMgoJY29uY2F0CglzaGEyNTYKCWZyYW1lX2J1cnkgMCAvLyByZXZlYWw6IGJ5dGVbMzJdCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NjczCgkvLyBhc3NlcnQoCgkvLyAgICAgICByYXdCeXRlcyhyZXZlYWwpID09PSB0aGlzLm1hZmlhQ29tbWl0bWVudC52YWx1ZSwKCS8vICAgICAgICdFcnJvciBzdGF0ZTogUHJvdmlkZWQgYWRkcmVzcyArIGJsaW5kZXIgZG9lcyBOT1QgbWF0Y2ggY29tbWl0bWVudC4nCgkvLyAgICAgKQoJZnJhbWVfZGlnIDAgLy8gcmV2ZWFsOiBieXRlWzMyXQoJYnl0ZWMgNDMgLy8gICJtYWZpYUNvbW1pdG1lbnQiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyBFcnJvciBzdGF0ZTogUHJvdmlkZWQgYWRkcmVzcyArIGJsaW5kZXIgZG9lcyBOT1QgbWF0Y2ggY29tbWl0bWVudC4KCWFzc2VydAoKCS8vICppZjM0X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6Njc4CgkvLyB2aWN0aW1BaW0gPT09IHRoaXMucGxheWVyMUFsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWZyYW1lX2RpZyAtMSAvLyB2aWN0aW1BaW06IEFkZHJlc3MKCWJ5dGVjIDIgLy8gICJwbGF5ZXIxQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCgk9PQoJYnogKmlmMzRfZWxzZWlmMV9jb25kaXRpb24KCgkvLyAqaWYzNF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo2NzkKCS8vIHRoaXMubWFmaWFWaWN0aW0udmFsdWUgPSB0aGlzLnBsYXllcjFBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglieXRlYyA5IC8vICAibWFmaWFWaWN0aW0iCglieXRlYyAyIC8vICAicGxheWVyMUFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMzRfZW5kCgoqaWYzNF9lbHNlaWYxX2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjY4MAoJLy8gdmljdGltQWltID09PSB0aGlzLnBsYXllcjJBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglmcmFtZV9kaWcgLTEgLy8gdmljdGltQWltOiBBZGRyZXNzCglieXRlYyAzIC8vICAicGxheWVyMkFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJPT0KCWJ6ICppZjM0X2Vsc2VpZjJfY29uZGl0aW9uCgoJLy8gKmlmMzRfZWxzZWlmMV9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo2ODEKCS8vIHRoaXMubWFmaWFWaWN0aW0udmFsdWUgPSB0aGlzLnBsYXllcjJBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglieXRlYyA5IC8vICAibWFmaWFWaWN0aW0iCglieXRlYyAzIC8vICAicGxheWVyMkFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMzRfZW5kCgoqaWYzNF9lbHNlaWYyX2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjY4MgoJLy8gdmljdGltQWltID09PSB0aGlzLnBsYXllcjNBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglmcmFtZV9kaWcgLTEgLy8gdmljdGltQWltOiBBZGRyZXNzCglieXRlYyA0IC8vICAicGxheWVyM0FsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJPT0KCWJ6ICppZjM0X2Vsc2VpZjNfY29uZGl0aW9uCgoJLy8gKmlmMzRfZWxzZWlmMl9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo2ODMKCS8vIHRoaXMubWFmaWFWaWN0aW0udmFsdWUgPSB0aGlzLnBsYXllcjNBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglieXRlYyA5IC8vICAibWFmaWFWaWN0aW0iCglieXRlYyA0IC8vICAicGxheWVyM0FsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMzRfZW5kCgoqaWYzNF9lbHNlaWYzX2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjY4NAoJLy8gdmljdGltQWltID09PSB0aGlzLnBsYXllcjRBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglmcmFtZV9kaWcgLTEgLy8gdmljdGltQWltOiBBZGRyZXNzCglieXRlYyA1IC8vICAicGxheWVyNEFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJPT0KCWJ6ICppZjM0X2Vsc2VpZjRfY29uZGl0aW9uCgoJLy8gKmlmMzRfZWxzZWlmM19jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo2ODUKCS8vIHRoaXMubWFmaWFWaWN0aW0udmFsdWUgPSB0aGlzLnBsYXllcjRBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglieXRlYyA5IC8vICAibWFmaWFWaWN0aW0iCglieXRlYyA1IC8vICAicGxheWVyNEFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMzRfZW5kCgoqaWYzNF9lbHNlaWY0X2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjY4NgoJLy8gdmljdGltQWltID09PSB0aGlzLnBsYXllcjVBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglmcmFtZV9kaWcgLTEgLy8gdmljdGltQWltOiBBZGRyZXNzCglieXRlYyA2IC8vICAicGxheWVyNUFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJPT0KCWJ6ICppZjM0X2Vsc2VpZjVfY29uZGl0aW9uCgoJLy8gKmlmMzRfZWxzZWlmNF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo2ODcKCS8vIHRoaXMubWFmaWFWaWN0aW0udmFsdWUgPSB0aGlzLnBsYXllcjVBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglieXRlYyA5IC8vICAibWFmaWFWaWN0aW0iCglieXRlYyA2IC8vICAicGxheWVyNUFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMzRfZW5kCgoqaWYzNF9lbHNlaWY1X2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjY4OAoJLy8gdmljdGltQWltID09PSB0aGlzLnBsYXllcjZBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglmcmFtZV9kaWcgLTEgLy8gdmljdGltQWltOiBBZGRyZXNzCglieXRlYyA3IC8vICAicGxheWVyNkFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJPT0KCWJ6ICppZjM0X2Vsc2UKCgkvLyAqaWYzNF9lbHNlaWY1X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjY4OQoJLy8gdGhpcy5tYWZpYVZpY3RpbS52YWx1ZSA9IHRoaXMucGxheWVyNkFsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWJ5dGVjIDkgLy8gICJtYWZpYVZpY3RpbSIKCWJ5dGVjIDcgLy8gICJwbGF5ZXI2QWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCglhcHBfZ2xvYmFsX3B1dAoJYiAqaWYzNF9lbmQKCippZjM0X2Vsc2U6CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo2OTEKCS8vIHRoaXMubWFmaWFWaWN0aW0udmFsdWUgPSBnbG9iYWxzLnplcm9BZGRyZXNzCglieXRlYyA5IC8vICAibWFmaWFWaWN0aW0iCglnbG9iYWwgWmVyb0FkZHJlc3MKCWFwcF9nbG9iYWxfcHV0CgoqaWYzNF9lbmQ6CgkvLyAqaWYzNV9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjY5NwoJLy8gdGhpcy5kb2N0b3IudmFsdWUgPT09IGdsb2JhbHMuemVyb0FkZHJlc3MKCWJ5dGVjIDEzIC8vICAiZG9jdG9yIgoJYXBwX2dsb2JhbF9nZXQKCWdsb2JhbCBaZXJvQWRkcmVzcwoJPT0KCWJ6ICppZjM1X2Vsc2UKCgkvLyAqaWYzNV9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo2OTkKCS8vIHRoaXMuZ2FtZVN0YXRlLnZhbHVlID0gc3RhdGVEYXduU3RhZ2VEZWFkT3JTYXZlZAoJYnl0ZWMgMCAvLyAgImdhbWVTdGF0ZSIKCWludGMgMTEgLy8gMTAKCWFwcF9nbG9iYWxfcHV0CgliICppZjM1X2VuZAoKKmlmMzVfZWxzZToKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjcwMgoJLy8gdGhpcy5nYW1lU3RhdGUudmFsdWUgPSBzdGF0ZURhd25TdGFnZURvY3RvclJldmVhbAoJYnl0ZWMgMCAvLyAgImdhbWVTdGF0ZSIKCWludGMgMTQgLy8gOQoJYXBwX2dsb2JhbF9wdXQKCippZjM1X2VuZDoKCXJldHN1YgoKLy8gZGF3blN0YWdlRG9jdG9yUmV2ZWFsKGFkZHJlc3MsYnl0ZVszMl0pdm9pZAoqYWJpX3JvdXRlX2Rhd25TdGFnZURvY3RvclJldmVhbDoKCS8vIGJsaW5kZXI6IGJ5dGVbMzJdCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglkdXAKCWxlbgoJaW50YyA2IC8vIDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGJsaW5kZXIpIGZvciBkYXduU3RhZ2VEb2N0b3JSZXZlYWwgbXVzdCBiZSBhIGJ5dGVbMzJdCglhc3NlcnQKCgkvLyBwYXRpZW50QWltOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50YyA2IC8vIDMyCgk9PQoKCS8vIGFyZ3VtZW50IDEgKHBhdGllbnRBaW0pIGZvciBkYXduU3RhZ2VEb2N0b3JSZXZlYWwgbXVzdCBiZSBhIGFkZHJlc3MKCWFzc2VydAoKCS8vIGV4ZWN1dGUgZGF3blN0YWdlRG9jdG9yUmV2ZWFsKGFkZHJlc3MsYnl0ZVszMl0pdm9pZAoJY2FsbHN1YiBkYXduU3RhZ2VEb2N0b3JSZXZlYWwKCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIGRhd25TdGFnZURvY3RvclJldmVhbChwYXRpZW50QWltOiBBZGRyZXNzLCBibGluZGVyOiBieXRlczMyKTogdm9pZApkYXduU3RhZ2VEb2N0b3JSZXZlYWw6Cglwcm90byAyIDAKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZWMgOCAvLyAweAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjcwNwoJLy8gYXNzZXJ0KAoJLy8gICAgICAgdGhpcy5nYW1lU3RhdGUudmFsdWUgPT09IHN0YXRlRGF3blN0YWdlRG9jdG9yUmV2ZWFsLAoJLy8gICAgICAgJ0ludmFsaWQgbWV0aG9kIGNhbGw6IEdhbWUgaXMgbm90IGluIERhd24gU3RhZ2UgRG9jdG9yIFJldmVhbCBzdGF0ZS4nCgkvLyAgICAgKQoJYnl0ZWMgMCAvLyAgImdhbWVTdGF0ZSIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDE0IC8vIDkKCT09CgoJLy8gSW52YWxpZCBtZXRob2QgY2FsbDogR2FtZSBpcyBub3QgaW4gRGF3biBTdGFnZSBEb2N0b3IgUmV2ZWFsIHN0YXRlLgoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzEyCgkvLyBhc3NlcnQodGhpcy50eG4uc2VuZGVyID09PSB0aGlzLmRvY3Rvci52YWx1ZSwgJ0Vycm9yIHN0YXRlOiBOb24tZG9jdG9yIHBsYXllciBjYWxsZWQgbWV0aG9kLicpCgl0eG4gU2VuZGVyCglieXRlYyAxMyAvLyAgImRvY3RvciIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoKCS8vIEVycm9yIHN0YXRlOiBOb24tZG9jdG9yIHBsYXllciBjYWxsZWQgbWV0aG9kLgoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzE0CgkvLyBhc3NlcnQodGhpcy5kb2N0b3JQYXRpZW50LnZhbHVlID09PSBnbG9iYWxzLnplcm9BZGRyZXNzLCAnRXJyb3Igc3RhdGU6IERvY3RvciBoYXMgYWxyZWFkeSBjb21taXR0ZWQgdG8gYSBwYXRpZW50LicpCglieXRlYyAxMSAvLyAgImRvY3RvclBhdGllbnQiCglhcHBfZ2xvYmFsX2dldAoJZ2xvYmFsIFplcm9BZGRyZXNzCgk9PQoKCS8vIEVycm9yIHN0YXRlOiBEb2N0b3IgaGFzIGFscmVhZHkgY29tbWl0dGVkIHRvIGEgcGF0aWVudC4KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjcxNgoJLy8gYXNzZXJ0KHBhdGllbnRBaW0gIT09IGdsb2JhbHMuemVyb0FkZHJlc3MsICdFcnJvciBzdGF0ZTogUGF0aWVudCBtdXN0IGJlIGEgdmFsaWQgYWRkcmVzcy4nKQoJZnJhbWVfZGlnIC0xIC8vIHBhdGllbnRBaW06IEFkZHJlc3MKCWdsb2JhbCBaZXJvQWRkcmVzcwoJIT0KCgkvLyBFcnJvciBzdGF0ZTogUGF0aWVudCBtdXN0IGJlIGEgdmFsaWQgYWRkcmVzcy4KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjcyMAoJLy8gcmV2ZWFsID0gc2hhMjU2KGNvbmNhdChwYXRpZW50QWltLCBibGluZGVyKSkKCWZyYW1lX2RpZyAtMSAvLyBwYXRpZW50QWltOiBBZGRyZXNzCglmcmFtZV9kaWcgLTIgLy8gYmxpbmRlcjogYnl0ZXMzMgoJY29uY2F0CglzaGEyNTYKCWZyYW1lX2J1cnkgMCAvLyByZXZlYWw6IGJ5dGVbMzJdCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzIyCgkvLyBhc3NlcnQoCgkvLyAgICAgICByYXdCeXRlcyhyZXZlYWwpID09PSB0aGlzLmRvY3RvckNvbW1pdG1lbnQudmFsdWUsCgkvLyAgICAgICAnRXJyb3Igc3RhdGU6IFByb3ZpZGVkIGFkZHJlc3MgKyBibGluZGVyIGRvZXMgTk9UIG1hdGNoIGNvbW1pdG1lbnQuJwoJLy8gICAgICkKCWZyYW1lX2RpZyAwIC8vIHJldmVhbDogYnl0ZVszMl0KCWJ5dGVjIDQwIC8vICAiZG9jdG9yQ29tbWl0bWVudCIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoKCS8vIEVycm9yIHN0YXRlOiBQcm92aWRlZCBhZGRyZXNzICsgYmxpbmRlciBkb2VzIE5PVCBtYXRjaCBjb21taXRtZW50LgoJYXNzZXJ0CgoJLy8gKmlmMzZfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo3MjcKCS8vIHBhdGllbnRBaW0gPT09IHRoaXMucGxheWVyMUFsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWZyYW1lX2RpZyAtMSAvLyBwYXRpZW50QWltOiBBZGRyZXNzCglieXRlYyAyIC8vICAicGxheWVyMUFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJPT0KCWJ6ICppZjM2X2Vsc2VpZjFfY29uZGl0aW9uCgoJLy8gKmlmMzZfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzI4CgkvLyB0aGlzLmRvY3RvclBhdGllbnQudmFsdWUgPSB0aGlzLnBsYXllcjFBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglieXRlYyAxMSAvLyAgImRvY3RvclBhdGllbnQiCglieXRlYyAyIC8vICAicGxheWVyMUFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMzZfZW5kCgoqaWYzNl9lbHNlaWYxX2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjcyOQoJLy8gcGF0aWVudEFpbSA9PT0gdGhpcy5wbGF5ZXIyQWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJZnJhbWVfZGlnIC0xIC8vIHBhdGllbnRBaW06IEFkZHJlc3MKCWJ5dGVjIDMgLy8gICJwbGF5ZXIyQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCgk9PQoJYnogKmlmMzZfZWxzZWlmMl9jb25kaXRpb24KCgkvLyAqaWYzNl9lbHNlaWYxX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjczMAoJLy8gdGhpcy5kb2N0b3JQYXRpZW50LnZhbHVlID0gdGhpcy5wbGF5ZXIyQWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgMTEgLy8gICJkb2N0b3JQYXRpZW50IgoJYnl0ZWMgMyAvLyAgInBsYXllcjJBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWFwcF9nbG9iYWxfcHV0CgliICppZjM2X2VuZAoKKmlmMzZfZWxzZWlmMl9jb25kaXRpb246CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo3MzEKCS8vIHBhdGllbnRBaW0gPT09IHRoaXMucGxheWVyM0FsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWZyYW1lX2RpZyAtMSAvLyBwYXRpZW50QWltOiBBZGRyZXNzCglieXRlYyA0IC8vICAicGxheWVyM0FsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJPT0KCWJ6ICppZjM2X2Vsc2VpZjNfY29uZGl0aW9uCgoJLy8gKmlmMzZfZWxzZWlmMl9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo3MzIKCS8vIHRoaXMuZG9jdG9yUGF0aWVudC52YWx1ZSA9IHRoaXMucGxheWVyM0FsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWJ5dGVjIDExIC8vICAiZG9jdG9yUGF0aWVudCIKCWJ5dGVjIDQgLy8gICJwbGF5ZXIzQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCglhcHBfZ2xvYmFsX3B1dAoJYiAqaWYzNl9lbmQKCippZjM2X2Vsc2VpZjNfY29uZGl0aW9uOgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzMzCgkvLyBwYXRpZW50QWltID09PSB0aGlzLnBsYXllcjRBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglmcmFtZV9kaWcgLTEgLy8gcGF0aWVudEFpbTogQWRkcmVzcwoJYnl0ZWMgNSAvLyAgInBsYXllcjRBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCT09CglieiAqaWYzNl9lbHNlaWY0X2NvbmRpdGlvbgoKCS8vICppZjM2X2Vsc2VpZjNfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzM0CgkvLyB0aGlzLmRvY3RvclBhdGllbnQudmFsdWUgPSB0aGlzLnBsYXllcjRBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglieXRlYyAxMSAvLyAgImRvY3RvclBhdGllbnQiCglieXRlYyA1IC8vICAicGxheWVyNEFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMzZfZW5kCgoqaWYzNl9lbHNlaWY0X2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjczNQoJLy8gcGF0aWVudEFpbSA9PT0gdGhpcy5wbGF5ZXI1QWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJZnJhbWVfZGlnIC0xIC8vIHBhdGllbnRBaW06IEFkZHJlc3MKCWJ5dGVjIDYgLy8gICJwbGF5ZXI1QWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCgk9PQoJYnogKmlmMzZfZWxzZWlmNV9jb25kaXRpb24KCgkvLyAqaWYzNl9lbHNlaWY0X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjczNgoJLy8gdGhpcy5kb2N0b3JQYXRpZW50LnZhbHVlID0gdGhpcy5wbGF5ZXI1QWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgMTEgLy8gICJkb2N0b3JQYXRpZW50IgoJYnl0ZWMgNiAvLyAgInBsYXllcjVBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWFwcF9nbG9iYWxfcHV0CgliICppZjM2X2VuZAoKKmlmMzZfZWxzZWlmNV9jb25kaXRpb246CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo3MzcKCS8vIHBhdGllbnRBaW0gPT09IHRoaXMucGxheWVyNkFsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWZyYW1lX2RpZyAtMSAvLyBwYXRpZW50QWltOiBBZGRyZXNzCglieXRlYyA3IC8vICAicGxheWVyNkFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJPT0KCWJ6ICppZjM2X2Vsc2UKCgkvLyAqaWYzNl9lbHNlaWY1X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjczOAoJLy8gdGhpcy5kb2N0b3JQYXRpZW50LnZhbHVlID0gdGhpcy5wbGF5ZXI2QWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgMTEgLy8gICJkb2N0b3JQYXRpZW50IgoJYnl0ZWMgNyAvLyAgInBsYXllcjZBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWFwcF9nbG9iYWxfcHV0CgliICppZjM2X2VuZAoKKmlmMzZfZWxzZToKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjc0MAoJLy8gdGhpcy5kb2N0b3JQYXRpZW50LnZhbHVlID0gZ2xvYmFscy56ZXJvQWRkcmVzcwoJYnl0ZWMgMTEgLy8gICJkb2N0b3JQYXRpZW50IgoJZ2xvYmFsIFplcm9BZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoKKmlmMzZfZW5kOgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzQ2CgkvLyB0aGlzLmdhbWVTdGF0ZS52YWx1ZSA9IHN0YXRlRGF3blN0YWdlRGVhZE9yU2F2ZWQKCWJ5dGVjIDAgLy8gICJnYW1lU3RhdGUiCglpbnRjIDExIC8vIDEwCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyBkYXduU3RhZ2VEZWFkT3JTYXZlZCgpdm9pZAoqYWJpX3JvdXRlX2Rhd25TdGFnZURlYWRPclNhdmVkOgoJLy8gZXhlY3V0ZSBkYXduU3RhZ2VEZWFkT3JTYXZlZCgpdm9pZAoJY2FsbHN1YiBkYXduU3RhZ2VEZWFkT3JTYXZlZAoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gZGF3blN0YWdlRGVhZE9yU2F2ZWQoKTogdm9pZApkYXduU3RhZ2VEZWFkT3JTYXZlZDoKCXByb3RvIDAgMAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjc1MAoJLy8gYXNzZXJ0KAoJLy8gICAgICAgdGhpcy5nYW1lU3RhdGUudmFsdWUgPT09IHN0YXRlRGF3blN0YWdlRGVhZE9yU2F2ZWQsCgkvLyAgICAgICAnSW52YWxpZCBtZXRob2QgY2FsbDogR2FtZSBpcyBub3QgaW4gRGF3biBTdGFnZSBEZWFkT3JTYXZlZD8gc3RhdGUuJwoJLy8gICAgICkKCWJ5dGVjIDAgLy8gICJnYW1lU3RhdGUiCglhcHBfZ2xvYmFsX2dldAoJaW50YyAxMSAvLyAxMAoJPT0KCgkvLyBJbnZhbGlkIG1ldGhvZCBjYWxsOiBHYW1lIGlzIG5vdCBpbiBEYXduIFN0YWdlIERlYWRPclNhdmVkPyBzdGF0ZS4KCWFzc2VydAoKCS8vICppZjM3X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzU1CgkvLyB0aGlzLm1hZmlhVmljdGltLnZhbHVlID09PSBnbG9iYWxzLnplcm9BZGRyZXNzIHx8IHRoaXMubWFmaWFWaWN0aW0udmFsdWUgPT09IHRoaXMuZG9jdG9yUGF0aWVudC52YWx1ZQoJYnl0ZWMgOSAvLyAgIm1hZmlhVmljdGltIgoJYXBwX2dsb2JhbF9nZXQKCWdsb2JhbCBaZXJvQWRkcmVzcwoJPT0KCWR1cAoJYm56ICpza2lwX29yMTYKCWJ5dGVjIDkgLy8gICJtYWZpYVZpY3RpbSIKCWFwcF9nbG9iYWxfZ2V0CglieXRlYyAxMSAvLyAgImRvY3RvclBhdGllbnQiCglhcHBfZ2xvYmFsX2dldAoJPT0KCXx8Cgoqc2tpcF9vcjE2OgoJYnogKmlmMzdfZW5kCgoJLy8gKmlmMzdfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzYwCgkvLyB0aGlzLm1hZmlhVmljdGltLnZhbHVlID0gZ2xvYmFscy56ZXJvQWRkcmVzcwoJYnl0ZWMgOSAvLyAgIm1hZmlhVmljdGltIgoJZ2xvYmFsIFplcm9BZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjc2MQoJLy8gdGhpcy5kb2N0b3JQYXRpZW50LnZhbHVlID0gZ2xvYmFscy56ZXJvQWRkcmVzcwoJYnl0ZWMgMTEgLy8gICJkb2N0b3JQYXRpZW50IgoJZ2xvYmFsIFplcm9BZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjc2MgoJLy8gdGhpcy5nYW1lU3RhdGUudmFsdWUgPSBzdGF0ZURheVN0YWdlVm90ZQoJYnl0ZWMgMCAvLyAgImdhbWVTdGF0ZSIKCWludGMgNCAvLyAzCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjc2MwoJLy8gcmV0dXJuOwoJcmV0c3ViCgoqaWYzN19lbmQ6CgkvLyAqaWYzOF9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjc2OAoJLy8gdGhpcy5tYWZpYVZpY3RpbS52YWx1ZSA9PT0gdGhpcy5wbGF5ZXIxQWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgOSAvLyAgIm1hZmlhVmljdGltIgoJYXBwX2dsb2JhbF9nZXQKCWJ5dGVjIDIgLy8gICJwbGF5ZXIxQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCgk9PQoJYnogKmlmMzhfZWxzZWlmMV9jb25kaXRpb24KCgkvLyAqaWYzOF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo3NjkKCS8vIHRoaXMuanVzdEVsaW1pbmF0ZWRQbGF5ZXIudmFsdWUgPSB0aGlzLnBsYXllcjFBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglieXRlYyAxIC8vICAianVzdEVsaW1pbmF0ZWRQbGF5ZXIiCglieXRlYyAyIC8vICAicGxheWVyMUFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo3NzAKCS8vIHRoaXMucGxheWVyMUFsZ29BZGRyLnZhbHVlLmVsaW1pbmF0ZWQgPSAxCglieXRlYyAyIC8vICAicGxheWVyMUFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWJ5dGVjIDEyIC8vIDB4MDAwMDAwMDAwMDAwMDAwMQoJcmVwbGFjZTIgMzIKCWJ5dGVjIDIgLy8gICJwbGF5ZXIxQWxnb0FkZHIiCglzd2FwCglhcHBfZ2xvYmFsX3B1dAoJYiAqaWYzOF9lbmQKCippZjM4X2Vsc2VpZjFfY29uZGl0aW9uOgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzcxCgkvLyB0aGlzLm1hZmlhVmljdGltLnZhbHVlID09PSB0aGlzLnBsYXllcjJBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglieXRlYyA5IC8vICAibWFmaWFWaWN0aW0iCglhcHBfZ2xvYmFsX2dldAoJYnl0ZWMgMyAvLyAgInBsYXllcjJBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCT09CglieiAqaWYzOF9lbHNlaWYyX2NvbmRpdGlvbgoKCS8vICppZjM4X2Vsc2VpZjFfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzcyCgkvLyB0aGlzLmp1c3RFbGltaW5hdGVkUGxheWVyLnZhbHVlID0gdGhpcy5wbGF5ZXIyQWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgMSAvLyAgImp1c3RFbGltaW5hdGVkUGxheWVyIgoJYnl0ZWMgMyAvLyAgInBsYXllcjJBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzczCgkvLyB0aGlzLnBsYXllcjJBbGdvQWRkci52YWx1ZS5lbGltaW5hdGVkID0gMQoJYnl0ZWMgMyAvLyAgInBsYXllcjJBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglieXRlYyAxMiAvLyAweDAwMDAwMDAwMDAwMDAwMDEKCXJlcGxhY2UyIDMyCglieXRlYyAzIC8vICAicGxheWVyMkFsZ29BZGRyIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMzhfZW5kCgoqaWYzOF9lbHNlaWYyX2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjc3NAoJLy8gdGhpcy5tYWZpYVZpY3RpbS52YWx1ZSA9PT0gdGhpcy5wbGF5ZXIzQWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgOSAvLyAgIm1hZmlhVmljdGltIgoJYXBwX2dsb2JhbF9nZXQKCWJ5dGVjIDQgLy8gICJwbGF5ZXIzQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCgk9PQoJYnogKmlmMzhfZWxzZWlmM19jb25kaXRpb24KCgkvLyAqaWYzOF9lbHNlaWYyX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjc3NQoJLy8gdGhpcy5qdXN0RWxpbWluYXRlZFBsYXllci52YWx1ZSA9IHRoaXMucGxheWVyM0FsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWJ5dGVjIDEgLy8gICJqdXN0RWxpbWluYXRlZFBsYXllciIKCWJ5dGVjIDQgLy8gICJwbGF5ZXIzQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjc3NgoJLy8gdGhpcy5wbGF5ZXIzQWxnb0FkZHIudmFsdWUuZWxpbWluYXRlZCA9IDEKCWJ5dGVjIDQgLy8gICJwbGF5ZXIzQWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJYnl0ZWMgMTIgLy8gMHgwMDAwMDAwMDAwMDAwMDAxCglyZXBsYWNlMiAzMgoJYnl0ZWMgNCAvLyAgInBsYXllcjNBbGdvQWRkciIKCXN3YXAKCWFwcF9nbG9iYWxfcHV0CgliICppZjM4X2VuZAoKKmlmMzhfZWxzZWlmM19jb25kaXRpb246CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo3NzcKCS8vIHRoaXMubWFmaWFWaWN0aW0udmFsdWUgPT09IHRoaXMucGxheWVyNEFsZ29BZGRyLnZhbHVlLmFkZHJlc3MKCWJ5dGVjIDkgLy8gICJtYWZpYVZpY3RpbSIKCWFwcF9nbG9iYWxfZ2V0CglieXRlYyA1IC8vICAicGxheWVyNEFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJPT0KCWJ6ICppZjM4X2Vsc2VpZjRfY29uZGl0aW9uCgoJLy8gKmlmMzhfZWxzZWlmM19jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo3NzgKCS8vIHRoaXMuanVzdEVsaW1pbmF0ZWRQbGF5ZXIudmFsdWUgPSB0aGlzLnBsYXllcjRBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglieXRlYyAxIC8vICAianVzdEVsaW1pbmF0ZWRQbGF5ZXIiCglieXRlYyA1IC8vICAicGxheWVyNEFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMCAzMgoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo3NzkKCS8vIHRoaXMucGxheWVyNEFsZ29BZGRyLnZhbHVlLmVsaW1pbmF0ZWQgPSAxCglieXRlYyA1IC8vICAicGxheWVyNEFsZ29BZGRyIgoJYXBwX2dsb2JhbF9nZXQKCWJ5dGVjIDEyIC8vIDB4MDAwMDAwMDAwMDAwMDAwMQoJcmVwbGFjZTIgMzIKCWJ5dGVjIDUgLy8gICJwbGF5ZXI0QWxnb0FkZHIiCglzd2FwCglhcHBfZ2xvYmFsX3B1dAoJYiAqaWYzOF9lbmQKCippZjM4X2Vsc2VpZjRfY29uZGl0aW9uOgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzgwCgkvLyB0aGlzLm1hZmlhVmljdGltLnZhbHVlID09PSB0aGlzLnBsYXllcjVBbGdvQWRkci52YWx1ZS5hZGRyZXNzCglieXRlYyA5IC8vICAibWFmaWFWaWN0aW0iCglhcHBfZ2xvYmFsX2dldAoJYnl0ZWMgNiAvLyAgInBsYXllcjVBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCT09CglieiAqaWYzOF9lbHNlaWY1X2NvbmRpdGlvbgoKCS8vICppZjM4X2Vsc2VpZjRfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzgxCgkvLyB0aGlzLmp1c3RFbGltaW5hdGVkUGxheWVyLnZhbHVlID0gdGhpcy5wbGF5ZXI1QWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgMSAvLyAgImp1c3RFbGltaW5hdGVkUGxheWVyIgoJYnl0ZWMgNiAvLyAgInBsYXllcjVBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzgyCgkvLyB0aGlzLnBsYXllcjVBbGdvQWRkci52YWx1ZS5lbGltaW5hdGVkID0gMQoJYnl0ZWMgNiAvLyAgInBsYXllcjVBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglieXRlYyAxMiAvLyAweDAwMDAwMDAwMDAwMDAwMDEKCXJlcGxhY2UyIDMyCglieXRlYyA2IC8vICAicGxheWVyNUFsZ29BZGRyIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMzhfZW5kCgoqaWYzOF9lbHNlaWY1X2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjc4MwoJLy8gdGhpcy5tYWZpYVZpY3RpbS52YWx1ZSA9PT0gdGhpcy5wbGF5ZXI2QWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgOSAvLyAgIm1hZmlhVmljdGltIgoJYXBwX2dsb2JhbF9nZXQKCWJ5dGVjIDcgLy8gICJwbGF5ZXI2QWxnb0FkZHIiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAwIDMyCgk9PQoJYnogKmlmMzhfZWxzZQoKCS8vICppZjM4X2Vsc2VpZjVfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6Nzg0CgkvLyB0aGlzLmp1c3RFbGltaW5hdGVkUGxheWVyLnZhbHVlID0gdGhpcy5wbGF5ZXI2QWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgMSAvLyAgImp1c3RFbGltaW5hdGVkUGxheWVyIgoJYnl0ZWMgNyAvLyAgInBsYXllcjZBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6Nzg1CgkvLyB0aGlzLnBsYXllcjZBbGdvQWRkci52YWx1ZS5lbGltaW5hdGVkID0gMQoJYnl0ZWMgNyAvLyAgInBsYXllcjZBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglieXRlYyAxMiAvLyAweDAwMDAwMDAwMDAwMDAwMDEKCXJlcGxhY2UyIDMyCglieXRlYyA3IC8vICAicGxheWVyNkFsZ29BZGRyIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMzhfZW5kCgoqaWYzOF9lbHNlOgoJLy8gRXJyb3Igc3RhdGU6IFZpY3RpbSBtdXN0IGJlIGEgcGxheWVyISBTaG91bGQgbm90IGhhdmUgZW50ZXJlZCB0aGlzIHN0YXRlLgoJZXJyCgoqaWYzOF9lbmQ6CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo3OTAKCS8vIHRoaXMucGxheWVyc0FsaXZlLnZhbHVlIC09IDEKCWJ5dGVjIDE0IC8vICAicGxheWVyc0FsaXZlIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAxCgktCglieXRlYyAxNCAvLyAgInBsYXllcnNBbGl2ZSIKCXN3YXAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6NzkyCgkvLyB0aGlzLm1hZmlhVmljdGltLnZhbHVlID0gZ2xvYmFscy56ZXJvQWRkcmVzcwoJYnl0ZWMgOSAvLyAgIm1hZmlhVmljdGltIgoJZ2xvYmFsIFplcm9BZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjc5MwoJLy8gdGhpcy5kb2N0b3JQYXRpZW50LnZhbHVlID0gZ2xvYmFscy56ZXJvQWRkcmVzcwoJYnl0ZWMgMTEgLy8gICJkb2N0b3JQYXRpZW50IgoJZ2xvYmFsIFplcm9BZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoKCS8vICppZjM5X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6Nzk1CgkvLyB0aGlzLnBsYXllcnNBbGl2ZS52YWx1ZSA8PSAyCglieXRlYyAxNCAvLyAgInBsYXllcnNBbGl2ZSIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDIgLy8gMgoJPD0KCWJ6ICppZjM5X2VuZAoKCS8vICppZjM5X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjc5OAoJLy8gdGhpcy5nYW1lU3RhdGUudmFsdWUgPSBzdGF0ZUdhbWVPdmVyCglieXRlYyAwIC8vICAiZ2FtZVN0YXRlIgoJaW50YyA1IC8vIDEyCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjc5OQoJLy8gcmV0dXJuOwoJcmV0c3ViCgoqaWYzOV9lbmQ6CgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo4MDIKCS8vIHRoaXMuZ2FtZVN0YXRlLnZhbHVlID0gc3RhdGVEYXduU3RhZ2VVbm1hc2tpbmcKCWJ5dGVjIDAgLy8gICJnYW1lU3RhdGUiCglpbnRjIDE1IC8vIDExCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyBkYXduU3RhZ2VVbm1hc2tpbmcoYnl0ZVtdKXZvaWQKKmFiaV9yb3V0ZV9kYXduU3RhZ2VVbm1hc2tpbmc6CgkvLyBibHNTazogYnl0ZVtdCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglleHRyYWN0IDIgMAoKCS8vIGV4ZWN1dGUgZGF3blN0YWdlVW5tYXNraW5nKGJ5dGVbXSl2b2lkCgljYWxsc3ViIGRhd25TdGFnZVVubWFza2luZwoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gZGF3blN0YWdlVW5tYXNraW5nKGJsc1NrOiBieXRlcyk6IHZvaWQKZGF3blN0YWdlVW5tYXNraW5nOgoJcHJvdG8gMSAwCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGVjIDggLy8gMHgKCWR1cG4gMgoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjgxMQoJLy8gYXNzZXJ0KAoJLy8gICAgICAgdGhpcy5nYW1lU3RhdGUudmFsdWUgPT09IHN0YXRlRGF3blN0YWdlVW5tYXNraW5nLAoJLy8gICAgICAgJ0ludmFsaWQgbWV0aG9kIGNhbGw6IEdhbWUgaXMgbm90IGluIERhd24gU3RhZ2UgVW5tYXNraW5nIHN0YXRlLicKCS8vICAgICApCglieXRlYyAwIC8vICAiZ2FtZVN0YXRlIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMTUgLy8gMTEKCT09CgoJLy8gSW52YWxpZCBtZXRob2QgY2FsbDogR2FtZSBpcyBub3QgaW4gRGF3biBTdGFnZSBVbm1hc2tpbmcgc3RhdGUuCglhc3NlcnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo4MTYKCS8vIGFzc2VydCh0aGlzLmp1c3RFbGltaW5hdGVkUGxheWVyLnZhbHVlID09PSB0aGlzLnR4bi5zZW5kZXIsICdFcnJvciBzdGF0ZTogT3RoZXIgcGxheWVyIGNhbGxlZCBtZXRob2QuJykKCWJ5dGVjIDEgLy8gICJqdXN0RWxpbWluYXRlZFBsYXllciIKCWFwcF9nbG9iYWxfZ2V0Cgl0eG4gU2VuZGVyCgk9PQoKCS8vIEVycm9yIHN0YXRlOiBPdGhlciBwbGF5ZXIgY2FsbGVkIG1ldGhvZC4KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjgxOQoJLy8gQkxTX1BLID0gZWNTY2FsYXJNdWwoJ0JMUzEyXzM4MWcxJywgaGV4KEJMUzEyMzgxRzFfQkFTRVBPSU5UX0JZVEVTKSwgYmxzU2spCglieXRlYyAzOSAvLyAweDE3ZjFkM2E3MzE5N2Q3OTQyNjk1NjM4YzRmYTlhYzBmYzM2ODhjNGY5Nzc0YjkwNWExNGUzYTNmMTcxYmFjNTg2YzU1ZTgzZmY5N2ExYWVmZmIzYWYwMGFkYjIyYzZiYjA4YjNmNDgxZTNhYWEwZjFhMDllMzBlZDc0MWQ4YWU0ZmNmNWUwOTVkNWQwMGFmNjAwZGIxOGNiMmMwNGIzZWRkMDNjYzc0NGEyODg4YWU0MGNhYTIzMjk0NmM1ZTdlMQoJZnJhbWVfZGlnIC0xIC8vIGJsc1NrOiBieXRlcwoJZWNfc2NhbGFyX211bCBCTFMxMl8zODFnMQoJZnJhbWVfYnVyeSAwIC8vIEJMU19QSzogYnl0ZVtdCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODIwCgkvLyBoYXNoVG9Qb2ludCA9IHRoaXMuaGFzaFBvaW50VG9Qb2ludChCTFNfUEspCglmcmFtZV9kaWcgMCAvLyBCTFNfUEs6IGJ5dGVbXQoJY2FsbHN1YiBoYXNoUG9pbnRUb1BvaW50CglmcmFtZV9idXJ5IDEgLy8gaGFzaFRvUG9pbnQ6IGJ5dGVbXQoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjgyMQoJLy8gZ2VuS2V5SW1hZ2UgPSBlY1NjYWxhck11bCgnQkxTMTJfMzgxZzEnLCBoYXNoVG9Qb2ludCwgYmxzU2spCglmcmFtZV9kaWcgMSAvLyBoYXNoVG9Qb2ludDogYnl0ZVtdCglmcmFtZV9kaWcgLTEgLy8gYmxzU2s6IGJ5dGVzCgllY19zY2FsYXJfbXVsIEJMUzEyXzM4MWcxCglmcmFtZV9idXJ5IDIgLy8gZ2VuS2V5SW1hZ2U6IGJ5dGVbXQoKCS8vICppZjQwX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODIzCgkvLyBnZW5LZXlJbWFnZSA9PT0gdGhpcy5tYWZpYUtleUltYWdlLnZhbHVlCglmcmFtZV9kaWcgMiAvLyBnZW5LZXlJbWFnZTogYnl0ZVtdCglieXRlYyAzMiAvLyAgIm1hZmlhS2V5SW1hZ2UiCglhcHBfZ2xvYmFsX2dldAoJPT0KCWJ6ICppZjQwX2VuZAoKCS8vICppZjQwX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjgyNwoJLy8gdGhpcy5nYW1lU3RhdGUudmFsdWUgPSBzdGF0ZUdhbWVPdmVyCglieXRlYyAwIC8vICAiZ2FtZVN0YXRlIgoJaW50YyA1IC8vIDEyCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjgyOAoJLy8gdGhpcy5tYWZpYS52YWx1ZSA9IGdsb2JhbHMuemVyb0FkZHJlc3MKCWJ5dGVjIDIxIC8vICAibWFmaWEiCglnbG9iYWwgWmVyb0FkZHJlc3MKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODI5CgkvLyByZXR1cm47CglyZXRzdWIKCippZjQwX2VuZDoKCS8vICppZjQxX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODMyCgkvLyBnZW5LZXlJbWFnZSA9PT0gdGhpcy5kb2N0b3JLZXlJbWFnZS52YWx1ZQoJZnJhbWVfZGlnIDIgLy8gZ2VuS2V5SW1hZ2U6IGJ5dGVbXQoJYnl0ZWMgMzEgLy8gICJkb2N0b3JLZXlJbWFnZSIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoJYnogKmlmNDFfZW5kCgoJLy8gKmlmNDFfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODM0CgkvLyB0aGlzLmRvY3Rvci52YWx1ZSA9IGdsb2JhbHMuemVyb0FkZHJlc3MKCWJ5dGVjIDEzIC8vICAiZG9jdG9yIgoJZ2xvYmFsIFplcm9BZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoKKmlmNDFfZW5kOgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODM4CgkvLyB0aGlzLmp1c3RFbGltaW5hdGVkUGxheWVyLnZhbHVlID0gZ2xvYmFscy56ZXJvQWRkcmVzcwoJYnl0ZWMgMSAvLyAgImp1c3RFbGltaW5hdGVkUGxheWVyIgoJZ2xvYmFsIFplcm9BZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjg0MAoJLy8gdGhpcy5nYW1lU3RhdGUudmFsdWUgPSBzdGF0ZURheVN0YWdlVm90ZQoJYnl0ZWMgMCAvLyAgImdhbWVTdGF0ZSIKCWludGMgNCAvLyAzCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyBnYW1lT3Zlcigpdm9pZAoqYWJpX3JvdXRlX2dhbWVPdmVyOgoJLy8gZXhlY3V0ZSBnYW1lT3Zlcigpdm9pZAoJY2FsbHN1YiBnYW1lT3ZlcgoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gZ2FtZU92ZXIoKTogdm9pZApnYW1lT3ZlcjoKCXByb3RvIDAgMAoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlYyA4IC8vIDB4CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODQ1CgkvLyBhc3NlcnQodGhpcy5nYW1lU3RhdGUudmFsdWUgPT09IHN0YXRlR2FtZU92ZXIsICdJbnZhbGlkIG1ldGhvZCBjYWxsOiBHYW1lIGlzIG5vdCBpbiBHYW1lIE92ZXIgc3RhdGUuJykKCWJ5dGVjIDAgLy8gICJnYW1lU3RhdGUiCglhcHBfZ2xvYmFsX2dldAoJaW50YyA1IC8vIDEyCgk9PQoKCS8vIEludmFsaWQgbWV0aG9kIGNhbGw6IEdhbWUgaXMgbm90IGluIEdhbWUgT3ZlciBzdGF0ZS4KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjg0NgoJLy8gdGhpcy5xdWlja0FjY2Vzc1BLQm94ZXMoMCkuZGVsZXRlKCkKCWJ5dGVjIDEwIC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJYm94X2RlbAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjg0NwoJLy8gdGhpcy5oYXNoRmlsdGVyKHJhd0J5dGVzKHNoYTI1Nih0aGlzLm1hZmlhS2V5SW1hZ2UudmFsdWUpKSkuZGVsZXRlKCkKCWJ5dGVjIDMyIC8vICAibWFmaWFLZXlJbWFnZSIKCWFwcF9nbG9iYWxfZ2V0CglzaGEyNTYKCWJveF9kZWwKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo4NDgKCS8vIHRoaXMuaGFzaEZpbHRlcihyYXdCeXRlcyhzaGEyNTYodGhpcy5kb2N0b3JLZXlJbWFnZS52YWx1ZSkpKS5kZWxldGUoKQoJYnl0ZWMgMzEgLy8gICJkb2N0b3JLZXlJbWFnZSIKCWFwcF9nbG9iYWxfZ2V0CglzaGEyNTYKCWJveF9kZWwKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo4NDkKCS8vIHRoaXMuaGFzaEZpbHRlcihyYXdCeXRlcyhzaGEyNTYodGhpcy5mYXJtZXJLZXlJbWFnZS52YWx1ZSkpKS5kZWxldGUoKQoJYnl0ZWMgNDQgLy8gICJmYXJtZXJLZXlJbWFnZSIKCWFwcF9nbG9iYWxfZ2V0CglzaGEyNTYKCWJveF9kZWwKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo4NTAKCS8vIHRoaXMuaGFzaEZpbHRlcihyYXdCeXRlcyhzaGEyNTYodGhpcy5idXRjaGVyS2V5SW1hZ2UudmFsdWUpKSkuZGVsZXRlKCkKCWJ5dGVjIDQxIC8vICAiYnV0Y2hlcktleUltYWdlIgoJYXBwX2dsb2JhbF9nZXQKCXNoYTI1NgoJYm94X2RlbAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjg1MQoJLy8gdGhpcy5oYXNoRmlsdGVyKHJhd0J5dGVzKHNoYTI1Nih0aGlzLmlubmtlZXBLZXlJbWFnZS52YWx1ZSkpKS5kZWxldGUoKQoJYnl0ZWMgNDIgLy8gICJpbm5rZWVwS2V5SW1hZ2UiCglhcHBfZ2xvYmFsX2dldAoJc2hhMjU2Cglib3hfZGVsCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODUyCgkvLyB0aGlzLmhhc2hGaWx0ZXIocmF3Qnl0ZXMoc2hhMjU2KHRoaXMuZ3JvY2VyS2V5SW1hZ2UudmFsdWUpKSkuZGVsZXRlKCkKCWJ5dGVjIDQ1IC8vICAiZ3JvY2VyS2V5SW1hZ2UiCglhcHBfZ2xvYmFsX2dldAoJc2hhMjU2Cglib3hfZGVsCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODU0CgkvLyByZXR1cm5BbW91bnQgPSBTTEFTSF9ERVBPU0lUX0FNT1VOVCAtIGdsb2JhbHMubWluVHhuRmVlCglwdXNoaW50IDEwMDAwMDAKCWdsb2JhbCBNaW5UeG5GZWUKCS0KCWZyYW1lX2J1cnkgMCAvLyByZXR1cm5BbW91bnQ6IHVpbnQ2NAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjg1NgoJLy8gc2VuZFBheW1lbnQoewoJLy8gICAgICAgYW1vdW50OiByZXR1cm5BbW91bnQsCgkvLyAgICAgICByZWNlaXZlcjogdGhpcy5wbGF5ZXIxQWxnb0FkZHIudmFsdWUuYWRkcmVzcywKCS8vICAgICAgIGZlZTogZ2xvYmFscy5taW5UeG5GZWUsCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludGMgMCAvLyAgcGF5CglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODU3CgkvLyBhbW91bnQ6IHJldHVybkFtb3VudAoJZnJhbWVfZGlnIDAgLy8gcmV0dXJuQW1vdW50OiB1aW50NjQKCWl0eG5fZmllbGQgQW1vdW50CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODU4CgkvLyByZWNlaXZlcjogdGhpcy5wbGF5ZXIxQWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgMiAvLyAgInBsYXllcjFBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWl0eG5fZmllbGQgUmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo4NTkKCS8vIGZlZTogZ2xvYmFscy5taW5UeG5GZWUKCWdsb2JhbCBNaW5UeG5GZWUKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjg2MgoJLy8gc2VuZFBheW1lbnQoewoJLy8gICAgICAgYW1vdW50OiByZXR1cm5BbW91bnQsCgkvLyAgICAgICByZWNlaXZlcjogdGhpcy5wbGF5ZXIyQWxnb0FkZHIudmFsdWUuYWRkcmVzcywKCS8vICAgICAgIGZlZTogZ2xvYmFscy5taW5UeG5GZWUsCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludGMgMCAvLyAgcGF5CglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODYzCgkvLyBhbW91bnQ6IHJldHVybkFtb3VudAoJZnJhbWVfZGlnIDAgLy8gcmV0dXJuQW1vdW50OiB1aW50NjQKCWl0eG5fZmllbGQgQW1vdW50CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODY0CgkvLyByZWNlaXZlcjogdGhpcy5wbGF5ZXIyQWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgMyAvLyAgInBsYXllcjJBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWl0eG5fZmllbGQgUmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo4NjUKCS8vIGZlZTogZ2xvYmFscy5taW5UeG5GZWUKCWdsb2JhbCBNaW5UeG5GZWUKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjg2NwoJLy8gc2VuZFBheW1lbnQoewoJLy8gICAgICAgYW1vdW50OiByZXR1cm5BbW91bnQsCgkvLyAgICAgICByZWNlaXZlcjogdGhpcy5wbGF5ZXIzQWxnb0FkZHIudmFsdWUuYWRkcmVzcywKCS8vICAgICAgIGZlZTogZ2xvYmFscy5taW5UeG5GZWUsCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludGMgMCAvLyAgcGF5CglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODY4CgkvLyBhbW91bnQ6IHJldHVybkFtb3VudAoJZnJhbWVfZGlnIDAgLy8gcmV0dXJuQW1vdW50OiB1aW50NjQKCWl0eG5fZmllbGQgQW1vdW50CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODY5CgkvLyByZWNlaXZlcjogdGhpcy5wbGF5ZXIzQWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgNCAvLyAgInBsYXllcjNBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWl0eG5fZmllbGQgUmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo4NzAKCS8vIGZlZTogZ2xvYmFscy5taW5UeG5GZWUKCWdsb2JhbCBNaW5UeG5GZWUKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjg3MwoJLy8gc2VuZFBheW1lbnQoewoJLy8gICAgICAgYW1vdW50OiByZXR1cm5BbW91bnQsCgkvLyAgICAgICByZWNlaXZlcjogdGhpcy5wbGF5ZXI0QWxnb0FkZHIudmFsdWUuYWRkcmVzcywKCS8vICAgICAgIGZlZTogZ2xvYmFscy5taW5UeG5GZWUsCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludGMgMCAvLyAgcGF5CglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODc0CgkvLyBhbW91bnQ6IHJldHVybkFtb3VudAoJZnJhbWVfZGlnIDAgLy8gcmV0dXJuQW1vdW50OiB1aW50NjQKCWl0eG5fZmllbGQgQW1vdW50CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODc1CgkvLyByZWNlaXZlcjogdGhpcy5wbGF5ZXI0QWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgNSAvLyAgInBsYXllcjRBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWl0eG5fZmllbGQgUmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo4NzYKCS8vIGZlZTogZ2xvYmFscy5taW5UeG5GZWUKCWdsb2JhbCBNaW5UeG5GZWUKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjg3OQoJLy8gc2VuZFBheW1lbnQoewoJLy8gICAgICAgYW1vdW50OiByZXR1cm5BbW91bnQsCgkvLyAgICAgICByZWNlaXZlcjogdGhpcy5wbGF5ZXI1QWxnb0FkZHIudmFsdWUuYWRkcmVzcywKCS8vICAgICAgIGZlZTogZ2xvYmFscy5taW5UeG5GZWUsCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludGMgMCAvLyAgcGF5CglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODgwCgkvLyBhbW91bnQ6IHJldHVybkFtb3VudAoJZnJhbWVfZGlnIDAgLy8gcmV0dXJuQW1vdW50OiB1aW50NjQKCWl0eG5fZmllbGQgQW1vdW50CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODgxCgkvLyByZWNlaXZlcjogdGhpcy5wbGF5ZXI1QWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgNiAvLyAgInBsYXllcjVBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWl0eG5fZmllbGQgUmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo4ODIKCS8vIGZlZTogZ2xvYmFscy5taW5UeG5GZWUKCWdsb2JhbCBNaW5UeG5GZWUKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjg4NQoJLy8gc2VuZFBheW1lbnQoewoJLy8gICAgICAgYW1vdW50OiByZXR1cm5BbW91bnQsCgkvLyAgICAgICByZWNlaXZlcjogdGhpcy5wbGF5ZXI2QWxnb0FkZHIudmFsdWUuYWRkcmVzcywKCS8vICAgICAgIGZlZTogZ2xvYmFscy5taW5UeG5GZWUsCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludGMgMCAvLyAgcGF5CglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODg2CgkvLyBhbW91bnQ6IHJldHVybkFtb3VudAoJZnJhbWVfZGlnIDAgLy8gcmV0dXJuQW1vdW50OiB1aW50NjQKCWl0eG5fZmllbGQgQW1vdW50CgoJLy8gY29udHJhY3RzL1Rvd25IYWxsLmFsZ28udHM6ODg3CgkvLyByZWNlaXZlcjogdGhpcy5wbGF5ZXI2QWxnb0FkZHIudmFsdWUuYWRkcmVzcwoJYnl0ZWMgNyAvLyAgInBsYXllcjZBbGdvQWRkciIKCWFwcF9nbG9iYWxfZ2V0CglleHRyYWN0IDAgMzIKCWl0eG5fZmllbGQgUmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo4ODgKCS8vIGZlZTogZ2xvYmFscy5taW5UeG5GZWUKCWdsb2JhbCBNaW5UeG5GZWUKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoJcmV0c3ViCgovLyBkZWxldGVBcHBsaWNhdGlvbigpdm9pZAoqYWJpX3JvdXRlX2RlbGV0ZUFwcGxpY2F0aW9uOgoJLy8gZXhlY3V0ZSBkZWxldGVBcHBsaWNhdGlvbigpdm9pZAoJY2FsbHN1YiBkZWxldGVBcHBsaWNhdGlvbgoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gZGVsZXRlQXBwbGljYXRpb24oKTogdm9pZApkZWxldGVBcHBsaWNhdGlvbjoKCXByb3RvIDAgMAoKCS8vIGNvbnRyYWN0cy9Ub3duSGFsbC5hbGdvLnRzOjg5MwoJLy8gYXNzZXJ0KHRoaXMuZ2FtZVN0YXRlLnZhbHVlID09PSBzdGF0ZUdhbWVPdmVyLCAnSW52YWxpZCBtZXRob2QgY2FsbDogR2FtZSBpcyBub3QgaW4gR2FtZSBPdmVyIHN0YXRlLicpCglieXRlYyAwIC8vICAiZ2FtZVN0YXRlIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgNSAvLyAxMgoJPT0KCgkvLyBJbnZhbGlkIG1ldGhvZCBjYWxsOiBHYW1lIGlzIG5vdCBpbiBHYW1lIE92ZXIgc3RhdGUuCglhc3NlcnQKCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo4OTQKCS8vIHNlbmRQYXltZW50KHsgY2xvc2VSZW1haW5kZXJUbzogdGhpcy5jcmVhdG9yQWRkcmVzcy52YWx1ZSB9KQoJaXR4bl9iZWdpbgoJaW50YyAwIC8vICBwYXkKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvVG93bkhhbGwuYWxnby50czo4OTQKCS8vIGNsb3NlUmVtYWluZGVyVG86IHRoaXMuY3JlYXRvckFkZHJlc3MudmFsdWUKCWJ5dGVjIDM0IC8vICAiY3JlYXRvckFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBDbG9zZVJlbWFpbmRlclRvCgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50YyAxIC8vIDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoJcmV0c3ViCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJcHVzaGJ5dGVzIDB4NzBjZWVhMWIgLy8gbWV0aG9kICJkdW1teU9wVXAodWludDY0KXVpbnQ2NCIKCXB1c2hieXRlcyAweGEwMTdiZDhjIC8vIG1ldGhvZCAiZGxvZyhieXRlW10sYnl0ZVtdLGJ5dGVbXSxieXRlW10pYm9vbCIKCXB1c2hieXRlcyAweGQ3NzJjZGJjIC8vIG1ldGhvZCAiaGFzaFBvaW50VG9Qb2ludChieXRlW10pYnl0ZVtdIgoJcHVzaGJ5dGVzIDB4ZjU0MGJhMmMgLy8gbWV0aG9kICJnZXRHYW1lU3RhdGUoKXVpbnQ2NCIKCXB1c2hieXRlcyAweGZmNjMwZWZkIC8vIG1ldGhvZCAic2V0TFNJR0Z1bmRlckFkZHJlc3MoYWRkcmVzcyl2b2lkIgoJcHVzaGJ5dGVzIDB4NTRkOTJiZTMgLy8gbWV0aG9kICJqb2luR2FtZUxvYmJ5KHBheSxieXRlW10pdm9pZCIKCXB1c2hieXRlcyAweDliMDdiZjhmIC8vIG1ldGhvZCAiYXNzaWduUm9sZShieXRlW10sYnl0ZVtdLGJ5dGVbXSxieXRlW10sYnl0ZVtdLHBheSxwYXkscGF5LHBheSxwYXkscGF5LHBheSl2b2lkIgoJcHVzaGJ5dGVzIDB4NGZiMTIxYmIgLy8gbWV0aG9kICJkYXlTdGFnZVZvdGUodWludDY0KXZvaWQiCglwdXNoYnl0ZXMgMHhjNDIzNjE2OSAvLyBtZXRob2QgImRheVN0YWdlRWxpbWluYXRlKCl2b2lkIgoJcHVzaGJ5dGVzIDB4ZWU5ZjM2MWEgLy8gbWV0aG9kICJkYXlTdGFnZVVubWFza2luZyhieXRlW10pdm9pZCIKCXB1c2hieXRlcyAweDBiNWU3NTg1IC8vIG1ldGhvZCAibmlnaHRTdGFnZU1hZmlhQ29tbWl0KGJ5dGVbXSl2b2lkIgoJcHVzaGJ5dGVzIDB4Yzg2NDU4NzUgLy8gbWV0aG9kICJuaWdodFN0YWdlRG9jdG9yQ29tbWl0KGJ5dGVbXSl2b2lkIgoJcHVzaGJ5dGVzIDB4ZWRjNDg2YmIgLy8gbWV0aG9kICJkYXduU3RhZ2VNYWZpYVJldmVhbChhZGRyZXNzLGJ5dGVbMzJdKXZvaWQiCglwdXNoYnl0ZXMgMHg3NzM3NjJlNSAvLyBtZXRob2QgImRhd25TdGFnZURvY3RvclJldmVhbChhZGRyZXNzLGJ5dGVbMzJdKXZvaWQiCglwdXNoYnl0ZXMgMHgzOTk1ZWQ2YSAvLyBtZXRob2QgImRhd25TdGFnZURlYWRPclNhdmVkKCl2b2lkIgoJcHVzaGJ5dGVzIDB4ZWY2NWE2OTcgLy8gbWV0aG9kICJkYXduU3RhZ2VVbm1hc2tpbmcoYnl0ZVtdKXZvaWQiCglwdXNoYnl0ZXMgMHg2YWRiNDUzOCAvLyBtZXRob2QgImdhbWVPdmVyKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9kdW1teU9wVXAgKmFiaV9yb3V0ZV9kbG9nICphYmlfcm91dGVfaGFzaFBvaW50VG9Qb2ludCAqYWJpX3JvdXRlX2dldEdhbWVTdGF0ZSAqYWJpX3JvdXRlX3NldExTSUdGdW5kZXJBZGRyZXNzICphYmlfcm91dGVfam9pbkdhbWVMb2JieSAqYWJpX3JvdXRlX2Fzc2lnblJvbGUgKmFiaV9yb3V0ZV9kYXlTdGFnZVZvdGUgKmFiaV9yb3V0ZV9kYXlTdGFnZUVsaW1pbmF0ZSAqYWJpX3JvdXRlX2RheVN0YWdlVW5tYXNraW5nICphYmlfcm91dGVfbmlnaHRTdGFnZU1hZmlhQ29tbWl0ICphYmlfcm91dGVfbmlnaHRTdGFnZURvY3RvckNvbW1pdCAqYWJpX3JvdXRlX2Rhd25TdGFnZU1hZmlhUmV2ZWFsICphYmlfcm91dGVfZGF3blN0YWdlRG9jdG9yUmV2ZWFsICphYmlfcm91dGVfZGF3blN0YWdlRGVhZE9yU2F2ZWQgKmFiaV9yb3V0ZV9kYXduU3RhZ2VVbm1hc2tpbmcgKmFiaV9yb3V0ZV9nYW1lT3ZlcgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycgoKKmNhbGxfRGVsZXRlQXBwbGljYXRpb246CglwdXNoYnl0ZXMgMHgyNDg3YzMyYyAvLyBtZXRob2QgImRlbGV0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9kZWxldGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIERlbGV0ZUFwcGxpY2F0aW9uCgllcnI=","clear":"I3ByYWdtYSB2ZXJzaW9uIDEw"},"byteCode":{"approval":"CiAQAQACBgMMIAQFBwgKYPCTCQkLJi4JZ2FtZVN0YXRlFGp1c3RFbGltaW5hdGVkUGxheWVyD3BsYXllcjFBbGdvQWRkcg9wbGF5ZXIyQWxnb0FkZHIPcGxheWVyM0FsZ29BZGRyD3BsYXllcjRBbGdvQWRkcg9wbGF5ZXI1QWxnb0FkZHIPcGxheWVyNkFsZ29BZGRyAAttYWZpYVZpY3RpbQgAAAAAAAAAAA1kb2N0b3JQYXRpZW50CAAAAAAAAAABBmRvY3RvcgxwbGF5ZXJzQWxpdmUUcGxheWVyMVJlY2VpdmVkVm90ZXMUcGxheWVyMlJlY2VpdmVkVm90ZXMUcGxheWVyM1JlY2VpdmVkVm90ZXMUcGxheWVyNFJlY2VpdmVkVm90ZXMUcGxheWVyNVJlY2VpdmVkVm90ZXMUcGxheWVyNlJlY2VpdmVkVm90ZXMFbWFmaWERbHNpZ0Z1bmRlckFkZHJlc3MMcGxheWVyc1ZvdGVkDXBsYXllcnNKb2luZWQPcGxheWVyMUhhc1ZvdGVkD3BsYXllcjJIYXNWb3RlZA9wbGF5ZXIzSGFzVm90ZWQPcGxheWVyNEhhc1ZvdGVkD3BsYXllcjVIYXNWb3RlZA9wbGF5ZXI2SGFzVm90ZWQOZG9jdG9yS2V5SW1hZ2UNbWFmaWFLZXlJbWFnZQQVH3x1DmNyZWF0b3JBZGRyZXNzB2J1dGNoZXIHaW5ua2VlcAZmYXJtZXIGZ3JvY2VyYBfx06cxl9eUJpVjjE+prA/DaIxPl3S5BaFOOj8XG6xYbFXoP/l6Gu/7OvAK2yLGuwiz9IHjqqDxoJ4w7XQdiuT89eCV1dAK9gDbGMssBLPt0DzHRKKIiuQMqiMpRsXn4RBkb2N0b3JDb21taXRtZW50D2J1dGNoZXJLZXlJbWFnZQ9pbm5rZWVwS2V5SW1hZ2UPbWFmaWFDb21taXRtZW50DmZhcm1lcktleUltYWdlDmdyb2NlcktleUltYWdlMRgUJQsxGQiNDA5XAAAAAAAAAAAO5Q5JAAAAAAAAAAAAAACIAAIiQ4oAACciMQBnJxYyA2cqMgMnClBnKzIDJwpQZycEMgMnClBnJwUyAycKUGcnBjIDJwpQZycHMgMnClBnJxUyA2cnDTIDZyclMgNnJyMyA2cnJDIDZycmMgNnJxkjZycaI2cnGyNnJxwjZycdI2cnHiNnJxcjZycPI2cnECNnJxEjZycSI2cnEyNnJxQjZycXI2cnGCNnJw4lZykyA2cnCTIDZycLMgNnKCNniSchNhoBF4gABRZQsCJDigEBi/+JJyE2GgRXAgA2GgNXAgA2GgJXAgA2GgFXAgCIAAuAAQAjTwJUULAiQ4oEAScISYv/i/6L/VBQAowAiwCAIHPtp1MpnX1IMznYCAmh2AVTvaQC//5b/v////8AAAABqowBi/2L/4v84QKL/osB4QLgAhKMAEYBiSchNhoBVwIAiAAMSRUWVwYCTFBQsCJDigEBJwhHAov/AowAiwCAMBoBEeo5f+aaSxuntkNLrNdkd0uE84USv2cw0qD2sPYkHqv//rFT//+5/v////+qq6qMAYsB5QKMAosCjABGAoknIYgABRZQsCJDigABKGSJNhoBSRUhBhJEiAACIkOKAQAoZCMSRDEAJyJkEkQnFmQyAxJEi/8yAxNEJxaL/2coImeJNhoBVwIAMRYiCUk4ECISRIgAAiJDigIAJwhHAyhkIhJEJxhkJQxEKmRXACAxABJJQAAJK2RXACAxABIRSUAACicEZFcAIDEAEhFJQAAKJwVkVwAgMQASEUlAAAonBmRXACAxABIRSUAACicHZFcAIDEAEhFBAAEAi/84CIGwmEYPRIv+VwBgjACL/ldgYIwBi/5XwGCMAov+gaACIQZYjAOLA4sCiwGLAIj+XEQnCr1MSBRBAAknCiEMuUhCAAknCkm9RCEMCNMnCr1MSEQnCicYZCEMC4sBuycYZCIIJxhMZycWZDIDE0SxIrIQIQ2yCCcWZLIHI7IBsypkVwAgMgMSQQAKKmQjMQBdKkxniStkVwAgMgMSQQAKK2QjMQBdK0xniScEZFcAIDIDEkEADCcEZCMxAF0nBExniScFZFcAIDIDEkEADCcFZCMxAF0nBUxniScGZFcAIDIDEkEADCcGZCMxAF0nBkxniScHZFcAIDIDEkEADycHZCMxAF0nB0xnKCRniQCJMRYiCUk4ECISRDEWJAlJOBAiEkQxFiEECUk4ECISRDEWIQcJSTgQIhJEMRYhCAlJOBAiEkQxFiUJSTgQIhJEMRYhCQlJOBAiEkQ2GgVXAgA2GgRXAgA2GgNXAgA2GgJXAgA2GgFXAgCIAAIiQ4oMAChkJBJEi/0BvUxIFESL/QEjuUiL/zEAMgpQEkQnCiOBwAS6i/4SRIv5OACAIMy0KLrYYVmoDh6cpCTro2YS9JHQkKIpBxwDStS/3rrHEkSL+DgAgCDgbmS8APe6ZatS5lSvHEQGO9aA4FTcnnkg1RuiIztUZRJEi/c4AIAgWQdzvDe/ic3M8tMNWKF/1zM6gXacNd8x4B+yrc92KYQSRIv2OACAIF0J8uM94EKFMEusZhjWns+ak589JWxurci61na7oPNrEkSL9TgAgCA/z38vFIZ+jITbGUZ+Fz8CtKp7Y+ZwtsanHefOPLShrhJEi/Q4AIAgAfwQqM86+lJ71xP8FdXCVMG4D/gqbgKRsOAf7RRcRUsSRIv6OAAnFmQSRIv6OAcxABJEi/o4CCENEkQnFWQyAxJBAAsnFTEAZycgi/1niScNZDIDEkEACycNMQBnJx+L/WeJJyVkMgMSQQALJyUxAGcnLIv9Z4knI2QyAxJBAAsnIzEAZycpi/1niSckZDIDEkEACyckMQBnJyqL/WeJJyZkMgMSQQAPJyYxAGcnLYv9ZyghBGeJAIk2GgEXiAACIkOKAQAoZCEEEkSL/yMNSUEABov/IQkMEEQxACpkVwAgEklAAAkxACtkVwAgEhFJQAAKMQAnBGRXACASEUlAAAoxACcFZFcAIBIRSUAACjEAJwZkVwAgEhFJQAAKMQAnB2RXACASERRBAAEAi/8iEklBAAkqZFcAIDIDExBBAAwnD2QiCCcPTGdCAKiL/yQSSUEACStkVwAgMgMTEEEADCcQZCIIJxBMZ0IAiIv/IQQSSUEACicEZFcAIDIDExBBAAwnEWQiCCcRTGdCAGaL/yEHEklBAAonBWRXACAyAxMQQQAMJxJkIggnEkxnQgBEi/8hCBJJQQAKJwZkVwAgMgMTEEEADCcTZCIIJxNMZ0IAIov/JRJJQQAKJwdkVwAgMgMTEEEADCcUZCIIJxRMZ0IAAQAxACpkVwAgEklBAAYnGWQjEhBBAAcnGSJnQgCRMQArZFcAIBJJQQAGJxpkIxIQQQAHJxoiZ0IAdTEAJwRkVwAgEklBAAYnG2QjEhBBAAcnGyJnQgBYMQAnBWRXACASSUEABiccZCMSEEEAByccImdCADsxACcGZFcAIBJJQQAGJx1kIxIQQQAHJx0iZ0IAHjEAJwdkVwAgEklBAAYnHmQjEhBBAAcnHiJnQgABACcXZCIIJxdMZycXZCcOZBJBACAoIQdnJxcjZycZI2cnGiNnJxsjZyccI2cnHSNnJx4jZ4mIAAIiQ4oAACcISShkIQcSRCkyA2cjjAAyBiQYIxKMAScPZIsADUlAAA4nD2SLABJJQQADiwEQEUEADCkqZFcAIGcnD2SMACcQZIsADUlAAA4nEGSLABJJQQADiwEQEUEADCkrZFcAIGcnEGSMACcRZIsADUlAAA4nEWSLABJJQQADiwEQEUEADSknBGRXACBnJxFkjAAnEmSLAA1JQAAOJxJkiwASSUEAA4sBEBFBAA0pJwVkVwAgZycSZIwAJxNkiwANSUAADicTZIsAEklBAAOLARARQQANKScGZFcAIGcnE2SMACcUZIsADUlAAA4nFGSLABJJQQADiwEQEUEADSknB2RXACBnJxRkjAApZDIDE0SLACMTRClkKmRXACASQQAJKmQnDFwgKkxnKWQrZFcAIBJBAAkrZCcMXCArTGcpZCcEZFcAIBJBAAsnBGQnDFwgJwRMZylkJwVkVwAgEkEACycFZCcMXCAnBUxnKWQnBmRXACASQQALJwZkJwxcICcGTGcpZCcHZFcAIBJBAAsnB2QnDFwgJwdMZycOZCIJJw5MZycPI2cnECNnJxEjZycSI2cnEyNnJxQjZyghCGeJNhoBVwIAiAACIkOKAQAnCEcCKGQhCBJEKWQxABJEJyeL/+ECjACLAIj3vIwBiwGL/+ECjAKLAicgZBJBAAonFTIDZyghBWeJiwInH2QSQQAFJw0yA2cpMgNnJw5kJA5BAAUoIQVniSglZ4k2GgFXAgCIAAIiQ4oBAChkJRJEMQAnFWQSRCcri/9nJw1kMgMSQQAHKCEKZ0IABCghCWeJNhoBVwIAiAACIkOKAQAoZCEJEkQxACcNZBJEJw1kMgMTRCcoi/9nKCEKZ4k2GgJJFSEGEkQ2GgFJFSEGEkSIAAIiQ4oCACcIKGQhChJEMQAnFWQSRIv/MgMTRIv/i/5QAYwAiwAnK2QSRIv/KmRXACASQQALJwkqZFcAIGdCAHuL/ytkVwAgEkEACycJK2RXACBnQgBli/8nBGRXACASQQAMJwknBGRXACBnQgBNi/8nBWRXACASQQAMJwknBWRXACBnQgA1i/8nBmRXACASQQAMJwknBmRXACBnQgAdi/8nB2RXACASQQAMJwknB2RXACBnQgAFJwkyA2cnDWQyAxJBAAcoIQtnQgAEKCEOZ4k2GgJJFSEGEkQ2GgFJFSEGEkSIAAIiQ4oCACcIKGQhDhJEMQAnDWQSRCcLZDIDEkSL/zIDE0SL/4v+UAGMAIsAJyhkEkSL/ypkVwAgEkEACycLKmRXACBnQgB7i/8rZFcAIBJBAAsnCytkVwAgZ0IAZYv/JwRkVwAgEkEADCcLJwRkVwAgZ0IATYv/JwVkVwAgEkEADCcLJwVkVwAgZ0IANYv/JwZkVwAgEkEADCcLJwZkVwAgZ0IAHYv/JwdkVwAgEkEADCcLJwdkVwAgZ0IABScLMgNnKCELZ4mIAAIiQ4oAAChkIQsSRCcJZDIDEklAAAgnCWQnC2QSEUEADycJMgNnJwsyA2coIQRniScJZCpkVwAgEkEAEykqZFcAIGcqZCcMXCAqTGdCAKwnCWQrZFcAIBJBABMpK2RXACBnK2QnDFwgK0xnQgCNJwlkJwRkVwAgEkEAFiknBGRXACBnJwRkJwxcICcETGdCAGonCWQnBWRXACASQQAWKScFZFcAIGcnBWQnDFwgJwVMZ0IARycJZCcGZFcAIBJBABYpJwZkVwAgZycGZCcMXCAnBkxnQgAkJwlkJwdkVwAgEkEAFiknB2RXACBnJwdkJwxcICcHTGdCAAEAJw5kIgknDkxnJwkyA2cnCzIDZycOZCQOQQAFKCEFZ4koIQ9niTYaAVcCAIgAAiJDigEAJwhHAihkIQ8SRClkMQASRCcni//hAowAiwCI9BCMAYsBi//hAowCiwInIGQSQQAKKCEFZycVMgNniYsCJx9kEkEABScNMgNnKTIDZyghBGeJiAACIkOKAAAnCChkIQUSRCcKvCcgZAG8Jx9kAbwnLGQBvCcpZAG8JypkAbwnLWQBvIHAhD0yAAmMALEishCLALIIKmRXACCyBzIAsgGzsSKyEIsAsggrZFcAILIHMgCyAbOxIrIQiwCyCCcEZFcAILIHMgCyAbOxIrIQiwCyCCcFZFcAILIHMgCyAbOxIrIQiwCyCCcGZFcAILIHMgCyAbOxIrIQiwCyCCcHZFcAILIHMgCyAbOJiAACIkOKAAAoZCEFEkSxIrIQJyJksgkjsgGziYAEuER7NjYaAI4B8asAgARwzuobgASgF72MgATXcs28gAT1QLosgAT/Yw79gARU2SvjgASbB7+PgARPsSG7gATEI2FpgATunzYagAQLXnWFgATIZFh1gATtxIa7gAR3N2LlgAQ5le1qgATvZaaXgARq20U4NhoAjhHxzfHh8lfyvvLO8wH0ivao+MT6h/ry+yb7Uvw2/RH+M/6SAIAEJIfDLDYaAI4B/zsA","clear":"Cg=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":4,"minor":0,"patch":2,"commitHash":"6b940281"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


/**
 * The argument types for the TownHall contract
 */
export type TownHallArgs = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication()void': Record<string, never>
    'dummyOpUp(uint64)uint64': {
      i: bigint | number
    }
    'dlog(byte[],byte[],byte[],byte[])bool': {
      g: Uint8Array
      x: Uint8Array
      v: Uint8Array
      z: Uint8Array
    }
    'hashPointToPoint(byte[])byte[]': {
      point: Uint8Array
    }
    'getGameState()uint64': Record<string, never>
    'setLSIGFunderAddress(address)void': {
      funderLSigAddress: string
    }
    'joinGameLobby(pay,byte[])void': {
      depositTxn: AppMethodCallTransactionArgument
      nizkDlog: Uint8Array
    }
    'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void': {
      msg: Uint8Array
      pkAll: Uint8Array
      keyImage: Uint8Array
      sig: Uint8Array
      challenges: Uint8Array
      funderLSigTxn: AppMethodCallTransactionArgument
      ringLSigTxn0: AppMethodCallTransactionArgument
      ringLSigTxn1: AppMethodCallTransactionArgument
      ringLSigTxn2: AppMethodCallTransactionArgument
      ringLSigTxn3: AppMethodCallTransactionArgument
      ringLSigTxn4: AppMethodCallTransactionArgument
      ringLSigTxn5: AppMethodCallTransactionArgument
    }
    'dayStageVote(uint64)void': {
      vote: bigint | number
    }
    'dayStageEliminate()void': Record<string, never>
    'dayStageUnmasking(byte[])void': {
      blsSk: Uint8Array
    }
    'nightStageMafiaCommit(byte[])void': {
      commitment: Uint8Array
    }
    'nightStageDoctorCommit(byte[])void': {
      commitment: Uint8Array
    }
    'dawnStageMafiaReveal(address,byte[32])void': {
      victimAim: string
      blinder: Uint8Array
    }
    'dawnStageDoctorReveal(address,byte[32])void': {
      patientAim: string
      blinder: Uint8Array
    }
    'dawnStageDeadOrSaved()void': Record<string, never>
    'dawnStageUnmasking(byte[])void': {
      blsSk: Uint8Array
    }
    'gameOver()void': Record<string, never>
    'deleteApplication()void': Record<string, never>
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication()void': []
    'dummyOpUp(uint64)uint64': [i: bigint | number]
    'dlog(byte[],byte[],byte[],byte[])bool': [g: Uint8Array, x: Uint8Array, v: Uint8Array, z: Uint8Array]
    'hashPointToPoint(byte[])byte[]': [point: Uint8Array]
    'getGameState()uint64': []
    'setLSIGFunderAddress(address)void': [funderLSigAddress: string]
    'joinGameLobby(pay,byte[])void': [depositTxn: AppMethodCallTransactionArgument, nizkDlog: Uint8Array]
    'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void': [msg: Uint8Array, pkAll: Uint8Array, keyImage: Uint8Array, sig: Uint8Array, challenges: Uint8Array, funderLSigTxn: AppMethodCallTransactionArgument, ringLSigTxn0: AppMethodCallTransactionArgument, ringLSigTxn1: AppMethodCallTransactionArgument, ringLSigTxn2: AppMethodCallTransactionArgument, ringLSigTxn3: AppMethodCallTransactionArgument, ringLSigTxn4: AppMethodCallTransactionArgument, ringLSigTxn5: AppMethodCallTransactionArgument]
    'dayStageVote(uint64)void': [vote: bigint | number]
    'dayStageEliminate()void': []
    'dayStageUnmasking(byte[])void': [blsSk: Uint8Array]
    'nightStageMafiaCommit(byte[])void': [commitment: Uint8Array]
    'nightStageDoctorCommit(byte[])void': [commitment: Uint8Array]
    'dawnStageMafiaReveal(address,byte[32])void': [victimAim: string, blinder: Uint8Array]
    'dawnStageDoctorReveal(address,byte[32])void': [patientAim: string, blinder: Uint8Array]
    'dawnStageDeadOrSaved()void': []
    'dawnStageUnmasking(byte[])void': [blsSk: Uint8Array]
    'gameOver()void': []
    'deleteApplication()void': []
  }
}

/**
 * The return type for each method
 */
export type TownHallReturns = {
  'createApplication()void': void
  'dummyOpUp(uint64)uint64': bigint
  'dlog(byte[],byte[],byte[],byte[])bool': boolean
  'hashPointToPoint(byte[])byte[]': Uint8Array
  'getGameState()uint64': bigint
  'setLSIGFunderAddress(address)void': void
  'joinGameLobby(pay,byte[])void': void
  'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void': void
  'dayStageVote(uint64)void': void
  'dayStageEliminate()void': void
  'dayStageUnmasking(byte[])void': void
  'nightStageMafiaCommit(byte[])void': void
  'nightStageDoctorCommit(byte[])void': void
  'dawnStageMafiaReveal(address,byte[32])void': void
  'dawnStageDoctorReveal(address,byte[32])void': void
  'dawnStageDeadOrSaved()void': void
  'dawnStageUnmasking(byte[])void': void
  'gameOver()void': void
  'deleteApplication()void': void
}

/**
 * Defines the types of available calls and state of the TownHall smart contract.
 */
export type TownHallTypes = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication()void' | 'createApplication', {
      argsObj: TownHallArgs['obj']['createApplication()void']
      argsTuple: TownHallArgs['tuple']['createApplication()void']
      returns: TownHallReturns['createApplication()void']
    }>
    & Record<'dummyOpUp(uint64)uint64' | 'dummyOpUp', {
      argsObj: TownHallArgs['obj']['dummyOpUp(uint64)uint64']
      argsTuple: TownHallArgs['tuple']['dummyOpUp(uint64)uint64']
      /**
       * the number (but we do nothing with it)
       */
      returns: TownHallReturns['dummyOpUp(uint64)uint64']
    }>
    & Record<'dlog(byte[],byte[],byte[],byte[])bool' | 'dlog', {
      argsObj: TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool']
      argsTuple: TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']
      returns: TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool']
    }>
    & Record<'hashPointToPoint(byte[])byte[]' | 'hashPointToPoint', {
      argsObj: TownHallArgs['obj']['hashPointToPoint(byte[])byte[]']
      argsTuple: TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']
      returns: TownHallReturns['hashPointToPoint(byte[])byte[]']
    }>
    & Record<'getGameState()uint64' | 'getGameState', {
      argsObj: TownHallArgs['obj']['getGameState()uint64']
      argsTuple: TownHallArgs['tuple']['getGameState()uint64']
      returns: TownHallReturns['getGameState()uint64']
    }>
    & Record<'setLSIGFunderAddress(address)void' | 'setLSIGFunderAddress', {
      argsObj: TownHallArgs['obj']['setLSIGFunderAddress(address)void']
      argsTuple: TownHallArgs['tuple']['setLSIGFunderAddress(address)void']
      returns: TownHallReturns['setLSIGFunderAddress(address)void']
    }>
    & Record<'joinGameLobby(pay,byte[])void' | 'joinGameLobby', {
      argsObj: TownHallArgs['obj']['joinGameLobby(pay,byte[])void']
      argsTuple: TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']
      returns: TownHallReturns['joinGameLobby(pay,byte[])void']
    }>
    & Record<'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void' | 'assignRole', {
      argsObj: TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']
      argsTuple: TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']
      returns: TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']
    }>
    & Record<'dayStageVote(uint64)void' | 'dayStageVote', {
      argsObj: TownHallArgs['obj']['dayStageVote(uint64)void']
      argsTuple: TownHallArgs['tuple']['dayStageVote(uint64)void']
      returns: TownHallReturns['dayStageVote(uint64)void']
    }>
    & Record<'dayStageEliminate()void' | 'dayStageEliminate', {
      argsObj: TownHallArgs['obj']['dayStageEliminate()void']
      argsTuple: TownHallArgs['tuple']['dayStageEliminate()void']
      returns: TownHallReturns['dayStageEliminate()void']
    }>
    & Record<'dayStageUnmasking(byte[])void' | 'dayStageUnmasking', {
      argsObj: TownHallArgs['obj']['dayStageUnmasking(byte[])void']
      argsTuple: TownHallArgs['tuple']['dayStageUnmasking(byte[])void']
      returns: TownHallReturns['dayStageUnmasking(byte[])void']
    }>
    & Record<'nightStageMafiaCommit(byte[])void' | 'nightStageMafiaCommit', {
      argsObj: TownHallArgs['obj']['nightStageMafiaCommit(byte[])void']
      argsTuple: TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']
      returns: TownHallReturns['nightStageMafiaCommit(byte[])void']
    }>
    & Record<'nightStageDoctorCommit(byte[])void' | 'nightStageDoctorCommit', {
      argsObj: TownHallArgs['obj']['nightStageDoctorCommit(byte[])void']
      argsTuple: TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']
      returns: TownHallReturns['nightStageDoctorCommit(byte[])void']
    }>
    & Record<'dawnStageMafiaReveal(address,byte[32])void' | 'dawnStageMafiaReveal', {
      argsObj: TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void']
      argsTuple: TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']
      returns: TownHallReturns['dawnStageMafiaReveal(address,byte[32])void']
    }>
    & Record<'dawnStageDoctorReveal(address,byte[32])void' | 'dawnStageDoctorReveal', {
      argsObj: TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void']
      argsTuple: TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']
      returns: TownHallReturns['dawnStageDoctorReveal(address,byte[32])void']
    }>
    & Record<'dawnStageDeadOrSaved()void' | 'dawnStageDeadOrSaved', {
      argsObj: TownHallArgs['obj']['dawnStageDeadOrSaved()void']
      argsTuple: TownHallArgs['tuple']['dawnStageDeadOrSaved()void']
      returns: TownHallReturns['dawnStageDeadOrSaved()void']
    }>
    & Record<'dawnStageUnmasking(byte[])void' | 'dawnStageUnmasking', {
      argsObj: TownHallArgs['obj']['dawnStageUnmasking(byte[])void']
      argsTuple: TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']
      returns: TownHallReturns['dawnStageUnmasking(byte[])void']
    }>
    & Record<'gameOver()void' | 'gameOver', {
      argsObj: TownHallArgs['obj']['gameOver()void']
      argsTuple: TownHallArgs['tuple']['gameOver()void']
      returns: TownHallReturns['gameOver()void']
    }>
    & Record<'deleteApplication()void' | 'deleteApplication', {
      argsObj: TownHallArgs['obj']['deleteApplication()void']
      argsTuple: TownHallArgs['tuple']['deleteApplication()void']
      returns: TownHallReturns['deleteApplication()void']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        creatorAddress: string
        player1AlgoAddr: [string, bigint]
        player2AlgoAddr: [string, bigint]
        player3AlgoAddr: [string, bigint]
        player4AlgoAddr: [string, bigint]
        player5AlgoAddr: [string, bigint]
        player6AlgoAddr: [string, bigint]
        mafia: string
        mafiaKeyImage: BinaryState
        doctor: string
        doctorKeyImage: BinaryState
        farmer: string
        farmerKeyImage: BinaryState
        butcher: string
        butcherKeyImage: BinaryState
        innkeep: string
        innkeepKeyImage: BinaryState
        grocer: string
        grocerKeyImage: BinaryState
        lsigFunderAddress: string
        player1HasVoted: bigint
        player1ReceivedVotes: bigint
        player2HasVoted: bigint
        player2ReceivedVotes: bigint
        player3HasVoted: bigint
        player3ReceivedVotes: bigint
        player4HasVoted: bigint
        player4ReceivedVotes: bigint
        player5HasVoted: bigint
        player5ReceivedVotes: bigint
        player6HasVoted: bigint
        player6ReceivedVotes: bigint
        playersVoted: bigint
        playersAlive: bigint
        justEliminatedPlayer: string
        mafiaCommitment: BinaryState
        doctorCommitment: BinaryState
        mafiaVictim: string
        doctorPatient: string
        playersJoined: bigint
        gameState: bigint
      }
      maps: {}
    }
    box: {
      keys: {}
      maps: {
        quickAccessPkBoxes: Map<bigint | number, Uint8Array>
        hashFilter: Map<Uint8Array | string, Uint8Array>
      }
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type TownHallSignatures = keyof TownHallTypes['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type TownHallNonVoidMethodSignatures = keyof TownHallTypes['methods'] extends infer T ? T extends keyof TownHallTypes['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the TownHall smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends TownHallSignatures> = TownHallTypes['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the TownHall smart contract to the method's return type
 */
export type MethodReturn<TSignature extends TownHallSignatures> = TownHallTypes['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = TownHallTypes['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = TownHallTypes['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type TownHallCreateCallParams =
  | Expand<CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & {method: 'createApplication()void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines supported delete method params for this smart contract
 */
export type TownHallDeleteCallParams =
  | Expand<CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication'}>
  | Expand<CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication()void'}>
/**
 * Defines arguments required for the deploy method.
 */
export type TownHallDeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: TownHallCreateCallParams
  /**
   * Delete transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  deleteParams?: TownHallDeleteCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the TownHall smart contract
 */
export abstract class TownHallParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends TownHallCreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication()void':
            return TownHallParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the TownHall smart contract using the createApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Gets available delete ABI call param factories
   */
  static get delete() {
    return {
      _resolveByMethod<TParams extends TownHallDeleteCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'deleteApplication':
          case 'deleteApplication()void':
            return TownHallParamsFactory.delete.deleteApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs delete ABI call params for the TownHall smart contract using the deleteApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      deleteApplication(params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']>): AppClientMethodCallParams {
        return {
          ...params,
          method: 'deleteApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the dummyOpUp(uint64)uint64 ABI method
   *
  * Dummy Op Up
  Dummy operation to get more opcode budget
  - The number to return, necssary to deduplicate the name

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dummyOpUp(params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dummyOpUp(uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.i],
    }
  }
  /**
   * Constructs a no op call for the dlog(byte[],byte[],byte[],byte[])bool ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dlog(params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dlog(byte[],byte[],byte[],byte[])bool' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.g, params.args.x, params.args.v, params.args.z],
    }
  }
  /**
   * Constructs a no op call for the hashPointToPoint(byte[])byte[] ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hashPointToPoint(params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hashPointToPoint(byte[])byte[]' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.point],
    }
  }
  /**
   * Constructs a no op call for the getGameState()uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getGameState(params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getGameState()uint64' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the setLSIGFunderAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setLsigFunderAddress(params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setLSIGFunderAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.funderLSigAddress],
    }
  }
  /**
   * Constructs a no op call for the joinGameLobby(pay,byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static joinGameLobby(params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'joinGameLobby(pay,byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.depositTxn, params.args.nizkDlog],
    }
  }
  /**
   * Constructs a no op call for the assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static assignRole(params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.msg, params.args.pkAll, params.args.keyImage, params.args.sig, params.args.challenges, params.args.funderLSigTxn, params.args.ringLSigTxn0, params.args.ringLSigTxn1, params.args.ringLSigTxn2, params.args.ringLSigTxn3, params.args.ringLSigTxn4, params.args.ringLSigTxn5],
    }
  }
  /**
   * Constructs a no op call for the dayStageVote(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageVote(params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageVote(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.vote],
    }
  }
  /**
   * Constructs a no op call for the dayStageEliminate()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageEliminate(params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageEliminate()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the dayStageUnmasking(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageUnmasking(params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageUnmasking(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.blsSk],
    }
  }
  /**
   * Constructs a no op call for the nightStageMafiaCommit(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static nightStageMafiaCommit(params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'nightStageMafiaCommit(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.commitment],
    }
  }
  /**
   * Constructs a no op call for the nightStageDoctorCommit(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static nightStageDoctorCommit(params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'nightStageDoctorCommit(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.commitment],
    }
  }
  /**
   * Constructs a no op call for the dawnStageMafiaReveal(address,byte[32])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageMafiaReveal(params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageMafiaReveal(address,byte[32])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.victimAim, params.args.blinder],
    }
  }
  /**
   * Constructs a no op call for the dawnStageDoctorReveal(address,byte[32])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageDoctorReveal(params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageDoctorReveal(address,byte[32])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.patientAim, params.args.blinder],
    }
  }
  /**
   * Constructs a no op call for the dawnStageDeadOrSaved()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageDeadOrSaved(params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageDeadOrSaved()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the dawnStageUnmasking(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageUnmasking(params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageUnmasking(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.blsSk],
    }
  }
  /**
   * Constructs a no op call for the gameOver()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static gameOver(params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'gameOver()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the TownHall smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class TownHallFactory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `TownHallFactory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new TownHallClient(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new TownHallClient(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the TownHall smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: TownHallDeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? TownHallParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (TownHallCreateCallParams & { args: Uint8Array[] }) : undefined,
      deleteParams: params.deleteParams?.method ? TownHallParamsFactory.delete._resolveByMethod(params.deleteParams) : params.deleteParams ? params.deleteParams as (TownHallDeleteCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new TownHallClient(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.params.create(TownHallParamsFactory.create.createApplication(params))
      },
    },

    /**
     * Gets available deployDelete methods
     */
    deployDelete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the deleteApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The deployDelete params
       */
      deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appFactory.params.deployDelete(TownHallParamsFactory.delete.deleteApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.createTransaction.create(TownHallParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using an ABI method call using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        const result = await this.appFactory.send.create(TownHallParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | TownHallReturns['createApplication()void']) }, appClient: new TownHallClient(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the TownHall smart contract
 */
export class TownHallClient {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `TownHallClient`
   *
   * @param appClient An `AppClient` instance which has been created with the TownHall app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `TownHallClient`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends TownHallNonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `TownHallClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<TownHallClient> {
    return new TownHallClient(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `TownHallClient` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<TownHallClient> {
    return new TownHallClient(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete params
       */
      deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.params.delete(TownHallParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call params: the number (but we do nothing with it)
     */
    dummyOpUp: (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dummyOpUp(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dlog: (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dlog(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hashPointToPoint: (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.hashPointToPoint(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getGameState: (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.getGameState(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `setLSIGFunderAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setLsigFunderAddress: (params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.setLsigFunderAddress(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(pay,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    joinGameLobby: (params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.joinGameLobby(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    assignRole: (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.assignRole(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageVote: (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageVote(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageEliminate: (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageEliminate(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageUnmasking: (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    nightStageMafiaCommit: (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.nightStageMafiaCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    nightStageDoctorCommit: (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.nightStageDoctorCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageMafiaReveal: (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageDoctorReveal: (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageDeadOrSaved: (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageUnmasking: (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    gameOver: (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.gameOver(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete transaction
       */
      deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.createTransaction.delete(TownHallParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call transaction: the number (but we do nothing with it)
     */
    dummyOpUp: (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dummyOpUp(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dlog: (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dlog(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hashPointToPoint: (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.hashPointToPoint(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getGameState: (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.getGameState(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `setLSIGFunderAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setLsigFunderAddress: (params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.setLsigFunderAddress(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(pay,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    joinGameLobby: (params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.joinGameLobby(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    assignRole: (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.assignRole(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageVote: (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageVote(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageEliminate: (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageEliminate(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageUnmasking: (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    nightStageMafiaCommit: (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.nightStageMafiaCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    nightStageDoctorCommit: (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.nightStageDoctorCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageMafiaReveal: (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageDoctorReveal: (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageDeadOrSaved: (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageUnmasking: (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    gameOver: (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.gameOver(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete result
       */
      deleteApplication: async (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> & SendParams = {args: []}) => {
        const result = await this.appClient.send.delete(TownHallParamsFactory.delete.deleteApplication(params))
        return {...result, return: result.return as unknown as (undefined | TownHallReturns['deleteApplication()void'])}
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call result: the number (but we do nothing with it)
     */
    dummyOpUp: async (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dummyOpUp(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dummyOpUp(uint64)uint64'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dlog: async (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dlog(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hashPointToPoint: async (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.hashPointToPoint(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['hashPointToPoint(byte[])byte[]'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getGameState: async (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.getGameState(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['getGameState()uint64'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `setLSIGFunderAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setLsigFunderAddress: async (params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.setLsigFunderAddress(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['setLSIGFunderAddress(address)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(pay,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    joinGameLobby: async (params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.joinGameLobby(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['joinGameLobby(pay,byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    assignRole: async (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.assignRole(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageVote: async (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageVote(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageVote(uint64)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageEliminate: async (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageEliminate(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageEliminate()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageUnmasking: async (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageUnmasking(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageUnmasking(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    nightStageMafiaCommit: async (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.nightStageMafiaCommit(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['nightStageMafiaCommit(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    nightStageDoctorCommit: async (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.nightStageDoctorCommit(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['nightStageDoctorCommit(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageMafiaReveal: async (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageMafiaReveal(address,byte[32])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageDoctorReveal: async (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageDoctorReveal(address,byte[32])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageDeadOrSaved: async (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageDeadOrSaved()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageUnmasking: async (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageUnmasking(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageUnmasking(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    gameOver: async (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.gameOver(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['gameOver()void'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new TownHallClient(this.appClient.clone(params))
  }

  /**
   * Methods to access state for the current TownHall app
   */
  state = {
    /**
     * Methods to access global state for the current TownHall app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          creatorAddress: result.creatorAddress,
          player1AlgoAddr: result.player1AlgoAddr,
          player2AlgoAddr: result.player2AlgoAddr,
          player3AlgoAddr: result.player3AlgoAddr,
          player4AlgoAddr: result.player4AlgoAddr,
          player5AlgoAddr: result.player5AlgoAddr,
          player6AlgoAddr: result.player6AlgoAddr,
          mafia: result.mafia,
          mafiaKeyImage: new BinaryStateValue(result.mafiaKeyImage),
          doctor: result.doctor,
          doctorKeyImage: new BinaryStateValue(result.doctorKeyImage),
          farmer: result.farmer,
          farmerKeyImage: new BinaryStateValue(result.farmerKeyImage),
          butcher: result.butcher,
          butcherKeyImage: new BinaryStateValue(result.butcherKeyImage),
          innkeep: result.innkeep,
          innkeepKeyImage: new BinaryStateValue(result.innkeepKeyImage),
          grocer: result.grocer,
          grocerKeyImage: new BinaryStateValue(result.grocerKeyImage),
          lsigFunderAddress: result.lsigFunderAddress,
          player1HasVoted: result.player1HasVoted,
          player1ReceivedVotes: result.player1ReceivedVotes,
          player2HasVoted: result.player2HasVoted,
          player2ReceivedVotes: result.player2ReceivedVotes,
          player3HasVoted: result.player3HasVoted,
          player3ReceivedVotes: result.player3ReceivedVotes,
          player4HasVoted: result.player4HasVoted,
          player4ReceivedVotes: result.player4ReceivedVotes,
          player5HasVoted: result.player5HasVoted,
          player5ReceivedVotes: result.player5ReceivedVotes,
          player6HasVoted: result.player6HasVoted,
          player6ReceivedVotes: result.player6ReceivedVotes,
          playersVoted: result.playersVoted,
          playersAlive: result.playersAlive,
          justEliminatedPlayer: result.justEliminatedPlayer,
          mafiaCommitment: new BinaryStateValue(result.mafiaCommitment),
          doctorCommitment: new BinaryStateValue(result.doctorCommitment),
          mafiaVictim: result.mafiaVictim,
          doctorPatient: result.doctorPatient,
          playersJoined: result.playersJoined,
          gameState: result.gameState,
        }
      },
      /**
       * Get the current value of the creatorAddress key in global state
       */
      creatorAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("creatorAddress")) as string | undefined },
      /**
       * Get the current value of the player1AlgoAddr key in global state
       */
      player1AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player1AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player2AlgoAddr key in global state
       */
      player2AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player2AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player3AlgoAddr key in global state
       */
      player3AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player3AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player4AlgoAddr key in global state
       */
      player4AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player4AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player5AlgoAddr key in global state
       */
      player5AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player5AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player6AlgoAddr key in global state
       */
      player6AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player6AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the mafia key in global state
       */
      mafia: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("mafia")) as string | undefined },
      /**
       * Get the current value of the mafiaKeyImage key in global state
       */
      mafiaKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("mafiaKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the doctor key in global state
       */
      doctor: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("doctor")) as string | undefined },
      /**
       * Get the current value of the doctorKeyImage key in global state
       */
      doctorKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("doctorKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the farmer key in global state
       */
      farmer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("farmer")) as string | undefined },
      /**
       * Get the current value of the farmerKeyImage key in global state
       */
      farmerKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("farmerKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the butcher key in global state
       */
      butcher: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("butcher")) as string | undefined },
      /**
       * Get the current value of the butcherKeyImage key in global state
       */
      butcherKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("butcherKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the innkeep key in global state
       */
      innkeep: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("innkeep")) as string | undefined },
      /**
       * Get the current value of the innkeepKeyImage key in global state
       */
      innkeepKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("innkeepKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the grocer key in global state
       */
      grocer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("grocer")) as string | undefined },
      /**
       * Get the current value of the grocerKeyImage key in global state
       */
      grocerKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("grocerKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the lsigFunderAddress key in global state
       */
      lsigFunderAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("lsigFunderAddress")) as string | undefined },
      /**
       * Get the current value of the player1HasVoted key in global state
       */
      player1HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player1HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player1ReceivedVotes key in global state
       */
      player1ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player1ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player2HasVoted key in global state
       */
      player2HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player2HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player2ReceivedVotes key in global state
       */
      player2ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player2ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player3HasVoted key in global state
       */
      player3HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player3HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player3ReceivedVotes key in global state
       */
      player3ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player3ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player4HasVoted key in global state
       */
      player4HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player4HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player4ReceivedVotes key in global state
       */
      player4ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player4ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player5HasVoted key in global state
       */
      player5HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player5HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player5ReceivedVotes key in global state
       */
      player5ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player5ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player6HasVoted key in global state
       */
      player6HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player6HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player6ReceivedVotes key in global state
       */
      player6ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player6ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the playersVoted key in global state
       */
      playersVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersVoted")) as bigint | undefined },
      /**
       * Get the current value of the playersAlive key in global state
       */
      playersAlive: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersAlive")) as bigint | undefined },
      /**
       * Get the current value of the justEliminatedPlayer key in global state
       */
      justEliminatedPlayer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("justEliminatedPlayer")) as string | undefined },
      /**
       * Get the current value of the mafiaCommitment key in global state
       */
      mafiaCommitment: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("mafiaCommitment")) as Uint8Array | undefined) },
      /**
       * Get the current value of the doctorCommitment key in global state
       */
      doctorCommitment: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("doctorCommitment")) as Uint8Array | undefined) },
      /**
       * Get the current value of the mafiaVictim key in global state
       */
      mafiaVictim: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("mafiaVictim")) as string | undefined },
      /**
       * Get the current value of the doctorPatient key in global state
       */
      doctorPatient: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("doctorPatient")) as string | undefined },
      /**
       * Get the current value of the playersJoined key in global state
       */
      playersJoined: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersJoined")) as bigint | undefined },
      /**
       * Get the current value of the gameState key in global state
       */
      gameState: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("gameState")) as bigint | undefined },
    },
    /**
     * Methods to access box state for the current TownHall app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
        }
      },
      /**
       * Get values from the quickAccessPKBoxes map in box state
       */
      quickAccessPkBoxes: {
        /**
         * Get all current values of the quickAccessPKBoxes map in box state
         */
        getMap: async (): Promise<Map<bigint, Uint8Array>> => { return (await this.appClient.state.box.getMap("quickAccessPKBoxes")) as Map<bigint, Uint8Array> },
        /**
         * Get a current value of the quickAccessPKBoxes map by key from box state
         */
        value: async (key: bigint | number): Promise<Uint8Array | undefined> => { return await this.appClient.state.box.getMapValue("quickAccessPKBoxes", key) as Uint8Array | undefined },
      },
      /**
       * Get values from the hashFilter map in box state
       */
      hashFilter: {
        /**
         * Get all current values of the hashFilter map in box state
         */
        getMap: async (): Promise<Map<Uint8Array, Uint8Array>> => { return (await this.appClient.state.box.getMap("hashFilter")) as Map<Uint8Array, Uint8Array> },
        /**
         * Get a current value of the hashFilter map by key from box state
         */
        value: async (key: Uint8Array | string): Promise<Uint8Array | undefined> => { return await this.appClient.state.box.getMapValue("hashFilter", key) as Uint8Array | undefined },
      },
    },
  }

  public newGroup(): TownHallComposer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a dummyOpUp(uint64)uint64 method call against the TownHall contract
       */
      dummyOpUp(params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dummyOpUp(params)))
        resultMappers.push((v) => client.decodeReturnValue('dummyOpUp(uint64)uint64', v))
        return this
      },
      /**
       * Add a dlog(byte[],byte[],byte[],byte[])bool method call against the TownHall contract
       */
      dlog(params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dlog(params)))
        resultMappers.push((v) => client.decodeReturnValue('dlog(byte[],byte[],byte[],byte[])bool', v))
        return this
      },
      /**
       * Add a hashPointToPoint(byte[])byte[] method call against the TownHall contract
       */
      hashPointToPoint(params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hashPointToPoint(params)))
        resultMappers.push((v) => client.decodeReturnValue('hashPointToPoint(byte[])byte[]', v))
        return this
      },
      /**
       * Add a getGameState()uint64 method call against the TownHall contract
       */
      getGameState(params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getGameState(params)))
        resultMappers.push((v) => client.decodeReturnValue('getGameState()uint64', v))
        return this
      },
      /**
       * Add a setLSIGFunderAddress(address)void method call against the TownHall contract
       */
      setLsigFunderAddress(params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setLsigFunderAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a joinGameLobby(pay,byte[])void method call against the TownHall contract
       */
      joinGameLobby(params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.joinGameLobby(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void method call against the TownHall contract
       */
      assignRole(params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.assignRole(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageVote(uint64)void method call against the TownHall contract
       */
      dayStageVote(params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageVote(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageEliminate()void method call against the TownHall contract
       */
      dayStageEliminate(params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageEliminate(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageUnmasking(byte[])void method call against the TownHall contract
       */
      dayStageUnmasking(params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageUnmasking(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a nightStageMafiaCommit(byte[])void method call against the TownHall contract
       */
      nightStageMafiaCommit(params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.nightStageMafiaCommit(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a nightStageDoctorCommit(byte[])void method call against the TownHall contract
       */
      nightStageDoctorCommit(params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.nightStageDoctorCommit(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageMafiaReveal(address,byte[32])void method call against the TownHall contract
       */
      dawnStageMafiaReveal(params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageMafiaReveal(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageDoctorReveal(address,byte[32])void method call against the TownHall contract
       */
      dawnStageDoctorReveal(params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageDoctorReveal(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageDeadOrSaved()void method call against the TownHall contract
       */
      dawnStageDeadOrSaved(params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageDeadOrSaved(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageUnmasking(byte[])void method call against the TownHall contract
       */
      dawnStageUnmasking(params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageUnmasking(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a gameOver()void method call against the TownHall contract
       */
      gameOver(params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.gameOver(params)))
        resultMappers.push(undefined)
        return this
      },
      get delete() {
        return {
          deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']>) => {
            promiseChain = promiseChain.then(async () => composer.addAppDeleteMethodCall(await client.params.delete.deleteApplication(params)))
            resultMappers.push(undefined)
            return this
          },
        }
      },
      /**
       * Add a clear state call to the TownHall contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as TownHallComposer
  }
}
export type TownHallComposer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the dummyOpUp(uint64)uint64 ABI method.
   *
  * Dummy Op Up
  Dummy operation to get more opcode budget
  - The number to return, necssary to deduplicate the name

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dummyOpUp(params?: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']>): TownHallComposer<[...TReturns, TownHallReturns['dummyOpUp(uint64)uint64'] | undefined]>

  /**
   * Calls the dlog(byte[],byte[],byte[],byte[])bool ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dlog(params?: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']>): TownHallComposer<[...TReturns, TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool'] | undefined]>

  /**
   * Calls the hashPointToPoint(byte[])byte[] ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hashPointToPoint(params?: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']>): TownHallComposer<[...TReturns, TownHallReturns['hashPointToPoint(byte[])byte[]'] | undefined]>

  /**
   * Calls the getGameState()uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getGameState(params?: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']>): TownHallComposer<[...TReturns, TownHallReturns['getGameState()uint64'] | undefined]>

  /**
   * Calls the setLSIGFunderAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setLsigFunderAddress(params?: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']>): TownHallComposer<[...TReturns, TownHallReturns['setLSIGFunderAddress(address)void'] | undefined]>

  /**
   * Calls the joinGameLobby(pay,byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  joinGameLobby(params?: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['joinGameLobby(pay,byte[])void'] | undefined]>

  /**
   * Calls the assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  assignRole(params?: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']>): TownHallComposer<[...TReturns, TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | undefined]>

  /**
   * Calls the dayStageVote(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageVote(params?: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageVote(uint64)void'] | undefined]>

  /**
   * Calls the dayStageEliminate()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageEliminate(params?: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageEliminate()void'] | undefined]>

  /**
   * Calls the dayStageUnmasking(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageUnmasking(params?: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageUnmasking(byte[])void'] | undefined]>

  /**
   * Calls the nightStageMafiaCommit(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  nightStageMafiaCommit(params?: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['nightStageMafiaCommit(byte[])void'] | undefined]>

  /**
   * Calls the nightStageDoctorCommit(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  nightStageDoctorCommit(params?: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['nightStageDoctorCommit(byte[])void'] | undefined]>

  /**
   * Calls the dawnStageMafiaReveal(address,byte[32])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageMafiaReveal(params?: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageMafiaReveal(address,byte[32])void'] | undefined]>

  /**
   * Calls the dawnStageDoctorReveal(address,byte[32])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageDoctorReveal(params?: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageDoctorReveal(address,byte[32])void'] | undefined]>

  /**
   * Calls the dawnStageDeadOrSaved()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageDeadOrSaved(params?: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageDeadOrSaved()void'] | undefined]>

  /**
   * Calls the dawnStageUnmasking(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageUnmasking(params?: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageUnmasking(byte[])void'] | undefined]>

  /**
   * Calls the gameOver()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  gameOver(params?: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']>): TownHallComposer<[...TReturns, TownHallReturns['gameOver()void'] | undefined]>

  /**
   * Gets available delete methods
   */
  readonly delete: {
    /**
     * Deletes an existing instance of the TownHall smart contract using the deleteApplication()void ABI method.
     *
     * @param args The arguments for the smart contract call
     * @param params Any additional parameters for the call
     * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
     */
    deleteApplication(params?: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']>): TownHallComposer<[...TReturns, TownHallReturns['deleteApplication()void'] | undefined]>
  }

  /**
   * Makes a clear_state call to an existing instance of the TownHall smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): TownHallComposer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): TownHallComposer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): TransactionComposer
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<TownHallComposerResults<TReturns>>
}
export type TownHallComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

