/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { AlgorandClientInterface } from '@algorandfoundation/algokit-utils/types/algorand-client-interface'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"TownHall","desc":"","methods":[{"name":"createApplication","args":[],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"dummyOpUp","desc":"Dummy Op Up\nDummy operation to get more opcode budget\n - The number to return, necssary to deduplicate the name","args":[{"name":"i","type":"uint64"}],"returns":{"type":"uint64","desc":"the number (but we do nothing with it)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dlog","args":[{"name":"g","type":"byte[]"},{"name":"x","type":"byte[]"},{"name":"v","type":"byte[]"},{"name":"z","type":"byte[]"}],"returns":{"type":"bool"},"actions":{"create":[],"call":["NoOp"]}},{"name":"hashPointToPoint","args":[{"name":"point","type":"byte[]"}],"returns":{"type":"byte[]"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getGameState","args":[],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setLSIGFunderAddress","args":[{"name":"funderLSigAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"joinGameLobby","args":[{"name":"depositTxn","type":"pay"},{"name":"NIZK_DLOG","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"assignRole","args":[{"name":"msg","type":"byte[]"},{"name":"pkAll","type":"byte[]"},{"name":"keyImage","type":"byte[]"},{"name":"sig","type":"byte[]"},{"name":"challenges","type":"byte[]"},{"name":"funderLSigTxn","type":"pay"},{"name":"ringLSigTxn0","type":"pay"},{"name":"ringLSigTxn1","type":"pay"},{"name":"ringLSigTxn2","type":"pay"},{"name":"ringLSigTxn3","type":"pay"},{"name":"ringLSigTxn4","type":"pay"},{"name":"ringLSigTxn5","type":"pay"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageVote","args":[{"name":"vote","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageEliminate","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageUnmasking","args":[{"name":"blsSk","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"nightStageMafiaCommit","args":[{"name":"commitment","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"nightStageDoctorCommit","args":[{"name":"commitment","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageMafiaReveal","args":[{"name":"victimAim","type":"address"},{"name":"blinder","type":"byte[32]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageDoctorReveal","args":[{"name":"patientAim","type":"address"},{"name":"blinder","type":"byte[32]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageDeadOrSaved","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageUnmasking","args":[{"name":"blsSk","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"gameOver","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"deleteApplication","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["DeleteApplication"]}}],"arcs":[4,56],"structs":{},"state":{"schema":{"global":{"bytes":25,"ints":16},"local":{"bytes":0,"ints":0}},"keys":{"global":{"creatorAddress":{"key":"Y3JlYXRvckFkZHJlc3M=","keyType":"AVMBytes","valueType":"address"},"player1AlgoAddr":{"key":"cGxheWVyMUFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player2AlgoAddr":{"key":"cGxheWVyMkFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player3AlgoAddr":{"key":"cGxheWVyM0FsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player4AlgoAddr":{"key":"cGxheWVyNEFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player5AlgoAddr":{"key":"cGxheWVyNUFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"player6AlgoAddr":{"key":"cGxheWVyNkFsZ29BZGRy","keyType":"AVMBytes","valueType":"(address,uint64)"},"mafia":{"key":"bWFmaWE=","keyType":"AVMBytes","valueType":"address"},"mafiaKeyImage":{"key":"bWFmaWFLZXlJbWFnZQ==","keyType":"AVMBytes","valueType":"AVMBytes"},"doctor":{"key":"ZG9jdG9y","keyType":"AVMBytes","valueType":"address"},"doctorKeyImage":{"key":"ZG9jdG9yS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"farmer":{"key":"ZmFybWVy","keyType":"AVMBytes","valueType":"address"},"farmerKeyImage":{"key":"ZmFybWVyS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"butcher":{"key":"YnV0Y2hlcg==","keyType":"AVMBytes","valueType":"address"},"butcherKeyImage":{"key":"YnV0Y2hlcktleUltYWdl","keyType":"AVMBytes","valueType":"AVMBytes"},"innkeep":{"key":"aW5ua2VlcA==","keyType":"AVMBytes","valueType":"address"},"innkeepKeyImage":{"key":"aW5ua2VlcEtleUltYWdl","keyType":"AVMBytes","valueType":"AVMBytes"},"grocer":{"key":"Z3JvY2Vy","keyType":"AVMBytes","valueType":"address"},"grocerKeyImage":{"key":"Z3JvY2VyS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"lsigFunderAddress":{"key":"bHNpZ0Z1bmRlckFkZHJlc3M=","keyType":"AVMBytes","valueType":"address"},"player1HasVoted":{"key":"cGxheWVyMUhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player1ReceivedVotes":{"key":"cGxheWVyMVJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player2HasVoted":{"key":"cGxheWVyMkhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player2ReceivedVotes":{"key":"cGxheWVyMlJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player3HasVoted":{"key":"cGxheWVyM0hhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player3ReceivedVotes":{"key":"cGxheWVyM1JlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player4HasVoted":{"key":"cGxheWVyNEhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player4ReceivedVotes":{"key":"cGxheWVyNFJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player5HasVoted":{"key":"cGxheWVyNUhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player5ReceivedVotes":{"key":"cGxheWVyNVJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player6HasVoted":{"key":"cGxheWVyNkhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player6ReceivedVotes":{"key":"cGxheWVyNlJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"playersVoted":{"key":"cGxheWVyc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"playersAlive":{"key":"cGxheWVyc0FsaXZl","keyType":"AVMBytes","valueType":"uint64"},"justEliminatedPlayer":{"key":"anVzdEVsaW1pbmF0ZWRQbGF5ZXI=","keyType":"AVMBytes","valueType":"address"},"mafiaCommitment":{"key":"bWFmaWFDb21taXRtZW50","keyType":"AVMBytes","valueType":"AVMBytes"},"doctorCommitment":{"key":"ZG9jdG9yQ29tbWl0bWVudA==","keyType":"AVMBytes","valueType":"AVMBytes"},"mafiaVictim":{"key":"bWFmaWFWaWN0aW0=","keyType":"AVMBytes","valueType":"address"},"doctorPatient":{"key":"ZG9jdG9yUGF0aWVudA==","keyType":"AVMBytes","valueType":"address"},"playersJoined":{"key":"cGxheWVyc0pvaW5lZA==","keyType":"AVMBytes","valueType":"uint64"},"gameState":{"key":"Z2FtZVN0YXRl","keyType":"AVMBytes","valueType":"uint64"}},"local":{},"box":{}},"maps":{"global":{},"local":{},"box":{"quickAccessPKBoxes":{"keyType":"uint64","valueType":"AVMBytes"},"hashFilter":{"keyType":"AVMBytes","valueType":"AVMBytes"}}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/TownHall.algo.ts:34","pc":[0]},{"teal":2,"source":"contracts/TownHall.algo.ts:34","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]},{"teal":3,"source":"contracts/TownHall.algo.ts:34","pc":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761]},{"teal":15,"source":"contracts/TownHall.algo.ts:34","pc":[762,763]},{"teal":16,"source":"contracts/TownHall.algo.ts:34","pc":[764]},{"teal":17,"source":"contracts/TownHall.algo.ts:34","pc":[765]},{"teal":18,"source":"contracts/TownHall.algo.ts:34","pc":[766]},{"teal":19,"source":"contracts/TownHall.algo.ts:34","pc":[767,768]},{"teal":20,"source":"contracts/TownHall.algo.ts:34","pc":[769]},{"teal":21,"source":"contracts/TownHall.algo.ts:34","pc":[770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795]},{"teal":25,"source":"contracts/TownHall.algo.ts:34","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[796]},{"teal":30,"source":"contracts/TownHall.algo.ts:134","pc":[797,798,799]},{"teal":31,"source":"contracts/TownHall.algo.ts:134","pc":[800]},{"teal":32,"source":"contracts/TownHall.algo.ts:134","pc":[801]},{"teal":36,"source":"contracts/TownHall.algo.ts:134","pc":[802,803,804]},{"teal":40,"source":"contracts/TownHall.algo.ts:135","pc":[805,806]},{"teal":41,"source":"contracts/TownHall.algo.ts:135","pc":[807,808]},{"teal":42,"source":"contracts/TownHall.algo.ts:135","pc":[809]},{"teal":46,"source":"contracts/TownHall.algo.ts:137","pc":[810,811]},{"teal":47,"source":"contracts/TownHall.algo.ts:137","pc":[812,813]},{"teal":48,"source":"contracts/TownHall.algo.ts:137","pc":[814]},{"teal":52,"source":"contracts/TownHall.algo.ts:139","pc":[815]},{"teal":53,"source":"contracts/TownHall.algo.ts:139","pc":[816,817]},{"teal":54,"source":"contracts/TownHall.algo.ts:139","pc":[818,819]},{"teal":55,"source":"contracts/TownHall.algo.ts:139","pc":[820]},{"teal":56,"source":"contracts/TownHall.algo.ts:139","pc":[821]},{"teal":60,"source":"contracts/TownHall.algo.ts:140","pc":[822]},{"teal":61,"source":"contracts/TownHall.algo.ts:140","pc":[823,824]},{"teal":62,"source":"contracts/TownHall.algo.ts:140","pc":[825,826]},{"teal":63,"source":"contracts/TownHall.algo.ts:140","pc":[827]},{"teal":64,"source":"contracts/TownHall.algo.ts:140","pc":[828]},{"teal":68,"source":"contracts/TownHall.algo.ts:141","pc":[829,830]},{"teal":69,"source":"contracts/TownHall.algo.ts:141","pc":[831,832]},{"teal":70,"source":"contracts/TownHall.algo.ts:141","pc":[833,834]},{"teal":71,"source":"contracts/TownHall.algo.ts:141","pc":[835]},{"teal":72,"source":"contracts/TownHall.algo.ts:141","pc":[836]},{"teal":76,"source":"contracts/TownHall.algo.ts:142","pc":[837,838]},{"teal":77,"source":"contracts/TownHall.algo.ts:142","pc":[839,840]},{"teal":78,"source":"contracts/TownHall.algo.ts:142","pc":[841,842]},{"teal":79,"source":"contracts/TownHall.algo.ts:142","pc":[843]},{"teal":80,"source":"contracts/TownHall.algo.ts:142","pc":[844]},{"teal":84,"source":"contracts/TownHall.algo.ts:143","pc":[845,846]},{"teal":85,"source":"contracts/TownHall.algo.ts:143","pc":[847,848]},{"teal":86,"source":"contracts/TownHall.algo.ts:143","pc":[849,850]},{"teal":87,"source":"contracts/TownHall.algo.ts:143","pc":[851]},{"teal":88,"source":"contracts/TownHall.algo.ts:143","pc":[852]},{"teal":92,"source":"contracts/TownHall.algo.ts:144","pc":[853,854]},{"teal":93,"source":"contracts/TownHall.algo.ts:144","pc":[855,856]},{"teal":94,"source":"contracts/TownHall.algo.ts:144","pc":[857,858]},{"teal":95,"source":"contracts/TownHall.algo.ts:144","pc":[859]},{"teal":96,"source":"contracts/TownHall.algo.ts:144","pc":[860]},{"teal":100,"source":"contracts/TownHall.algo.ts:146","pc":[861,862]},{"teal":101,"source":"contracts/TownHall.algo.ts:146","pc":[863,864]},{"teal":102,"source":"contracts/TownHall.algo.ts:146","pc":[865]},{"teal":106,"source":"contracts/TownHall.algo.ts:147","pc":[866,867]},{"teal":107,"source":"contracts/TownHall.algo.ts:147","pc":[868,869]},{"teal":108,"source":"contracts/TownHall.algo.ts:147","pc":[870]},{"teal":112,"source":"contracts/TownHall.algo.ts:148","pc":[871,872]},{"teal":113,"source":"contracts/TownHall.algo.ts:148","pc":[873,874]},{"teal":114,"source":"contracts/TownHall.algo.ts:148","pc":[875]},{"teal":118,"source":"contracts/TownHall.algo.ts:149","pc":[876,877]},{"teal":119,"source":"contracts/TownHall.algo.ts:149","pc":[878,879]},{"teal":120,"source":"contracts/TownHall.algo.ts:149","pc":[880]},{"teal":124,"source":"contracts/TownHall.algo.ts:150","pc":[881,882]},{"teal":125,"source":"contracts/TownHall.algo.ts:150","pc":[883,884]},{"teal":126,"source":"contracts/TownHall.algo.ts:150","pc":[885]},{"teal":130,"source":"contracts/TownHall.algo.ts:151","pc":[886,887]},{"teal":131,"source":"contracts/TownHall.algo.ts:151","pc":[888,889]},{"teal":132,"source":"contracts/TownHall.algo.ts:151","pc":[890]},{"teal":136,"source":"contracts/TownHall.algo.ts:153","pc":[891,892]},{"teal":137,"source":"contracts/TownHall.algo.ts:153","pc":[893]},{"teal":138,"source":"contracts/TownHall.algo.ts:153","pc":[894]},{"teal":142,"source":"contracts/TownHall.algo.ts:154","pc":[895,896]},{"teal":143,"source":"contracts/TownHall.algo.ts:154","pc":[897]},{"teal":144,"source":"contracts/TownHall.algo.ts:154","pc":[898]},{"teal":148,"source":"contracts/TownHall.algo.ts:155","pc":[899,900]},{"teal":149,"source":"contracts/TownHall.algo.ts:155","pc":[901]},{"teal":150,"source":"contracts/TownHall.algo.ts:155","pc":[902]},{"teal":154,"source":"contracts/TownHall.algo.ts:156","pc":[903,904]},{"teal":155,"source":"contracts/TownHall.algo.ts:156","pc":[905]},{"teal":156,"source":"contracts/TownHall.algo.ts:156","pc":[906]},{"teal":160,"source":"contracts/TownHall.algo.ts:157","pc":[907,908]},{"teal":161,"source":"contracts/TownHall.algo.ts:157","pc":[909]},{"teal":162,"source":"contracts/TownHall.algo.ts:157","pc":[910]},{"teal":166,"source":"contracts/TownHall.algo.ts:158","pc":[911,912]},{"teal":167,"source":"contracts/TownHall.algo.ts:158","pc":[913]},{"teal":168,"source":"contracts/TownHall.algo.ts:158","pc":[914]},{"teal":172,"source":"contracts/TownHall.algo.ts:159","pc":[915,916]},{"teal":173,"source":"contracts/TownHall.algo.ts:159","pc":[917]},{"teal":174,"source":"contracts/TownHall.algo.ts:159","pc":[918]},{"teal":178,"source":"contracts/TownHall.algo.ts:161","pc":[919,920]},{"teal":179,"source":"contracts/TownHall.algo.ts:161","pc":[921]},{"teal":180,"source":"contracts/TownHall.algo.ts:161","pc":[922]},{"teal":184,"source":"contracts/TownHall.algo.ts:162","pc":[923,924]},{"teal":185,"source":"contracts/TownHall.algo.ts:162","pc":[925]},{"teal":186,"source":"contracts/TownHall.algo.ts:162","pc":[926]},{"teal":190,"source":"contracts/TownHall.algo.ts:163","pc":[927,928]},{"teal":191,"source":"contracts/TownHall.algo.ts:163","pc":[929]},{"teal":192,"source":"contracts/TownHall.algo.ts:163","pc":[930]},{"teal":196,"source":"contracts/TownHall.algo.ts:164","pc":[931,932]},{"teal":197,"source":"contracts/TownHall.algo.ts:164","pc":[933]},{"teal":198,"source":"contracts/TownHall.algo.ts:164","pc":[934]},{"teal":202,"source":"contracts/TownHall.algo.ts:165","pc":[935,936]},{"teal":203,"source":"contracts/TownHall.algo.ts:165","pc":[937]},{"teal":204,"source":"contracts/TownHall.algo.ts:165","pc":[938]},{"teal":208,"source":"contracts/TownHall.algo.ts:166","pc":[939,940]},{"teal":209,"source":"contracts/TownHall.algo.ts:166","pc":[941]},{"teal":210,"source":"contracts/TownHall.algo.ts:166","pc":[942]},{"teal":214,"source":"contracts/TownHall.algo.ts:167","pc":[943,944]},{"teal":215,"source":"contracts/TownHall.algo.ts:167","pc":[945]},{"teal":216,"source":"contracts/TownHall.algo.ts:167","pc":[946]},{"teal":220,"source":"contracts/TownHall.algo.ts:169","pc":[947,948]},{"teal":221,"source":"contracts/TownHall.algo.ts:169","pc":[949]},{"teal":222,"source":"contracts/TownHall.algo.ts:169","pc":[950]},{"teal":226,"source":"contracts/TownHall.algo.ts:170","pc":[951,952]},{"teal":227,"source":"contracts/TownHall.algo.ts:170","pc":[953]},{"teal":228,"source":"contracts/TownHall.algo.ts:170","pc":[954]},{"teal":232,"source":"contracts/TownHall.algo.ts:172","pc":[955]},{"teal":233,"source":"contracts/TownHall.algo.ts:172","pc":[956,957]},{"teal":234,"source":"contracts/TownHall.algo.ts:172","pc":[958]},{"teal":238,"source":"contracts/TownHall.algo.ts:173","pc":[959,960]},{"teal":239,"source":"contracts/TownHall.algo.ts:173","pc":[961,962]},{"teal":240,"source":"contracts/TownHall.algo.ts:173","pc":[963]},{"teal":244,"source":"contracts/TownHall.algo.ts:174","pc":[964,965]},{"teal":245,"source":"contracts/TownHall.algo.ts:174","pc":[966,967]},{"teal":246,"source":"contracts/TownHall.algo.ts:174","pc":[968]},{"teal":250,"source":"contracts/TownHall.algo.ts:176","pc":[969]},{"teal":251,"source":"contracts/TownHall.algo.ts:176","pc":[970]},{"teal":252,"source":"contracts/TownHall.algo.ts:176","pc":[971]},{"teal":253,"source":"contracts/TownHall.algo.ts:134","pc":[972]},{"teal":258,"source":"contracts/TownHall.algo.ts:184","pc":[973,974]},{"teal":261,"source":"contracts/TownHall.algo.ts:184","pc":[975,976,977]},{"teal":262,"source":"contracts/TownHall.algo.ts:184","pc":[978]},{"teal":265,"source":"contracts/TownHall.algo.ts:184","pc":[979,980,981]},{"teal":266,"source":"contracts/TownHall.algo.ts:184","pc":[982]},{"teal":267,"source":"contracts/TownHall.algo.ts:184","pc":[983]},{"teal":268,"source":"contracts/TownHall.algo.ts:184","pc":[984]},{"teal":269,"source":"contracts/TownHall.algo.ts:184","pc":[985]},{"teal":270,"source":"contracts/TownHall.algo.ts:184","pc":[986]},{"teal":279,"source":"contracts/TownHall.algo.ts:184","pc":[987,988,989]},{"teal":283,"source":"contracts/TownHall.algo.ts:185","pc":[990,991]},{"teal":284,"source":"contracts/TownHall.algo.ts:184","pc":[992]},{"teal":289,"source":"contracts/TownHall.algo.ts:206","pc":[993,994]},{"teal":292,"source":"contracts/TownHall.algo.ts:206","pc":[995,996,997]},{"teal":293,"source":"contracts/TownHall.algo.ts:206","pc":[998,999,1000]},{"teal":296,"source":"contracts/TownHall.algo.ts:206","pc":[1001,1002,1003]},{"teal":297,"source":"contracts/TownHall.algo.ts:206","pc":[1004,1005,1006]},{"teal":300,"source":"contracts/TownHall.algo.ts:206","pc":[1007,1008,1009]},{"teal":301,"source":"contracts/TownHall.algo.ts:206","pc":[1010,1011,1012]},{"teal":304,"source":"contracts/TownHall.algo.ts:206","pc":[1013,1014,1015]},{"teal":305,"source":"contracts/TownHall.algo.ts:206","pc":[1016,1017,1018]},{"teal":308,"source":"contracts/TownHall.algo.ts:206","pc":[1019,1020,1021]},{"teal":309,"source":"contracts/TownHall.algo.ts:206","pc":[1022,1023,1024]},{"teal":310,"source":"contracts/TownHall.algo.ts:206","pc":[1025]},{"teal":311,"source":"contracts/TownHall.algo.ts:206","pc":[1026,1027]},{"teal":312,"source":"contracts/TownHall.algo.ts:206","pc":[1028]},{"teal":313,"source":"contracts/TownHall.algo.ts:206","pc":[1029]},{"teal":314,"source":"contracts/TownHall.algo.ts:206","pc":[1030]},{"teal":315,"source":"contracts/TownHall.algo.ts:206","pc":[1031]},{"teal":316,"source":"contracts/TownHall.algo.ts:206","pc":[1032]},{"teal":320,"source":"contracts/TownHall.algo.ts:206","pc":[1033,1034,1035]},{"teal":323,"source":"contracts/TownHall.algo.ts:206","pc":[1036,1037]},{"teal":324,"source":"contracts/TownHall.algo.ts:206","pc":[1038]},{"teal":328,"source":"contracts/TownHall.algo.ts:208","pc":[1039,1040]},{"teal":329,"source":"contracts/TownHall.algo.ts:208","pc":[1041,1042]},{"teal":330,"source":"contracts/TownHall.algo.ts:208","pc":[1043,1044]},{"teal":331,"source":"contracts/TownHall.algo.ts:208","pc":[1045]},{"teal":332,"source":"contracts/TownHall.algo.ts:208","pc":[1046]},{"teal":333,"source":"contracts/TownHall.algo.ts:208","pc":[1047]},{"teal":334,"source":"contracts/TownHall.algo.ts:208","pc":[1048,1049]},{"teal":338,"source":"contracts/TownHall.algo.ts:209","pc":[1050,1051]},{"teal":339,"source":"contracts/TownHall.algo.ts:209","pc":[1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085]},{"teal":340,"source":"contracts/TownHall.algo.ts:209","pc":[1086]},{"teal":341,"source":"contracts/TownHall.algo.ts:209","pc":[1087,1088]},{"teal":347,"source":"contracts/TownHall.algo.ts:212","pc":[1089,1090]},{"teal":348,"source":"contracts/TownHall.algo.ts:212","pc":[1091,1092]},{"teal":349,"source":"contracts/TownHall.algo.ts:212","pc":[1093,1094]},{"teal":350,"source":"contracts/TownHall.algo.ts:212","pc":[1095,1096]},{"teal":351,"source":"contracts/TownHall.algo.ts:212","pc":[1097,1098]},{"teal":352,"source":"contracts/TownHall.algo.ts:212","pc":[1099,1100]},{"teal":353,"source":"contracts/TownHall.algo.ts:212","pc":[1101,1102]},{"teal":354,"source":"contracts/TownHall.algo.ts:212","pc":[1103,1104]},{"teal":355,"source":"contracts/TownHall.algo.ts:212","pc":[1105]},{"teal":358,"source":"contracts/TownHall.algo.ts:206","pc":[1106,1107]},{"teal":361,"source":"contracts/TownHall.algo.ts:206","pc":[1108,1109]},{"teal":362,"source":"contracts/TownHall.algo.ts:206","pc":[1110]},{"teal":367,"source":"contracts/TownHall.algo.ts:216","pc":[1111,1112]},{"teal":370,"source":"contracts/TownHall.algo.ts:216","pc":[1113,1114,1115]},{"teal":371,"source":"contracts/TownHall.algo.ts:216","pc":[1116,1117,1118]},{"teal":374,"source":"contracts/TownHall.algo.ts:216","pc":[1119,1120,1121]},{"teal":375,"source":"contracts/TownHall.algo.ts:216","pc":[1122]},{"teal":376,"source":"contracts/TownHall.algo.ts:216","pc":[1123]},{"teal":377,"source":"contracts/TownHall.algo.ts:216","pc":[1124]},{"teal":378,"source":"contracts/TownHall.algo.ts:216","pc":[1125,1126,1127]},{"teal":379,"source":"contracts/TownHall.algo.ts:216","pc":[1128]},{"teal":380,"source":"contracts/TownHall.algo.ts:216","pc":[1129]},{"teal":381,"source":"contracts/TownHall.algo.ts:216","pc":[1130]},{"teal":382,"source":"contracts/TownHall.algo.ts:216","pc":[1131]},{"teal":383,"source":"contracts/TownHall.algo.ts:216","pc":[1132]},{"teal":384,"source":"contracts/TownHall.algo.ts:216","pc":[1133]},{"teal":388,"source":"contracts/TownHall.algo.ts:216","pc":[1134,1135,1136]},{"teal":391,"source":"contracts/TownHall.algo.ts:216","pc":[1137,1138]},{"teal":392,"source":"contracts/TownHall.algo.ts:216","pc":[1139,1140]},{"teal":396,"source":"contracts/TownHall.algo.ts:217","pc":[1141,1142]},{"teal":397,"source":"contracts/TownHall.algo.ts:217","pc":[1143]},{"teal":398,"source":"contracts/TownHall.algo.ts:217","pc":[1144,1145]},{"teal":402,"source":"contracts/TownHall.algo.ts:218","pc":[1146,1147]},{"teal":403,"source":"contracts/TownHall.algo.ts:218","pc":[1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197]},{"teal":404,"source":"contracts/TownHall.algo.ts:218","pc":[1198]},{"teal":405,"source":"contracts/TownHall.algo.ts:218","pc":[1199,1200]},{"teal":409,"source":"contracts/TownHall.algo.ts:221","pc":[1201,1202]},{"teal":410,"source":"contracts/TownHall.algo.ts:221","pc":[1203,1204]},{"teal":411,"source":"contracts/TownHall.algo.ts:221","pc":[1205,1206]},{"teal":415,"source":"contracts/TownHall.algo.ts:222","pc":[1207,1208]},{"teal":418,"source":"contracts/TownHall.algo.ts:216","pc":[1209,1210]},{"teal":421,"source":"contracts/TownHall.algo.ts:216","pc":[1211,1212]},{"teal":422,"source":"contracts/TownHall.algo.ts:216","pc":[1213]},{"teal":427,"source":"contracts/TownHall.algo.ts:227","pc":[1214,1215]},{"teal":430,"source":"contracts/TownHall.algo.ts:227","pc":[1216,1217,1218]},{"teal":431,"source":"contracts/TownHall.algo.ts:227","pc":[1219]},{"teal":432,"source":"contracts/TownHall.algo.ts:227","pc":[1220]},{"teal":433,"source":"contracts/TownHall.algo.ts:227","pc":[1221]},{"teal":434,"source":"contracts/TownHall.algo.ts:227","pc":[1222]},{"teal":435,"source":"contracts/TownHall.algo.ts:227","pc":[1223]},{"teal":439,"source":"contracts/TownHall.algo.ts:227","pc":[1224,1225,1226]},{"teal":443,"source":"contracts/TownHall.algo.ts:228","pc":[1227]},{"teal":444,"source":"contracts/TownHall.algo.ts:228","pc":[1228]},{"teal":445,"source":"contracts/TownHall.algo.ts:227","pc":[1229]},{"teal":450,"source":"contracts/TownHall.algo.ts:231","pc":[1230,1231,1232]},{"teal":451,"source":"contracts/TownHall.algo.ts:231","pc":[1233]},{"teal":452,"source":"contracts/TownHall.algo.ts:231","pc":[1234]},{"teal":453,"source":"contracts/TownHall.algo.ts:231","pc":[1235,1236]},{"teal":454,"source":"contracts/TownHall.algo.ts:231","pc":[1237]},{"teal":457,"source":"contracts/TownHall.algo.ts:231","errorMessage":"argument 0 (funderLSigAddress) for setLSIGFunderAddress must be a address","pc":[1238]},{"teal":460,"source":"contracts/TownHall.algo.ts:231","pc":[1239,1240,1241]},{"teal":461,"source":"contracts/TownHall.algo.ts:231","pc":[1242]},{"teal":462,"source":"contracts/TownHall.algo.ts:231","pc":[1243]},{"teal":466,"source":"contracts/TownHall.algo.ts:231","pc":[1244,1245,1246]},{"teal":473,"source":"contracts/TownHall.algo.ts:233","pc":[1247]},{"teal":474,"source":"contracts/TownHall.algo.ts:233","pc":[1248]},{"teal":475,"source":"contracts/TownHall.algo.ts:233","pc":[1249]},{"teal":476,"source":"contracts/TownHall.algo.ts:233","pc":[1250]},{"teal":479,"source":"contracts/TownHall.algo.ts:232","errorMessage":"Invalid method call: Contract is not in Set LSig Funder Address state.","pc":[1251]},{"teal":486,"source":"contracts/TownHall.algo.ts:238","pc":[1252,1253]},{"teal":487,"source":"contracts/TownHall.algo.ts:238","pc":[1254,1255]},{"teal":488,"source":"contracts/TownHall.algo.ts:238","pc":[1256]},{"teal":489,"source":"contracts/TownHall.algo.ts:238","pc":[1257]},{"teal":492,"source":"contracts/TownHall.algo.ts:237","errorMessage":"Error state: Only the creator can set the LSig Funder Address!","pc":[1258]},{"teal":496,"source":"contracts/TownHall.algo.ts:242","pc":[1259,1260]},{"teal":497,"source":"contracts/TownHall.algo.ts:242","pc":[1261]},{"teal":498,"source":"contracts/TownHall.algo.ts:242","pc":[1262,1263]},{"teal":499,"source":"contracts/TownHall.algo.ts:242","pc":[1264]},{"teal":502,"source":"contracts/TownHall.algo.ts:242","errorMessage":"Error state: LSig Funder Address already set!","pc":[1265]},{"teal":506,"source":"contracts/TownHall.algo.ts:244","pc":[1266,1267]},{"teal":507,"source":"contracts/TownHall.algo.ts:244","pc":[1268,1269]},{"teal":508,"source":"contracts/TownHall.algo.ts:244","pc":[1270]},{"teal":511,"source":"contracts/TownHall.algo.ts:244","errorMessage":"Error state: LSig Funder Address cannot be the zero address.","pc":[1271]},{"teal":515,"source":"contracts/TownHall.algo.ts:247","pc":[1272,1273]},{"teal":516,"source":"contracts/TownHall.algo.ts:247","pc":[1274,1275]},{"teal":517,"source":"contracts/TownHall.algo.ts:247","pc":[1276]},{"teal":521,"source":"contracts/TownHall.algo.ts:249","pc":[1277]},{"teal":522,"source":"contracts/Constants.ts:17","pc":[1278]},{"teal":523,"source":"contracts/TownHall.algo.ts:249","pc":[1279]},{"teal":524,"source":"contracts/TownHall.algo.ts:231","pc":[1280]},{"teal":529,"source":"contracts/TownHall.algo.ts:252","pc":[1281,1282,1283]},{"teal":530,"source":"contracts/TownHall.algo.ts:252","pc":[1284,1285,1286]},{"teal":533,"source":"contracts/TownHall.algo.ts:252","pc":[1287,1288]},{"teal":534,"source":"contracts/TownHall.algo.ts:252","pc":[1289]},{"teal":535,"source":"contracts/TownHall.algo.ts:252","pc":[1290]},{"teal":536,"source":"contracts/TownHall.algo.ts:252","pc":[1291]},{"teal":537,"source":"contracts/TownHall.algo.ts:252","pc":[1292,1293]},{"teal":538,"source":"contracts/TownHall.algo.ts:252","pc":[1294]},{"teal":539,"source":"contracts/TownHall.algo.ts:252","pc":[1295]},{"teal":542,"source":"contracts/TownHall.algo.ts:252","errorMessage":"argument 1 (depositTxn) for joinGameLobby must be a pay transaction","pc":[1296]},{"teal":545,"source":"contracts/TownHall.algo.ts:252","pc":[1297,1298,1299]},{"teal":546,"source":"contracts/TownHall.algo.ts:252","pc":[1300]},{"teal":547,"source":"contracts/TownHall.algo.ts:252","pc":[1301]},{"teal":551,"source":"contracts/TownHall.algo.ts:252","pc":[1302,1303,1304]},{"teal":554,"source":"contracts/TownHall.algo.ts:252","pc":[1305,1306]},{"teal":555,"source":"contracts/TownHall.algo.ts:252","pc":[1307,1308]},{"teal":559,"source":"contracts/TownHall.algo.ts:253","pc":[1309]},{"teal":560,"source":"contracts/TownHall.algo.ts:253","pc":[1310]},{"teal":561,"source":"contracts/Constants.ts:17","pc":[1311]},{"teal":562,"source":"contracts/TownHall.algo.ts:253","pc":[1312]},{"teal":565,"source":"contracts/TownHall.algo.ts:253","errorMessage":"Invalid method call: Game is not in Join Game Lobby state.","pc":[1313]},{"teal":572,"source":"contracts/TownHall.algo.ts:256","pc":[1314,1315]},{"teal":573,"source":"contracts/TownHall.algo.ts:256","pc":[1316]},{"teal":574,"source":"contracts/TownHall.algo.ts:256","pc":[1317]},{"teal":575,"source":"contracts/TownHall.algo.ts:256","pc":[1318]},{"teal":578,"source":"contracts/TownHall.algo.ts:255","errorMessage":"Max players already joined! Error, game should have moved to the next stage already.","pc":[1319]},{"teal":588,"source":"contracts/TownHall.algo.ts:261","pc":[1320]},{"teal":589,"source":"contracts/TownHall.algo.ts:261","pc":[1321]},{"teal":590,"source":"contracts/TownHall.algo.ts:261","pc":[1322,1323,1324]},{"teal":591,"source":"contracts/TownHall.algo.ts:261","pc":[1325,1326]},{"teal":592,"source":"contracts/TownHall.algo.ts:261","pc":[1327]},{"teal":593,"source":"contracts/TownHall.algo.ts:261","pc":[1328]},{"teal":594,"source":"contracts/TownHall.algo.ts:261","pc":[1329,1330,1331]},{"teal":595,"source":"contracts/TownHall.algo.ts:262","pc":[1332]},{"teal":596,"source":"contracts/TownHall.algo.ts:262","pc":[1333]},{"teal":597,"source":"contracts/TownHall.algo.ts:262","pc":[1334,1335,1336]},{"teal":598,"source":"contracts/TownHall.algo.ts:262","pc":[1337,1338]},{"teal":599,"source":"contracts/TownHall.algo.ts:262","pc":[1339]},{"teal":600,"source":"contracts/TownHall.algo.ts:261","pc":[1340]},{"teal":603,"source":"contracts/TownHall.algo.ts:262","pc":[1341]},{"teal":604,"source":"contracts/TownHall.algo.ts:262","pc":[1342,1343,1344]},{"teal":605,"source":"contracts/TownHall.algo.ts:263","pc":[1345,1346]},{"teal":606,"source":"contracts/TownHall.algo.ts:263","pc":[1347]},{"teal":607,"source":"contracts/TownHall.algo.ts:263","pc":[1348,1349,1350]},{"teal":608,"source":"contracts/TownHall.algo.ts:263","pc":[1351,1352]},{"teal":609,"source":"contracts/TownHall.algo.ts:263","pc":[1353]},{"teal":610,"source":"contracts/TownHall.algo.ts:262","pc":[1354]},{"teal":613,"source":"contracts/TownHall.algo.ts:263","pc":[1355]},{"teal":614,"source":"contracts/TownHall.algo.ts:263","pc":[1356,1357,1358]},{"teal":615,"source":"contracts/TownHall.algo.ts:264","pc":[1359,1360]},{"teal":616,"source":"contracts/TownHall.algo.ts:264","pc":[1361]},{"teal":617,"source":"contracts/TownHall.algo.ts:264","pc":[1362,1363,1364]},{"teal":618,"source":"contracts/TownHall.algo.ts:264","pc":[1365,1366]},{"teal":619,"source":"contracts/TownHall.algo.ts:264","pc":[1367]},{"teal":620,"source":"contracts/TownHall.algo.ts:263","pc":[1368]},{"teal":623,"source":"contracts/TownHall.algo.ts:264","pc":[1369]},{"teal":624,"source":"contracts/TownHall.algo.ts:264","pc":[1370,1371,1372]},{"teal":625,"source":"contracts/TownHall.algo.ts:265","pc":[1373,1374]},{"teal":626,"source":"contracts/TownHall.algo.ts:265","pc":[1375]},{"teal":627,"source":"contracts/TownHall.algo.ts:265","pc":[1376,1377,1378]},{"teal":628,"source":"contracts/TownHall.algo.ts:265","pc":[1379,1380]},{"teal":629,"source":"contracts/TownHall.algo.ts:265","pc":[1381]},{"teal":630,"source":"contracts/TownHall.algo.ts:264","pc":[1382]},{"teal":633,"source":"contracts/TownHall.algo.ts:265","pc":[1383]},{"teal":634,"source":"contracts/TownHall.algo.ts:265","pc":[1384,1385,1386]},{"teal":635,"source":"contracts/TownHall.algo.ts:266","pc":[1387,1388]},{"teal":636,"source":"contracts/TownHall.algo.ts:266","pc":[1389]},{"teal":637,"source":"contracts/TownHall.algo.ts:266","pc":[1390,1391,1392]},{"teal":638,"source":"contracts/TownHall.algo.ts:266","pc":[1393,1394]},{"teal":639,"source":"contracts/TownHall.algo.ts:266","pc":[1395]},{"teal":640,"source":"contracts/TownHall.algo.ts:265","pc":[1396]},{"teal":643,"source":"contracts/TownHall.algo.ts:260","pc":[1397,1398,1399]},{"teal":647,"source":"contracts/TownHall.algo.ts:268","errorMessage":"Error state: Player already joined the game!","pc":[1400]},{"teal":652,"source":"contracts/TownHall.algo.ts:273","pc":[1401,1402]},{"teal":653,"source":"contracts/TownHall.algo.ts:273","pc":[1403,1404]},{"teal":654,"source":"contracts/TownHall.algo.ts:273","pc":[1405,1406,1407,1408]},{"teal":655,"source":"contracts/TownHall.algo.ts:273","pc":[1409]},{"teal":658,"source":"contracts/TownHall.algo.ts:273","errorMessage":"Invalid FunderLSig amount!","pc":[1410]},{"teal":662,"source":"contracts/TownHall.algo.ts:275","pc":[1411,1412]},{"teal":663,"source":"contracts/TownHall.algo.ts:275","pc":[1413,1414,1415]},{"teal":664,"source":"contracts/TownHall.algo.ts:275","pc":[1416,1417]},{"teal":668,"source":"contracts/TownHall.algo.ts:276","pc":[1418,1419]},{"teal":669,"source":"contracts/TownHall.algo.ts:276","pc":[1420,1421,1422]},{"teal":670,"source":"contracts/TownHall.algo.ts:276","pc":[1423,1424]},{"teal":674,"source":"contracts/TownHall.algo.ts:277","pc":[1425,1426]},{"teal":675,"source":"contracts/TownHall.algo.ts:277","pc":[1427,1428,1429]},{"teal":676,"source":"contracts/TownHall.algo.ts:277","pc":[1430,1431]},{"teal":680,"source":"contracts/TownHall.algo.ts:278","pc":[1432,1433]},{"teal":681,"source":"contracts/TownHall.algo.ts:278","pc":[1434,1435,1436]},{"teal":682,"source":"contracts/TownHall.algo.ts:278","pc":[1437,1438]},{"teal":683,"source":"contracts/TownHall.algo.ts:278","pc":[1439]},{"teal":684,"source":"contracts/TownHall.algo.ts:278","pc":[1440,1441]},{"teal":688,"source":"contracts/TownHall.algo.ts:283","pc":[1442,1443]},{"teal":689,"source":"contracts/TownHall.algo.ts:283","pc":[1444,1445]},{"teal":690,"source":"contracts/TownHall.algo.ts:283","pc":[1446,1447]},{"teal":691,"source":"contracts/TownHall.algo.ts:283","pc":[1448,1449]},{"teal":692,"source":"contracts/TownHall.algo.ts:283","pc":[1450,1451,1452]},{"teal":695,"source":"contracts/TownHall.algo.ts:283","errorMessage":"DLOG NIZK Proof failed!","pc":[1453]},{"teal":700,"source":"contracts/TownHall.algo.ts:285","pc":[1454,1455]},{"teal":701,"source":"contracts/TownHall.algo.ts:285","pc":[1456]},{"teal":702,"source":"contracts/TownHall.algo.ts:285","pc":[1457]},{"teal":703,"source":"contracts/TownHall.algo.ts:285","pc":[1458]},{"teal":704,"source":"contracts/TownHall.algo.ts:285","pc":[1459]},{"teal":705,"source":"contracts/TownHall.algo.ts:285","pc":[1460,1461,1462]},{"teal":710,"source":"contracts/TownHall.algo.ts:286","pc":[1463,1464]},{"teal":711,"source":"contracts/TownHall.algo.ts:286","pc":[1465,1466]},{"teal":712,"source":"contracts/TownHall.algo.ts:286","pc":[1467]},{"teal":713,"source":"contracts/TownHall.algo.ts:286","pc":[1468]},{"teal":714,"source":"contracts/TownHall.algo.ts:285","pc":[1469,1470,1471]},{"teal":719,"source":"contracts/TownHall.algo.ts:288","pc":[1472,1473]},{"teal":720,"source":"contracts/TownHall.algo.ts:288","pc":[1474]},{"teal":721,"source":"contracts/TownHall.algo.ts:288","pc":[1475]},{"teal":724,"source":"contracts/TownHall.algo.ts:288","errorMessage":"box value does not exist: this.quickAccessPKBoxes(0).size","pc":[1476]},{"teal":725,"source":"contracts/TownHall.algo.ts:288","pc":[1477,1478]},{"teal":726,"source":"contracts/TownHall.algo.ts:288","pc":[1479]},{"teal":727,"source":"contracts/TownHall.algo.ts:288","pc":[1480]},{"teal":732,"source":"contracts/TownHall.algo.ts:292","pc":[1481,1482]},{"teal":733,"source":"contracts/TownHall.algo.ts:292","pc":[1483]},{"teal":734,"source":"contracts/TownHall.algo.ts:292","pc":[1484]},{"teal":735,"source":"contracts/TownHall.algo.ts:292","pc":[1485]},{"teal":738,"source":"contracts/TownHall.algo.ts:292","errorMessage":"PK Box failed to be created.","pc":[1486]},{"teal":742,"source":"contracts/TownHall.algo.ts:294","pc":[1487,1488]},{"teal":743,"source":"contracts/TownHall.algo.ts:294","pc":[1489,1490]},{"teal":744,"source":"contracts/TownHall.algo.ts:294","pc":[1491]},{"teal":745,"source":"contracts/TownHall.algo.ts:294","pc":[1492,1493]},{"teal":746,"source":"contracts/TownHall.algo.ts:294","pc":[1494]},{"teal":747,"source":"contracts/TownHall.algo.ts:294","pc":[1495,1496]},{"teal":748,"source":"contracts/TownHall.algo.ts:294","pc":[1497]},{"teal":752,"source":"contracts/TownHall.algo.ts:295","pc":[1498,1499]},{"teal":753,"source":"contracts/TownHall.algo.ts:295","pc":[1500]},{"teal":754,"source":"contracts/TownHall.algo.ts:295","pc":[1501]},{"teal":755,"source":"contracts/TownHall.algo.ts:295","pc":[1502]},{"teal":756,"source":"contracts/TownHall.algo.ts:295","pc":[1503,1504]},{"teal":757,"source":"contracts/TownHall.algo.ts:295","pc":[1505]},{"teal":758,"source":"contracts/TownHall.algo.ts:295","pc":[1506]},{"teal":762,"source":"contracts/TownHall.algo.ts:297","pc":[1507,1508]},{"teal":763,"source":"contracts/TownHall.algo.ts:297","pc":[1509]},{"teal":764,"source":"contracts/TownHall.algo.ts:297","pc":[1510,1511]},{"teal":765,"source":"contracts/TownHall.algo.ts:297","pc":[1512]},{"teal":768,"source":"contracts/TownHall.algo.ts:297","errorMessage":"Error state: LSig Funder Address not set!","pc":[1513]},{"teal":775,"source":"contracts/TownHall.algo.ts:300","pc":[1514]},{"teal":776,"source":"contracts/TownHall.algo.ts:300","pc":[1515]},{"teal":777,"source":"contracts/TownHall.algo.ts:300","pc":[1516,1517]},{"teal":781,"source":"contracts/TownHall.algo.ts:301","pc":[1518,1519]},{"teal":782,"source":"contracts/TownHall.algo.ts:301","pc":[1520,1521]},{"teal":786,"source":"contracts/TownHall.algo.ts:302","pc":[1522,1523]},{"teal":787,"source":"contracts/TownHall.algo.ts:302","pc":[1524]},{"teal":788,"source":"contracts/TownHall.algo.ts:302","pc":[1525,1526]},{"teal":791,"source":"contracts/TownHall.algo.ts:300","pc":[1527]},{"teal":792,"source":"contracts/TownHall.algo.ts:300","pc":[1528,1529]},{"teal":795,"source":"contracts/TownHall.algo.ts:300","pc":[1530]},{"teal":800,"source":"contracts/TownHall.algo.ts:305","pc":[1531]},{"teal":801,"source":"contracts/TownHall.algo.ts:305","pc":[1532]},{"teal":802,"source":"contracts/TownHall.algo.ts:305","pc":[1533,1534,1535]},{"teal":803,"source":"contracts/TownHall.algo.ts:305","pc":[1536,1537]},{"teal":804,"source":"contracts/TownHall.algo.ts:305","pc":[1538]},{"teal":805,"source":"contracts/TownHall.algo.ts:305","pc":[1539,1540,1541]},{"teal":810,"source":"contracts/TownHall.algo.ts:306","pc":[1542]},{"teal":811,"source":"contracts/TownHall.algo.ts:306","pc":[1543]},{"teal":812,"source":"contracts/TownHall.algo.ts:306","pc":[1544]},{"teal":813,"source":"contracts/TownHall.algo.ts:306","pc":[1545,1546]},{"teal":814,"source":"contracts/TownHall.algo.ts:306","pc":[1547]},{"teal":815,"source":"contracts/TownHall.algo.ts:306","pc":[1548]},{"teal":816,"source":"contracts/TownHall.algo.ts:306","pc":[1549]},{"teal":817,"source":"contracts/TownHall.algo.ts:306","pc":[1550]},{"teal":821,"source":"contracts/TownHall.algo.ts:307","pc":[1551]},{"teal":827,"source":"contracts/TownHall.algo.ts:309","pc":[1552]},{"teal":828,"source":"contracts/TownHall.algo.ts:309","pc":[1553]},{"teal":829,"source":"contracts/TownHall.algo.ts:309","pc":[1554,1555,1556]},{"teal":830,"source":"contracts/TownHall.algo.ts:309","pc":[1557,1558]},{"teal":831,"source":"contracts/TownHall.algo.ts:309","pc":[1559]},{"teal":832,"source":"contracts/TownHall.algo.ts:309","pc":[1560,1561,1562]},{"teal":837,"source":"contracts/TownHall.algo.ts:310","pc":[1563]},{"teal":838,"source":"contracts/TownHall.algo.ts:310","pc":[1564]},{"teal":839,"source":"contracts/TownHall.algo.ts:310","pc":[1565]},{"teal":840,"source":"contracts/TownHall.algo.ts:310","pc":[1566,1567]},{"teal":841,"source":"contracts/TownHall.algo.ts:310","pc":[1568]},{"teal":842,"source":"contracts/TownHall.algo.ts:310","pc":[1569]},{"teal":843,"source":"contracts/TownHall.algo.ts:310","pc":[1570]},{"teal":844,"source":"contracts/TownHall.algo.ts:310","pc":[1571]},{"teal":848,"source":"contracts/TownHall.algo.ts:311","pc":[1572]},{"teal":854,"source":"contracts/TownHall.algo.ts:313","pc":[1573,1574]},{"teal":855,"source":"contracts/TownHall.algo.ts:313","pc":[1575]},{"teal":856,"source":"contracts/TownHall.algo.ts:313","pc":[1576,1577,1578]},{"teal":857,"source":"contracts/TownHall.algo.ts:313","pc":[1579,1580]},{"teal":858,"source":"contracts/TownHall.algo.ts:313","pc":[1581]},{"teal":859,"source":"contracts/TownHall.algo.ts:313","pc":[1582,1583,1584]},{"teal":864,"source":"contracts/TownHall.algo.ts:314","pc":[1585,1586]},{"teal":865,"source":"contracts/TownHall.algo.ts:314","pc":[1587]},{"teal":866,"source":"contracts/TownHall.algo.ts:314","pc":[1588]},{"teal":867,"source":"contracts/TownHall.algo.ts:314","pc":[1589,1590]},{"teal":868,"source":"contracts/TownHall.algo.ts:314","pc":[1591]},{"teal":869,"source":"contracts/TownHall.algo.ts:314","pc":[1592,1593]},{"teal":870,"source":"contracts/TownHall.algo.ts:314","pc":[1594]},{"teal":871,"source":"contracts/TownHall.algo.ts:314","pc":[1595]},{"teal":875,"source":"contracts/TownHall.algo.ts:315","pc":[1596]},{"teal":881,"source":"contracts/TownHall.algo.ts:317","pc":[1597,1598]},{"teal":882,"source":"contracts/TownHall.algo.ts:317","pc":[1599]},{"teal":883,"source":"contracts/TownHall.algo.ts:317","pc":[1600,1601,1602]},{"teal":884,"source":"contracts/TownHall.algo.ts:317","pc":[1603,1604]},{"teal":885,"source":"contracts/TownHall.algo.ts:317","pc":[1605]},{"teal":886,"source":"contracts/TownHall.algo.ts:317","pc":[1606,1607,1608]},{"teal":891,"source":"contracts/TownHall.algo.ts:318","pc":[1609,1610]},{"teal":892,"source":"contracts/TownHall.algo.ts:318","pc":[1611]},{"teal":893,"source":"contracts/TownHall.algo.ts:318","pc":[1612]},{"teal":894,"source":"contracts/TownHall.algo.ts:318","pc":[1613,1614]},{"teal":895,"source":"contracts/TownHall.algo.ts:318","pc":[1615]},{"teal":896,"source":"contracts/TownHall.algo.ts:318","pc":[1616,1617]},{"teal":897,"source":"contracts/TownHall.algo.ts:318","pc":[1618]},{"teal":898,"source":"contracts/TownHall.algo.ts:318","pc":[1619]},{"teal":902,"source":"contracts/TownHall.algo.ts:319","pc":[1620]},{"teal":908,"source":"contracts/TownHall.algo.ts:321","pc":[1621,1622]},{"teal":909,"source":"contracts/TownHall.algo.ts:321","pc":[1623]},{"teal":910,"source":"contracts/TownHall.algo.ts:321","pc":[1624,1625,1626]},{"teal":911,"source":"contracts/TownHall.algo.ts:321","pc":[1627,1628]},{"teal":912,"source":"contracts/TownHall.algo.ts:321","pc":[1629]},{"teal":913,"source":"contracts/TownHall.algo.ts:321","pc":[1630,1631,1632]},{"teal":918,"source":"contracts/TownHall.algo.ts:322","pc":[1633,1634]},{"teal":919,"source":"contracts/TownHall.algo.ts:322","pc":[1635]},{"teal":920,"source":"contracts/TownHall.algo.ts:322","pc":[1636]},{"teal":921,"source":"contracts/TownHall.algo.ts:322","pc":[1637,1638]},{"teal":922,"source":"contracts/TownHall.algo.ts:322","pc":[1639]},{"teal":923,"source":"contracts/TownHall.algo.ts:322","pc":[1640,1641]},{"teal":924,"source":"contracts/TownHall.algo.ts:322","pc":[1642]},{"teal":925,"source":"contracts/TownHall.algo.ts:322","pc":[1643]},{"teal":929,"source":"contracts/TownHall.algo.ts:323","pc":[1644]},{"teal":935,"source":"contracts/TownHall.algo.ts:325","pc":[1645,1646]},{"teal":936,"source":"contracts/TownHall.algo.ts:325","pc":[1647]},{"teal":937,"source":"contracts/TownHall.algo.ts:325","pc":[1648,1649,1650]},{"teal":938,"source":"contracts/TownHall.algo.ts:325","pc":[1651,1652]},{"teal":939,"source":"contracts/TownHall.algo.ts:325","pc":[1653]},{"teal":940,"source":"contracts/TownHall.algo.ts:325","pc":[1654,1655,1656]},{"teal":945,"source":"contracts/TownHall.algo.ts:326","pc":[1657,1658]},{"teal":946,"source":"contracts/TownHall.algo.ts:326","pc":[1659]},{"teal":947,"source":"contracts/TownHall.algo.ts:326","pc":[1660]},{"teal":948,"source":"contracts/TownHall.algo.ts:326","pc":[1661,1662]},{"teal":949,"source":"contracts/TownHall.algo.ts:326","pc":[1663]},{"teal":950,"source":"contracts/TownHall.algo.ts:326","pc":[1664,1665]},{"teal":951,"source":"contracts/TownHall.algo.ts:326","pc":[1666]},{"teal":952,"source":"contracts/TownHall.algo.ts:326","pc":[1667]},{"teal":956,"source":"contracts/TownHall.algo.ts:327","pc":[1668]},{"teal":957,"source":"contracts/Constants.ts:18","pc":[1669]},{"teal":958,"source":"contracts/TownHall.algo.ts:327","pc":[1670]},{"teal":962,"source":"contracts/TownHall.algo.ts:328","pc":[1671]},{"teal":966,"source":"contracts/TownHall.algo.ts:331","errorMessage":"Invalid state! Error, game should have moved to the next stage already.","pc":[1672]},{"teal":967,"source":"contracts/TownHall.algo.ts:252","pc":[1673]},{"teal":972,"source":"contracts/TownHall.algo.ts:346","pc":[1674,1675]},{"teal":973,"source":"contracts/TownHall.algo.ts:346","pc":[1676]},{"teal":974,"source":"contracts/TownHall.algo.ts:346","pc":[1677]},{"teal":975,"source":"contracts/TownHall.algo.ts:346","pc":[1678]},{"teal":976,"source":"contracts/TownHall.algo.ts:346","pc":[1679,1680]},{"teal":977,"source":"contracts/TownHall.algo.ts:346","pc":[1681]},{"teal":978,"source":"contracts/TownHall.algo.ts:346","pc":[1682]},{"teal":981,"source":"contracts/TownHall.algo.ts:346","errorMessage":"argument 0 (ringLSigTxn5) for assignRole must be a pay transaction","pc":[1683]},{"teal":984,"source":"contracts/TownHall.algo.ts:345","pc":[1684,1685]},{"teal":985,"source":"contracts/TownHall.algo.ts:345","pc":[1686]},{"teal":986,"source":"contracts/TownHall.algo.ts:345","pc":[1687]},{"teal":987,"source":"contracts/TownHall.algo.ts:345","pc":[1688]},{"teal":988,"source":"contracts/TownHall.algo.ts:345","pc":[1689,1690]},{"teal":989,"source":"contracts/TownHall.algo.ts:345","pc":[1691]},{"teal":990,"source":"contracts/TownHall.algo.ts:345","pc":[1692]},{"teal":993,"source":"contracts/TownHall.algo.ts:345","errorMessage":"argument 1 (ringLSigTxn4) for assignRole must be a pay transaction","pc":[1693]},{"teal":996,"source":"contracts/TownHall.algo.ts:344","pc":[1694,1695]},{"teal":997,"source":"contracts/TownHall.algo.ts:344","pc":[1696,1697]},{"teal":998,"source":"contracts/TownHall.algo.ts:344","pc":[1698]},{"teal":999,"source":"contracts/TownHall.algo.ts:344","pc":[1699]},{"teal":1000,"source":"contracts/TownHall.algo.ts:344","pc":[1700,1701]},{"teal":1001,"source":"contracts/TownHall.algo.ts:344","pc":[1702]},{"teal":1002,"source":"contracts/TownHall.algo.ts:344","pc":[1703]},{"teal":1005,"source":"contracts/TownHall.algo.ts:344","errorMessage":"argument 2 (ringLSigTxn3) for assignRole must be a pay transaction","pc":[1704]},{"teal":1008,"source":"contracts/TownHall.algo.ts:343","pc":[1705,1706]},{"teal":1009,"source":"contracts/TownHall.algo.ts:343","pc":[1707,1708]},{"teal":1010,"source":"contracts/TownHall.algo.ts:343","pc":[1709]},{"teal":1011,"source":"contracts/TownHall.algo.ts:343","pc":[1710]},{"teal":1012,"source":"contracts/TownHall.algo.ts:343","pc":[1711,1712]},{"teal":1013,"source":"contracts/TownHall.algo.ts:343","pc":[1713]},{"teal":1014,"source":"contracts/TownHall.algo.ts:343","pc":[1714]},{"teal":1017,"source":"contracts/TownHall.algo.ts:343","errorMessage":"argument 3 (ringLSigTxn2) for assignRole must be a pay transaction","pc":[1715]},{"teal":1020,"source":"contracts/TownHall.algo.ts:342","pc":[1716,1717]},{"teal":1021,"source":"contracts/TownHall.algo.ts:342","pc":[1718,1719]},{"teal":1022,"source":"contracts/TownHall.algo.ts:342","pc":[1720]},{"teal":1023,"source":"contracts/TownHall.algo.ts:342","pc":[1721]},{"teal":1024,"source":"contracts/TownHall.algo.ts:342","pc":[1722,1723]},{"teal":1025,"source":"contracts/TownHall.algo.ts:342","pc":[1724]},{"teal":1026,"source":"contracts/TownHall.algo.ts:342","pc":[1725]},{"teal":1029,"source":"contracts/TownHall.algo.ts:342","errorMessage":"argument 4 (ringLSigTxn1) for assignRole must be a pay transaction","pc":[1726]},{"teal":1032,"source":"contracts/TownHall.algo.ts:341","pc":[1727,1728]},{"teal":1033,"source":"contracts/TownHall.algo.ts:341","pc":[1729]},{"teal":1034,"source":"contracts/TownHall.algo.ts:341","pc":[1730]},{"teal":1035,"source":"contracts/TownHall.algo.ts:341","pc":[1731]},{"teal":1036,"source":"contracts/TownHall.algo.ts:341","pc":[1732,1733]},{"teal":1037,"source":"contracts/TownHall.algo.ts:341","pc":[1734]},{"teal":1038,"source":"contracts/TownHall.algo.ts:341","pc":[1735]},{"teal":1041,"source":"contracts/TownHall.algo.ts:341","errorMessage":"argument 5 (ringLSigTxn0) for assignRole must be a pay transaction","pc":[1736]},{"teal":1044,"source":"contracts/TownHall.algo.ts:340","pc":[1737,1738]},{"teal":1045,"source":"contracts/TownHall.algo.ts:340","pc":[1739,1740]},{"teal":1046,"source":"contracts/TownHall.algo.ts:340","pc":[1741]},{"teal":1047,"source":"contracts/TownHall.algo.ts:340","pc":[1742]},{"teal":1048,"source":"contracts/TownHall.algo.ts:340","pc":[1743,1744]},{"teal":1049,"source":"contracts/TownHall.algo.ts:340","pc":[1745]},{"teal":1050,"source":"contracts/TownHall.algo.ts:340","pc":[1746]},{"teal":1053,"source":"contracts/TownHall.algo.ts:340","errorMessage":"argument 6 (funderLSigTxn) for assignRole must be a pay transaction","pc":[1747]},{"teal":1056,"source":"contracts/TownHall.algo.ts:339","pc":[1748,1749,1750]},{"teal":1057,"source":"contracts/TownHall.algo.ts:339","pc":[1751,1752,1753]},{"teal":1060,"source":"contracts/TownHall.algo.ts:338","pc":[1754,1755,1756]},{"teal":1061,"source":"contracts/TownHall.algo.ts:338","pc":[1757,1758,1759]},{"teal":1064,"source":"contracts/TownHall.algo.ts:337","pc":[1760,1761,1762]},{"teal":1065,"source":"contracts/TownHall.algo.ts:337","pc":[1763,1764,1765]},{"teal":1068,"source":"contracts/TownHall.algo.ts:336","pc":[1766,1767,1768]},{"teal":1069,"source":"contracts/TownHall.algo.ts:336","pc":[1769,1770,1771]},{"teal":1072,"source":"contracts/TownHall.algo.ts:335","pc":[1772,1773,1774]},{"teal":1073,"source":"contracts/TownHall.algo.ts:335","pc":[1775,1776,1777]},{"teal":1076,"source":"contracts/TownHall.algo.ts:334","pc":[1778,1779,1780]},{"teal":1077,"source":"contracts/TownHall.algo.ts:334","pc":[1781]},{"teal":1078,"source":"contracts/TownHall.algo.ts:334","pc":[1782]},{"teal":1082,"source":"contracts/TownHall.algo.ts:334","pc":[1783,1784,1785]},{"teal":1086,"source":"contracts/TownHall.algo.ts:348","pc":[1786]},{"teal":1087,"source":"contracts/TownHall.algo.ts:348","pc":[1787]},{"teal":1088,"source":"contracts/Constants.ts:18","pc":[1788]},{"teal":1089,"source":"contracts/TownHall.algo.ts:348","pc":[1789]},{"teal":1092,"source":"contracts/TownHall.algo.ts:348","errorMessage":"Invalid method call: Game is not in Assign Role state.","pc":[1790]},{"teal":1099,"source":"contracts/TownHall.algo.ts:358","pc":[1791,1792]},{"teal":1100,"source":"contracts/TownHall.algo.ts:358","pc":[1793]},{"teal":1101,"source":"contracts/TownHall.algo.ts:358","pc":[1794]},{"teal":1102,"source":"contracts/TownHall.algo.ts:358","pc":[1795]},{"teal":1103,"source":"contracts/TownHall.algo.ts:358","pc":[1796]},{"teal":1104,"source":"contracts/TownHall.algo.ts:358","pc":[1797]},{"teal":1107,"source":"contracts/TownHall.algo.ts:357","errorMessage":"KeyImage already in store. Are you trying to double-dip with your ring signature?","pc":[1798]},{"teal":1111,"source":"contracts/TownHall.algo.ts:361","pc":[1799,1800]},{"teal":1112,"source":"contracts/TownHall.algo.ts:361","pc":[1801]},{"teal":1113,"source":"contracts/TownHall.algo.ts:361","pc":[1802]},{"teal":1114,"source":"contracts/TownHall.algo.ts:361","pc":[1803]},{"teal":1115,"source":"contracts/TownHall.algo.ts:361","pc":[1804]},{"teal":1119,"source":"contracts/TownHall.algo.ts:365","pc":[1805,1806]},{"teal":1120,"source":"contracts/TownHall.algo.ts:365","pc":[1807,1808]},{"teal":1121,"source":"contracts/TownHall.algo.ts:365","pc":[1809,1810]},{"teal":1122,"source":"contracts/TownHall.algo.ts:365","pc":[1811]},{"teal":1123,"source":"contracts/TownHall.algo.ts:365","pc":[1812]},{"teal":1124,"source":"contracts/TownHall.algo.ts:365","pc":[1813]},{"teal":1131,"source":"contracts/TownHall.algo.ts:369","pc":[1814,1815]},{"teal":1132,"source":"contracts/TownHall.algo.ts:369","pc":[1816]},{"teal":1133,"source":"contracts/TownHall.algo.ts:369","pc":[1817,1818,1819]},{"teal":1134,"source":"contracts/TownHall.algo.ts:369","pc":[1820]},{"teal":1135,"source":"contracts/TownHall.algo.ts:369","pc":[1821,1822]},{"teal":1136,"source":"contracts/TownHall.algo.ts:369","pc":[1823]},{"teal":1139,"source":"contracts/TownHall.algo.ts:368","errorMessage":"Invalid PKs! Are you trying to pass in a different ring of PKs?","pc":[1824]},{"teal":1144,"source":"contracts/TownHall.algo.ts:375","pc":[1825,1826]},{"teal":1145,"source":"contracts/TownHall.algo.ts:375","pc":[1827,1828]},{"teal":1146,"source":"contracts/TownHall.algo.ts:375","pc":[1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862]},{"teal":1147,"source":"contracts/TownHall.algo.ts:375","pc":[1863]},{"teal":1150,"source":"contracts/TownHall.algo.ts:375","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn0\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig0.address())\"}","pc":[1864]},{"teal":1155,"source":"contracts/TownHall.algo.ts:376","pc":[1865,1866]},{"teal":1156,"source":"contracts/TownHall.algo.ts:376","pc":[1867,1868]},{"teal":1157,"source":"contracts/TownHall.algo.ts:376","pc":[1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902]},{"teal":1158,"source":"contracts/TownHall.algo.ts:376","pc":[1903]},{"teal":1161,"source":"contracts/TownHall.algo.ts:376","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn1\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig1.address())\"}","pc":[1904]},{"teal":1166,"source":"contracts/TownHall.algo.ts:377","pc":[1905,1906]},{"teal":1167,"source":"contracts/TownHall.algo.ts:377","pc":[1907,1908]},{"teal":1168,"source":"contracts/TownHall.algo.ts:377","pc":[1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942]},{"teal":1169,"source":"contracts/TownHall.algo.ts:377","pc":[1943]},{"teal":1172,"source":"contracts/TownHall.algo.ts:377","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn2\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig2.address())\"}","pc":[1944]},{"teal":1177,"source":"contracts/TownHall.algo.ts:378","pc":[1945,1946]},{"teal":1178,"source":"contracts/TownHall.algo.ts:378","pc":[1947,1948]},{"teal":1179,"source":"contracts/TownHall.algo.ts:378","pc":[1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982]},{"teal":1180,"source":"contracts/TownHall.algo.ts:378","pc":[1983]},{"teal":1183,"source":"contracts/TownHall.algo.ts:378","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn3\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig3.address())\"}","pc":[1984]},{"teal":1188,"source":"contracts/TownHall.algo.ts:379","pc":[1985,1986]},{"teal":1189,"source":"contracts/TownHall.algo.ts:379","pc":[1987,1988]},{"teal":1190,"source":"contracts/TownHall.algo.ts:379","pc":[1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022]},{"teal":1191,"source":"contracts/TownHall.algo.ts:379","pc":[2023]},{"teal":1194,"source":"contracts/TownHall.algo.ts:379","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn4\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig4.address())\"}","pc":[2024]},{"teal":1199,"source":"contracts/TownHall.algo.ts:380","pc":[2025,2026]},{"teal":1200,"source":"contracts/TownHall.algo.ts:380","pc":[2027,2028]},{"teal":1201,"source":"contracts/TownHall.algo.ts:380","pc":[2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062]},{"teal":1202,"source":"contracts/TownHall.algo.ts:380","pc":[2063]},{"teal":1205,"source":"contracts/TownHall.algo.ts:380","errorMessage":"transaction verification failed: {\"txn\":\"ringLSigTxn5\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig5.address())\"}","pc":[2064]},{"teal":1214,"source":"contracts/TownHall.algo.ts:383","pc":[2065,2066]},{"teal":1215,"source":"contracts/TownHall.algo.ts:384","pc":[2067,2068]},{"teal":1216,"source":"contracts/TownHall.algo.ts:384","pc":[2069,2070]},{"teal":1217,"source":"contracts/TownHall.algo.ts:384","pc":[2071]},{"teal":1218,"source":"contracts/TownHall.algo.ts:384","pc":[2072]},{"teal":1221,"source":"contracts/TownHall.algo.ts:384","errorMessage":"transaction verification failed: {\"txn\":\"funderLSigTxn\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(this.lsigFunderAddress.value)\"}","pc":[2073]},{"teal":1224,"source":"contracts/TownHall.algo.ts:383","pc":[2074,2075]},{"teal":1225,"source":"contracts/TownHall.algo.ts:385","pc":[2076,2077]},{"teal":1226,"source":"contracts/TownHall.algo.ts:385","pc":[2078,2079]},{"teal":1227,"source":"contracts/TownHall.algo.ts:385","pc":[2080]},{"teal":1230,"source":"contracts/TownHall.algo.ts:385","errorMessage":"transaction verification failed: {\"txn\":\"funderLSigTxn\",\"field\":\"receiver\",\"expected\":\"this.txn.sender\"}","pc":[2081]},{"teal":1233,"source":"contracts/TownHall.algo.ts:383","pc":[2082,2083]},{"teal":1234,"source":"contracts/TownHall.algo.ts:386","pc":[2084,2085]},{"teal":1235,"source":"contracts/TownHall.algo.ts:386","pc":[2086,2087]},{"teal":1236,"source":"contracts/TownHall.algo.ts:386","pc":[2088]},{"teal":1239,"source":"contracts/TownHall.algo.ts:386","errorMessage":"transaction verification failed: {\"txn\":\"funderLSigTxn\",\"field\":\"amount\",\"expected\":\"LSIG_FUND_AMOUNT\"}","pc":[2089]},{"teal":1244,"source":"contracts/TownHall.algo.ts:394","pc":[2090,2091]},{"teal":1245,"source":"contracts/TownHall.algo.ts:394","pc":[2092]},{"teal":1246,"source":"contracts/TownHall.algo.ts:394","pc":[2093,2094]},{"teal":1247,"source":"contracts/TownHall.algo.ts:394","pc":[2095]},{"teal":1248,"source":"contracts/TownHall.algo.ts:394","pc":[2096,2097,2098]},{"teal":1253,"source":"contracts/TownHall.algo.ts:395","pc":[2099,2100]},{"teal":1254,"source":"contracts/TownHall.algo.ts:395","pc":[2101,2102]},{"teal":1255,"source":"contracts/TownHall.algo.ts:395","pc":[2103]},{"teal":1259,"source":"contracts/TownHall.algo.ts:396","pc":[2104,2105]},{"teal":1260,"source":"contracts/TownHall.algo.ts:396","pc":[2106,2107]},{"teal":1261,"source":"contracts/TownHall.algo.ts:396","pc":[2108]},{"teal":1265,"source":"contracts/TownHall.algo.ts:397","pc":[2109]},{"teal":1271,"source":"contracts/TownHall.algo.ts:399","pc":[2110,2111]},{"teal":1272,"source":"contracts/TownHall.algo.ts:399","pc":[2112]},{"teal":1273,"source":"contracts/TownHall.algo.ts:399","pc":[2113,2114]},{"teal":1274,"source":"contracts/TownHall.algo.ts:399","pc":[2115]},{"teal":1275,"source":"contracts/TownHall.algo.ts:399","pc":[2116,2117,2118]},{"teal":1280,"source":"contracts/TownHall.algo.ts:400","pc":[2119,2120]},{"teal":1281,"source":"contracts/TownHall.algo.ts:400","pc":[2121,2122]},{"teal":1282,"source":"contracts/TownHall.algo.ts:400","pc":[2123]},{"teal":1286,"source":"contracts/TownHall.algo.ts:401","pc":[2124,2125]},{"teal":1287,"source":"contracts/TownHall.algo.ts:401","pc":[2126,2127]},{"teal":1288,"source":"contracts/TownHall.algo.ts:401","pc":[2128]},{"teal":1292,"source":"contracts/TownHall.algo.ts:402","pc":[2129]},{"teal":1298,"source":"contracts/TownHall.algo.ts:404","pc":[2130,2131]},{"teal":1299,"source":"contracts/TownHall.algo.ts:404","pc":[2132]},{"teal":1300,"source":"contracts/TownHall.algo.ts:404","pc":[2133,2134]},{"teal":1301,"source":"contracts/TownHall.algo.ts:404","pc":[2135]},{"teal":1302,"source":"contracts/TownHall.algo.ts:404","pc":[2136,2137,2138]},{"teal":1307,"source":"contracts/TownHall.algo.ts:405","pc":[2139,2140]},{"teal":1308,"source":"contracts/TownHall.algo.ts:405","pc":[2141,2142]},{"teal":1309,"source":"contracts/TownHall.algo.ts:405","pc":[2143]},{"teal":1313,"source":"contracts/TownHall.algo.ts:406","pc":[2144,2145]},{"teal":1314,"source":"contracts/TownHall.algo.ts:406","pc":[2146,2147]},{"teal":1315,"source":"contracts/TownHall.algo.ts:406","pc":[2148]},{"teal":1319,"source":"contracts/TownHall.algo.ts:407","pc":[2149]},{"teal":1325,"source":"contracts/TownHall.algo.ts:409","pc":[2150,2151]},{"teal":1326,"source":"contracts/TownHall.algo.ts:409","pc":[2152]},{"teal":1327,"source":"contracts/TownHall.algo.ts:409","pc":[2153,2154]},{"teal":1328,"source":"contracts/TownHall.algo.ts:409","pc":[2155]},{"teal":1329,"source":"contracts/TownHall.algo.ts:409","pc":[2156,2157,2158]},{"teal":1334,"source":"contracts/TownHall.algo.ts:410","pc":[2159,2160]},{"teal":1335,"source":"contracts/TownHall.algo.ts:410","pc":[2161,2162]},{"teal":1336,"source":"contracts/TownHall.algo.ts:410","pc":[2163]},{"teal":1340,"source":"contracts/TownHall.algo.ts:411","pc":[2164,2165]},{"teal":1341,"source":"contracts/TownHall.algo.ts:411","pc":[2166,2167]},{"teal":1342,"source":"contracts/TownHall.algo.ts:411","pc":[2168]},{"teal":1346,"source":"contracts/TownHall.algo.ts:412","pc":[2169]},{"teal":1352,"source":"contracts/TownHall.algo.ts:414","pc":[2170,2171]},{"teal":1353,"source":"contracts/TownHall.algo.ts:414","pc":[2172]},{"teal":1354,"source":"contracts/TownHall.algo.ts:414","pc":[2173,2174]},{"teal":1355,"source":"contracts/TownHall.algo.ts:414","pc":[2175]},{"teal":1356,"source":"contracts/TownHall.algo.ts:414","pc":[2176,2177,2178]},{"teal":1361,"source":"contracts/TownHall.algo.ts:415","pc":[2179,2180]},{"teal":1362,"source":"contracts/TownHall.algo.ts:415","pc":[2181,2182]},{"teal":1363,"source":"contracts/TownHall.algo.ts:415","pc":[2183]},{"teal":1367,"source":"contracts/TownHall.algo.ts:416","pc":[2184,2185]},{"teal":1368,"source":"contracts/TownHall.algo.ts:416","pc":[2186,2187]},{"teal":1369,"source":"contracts/TownHall.algo.ts:416","pc":[2188]},{"teal":1373,"source":"contracts/TownHall.algo.ts:417","pc":[2189]},{"teal":1379,"source":"contracts/TownHall.algo.ts:419","pc":[2190,2191]},{"teal":1380,"source":"contracts/TownHall.algo.ts:419","pc":[2192]},{"teal":1381,"source":"contracts/TownHall.algo.ts:419","pc":[2193,2194]},{"teal":1382,"source":"contracts/TownHall.algo.ts:419","pc":[2195]},{"teal":1383,"source":"contracts/TownHall.algo.ts:419","pc":[2196,2197,2198]},{"teal":1388,"source":"contracts/TownHall.algo.ts:420","pc":[2199,2200]},{"teal":1389,"source":"contracts/TownHall.algo.ts:420","pc":[2201,2202]},{"teal":1390,"source":"contracts/TownHall.algo.ts:420","pc":[2203]},{"teal":1394,"source":"contracts/TownHall.algo.ts:421","pc":[2204,2205]},{"teal":1395,"source":"contracts/TownHall.algo.ts:421","pc":[2206,2207]},{"teal":1396,"source":"contracts/TownHall.algo.ts:421","pc":[2208]},{"teal":1400,"source":"contracts/TownHall.algo.ts:422","pc":[2209]},{"teal":1401,"source":"contracts/Constants.ts:19","pc":[2210,2211]},{"teal":1402,"source":"contracts/TownHall.algo.ts:422","pc":[2212]},{"teal":1406,"source":"contracts/TownHall.algo.ts:423","pc":[2213]},{"teal":1410,"source":"contracts/TownHall.algo.ts:426","errorMessage":"Invalid state! Error, game should have moved to the next stage already.","pc":[2214]},{"teal":1411,"source":"contracts/TownHall.algo.ts:334","pc":[2215]},{"teal":1416,"source":"contracts/TownHall.algo.ts:429","pc":[2216,2217,2218]},{"teal":1417,"source":"contracts/TownHall.algo.ts:429","pc":[2219]},{"teal":1420,"source":"contracts/TownHall.algo.ts:429","pc":[2220,2221,2222]},{"teal":1421,"source":"contracts/TownHall.algo.ts:429","pc":[2223]},{"teal":1422,"source":"contracts/TownHall.algo.ts:429","pc":[2224]},{"teal":1426,"source":"contracts/TownHall.algo.ts:429","pc":[2225,2226,2227]},{"teal":1430,"source":"contracts/TownHall.algo.ts:430","pc":[2228]},{"teal":1431,"source":"contracts/TownHall.algo.ts:430","pc":[2229]},{"teal":1432,"source":"contracts/Constants.ts:19","pc":[2230,2231]},{"teal":1433,"source":"contracts/TownHall.algo.ts:430","pc":[2232]},{"teal":1436,"source":"contracts/TownHall.algo.ts:430","errorMessage":"Invalid method call: Game is not in Day Stage Vote state.","pc":[2233]},{"teal":1440,"source":"contracts/TownHall.algo.ts:432","pc":[2234,2235]},{"teal":1441,"source":"contracts/TownHall.algo.ts:432","pc":[2236]},{"teal":1442,"source":"contracts/TownHall.algo.ts:432","pc":[2237]},{"teal":1443,"source":"contracts/TownHall.algo.ts:432","pc":[2238]},{"teal":1444,"source":"contracts/TownHall.algo.ts:432","pc":[2239,2240,2241]},{"teal":1445,"source":"contracts/TownHall.algo.ts:432","pc":[2242,2243]},{"teal":1446,"source":"contracts/TownHall.algo.ts:432","pc":[2244,2245]},{"teal":1447,"source":"contracts/TownHall.algo.ts:432","pc":[2246]},{"teal":1448,"source":"contracts/TownHall.algo.ts:432","pc":[2247]},{"teal":1452,"source":"contracts/TownHall.algo.ts:432","errorMessage":"Invalid vote: Vote must be int 1 <= n <= 6.","pc":[2248]},{"teal":1464,"source":"contracts/TownHall.algo.ts:436","pc":[2249,2250]},{"teal":1465,"source":"contracts/TownHall.algo.ts:436","pc":[2251]},{"teal":1466,"source":"contracts/TownHall.algo.ts:436","pc":[2252]},{"teal":1467,"source":"contracts/TownHall.algo.ts:436","pc":[2253,2254,2255]},{"teal":1468,"source":"contracts/TownHall.algo.ts:436","pc":[2256]},{"teal":1469,"source":"contracts/TownHall.algo.ts:436","pc":[2257]},{"teal":1470,"source":"contracts/TownHall.algo.ts:436","pc":[2258,2259,2260]},{"teal":1471,"source":"contracts/TownHall.algo.ts:437","pc":[2261,2262]},{"teal":1472,"source":"contracts/TownHall.algo.ts:437","pc":[2263]},{"teal":1473,"source":"contracts/TownHall.algo.ts:437","pc":[2264]},{"teal":1474,"source":"contracts/TownHall.algo.ts:437","pc":[2265,2266,2267]},{"teal":1475,"source":"contracts/TownHall.algo.ts:437","pc":[2268]},{"teal":1476,"source":"contracts/TownHall.algo.ts:436","pc":[2269]},{"teal":1479,"source":"contracts/TownHall.algo.ts:437","pc":[2270]},{"teal":1480,"source":"contracts/TownHall.algo.ts:437","pc":[2271,2272,2273]},{"teal":1481,"source":"contracts/TownHall.algo.ts:438","pc":[2274,2275]},{"teal":1482,"source":"contracts/TownHall.algo.ts:438","pc":[2276,2277]},{"teal":1483,"source":"contracts/TownHall.algo.ts:438","pc":[2278]},{"teal":1484,"source":"contracts/TownHall.algo.ts:438","pc":[2279,2280,2281]},{"teal":1485,"source":"contracts/TownHall.algo.ts:438","pc":[2282]},{"teal":1486,"source":"contracts/TownHall.algo.ts:437","pc":[2283]},{"teal":1489,"source":"contracts/TownHall.algo.ts:438","pc":[2284]},{"teal":1490,"source":"contracts/TownHall.algo.ts:438","pc":[2285,2286,2287]},{"teal":1491,"source":"contracts/TownHall.algo.ts:439","pc":[2288,2289]},{"teal":1492,"source":"contracts/TownHall.algo.ts:439","pc":[2290,2291]},{"teal":1493,"source":"contracts/TownHall.algo.ts:439","pc":[2292]},{"teal":1494,"source":"contracts/TownHall.algo.ts:439","pc":[2293,2294,2295]},{"teal":1495,"source":"contracts/TownHall.algo.ts:439","pc":[2296]},{"teal":1496,"source":"contracts/TownHall.algo.ts:438","pc":[2297]},{"teal":1499,"source":"contracts/TownHall.algo.ts:439","pc":[2298]},{"teal":1500,"source":"contracts/TownHall.algo.ts:439","pc":[2299,2300,2301]},{"teal":1501,"source":"contracts/TownHall.algo.ts:440","pc":[2302,2303]},{"teal":1502,"source":"contracts/TownHall.algo.ts:440","pc":[2304,2305]},{"teal":1503,"source":"contracts/TownHall.algo.ts:440","pc":[2306]},{"teal":1504,"source":"contracts/TownHall.algo.ts:440","pc":[2307,2308,2309]},{"teal":1505,"source":"contracts/TownHall.algo.ts:440","pc":[2310]},{"teal":1506,"source":"contracts/TownHall.algo.ts:439","pc":[2311]},{"teal":1509,"source":"contracts/TownHall.algo.ts:440","pc":[2312]},{"teal":1510,"source":"contracts/TownHall.algo.ts:440","pc":[2313,2314,2315]},{"teal":1511,"source":"contracts/TownHall.algo.ts:441","pc":[2316,2317]},{"teal":1512,"source":"contracts/TownHall.algo.ts:441","pc":[2318,2319]},{"teal":1513,"source":"contracts/TownHall.algo.ts:441","pc":[2320]},{"teal":1514,"source":"contracts/TownHall.algo.ts:441","pc":[2321,2322,2323]},{"teal":1515,"source":"contracts/TownHall.algo.ts:441","pc":[2324]},{"teal":1516,"source":"contracts/TownHall.algo.ts:440","pc":[2325]},{"teal":1519,"source":"contracts/TownHall.algo.ts:435","pc":[2326]},{"teal":1520,"source":"contracts/TownHall.algo.ts:434","pc":[2327,2328,2329]},{"teal":1524,"source":"contracts/TownHall.algo.ts:444","errorMessage":"Illegal call: Address sender not allowed to vote.","pc":[2330]},{"teal":1530,"source":"contracts/TownHall.algo.ts:447","pc":[2331,2332]},{"teal":1531,"source":"contracts/TownHall.algo.ts:447","pc":[2333]},{"teal":1532,"source":"contracts/TownHall.algo.ts:447","pc":[2334]},{"teal":1533,"source":"contracts/TownHall.algo.ts:447","pc":[2335]},{"teal":1534,"source":"contracts/TownHall.algo.ts:447","pc":[2336,2337,2338]},{"teal":1535,"source":"contracts/TownHall.algo.ts:447","pc":[2339]},{"teal":1536,"source":"contracts/TownHall.algo.ts:447","pc":[2340]},{"teal":1537,"source":"contracts/TownHall.algo.ts:447","pc":[2341,2342,2343]},{"teal":1538,"source":"contracts/TownHall.algo.ts:447","pc":[2344,2345]},{"teal":1539,"source":"contracts/TownHall.algo.ts:447","pc":[2346]},{"teal":1540,"source":"contracts/TownHall.algo.ts:447","pc":[2347]},{"teal":1543,"source":"contracts/TownHall.algo.ts:447","pc":[2348,2349,2350]},{"teal":1548,"source":"contracts/TownHall.algo.ts:448","pc":[2351,2352]},{"teal":1549,"source":"contracts/TownHall.algo.ts:448","pc":[2353]},{"teal":1550,"source":"contracts/TownHall.algo.ts:448","pc":[2354]},{"teal":1551,"source":"contracts/TownHall.algo.ts:448","pc":[2355]},{"teal":1552,"source":"contracts/TownHall.algo.ts:448","pc":[2356,2357]},{"teal":1553,"source":"contracts/TownHall.algo.ts:448","pc":[2358]},{"teal":1554,"source":"contracts/TownHall.algo.ts:448","pc":[2359]},{"teal":1555,"source":"contracts/TownHall.algo.ts:447","pc":[2360,2361,2362]},{"teal":1560,"source":"contracts/TownHall.algo.ts:449","pc":[2363,2364]},{"teal":1561,"source":"contracts/TownHall.algo.ts:449","pc":[2365]},{"teal":1562,"source":"contracts/TownHall.algo.ts:449","pc":[2366]},{"teal":1563,"source":"contracts/TownHall.algo.ts:449","pc":[2367]},{"teal":1564,"source":"contracts/TownHall.algo.ts:449","pc":[2368,2369,2370]},{"teal":1565,"source":"contracts/TownHall.algo.ts:449","pc":[2371]},{"teal":1566,"source":"contracts/TownHall.algo.ts:449","pc":[2372]},{"teal":1567,"source":"contracts/TownHall.algo.ts:449","pc":[2373,2374,2375]},{"teal":1568,"source":"contracts/TownHall.algo.ts:449","pc":[2376,2377]},{"teal":1569,"source":"contracts/TownHall.algo.ts:449","pc":[2378]},{"teal":1570,"source":"contracts/TownHall.algo.ts:449","pc":[2379]},{"teal":1573,"source":"contracts/TownHall.algo.ts:449","pc":[2380,2381,2382]},{"teal":1578,"source":"contracts/TownHall.algo.ts:450","pc":[2383,2384]},{"teal":1579,"source":"contracts/TownHall.algo.ts:450","pc":[2385]},{"teal":1580,"source":"contracts/TownHall.algo.ts:450","pc":[2386]},{"teal":1581,"source":"contracts/TownHall.algo.ts:450","pc":[2387]},{"teal":1582,"source":"contracts/TownHall.algo.ts:450","pc":[2388,2389]},{"teal":1583,"source":"contracts/TownHall.algo.ts:450","pc":[2390]},{"teal":1584,"source":"contracts/TownHall.algo.ts:450","pc":[2391]},{"teal":1585,"source":"contracts/TownHall.algo.ts:449","pc":[2392,2393,2394]},{"teal":1590,"source":"contracts/TownHall.algo.ts:451","pc":[2395,2396]},{"teal":1591,"source":"contracts/TownHall.algo.ts:451","pc":[2397,2398]},{"teal":1592,"source":"contracts/TownHall.algo.ts:451","pc":[2399]},{"teal":1593,"source":"contracts/TownHall.algo.ts:451","pc":[2400]},{"teal":1594,"source":"contracts/TownHall.algo.ts:451","pc":[2401,2402,2403]},{"teal":1595,"source":"contracts/TownHall.algo.ts:451","pc":[2404,2405]},{"teal":1596,"source":"contracts/TownHall.algo.ts:451","pc":[2406]},{"teal":1597,"source":"contracts/TownHall.algo.ts:451","pc":[2407,2408,2409]},{"teal":1598,"source":"contracts/TownHall.algo.ts:451","pc":[2410,2411]},{"teal":1599,"source":"contracts/TownHall.algo.ts:451","pc":[2412]},{"teal":1600,"source":"contracts/TownHall.algo.ts:451","pc":[2413]},{"teal":1603,"source":"contracts/TownHall.algo.ts:451","pc":[2414,2415,2416]},{"teal":1608,"source":"contracts/TownHall.algo.ts:452","pc":[2417,2418]},{"teal":1609,"source":"contracts/TownHall.algo.ts:452","pc":[2419]},{"teal":1610,"source":"contracts/TownHall.algo.ts:452","pc":[2420]},{"teal":1611,"source":"contracts/TownHall.algo.ts:452","pc":[2421]},{"teal":1612,"source":"contracts/TownHall.algo.ts:452","pc":[2422,2423]},{"teal":1613,"source":"contracts/TownHall.algo.ts:452","pc":[2424]},{"teal":1614,"source":"contracts/TownHall.algo.ts:452","pc":[2425]},{"teal":1615,"source":"contracts/TownHall.algo.ts:451","pc":[2426,2427,2428]},{"teal":1620,"source":"contracts/TownHall.algo.ts:453","pc":[2429,2430]},{"teal":1621,"source":"contracts/TownHall.algo.ts:453","pc":[2431,2432]},{"teal":1622,"source":"contracts/TownHall.algo.ts:453","pc":[2433]},{"teal":1623,"source":"contracts/TownHall.algo.ts:453","pc":[2434]},{"teal":1624,"source":"contracts/TownHall.algo.ts:453","pc":[2435,2436,2437]},{"teal":1625,"source":"contracts/TownHall.algo.ts:453","pc":[2438,2439]},{"teal":1626,"source":"contracts/TownHall.algo.ts:453","pc":[2440]},{"teal":1627,"source":"contracts/TownHall.algo.ts:453","pc":[2441,2442,2443]},{"teal":1628,"source":"contracts/TownHall.algo.ts:453","pc":[2444,2445]},{"teal":1629,"source":"contracts/TownHall.algo.ts:453","pc":[2446]},{"teal":1630,"source":"contracts/TownHall.algo.ts:453","pc":[2447]},{"teal":1633,"source":"contracts/TownHall.algo.ts:453","pc":[2448,2449,2450]},{"teal":1638,"source":"contracts/TownHall.algo.ts:454","pc":[2451,2452]},{"teal":1639,"source":"contracts/TownHall.algo.ts:454","pc":[2453]},{"teal":1640,"source":"contracts/TownHall.algo.ts:454","pc":[2454]},{"teal":1641,"source":"contracts/TownHall.algo.ts:454","pc":[2455]},{"teal":1642,"source":"contracts/TownHall.algo.ts:454","pc":[2456,2457]},{"teal":1643,"source":"contracts/TownHall.algo.ts:454","pc":[2458]},{"teal":1644,"source":"contracts/TownHall.algo.ts:454","pc":[2459]},{"teal":1645,"source":"contracts/TownHall.algo.ts:453","pc":[2460,2461,2462]},{"teal":1650,"source":"contracts/TownHall.algo.ts:455","pc":[2463,2464]},{"teal":1651,"source":"contracts/TownHall.algo.ts:455","pc":[2465,2466]},{"teal":1652,"source":"contracts/TownHall.algo.ts:455","pc":[2467]},{"teal":1653,"source":"contracts/TownHall.algo.ts:455","pc":[2468]},{"teal":1654,"source":"contracts/TownHall.algo.ts:455","pc":[2469,2470,2471]},{"teal":1655,"source":"contracts/TownHall.algo.ts:455","pc":[2472,2473]},{"teal":1656,"source":"contracts/TownHall.algo.ts:455","pc":[2474]},{"teal":1657,"source":"contracts/TownHall.algo.ts:455","pc":[2475,2476,2477]},{"teal":1658,"source":"contracts/TownHall.algo.ts:455","pc":[2478,2479]},{"teal":1659,"source":"contracts/TownHall.algo.ts:455","pc":[2480]},{"teal":1660,"source":"contracts/TownHall.algo.ts:455","pc":[2481]},{"teal":1663,"source":"contracts/TownHall.algo.ts:455","pc":[2482,2483,2484]},{"teal":1668,"source":"contracts/TownHall.algo.ts:456","pc":[2485,2486]},{"teal":1669,"source":"contracts/TownHall.algo.ts:456","pc":[2487]},{"teal":1670,"source":"contracts/TownHall.algo.ts:456","pc":[2488]},{"teal":1671,"source":"contracts/TownHall.algo.ts:456","pc":[2489]},{"teal":1672,"source":"contracts/TownHall.algo.ts:456","pc":[2490,2491]},{"teal":1673,"source":"contracts/TownHall.algo.ts:456","pc":[2492]},{"teal":1674,"source":"contracts/TownHall.algo.ts:456","pc":[2493]},{"teal":1675,"source":"contracts/TownHall.algo.ts:455","pc":[2494,2495,2496]},{"teal":1680,"source":"contracts/TownHall.algo.ts:457","pc":[2497,2498]},{"teal":1681,"source":"contracts/TownHall.algo.ts:457","pc":[2499]},{"teal":1682,"source":"contracts/TownHall.algo.ts:457","pc":[2500]},{"teal":1683,"source":"contracts/TownHall.algo.ts:457","pc":[2501]},{"teal":1684,"source":"contracts/TownHall.algo.ts:457","pc":[2502,2503,2504]},{"teal":1685,"source":"contracts/TownHall.algo.ts:457","pc":[2505,2506]},{"teal":1686,"source":"contracts/TownHall.algo.ts:457","pc":[2507]},{"teal":1687,"source":"contracts/TownHall.algo.ts:457","pc":[2508,2509,2510]},{"teal":1688,"source":"contracts/TownHall.algo.ts:457","pc":[2511,2512]},{"teal":1689,"source":"contracts/TownHall.algo.ts:457","pc":[2513]},{"teal":1690,"source":"contracts/TownHall.algo.ts:457","pc":[2514]},{"teal":1693,"source":"contracts/TownHall.algo.ts:457","pc":[2515,2516,2517]},{"teal":1698,"source":"contracts/TownHall.algo.ts:458","pc":[2518,2519]},{"teal":1699,"source":"contracts/TownHall.algo.ts:458","pc":[2520]},{"teal":1700,"source":"contracts/TownHall.algo.ts:458","pc":[2521]},{"teal":1701,"source":"contracts/TownHall.algo.ts:458","pc":[2522]},{"teal":1702,"source":"contracts/TownHall.algo.ts:458","pc":[2523,2524]},{"teal":1703,"source":"contracts/TownHall.algo.ts:458","pc":[2525]},{"teal":1704,"source":"contracts/TownHall.algo.ts:458","pc":[2526]},{"teal":1705,"source":"contracts/TownHall.algo.ts:457","pc":[2527,2528,2529]},{"teal":1709,"source":"contracts/TownHall.algo.ts:460","errorMessage":"Invalid vote: Is player still alive?","pc":[2530]},{"teal":1715,"source":"contracts/TownHall.algo.ts:463","pc":[2531,2532]},{"teal":1716,"source":"contracts/TownHall.algo.ts:463","pc":[2533]},{"teal":1717,"source":"contracts/TownHall.algo.ts:463","pc":[2534]},{"teal":1718,"source":"contracts/TownHall.algo.ts:463","pc":[2535,2536,2537]},{"teal":1719,"source":"contracts/TownHall.algo.ts:463","pc":[2538]},{"teal":1720,"source":"contracts/TownHall.algo.ts:463","pc":[2539]},{"teal":1721,"source":"contracts/TownHall.algo.ts:463","pc":[2540,2541,2542]},{"teal":1722,"source":"contracts/TownHall.algo.ts:463","pc":[2543,2544]},{"teal":1723,"source":"contracts/TownHall.algo.ts:463","pc":[2545]},{"teal":1724,"source":"contracts/TownHall.algo.ts:463","pc":[2546]},{"teal":1725,"source":"contracts/TownHall.algo.ts:463","pc":[2547]},{"teal":1726,"source":"contracts/TownHall.algo.ts:463","pc":[2548]},{"teal":1729,"source":"contracts/TownHall.algo.ts:463","pc":[2549,2550,2551]},{"teal":1734,"source":"contracts/TownHall.algo.ts:464","pc":[2552,2553]},{"teal":1735,"source":"contracts/TownHall.algo.ts:464","pc":[2554]},{"teal":1736,"source":"contracts/TownHall.algo.ts:464","pc":[2555]},{"teal":1737,"source":"contracts/TownHall.algo.ts:463","pc":[2556,2557,2558]},{"teal":1742,"source":"contracts/TownHall.algo.ts:465","pc":[2559,2560]},{"teal":1743,"source":"contracts/TownHall.algo.ts:465","pc":[2561]},{"teal":1744,"source":"contracts/TownHall.algo.ts:465","pc":[2562]},{"teal":1745,"source":"contracts/TownHall.algo.ts:465","pc":[2563,2564,2565]},{"teal":1746,"source":"contracts/TownHall.algo.ts:465","pc":[2566]},{"teal":1747,"source":"contracts/TownHall.algo.ts:465","pc":[2567]},{"teal":1748,"source":"contracts/TownHall.algo.ts:465","pc":[2568,2569,2570]},{"teal":1749,"source":"contracts/TownHall.algo.ts:465","pc":[2571,2572]},{"teal":1750,"source":"contracts/TownHall.algo.ts:465","pc":[2573]},{"teal":1751,"source":"contracts/TownHall.algo.ts:465","pc":[2574]},{"teal":1752,"source":"contracts/TownHall.algo.ts:465","pc":[2575]},{"teal":1753,"source":"contracts/TownHall.algo.ts:465","pc":[2576]},{"teal":1756,"source":"contracts/TownHall.algo.ts:465","pc":[2577,2578,2579]},{"teal":1761,"source":"contracts/TownHall.algo.ts:466","pc":[2580,2581]},{"teal":1762,"source":"contracts/TownHall.algo.ts:466","pc":[2582]},{"teal":1763,"source":"contracts/TownHall.algo.ts:466","pc":[2583]},{"teal":1764,"source":"contracts/TownHall.algo.ts:465","pc":[2584,2585,2586]},{"teal":1769,"source":"contracts/TownHall.algo.ts:467","pc":[2587,2588]},{"teal":1770,"source":"contracts/TownHall.algo.ts:467","pc":[2589,2590]},{"teal":1771,"source":"contracts/TownHall.algo.ts:467","pc":[2591]},{"teal":1772,"source":"contracts/TownHall.algo.ts:467","pc":[2592,2593,2594]},{"teal":1773,"source":"contracts/TownHall.algo.ts:467","pc":[2595]},{"teal":1774,"source":"contracts/TownHall.algo.ts:467","pc":[2596]},{"teal":1775,"source":"contracts/TownHall.algo.ts:467","pc":[2597,2598,2599]},{"teal":1776,"source":"contracts/TownHall.algo.ts:467","pc":[2600,2601]},{"teal":1777,"source":"contracts/TownHall.algo.ts:467","pc":[2602]},{"teal":1778,"source":"contracts/TownHall.algo.ts:467","pc":[2603]},{"teal":1779,"source":"contracts/TownHall.algo.ts:467","pc":[2604]},{"teal":1780,"source":"contracts/TownHall.algo.ts:467","pc":[2605]},{"teal":1783,"source":"contracts/TownHall.algo.ts:467","pc":[2606,2607,2608]},{"teal":1788,"source":"contracts/TownHall.algo.ts:468","pc":[2609,2610]},{"teal":1789,"source":"contracts/TownHall.algo.ts:468","pc":[2611]},{"teal":1790,"source":"contracts/TownHall.algo.ts:468","pc":[2612]},{"teal":1791,"source":"contracts/TownHall.algo.ts:467","pc":[2613,2614,2615]},{"teal":1796,"source":"contracts/TownHall.algo.ts:469","pc":[2616,2617]},{"teal":1797,"source":"contracts/TownHall.algo.ts:469","pc":[2618,2619]},{"teal":1798,"source":"contracts/TownHall.algo.ts:469","pc":[2620]},{"teal":1799,"source":"contracts/TownHall.algo.ts:469","pc":[2621,2622,2623]},{"teal":1800,"source":"contracts/TownHall.algo.ts:469","pc":[2624]},{"teal":1801,"source":"contracts/TownHall.algo.ts:469","pc":[2625]},{"teal":1802,"source":"contracts/TownHall.algo.ts:469","pc":[2626,2627,2628]},{"teal":1803,"source":"contracts/TownHall.algo.ts:469","pc":[2629,2630]},{"teal":1804,"source":"contracts/TownHall.algo.ts:469","pc":[2631]},{"teal":1805,"source":"contracts/TownHall.algo.ts:469","pc":[2632]},{"teal":1806,"source":"contracts/TownHall.algo.ts:469","pc":[2633]},{"teal":1807,"source":"contracts/TownHall.algo.ts:469","pc":[2634]},{"teal":1810,"source":"contracts/TownHall.algo.ts:469","pc":[2635,2636,2637]},{"teal":1815,"source":"contracts/TownHall.algo.ts:470","pc":[2638,2639]},{"teal":1816,"source":"contracts/TownHall.algo.ts:470","pc":[2640]},{"teal":1817,"source":"contracts/TownHall.algo.ts:470","pc":[2641]},{"teal":1818,"source":"contracts/TownHall.algo.ts:469","pc":[2642,2643,2644]},{"teal":1823,"source":"contracts/TownHall.algo.ts:471","pc":[2645,2646]},{"teal":1824,"source":"contracts/TownHall.algo.ts:471","pc":[2647,2648]},{"teal":1825,"source":"contracts/TownHall.algo.ts:471","pc":[2649]},{"teal":1826,"source":"contracts/TownHall.algo.ts:471","pc":[2650,2651,2652]},{"teal":1827,"source":"contracts/TownHall.algo.ts:471","pc":[2653]},{"teal":1828,"source":"contracts/TownHall.algo.ts:471","pc":[2654]},{"teal":1829,"source":"contracts/TownHall.algo.ts:471","pc":[2655,2656,2657]},{"teal":1830,"source":"contracts/TownHall.algo.ts:471","pc":[2658,2659]},{"teal":1831,"source":"contracts/TownHall.algo.ts:471","pc":[2660]},{"teal":1832,"source":"contracts/TownHall.algo.ts:471","pc":[2661]},{"teal":1833,"source":"contracts/TownHall.algo.ts:471","pc":[2662]},{"teal":1834,"source":"contracts/TownHall.algo.ts:471","pc":[2663]},{"teal":1837,"source":"contracts/TownHall.algo.ts:471","pc":[2664,2665,2666]},{"teal":1842,"source":"contracts/TownHall.algo.ts:472","pc":[2667,2668]},{"teal":1843,"source":"contracts/TownHall.algo.ts:472","pc":[2669]},{"teal":1844,"source":"contracts/TownHall.algo.ts:472","pc":[2670]},{"teal":1845,"source":"contracts/TownHall.algo.ts:471","pc":[2671,2672,2673]},{"teal":1850,"source":"contracts/TownHall.algo.ts:473","pc":[2674,2675]},{"teal":1851,"source":"contracts/TownHall.algo.ts:473","pc":[2676,2677]},{"teal":1852,"source":"contracts/TownHall.algo.ts:473","pc":[2678]},{"teal":1853,"source":"contracts/TownHall.algo.ts:473","pc":[2679,2680,2681]},{"teal":1854,"source":"contracts/TownHall.algo.ts:473","pc":[2682]},{"teal":1855,"source":"contracts/TownHall.algo.ts:473","pc":[2683]},{"teal":1856,"source":"contracts/TownHall.algo.ts:473","pc":[2684,2685,2686]},{"teal":1857,"source":"contracts/TownHall.algo.ts:473","pc":[2687,2688]},{"teal":1858,"source":"contracts/TownHall.algo.ts:473","pc":[2689]},{"teal":1859,"source":"contracts/TownHall.algo.ts:473","pc":[2690]},{"teal":1860,"source":"contracts/TownHall.algo.ts:473","pc":[2691]},{"teal":1861,"source":"contracts/TownHall.algo.ts:473","pc":[2692]},{"teal":1864,"source":"contracts/TownHall.algo.ts:473","pc":[2693,2694,2695]},{"teal":1869,"source":"contracts/TownHall.algo.ts:474","pc":[2696,2697]},{"teal":1870,"source":"contracts/TownHall.algo.ts:474","pc":[2698]},{"teal":1871,"source":"contracts/TownHall.algo.ts:474","pc":[2699]},{"teal":1872,"source":"contracts/TownHall.algo.ts:473","pc":[2700,2701,2702]},{"teal":1876,"source":"contracts/TownHall.algo.ts:476","errorMessage":"Address not allowed to vote.","pc":[2703]},{"teal":1881,"source":"contracts/TownHall.algo.ts:479","pc":[2704,2705]},{"teal":1882,"source":"contracts/TownHall.algo.ts:479","pc":[2706]},{"teal":1883,"source":"contracts/TownHall.algo.ts:479","pc":[2707]},{"teal":1884,"source":"contracts/TownHall.algo.ts:479","pc":[2708]},{"teal":1885,"source":"contracts/TownHall.algo.ts:479","pc":[2709,2710]},{"teal":1886,"source":"contracts/TownHall.algo.ts:479","pc":[2711]},{"teal":1887,"source":"contracts/TownHall.algo.ts:479","pc":[2712]},{"teal":1892,"source":"contracts/TownHall.algo.ts:481","pc":[2713,2714]},{"teal":1893,"source":"contracts/TownHall.algo.ts:481","pc":[2715]},{"teal":1894,"source":"contracts/TownHall.algo.ts:481","pc":[2716,2717]},{"teal":1895,"source":"contracts/TownHall.algo.ts:481","pc":[2718]},{"teal":1896,"source":"contracts/TownHall.algo.ts:481","pc":[2719]},{"teal":1897,"source":"contracts/TownHall.algo.ts:481","pc":[2720,2721,2722]},{"teal":1902,"source":"contracts/TownHall.algo.ts:483","pc":[2723]},{"teal":1903,"source":"contracts/Constants.ts:20","pc":[2724,2725]},{"teal":1904,"source":"contracts/TownHall.algo.ts:483","pc":[2726]},{"teal":1908,"source":"contracts/TownHall.algo.ts:486","pc":[2727,2728]},{"teal":1909,"source":"contracts/TownHall.algo.ts:486","pc":[2729]},{"teal":1910,"source":"contracts/TownHall.algo.ts:486","pc":[2730]},{"teal":1914,"source":"contracts/TownHall.algo.ts:487","pc":[2731,2732]},{"teal":1915,"source":"contracts/TownHall.algo.ts:487","pc":[2733]},{"teal":1916,"source":"contracts/TownHall.algo.ts:487","pc":[2734]},{"teal":1920,"source":"contracts/TownHall.algo.ts:488","pc":[2735,2736]},{"teal":1921,"source":"contracts/TownHall.algo.ts:488","pc":[2737]},{"teal":1922,"source":"contracts/TownHall.algo.ts:488","pc":[2738]},{"teal":1926,"source":"contracts/TownHall.algo.ts:489","pc":[2739,2740]},{"teal":1927,"source":"contracts/TownHall.algo.ts:489","pc":[2741]},{"teal":1928,"source":"contracts/TownHall.algo.ts:489","pc":[2742]},{"teal":1932,"source":"contracts/TownHall.algo.ts:490","pc":[2743,2744]},{"teal":1933,"source":"contracts/TownHall.algo.ts:490","pc":[2745]},{"teal":1934,"source":"contracts/TownHall.algo.ts:490","pc":[2746]},{"teal":1938,"source":"contracts/TownHall.algo.ts:491","pc":[2747,2748]},{"teal":1939,"source":"contracts/TownHall.algo.ts:491","pc":[2749]},{"teal":1940,"source":"contracts/TownHall.algo.ts:491","pc":[2750]},{"teal":1944,"source":"contracts/TownHall.algo.ts:492","pc":[2751,2752]},{"teal":1945,"source":"contracts/TownHall.algo.ts:492","pc":[2753]},{"teal":1946,"source":"contracts/TownHall.algo.ts:492","pc":[2754]},{"teal":1949,"source":"contracts/TownHall.algo.ts:429","pc":[2755]},{"teal":1954,"source":"contracts/TownHall.algo.ts:498","pc":[2756,2757,2758]},{"teal":1955,"source":"contracts/TownHall.algo.ts:498","pc":[2759]},{"teal":1956,"source":"contracts/TownHall.algo.ts:498","pc":[2760]},{"teal":1960,"source":"contracts/TownHall.algo.ts:498","pc":[2761,2762,2763]},{"teal":1963,"source":"contracts/TownHall.algo.ts:498","pc":[2764,2765]},{"teal":1964,"source":"contracts/TownHall.algo.ts:498","pc":[2766]},{"teal":1971,"source":"contracts/TownHall.algo.ts:500","pc":[2767]},{"teal":1972,"source":"contracts/TownHall.algo.ts:500","pc":[2768]},{"teal":1973,"source":"contracts/Constants.ts:20","pc":[2769,2770]},{"teal":1974,"source":"contracts/TownHall.algo.ts:500","pc":[2771]},{"teal":1977,"source":"contracts/TownHall.algo.ts:499","errorMessage":"Invalid method call: Game is not in Day Stage Eliminate state.","pc":[2772]},{"teal":1981,"source":"contracts/TownHall.algo.ts:504","pc":[2773]},{"teal":1982,"source":"contracts/TownHall.algo.ts:504","pc":[2774,2775]},{"teal":1983,"source":"contracts/TownHall.algo.ts:504","pc":[2776]},{"teal":1987,"source":"contracts/TownHall.algo.ts:505","pc":[2777]},{"teal":1988,"source":"contracts/TownHall.algo.ts:505","pc":[2778,2779]},{"teal":1992,"source":"contracts/TownHall.algo.ts:511","pc":[2780,2781]},{"teal":1993,"source":"contracts/TownHall.algo.ts:511","pc":[2782]},{"teal":1994,"source":"contracts/TownHall.algo.ts:511","pc":[2783]},{"teal":1995,"source":"contracts/TownHall.algo.ts:511","pc":[2784]},{"teal":1996,"source":"contracts/TownHall.algo.ts:511","pc":[2785]},{"teal":1997,"source":"contracts/TownHall.algo.ts:511","pc":[2786,2787]},{"teal":2002,"source":"contracts/TownHall.algo.ts:513","pc":[2788,2789]},{"teal":2003,"source":"contracts/TownHall.algo.ts:513","pc":[2790]},{"teal":2004,"source":"contracts/TownHall.algo.ts:513","pc":[2791,2792]},{"teal":2005,"source":"contracts/TownHall.algo.ts:513","pc":[2793]},{"teal":2006,"source":"contracts/TownHall.algo.ts:513","pc":[2794]},{"teal":2007,"source":"contracts/TownHall.algo.ts:513","pc":[2795,2796,2797]},{"teal":2008,"source":"contracts/TownHall.algo.ts:513","pc":[2798,2799]},{"teal":2009,"source":"contracts/TownHall.algo.ts:513","pc":[2800]},{"teal":2010,"source":"contracts/TownHall.algo.ts:513","pc":[2801,2802]},{"teal":2011,"source":"contracts/TownHall.algo.ts:513","pc":[2803]},{"teal":2012,"source":"contracts/TownHall.algo.ts:513","pc":[2804]},{"teal":2013,"source":"contracts/TownHall.algo.ts:513","pc":[2805,2806,2807]},{"teal":2014,"source":"contracts/TownHall.algo.ts:513","pc":[2808,2809]},{"teal":2015,"source":"contracts/TownHall.algo.ts:513","pc":[2810]},{"teal":2018,"source":"contracts/TownHall.algo.ts:513","pc":[2811]},{"teal":2021,"source":"contracts/TownHall.algo.ts:513","pc":[2812,2813,2814]},{"teal":2026,"source":"contracts/TownHall.algo.ts:514","pc":[2815]},{"teal":2027,"source":"contracts/TownHall.algo.ts:514","pc":[2816]},{"teal":2028,"source":"contracts/TownHall.algo.ts:514","pc":[2817]},{"teal":2029,"source":"contracts/TownHall.algo.ts:514","pc":[2818,2819,2820]},{"teal":2030,"source":"contracts/TownHall.algo.ts:514","pc":[2821]},{"teal":2034,"source":"contracts/TownHall.algo.ts:515","pc":[2822,2823]},{"teal":2035,"source":"contracts/TownHall.algo.ts:515","pc":[2824]},{"teal":2036,"source":"contracts/TownHall.algo.ts:515","pc":[2825,2826]},{"teal":2042,"source":"contracts/TownHall.algo.ts:518","pc":[2827,2828]},{"teal":2043,"source":"contracts/TownHall.algo.ts:518","pc":[2829]},{"teal":2044,"source":"contracts/TownHall.algo.ts:518","pc":[2830,2831]},{"teal":2045,"source":"contracts/TownHall.algo.ts:518","pc":[2832]},{"teal":2046,"source":"contracts/TownHall.algo.ts:518","pc":[2833]},{"teal":2047,"source":"contracts/TownHall.algo.ts:518","pc":[2834,2835,2836]},{"teal":2048,"source":"contracts/TownHall.algo.ts:518","pc":[2837,2838]},{"teal":2049,"source":"contracts/TownHall.algo.ts:518","pc":[2839]},{"teal":2050,"source":"contracts/TownHall.algo.ts:518","pc":[2840,2841]},{"teal":2051,"source":"contracts/TownHall.algo.ts:518","pc":[2842]},{"teal":2052,"source":"contracts/TownHall.algo.ts:518","pc":[2843]},{"teal":2053,"source":"contracts/TownHall.algo.ts:518","pc":[2844,2845,2846]},{"teal":2054,"source":"contracts/TownHall.algo.ts:518","pc":[2847,2848]},{"teal":2055,"source":"contracts/TownHall.algo.ts:518","pc":[2849]},{"teal":2058,"source":"contracts/TownHall.algo.ts:518","pc":[2850]},{"teal":2061,"source":"contracts/TownHall.algo.ts:518","pc":[2851,2852,2853]},{"teal":2066,"source":"contracts/TownHall.algo.ts:519","pc":[2854]},{"teal":2067,"source":"contracts/TownHall.algo.ts:519","pc":[2855]},{"teal":2068,"source":"contracts/TownHall.algo.ts:519","pc":[2856]},{"teal":2069,"source":"contracts/TownHall.algo.ts:519","pc":[2857,2858,2859]},{"teal":2070,"source":"contracts/TownHall.algo.ts:519","pc":[2860]},{"teal":2074,"source":"contracts/TownHall.algo.ts:520","pc":[2861,2862]},{"teal":2075,"source":"contracts/TownHall.algo.ts:520","pc":[2863]},{"teal":2076,"source":"contracts/TownHall.algo.ts:520","pc":[2864,2865]},{"teal":2082,"source":"contracts/TownHall.algo.ts:523","pc":[2866,2867]},{"teal":2083,"source":"contracts/TownHall.algo.ts:523","pc":[2868]},{"teal":2084,"source":"contracts/TownHall.algo.ts:523","pc":[2869,2870]},{"teal":2085,"source":"contracts/TownHall.algo.ts:523","pc":[2871]},{"teal":2086,"source":"contracts/TownHall.algo.ts:523","pc":[2872]},{"teal":2087,"source":"contracts/TownHall.algo.ts:523","pc":[2873,2874,2875]},{"teal":2088,"source":"contracts/TownHall.algo.ts:523","pc":[2876,2877]},{"teal":2089,"source":"contracts/TownHall.algo.ts:523","pc":[2878]},{"teal":2090,"source":"contracts/TownHall.algo.ts:523","pc":[2879,2880]},{"teal":2091,"source":"contracts/TownHall.algo.ts:523","pc":[2881]},{"teal":2092,"source":"contracts/TownHall.algo.ts:523","pc":[2882]},{"teal":2093,"source":"contracts/TownHall.algo.ts:523","pc":[2883,2884,2885]},{"teal":2094,"source":"contracts/TownHall.algo.ts:523","pc":[2886,2887]},{"teal":2095,"source":"contracts/TownHall.algo.ts:523","pc":[2888]},{"teal":2098,"source":"contracts/TownHall.algo.ts:523","pc":[2889]},{"teal":2101,"source":"contracts/TownHall.algo.ts:523","pc":[2890,2891,2892]},{"teal":2106,"source":"contracts/TownHall.algo.ts:524","pc":[2893]},{"teal":2107,"source":"contracts/TownHall.algo.ts:524","pc":[2894,2895]},{"teal":2108,"source":"contracts/TownHall.algo.ts:524","pc":[2896]},{"teal":2109,"source":"contracts/TownHall.algo.ts:524","pc":[2897,2898,2899]},{"teal":2110,"source":"contracts/TownHall.algo.ts:524","pc":[2900]},{"teal":2114,"source":"contracts/TownHall.algo.ts:525","pc":[2901,2902]},{"teal":2115,"source":"contracts/TownHall.algo.ts:525","pc":[2903]},{"teal":2116,"source":"contracts/TownHall.algo.ts:525","pc":[2904,2905]},{"teal":2122,"source":"contracts/TownHall.algo.ts:528","pc":[2906,2907]},{"teal":2123,"source":"contracts/TownHall.algo.ts:528","pc":[2908]},{"teal":2124,"source":"contracts/TownHall.algo.ts:528","pc":[2909,2910]},{"teal":2125,"source":"contracts/TownHall.algo.ts:528","pc":[2911]},{"teal":2126,"source":"contracts/TownHall.algo.ts:528","pc":[2912]},{"teal":2127,"source":"contracts/TownHall.algo.ts:528","pc":[2913,2914,2915]},{"teal":2128,"source":"contracts/TownHall.algo.ts:528","pc":[2916,2917]},{"teal":2129,"source":"contracts/TownHall.algo.ts:528","pc":[2918]},{"teal":2130,"source":"contracts/TownHall.algo.ts:528","pc":[2919,2920]},{"teal":2131,"source":"contracts/TownHall.algo.ts:528","pc":[2921]},{"teal":2132,"source":"contracts/TownHall.algo.ts:528","pc":[2922]},{"teal":2133,"source":"contracts/TownHall.algo.ts:528","pc":[2923,2924,2925]},{"teal":2134,"source":"contracts/TownHall.algo.ts:528","pc":[2926,2927]},{"teal":2135,"source":"contracts/TownHall.algo.ts:528","pc":[2928]},{"teal":2138,"source":"contracts/TownHall.algo.ts:528","pc":[2929]},{"teal":2141,"source":"contracts/TownHall.algo.ts:528","pc":[2930,2931,2932]},{"teal":2146,"source":"contracts/TownHall.algo.ts:529","pc":[2933]},{"teal":2147,"source":"contracts/TownHall.algo.ts:529","pc":[2934,2935]},{"teal":2148,"source":"contracts/TownHall.algo.ts:529","pc":[2936]},{"teal":2149,"source":"contracts/TownHall.algo.ts:529","pc":[2937,2938,2939]},{"teal":2150,"source":"contracts/TownHall.algo.ts:529","pc":[2940]},{"teal":2154,"source":"contracts/TownHall.algo.ts:530","pc":[2941,2942]},{"teal":2155,"source":"contracts/TownHall.algo.ts:530","pc":[2943]},{"teal":2156,"source":"contracts/TownHall.algo.ts:530","pc":[2944,2945]},{"teal":2162,"source":"contracts/TownHall.algo.ts:533","pc":[2946,2947]},{"teal":2163,"source":"contracts/TownHall.algo.ts:533","pc":[2948]},{"teal":2164,"source":"contracts/TownHall.algo.ts:533","pc":[2949,2950]},{"teal":2165,"source":"contracts/TownHall.algo.ts:533","pc":[2951]},{"teal":2166,"source":"contracts/TownHall.algo.ts:533","pc":[2952]},{"teal":2167,"source":"contracts/TownHall.algo.ts:533","pc":[2953,2954,2955]},{"teal":2168,"source":"contracts/TownHall.algo.ts:533","pc":[2956,2957]},{"teal":2169,"source":"contracts/TownHall.algo.ts:533","pc":[2958]},{"teal":2170,"source":"contracts/TownHall.algo.ts:533","pc":[2959,2960]},{"teal":2171,"source":"contracts/TownHall.algo.ts:533","pc":[2961]},{"teal":2172,"source":"contracts/TownHall.algo.ts:533","pc":[2962]},{"teal":2173,"source":"contracts/TownHall.algo.ts:533","pc":[2963,2964,2965]},{"teal":2174,"source":"contracts/TownHall.algo.ts:533","pc":[2966,2967]},{"teal":2175,"source":"contracts/TownHall.algo.ts:533","pc":[2968]},{"teal":2178,"source":"contracts/TownHall.algo.ts:533","pc":[2969]},{"teal":2181,"source":"contracts/TownHall.algo.ts:533","pc":[2970,2971,2972]},{"teal":2186,"source":"contracts/TownHall.algo.ts:534","pc":[2973]},{"teal":2187,"source":"contracts/TownHall.algo.ts:534","pc":[2974,2975]},{"teal":2188,"source":"contracts/TownHall.algo.ts:534","pc":[2976]},{"teal":2189,"source":"contracts/TownHall.algo.ts:534","pc":[2977,2978,2979]},{"teal":2190,"source":"contracts/TownHall.algo.ts:534","pc":[2980]},{"teal":2194,"source":"contracts/TownHall.algo.ts:535","pc":[2981,2982]},{"teal":2195,"source":"contracts/TownHall.algo.ts:535","pc":[2983]},{"teal":2196,"source":"contracts/TownHall.algo.ts:535","pc":[2984,2985]},{"teal":2202,"source":"contracts/TownHall.algo.ts:538","pc":[2986,2987]},{"teal":2203,"source":"contracts/TownHall.algo.ts:538","pc":[2988]},{"teal":2204,"source":"contracts/TownHall.algo.ts:538","pc":[2989,2990]},{"teal":2205,"source":"contracts/TownHall.algo.ts:538","pc":[2991]},{"teal":2206,"source":"contracts/TownHall.algo.ts:538","pc":[2992]},{"teal":2207,"source":"contracts/TownHall.algo.ts:538","pc":[2993,2994,2995]},{"teal":2208,"source":"contracts/TownHall.algo.ts:538","pc":[2996,2997]},{"teal":2209,"source":"contracts/TownHall.algo.ts:538","pc":[2998]},{"teal":2210,"source":"contracts/TownHall.algo.ts:538","pc":[2999,3000]},{"teal":2211,"source":"contracts/TownHall.algo.ts:538","pc":[3001]},{"teal":2212,"source":"contracts/TownHall.algo.ts:538","pc":[3002]},{"teal":2213,"source":"contracts/TownHall.algo.ts:538","pc":[3003,3004,3005]},{"teal":2214,"source":"contracts/TownHall.algo.ts:538","pc":[3006,3007]},{"teal":2215,"source":"contracts/TownHall.algo.ts:538","pc":[3008]},{"teal":2218,"source":"contracts/TownHall.algo.ts:538","pc":[3009]},{"teal":2221,"source":"contracts/TownHall.algo.ts:538","pc":[3010,3011,3012]},{"teal":2226,"source":"contracts/TownHall.algo.ts:539","pc":[3013]},{"teal":2227,"source":"contracts/TownHall.algo.ts:539","pc":[3014,3015]},{"teal":2228,"source":"contracts/TownHall.algo.ts:539","pc":[3016]},{"teal":2229,"source":"contracts/TownHall.algo.ts:539","pc":[3017,3018,3019]},{"teal":2230,"source":"contracts/TownHall.algo.ts:539","pc":[3020]},{"teal":2234,"source":"contracts/TownHall.algo.ts:540","pc":[3021,3022]},{"teal":2235,"source":"contracts/TownHall.algo.ts:540","pc":[3023]},{"teal":2236,"source":"contracts/TownHall.algo.ts:540","pc":[3024,3025]},{"teal":2241,"source":"contracts/TownHall.algo.ts:543","pc":[3026]},{"teal":2242,"source":"contracts/TownHall.algo.ts:543","pc":[3027]},{"teal":2243,"source":"contracts/TownHall.algo.ts:543","pc":[3028,3029]},{"teal":2244,"source":"contracts/TownHall.algo.ts:543","pc":[3030]},{"teal":2247,"source":"contracts/TownHall.algo.ts:543","errorMessage":"Error state: Zero Address won vote!","pc":[3031]},{"teal":2251,"source":"contracts/TownHall.algo.ts:544","pc":[3032,3033]},{"teal":2252,"source":"contracts/TownHall.algo.ts:544","pc":[3034]},{"teal":2253,"source":"contracts/TownHall.algo.ts:544","pc":[3035]},{"teal":2256,"source":"contracts/TownHall.algo.ts:544","errorMessage":"Error state: No votes were cast!","pc":[3036]},{"teal":2261,"source":"contracts/TownHall.algo.ts:549","pc":[3037]},{"teal":2262,"source":"contracts/TownHall.algo.ts:549","pc":[3038]},{"teal":2263,"source":"contracts/TownHall.algo.ts:549","pc":[3039]},{"teal":2264,"source":"contracts/TownHall.algo.ts:549","pc":[3040]},{"teal":2265,"source":"contracts/TownHall.algo.ts:549","pc":[3041,3042,3043]},{"teal":2266,"source":"contracts/TownHall.algo.ts:549","pc":[3044]},{"teal":2267,"source":"contracts/TownHall.algo.ts:549","pc":[3045,3046,3047]},{"teal":2272,"source":"contracts/TownHall.algo.ts:550","pc":[3048]},{"teal":2273,"source":"contracts/TownHall.algo.ts:550","pc":[3049]},{"teal":2274,"source":"contracts/TownHall.algo.ts:550","pc":[3050,3051]},{"teal":2275,"source":"contracts/TownHall.algo.ts:550","pc":[3052,3053]},{"teal":2276,"source":"contracts/TownHall.algo.ts:550","pc":[3054]},{"teal":2277,"source":"contracts/TownHall.algo.ts:550","pc":[3055]},{"teal":2278,"source":"contracts/TownHall.algo.ts:550","pc":[3056]},{"teal":2284,"source":"contracts/TownHall.algo.ts:553","pc":[3057]},{"teal":2285,"source":"contracts/TownHall.algo.ts:553","pc":[3058]},{"teal":2286,"source":"contracts/TownHall.algo.ts:553","pc":[3059]},{"teal":2287,"source":"contracts/TownHall.algo.ts:553","pc":[3060]},{"teal":2288,"source":"contracts/TownHall.algo.ts:553","pc":[3061,3062,3063]},{"teal":2289,"source":"contracts/TownHall.algo.ts:553","pc":[3064]},{"teal":2290,"source":"contracts/TownHall.algo.ts:553","pc":[3065,3066,3067]},{"teal":2295,"source":"contracts/TownHall.algo.ts:554","pc":[3068]},{"teal":2296,"source":"contracts/TownHall.algo.ts:554","pc":[3069]},{"teal":2297,"source":"contracts/TownHall.algo.ts:554","pc":[3070,3071]},{"teal":2298,"source":"contracts/TownHall.algo.ts:554","pc":[3072,3073]},{"teal":2299,"source":"contracts/TownHall.algo.ts:554","pc":[3074]},{"teal":2300,"source":"contracts/TownHall.algo.ts:554","pc":[3075]},{"teal":2301,"source":"contracts/TownHall.algo.ts:554","pc":[3076]},{"teal":2307,"source":"contracts/TownHall.algo.ts:557","pc":[3077]},{"teal":2308,"source":"contracts/TownHall.algo.ts:557","pc":[3078]},{"teal":2309,"source":"contracts/TownHall.algo.ts:557","pc":[3079,3080]},{"teal":2310,"source":"contracts/TownHall.algo.ts:557","pc":[3081]},{"teal":2311,"source":"contracts/TownHall.algo.ts:557","pc":[3082,3083,3084]},{"teal":2312,"source":"contracts/TownHall.algo.ts:557","pc":[3085]},{"teal":2313,"source":"contracts/TownHall.algo.ts:557","pc":[3086,3087,3088]},{"teal":2318,"source":"contracts/TownHall.algo.ts:558","pc":[3089,3090]},{"teal":2319,"source":"contracts/TownHall.algo.ts:558","pc":[3091]},{"teal":2320,"source":"contracts/TownHall.algo.ts:558","pc":[3092,3093]},{"teal":2321,"source":"contracts/TownHall.algo.ts:558","pc":[3094,3095]},{"teal":2322,"source":"contracts/TownHall.algo.ts:558","pc":[3096,3097]},{"teal":2323,"source":"contracts/TownHall.algo.ts:558","pc":[3098]},{"teal":2324,"source":"contracts/TownHall.algo.ts:558","pc":[3099]},{"teal":2330,"source":"contracts/TownHall.algo.ts:561","pc":[3100]},{"teal":2331,"source":"contracts/TownHall.algo.ts:561","pc":[3101]},{"teal":2332,"source":"contracts/TownHall.algo.ts:561","pc":[3102,3103]},{"teal":2333,"source":"contracts/TownHall.algo.ts:561","pc":[3104]},{"teal":2334,"source":"contracts/TownHall.algo.ts:561","pc":[3105,3106,3107]},{"teal":2335,"source":"contracts/TownHall.algo.ts:561","pc":[3108]},{"teal":2336,"source":"contracts/TownHall.algo.ts:561","pc":[3109,3110,3111]},{"teal":2341,"source":"contracts/TownHall.algo.ts:562","pc":[3112,3113]},{"teal":2342,"source":"contracts/TownHall.algo.ts:562","pc":[3114]},{"teal":2343,"source":"contracts/TownHall.algo.ts:562","pc":[3115,3116]},{"teal":2344,"source":"contracts/TownHall.algo.ts:562","pc":[3117,3118]},{"teal":2345,"source":"contracts/TownHall.algo.ts:562","pc":[3119,3120]},{"teal":2346,"source":"contracts/TownHall.algo.ts:562","pc":[3121]},{"teal":2347,"source":"contracts/TownHall.algo.ts:562","pc":[3122]},{"teal":2353,"source":"contracts/TownHall.algo.ts:565","pc":[3123]},{"teal":2354,"source":"contracts/TownHall.algo.ts:565","pc":[3124]},{"teal":2355,"source":"contracts/TownHall.algo.ts:565","pc":[3125,3126]},{"teal":2356,"source":"contracts/TownHall.algo.ts:565","pc":[3127]},{"teal":2357,"source":"contracts/TownHall.algo.ts:565","pc":[3128,3129,3130]},{"teal":2358,"source":"contracts/TownHall.algo.ts:565","pc":[3131]},{"teal":2359,"source":"contracts/TownHall.algo.ts:565","pc":[3132,3133,3134]},{"teal":2364,"source":"contracts/TownHall.algo.ts:566","pc":[3135,3136]},{"teal":2365,"source":"contracts/TownHall.algo.ts:566","pc":[3137]},{"teal":2366,"source":"contracts/TownHall.algo.ts:566","pc":[3138,3139]},{"teal":2367,"source":"contracts/TownHall.algo.ts:566","pc":[3140,3141]},{"teal":2368,"source":"contracts/TownHall.algo.ts:566","pc":[3142,3143]},{"teal":2369,"source":"contracts/TownHall.algo.ts:566","pc":[3144]},{"teal":2370,"source":"contracts/TownHall.algo.ts:566","pc":[3145]},{"teal":2376,"source":"contracts/TownHall.algo.ts:569","pc":[3146]},{"teal":2377,"source":"contracts/TownHall.algo.ts:569","pc":[3147]},{"teal":2378,"source":"contracts/TownHall.algo.ts:569","pc":[3148,3149]},{"teal":2379,"source":"contracts/TownHall.algo.ts:569","pc":[3150]},{"teal":2380,"source":"contracts/TownHall.algo.ts:569","pc":[3151,3152,3153]},{"teal":2381,"source":"contracts/TownHall.algo.ts:569","pc":[3154]},{"teal":2382,"source":"contracts/TownHall.algo.ts:569","pc":[3155,3156,3157]},{"teal":2387,"source":"contracts/TownHall.algo.ts:570","pc":[3158,3159]},{"teal":2388,"source":"contracts/TownHall.algo.ts:570","pc":[3160]},{"teal":2389,"source":"contracts/TownHall.algo.ts:570","pc":[3161,3162]},{"teal":2390,"source":"contracts/TownHall.algo.ts:570","pc":[3163,3164]},{"teal":2391,"source":"contracts/TownHall.algo.ts:570","pc":[3165,3166]},{"teal":2392,"source":"contracts/TownHall.algo.ts:570","pc":[3167]},{"teal":2393,"source":"contracts/TownHall.algo.ts:570","pc":[3168]},{"teal":2398,"source":"contracts/TownHall.algo.ts:573","pc":[3169,3170]},{"teal":2399,"source":"contracts/TownHall.algo.ts:573","pc":[3171]},{"teal":2400,"source":"contracts/TownHall.algo.ts:573","pc":[3172]},{"teal":2401,"source":"contracts/TownHall.algo.ts:573","pc":[3173]},{"teal":2402,"source":"contracts/TownHall.algo.ts:573","pc":[3174,3175]},{"teal":2403,"source":"contracts/TownHall.algo.ts:573","pc":[3176]},{"teal":2404,"source":"contracts/TownHall.algo.ts:573","pc":[3177]},{"teal":2408,"source":"contracts/TownHall.algo.ts:577","pc":[3178,3179]},{"teal":2409,"source":"contracts/TownHall.algo.ts:577","pc":[3180]},{"teal":2410,"source":"contracts/TownHall.algo.ts:577","pc":[3181]},{"teal":2414,"source":"contracts/TownHall.algo.ts:578","pc":[3182,3183]},{"teal":2415,"source":"contracts/TownHall.algo.ts:578","pc":[3184]},{"teal":2416,"source":"contracts/TownHall.algo.ts:578","pc":[3185]},{"teal":2420,"source":"contracts/TownHall.algo.ts:579","pc":[3186,3187]},{"teal":2421,"source":"contracts/TownHall.algo.ts:579","pc":[3188]},{"teal":2422,"source":"contracts/TownHall.algo.ts:579","pc":[3189]},{"teal":2426,"source":"contracts/TownHall.algo.ts:580","pc":[3190,3191]},{"teal":2427,"source":"contracts/TownHall.algo.ts:580","pc":[3192]},{"teal":2428,"source":"contracts/TownHall.algo.ts:580","pc":[3193]},{"teal":2432,"source":"contracts/TownHall.algo.ts:581","pc":[3194,3195]},{"teal":2433,"source":"contracts/TownHall.algo.ts:581","pc":[3196]},{"teal":2434,"source":"contracts/TownHall.algo.ts:581","pc":[3197]},{"teal":2438,"source":"contracts/TownHall.algo.ts:582","pc":[3198,3199]},{"teal":2439,"source":"contracts/TownHall.algo.ts:582","pc":[3200]},{"teal":2440,"source":"contracts/TownHall.algo.ts:582","pc":[3201]},{"teal":2444,"source":"contracts/TownHall.algo.ts:584","pc":[3202]},{"teal":2445,"source":"contracts/Constants.ts:21","pc":[3203,3204]},{"teal":2446,"source":"contracts/TownHall.algo.ts:584","pc":[3205]},{"teal":2447,"source":"contracts/TownHall.algo.ts:498","pc":[3206]},{"teal":2452,"source":"contracts/TownHall.algo.ts:587","pc":[3207,3208,3209]},{"teal":2453,"source":"contracts/TownHall.algo.ts:587","pc":[3210,3211,3212]},{"teal":2456,"source":"contracts/TownHall.algo.ts:587","pc":[3213,3214,3215]},{"teal":2457,"source":"contracts/TownHall.algo.ts:587","pc":[3216]},{"teal":2458,"source":"contracts/TownHall.algo.ts:587","pc":[3217]},{"teal":2462,"source":"contracts/TownHall.algo.ts:587","pc":[3218,3219,3220]},{"teal":2465,"source":"contracts/TownHall.algo.ts:587","pc":[3221,3222]},{"teal":2466,"source":"contracts/TownHall.algo.ts:587","pc":[3223,3224]},{"teal":2473,"source":"contracts/TownHall.algo.ts:589","pc":[3225]},{"teal":2474,"source":"contracts/TownHall.algo.ts:589","pc":[3226]},{"teal":2475,"source":"contracts/Constants.ts:21","pc":[3227,3228]},{"teal":2476,"source":"contracts/TownHall.algo.ts:589","pc":[3229]},{"teal":2479,"source":"contracts/TownHall.algo.ts:588","errorMessage":"Invalid method call: Game is not in Day Stage Reveal state.","pc":[3230]},{"teal":2483,"source":"contracts/TownHall.algo.ts:593","pc":[3231]},{"teal":2484,"source":"contracts/TownHall.algo.ts:593","pc":[3232]},{"teal":2485,"source":"contracts/TownHall.algo.ts:593","pc":[3233,3234]},{"teal":2486,"source":"contracts/TownHall.algo.ts:593","pc":[3235]},{"teal":2489,"source":"contracts/TownHall.algo.ts:593","errorMessage":"Error state: Other player called method.","pc":[3236]},{"teal":2493,"source":"contracts/TownHall.algo.ts:596","pc":[3237,3238]},{"teal":2494,"source":"contracts/TownHall.algo.ts:596","pc":[3239,3240]},{"teal":2495,"source":"contracts/TownHall.algo.ts:596","pc":[3241,3242]},{"teal":2496,"source":"contracts/TownHall.algo.ts:596","pc":[3243,3244]},{"teal":2500,"source":"contracts/TownHall.algo.ts:597","pc":[3245,3246]},{"teal":2501,"source":"contracts/TownHall.algo.ts:597","pc":[3247,3248,3249]},{"teal":2502,"source":"contracts/TownHall.algo.ts:597","pc":[3250,3251]},{"teal":2506,"source":"contracts/TownHall.algo.ts:598","pc":[3252,3253]},{"teal":2507,"source":"contracts/TownHall.algo.ts:598","pc":[3254,3255]},{"teal":2508,"source":"contracts/TownHall.algo.ts:598","pc":[3256,3257]},{"teal":2509,"source":"contracts/TownHall.algo.ts:598","pc":[3258,3259]},{"teal":2514,"source":"contracts/TownHall.algo.ts:600","pc":[3260,3261]},{"teal":2515,"source":"contracts/TownHall.algo.ts:600","pc":[3262,3263]},{"teal":2516,"source":"contracts/TownHall.algo.ts:600","pc":[3264]},{"teal":2517,"source":"contracts/TownHall.algo.ts:600","pc":[3265]},{"teal":2518,"source":"contracts/TownHall.algo.ts:600","pc":[3266,3267,3268]},{"teal":2523,"source":"contracts/TownHall.algo.ts:603","pc":[3269,3270]},{"teal":2524,"source":"contracts/TownHall.algo.ts:603","pc":[3271,3272]},{"teal":2525,"source":"contracts/TownHall.algo.ts:603","pc":[3273]},{"teal":2529,"source":"contracts/TownHall.algo.ts:604","pc":[3274]},{"teal":2530,"source":"contracts/Constants.ts:28","pc":[3275,3276]},{"teal":2531,"source":"contracts/TownHall.algo.ts:604","pc":[3277]},{"teal":2535,"source":"contracts/TownHall.algo.ts:605","pc":[3278]},{"teal":2541,"source":"contracts/TownHall.algo.ts:608","pc":[3279,3280]},{"teal":2542,"source":"contracts/TownHall.algo.ts:608","pc":[3281,3282]},{"teal":2543,"source":"contracts/TownHall.algo.ts:608","pc":[3283]},{"teal":2544,"source":"contracts/TownHall.algo.ts:608","pc":[3284]},{"teal":2545,"source":"contracts/TownHall.algo.ts:608","pc":[3285,3286,3287]},{"teal":2550,"source":"contracts/TownHall.algo.ts:610","pc":[3288,3289]},{"teal":2551,"source":"contracts/TownHall.algo.ts:610","pc":[3290,3291]},{"teal":2552,"source":"contracts/TownHall.algo.ts:610","pc":[3292]},{"teal":2557,"source":"contracts/TownHall.algo.ts:613","pc":[3293]},{"teal":2558,"source":"contracts/TownHall.algo.ts:613","pc":[3294,3295]},{"teal":2559,"source":"contracts/TownHall.algo.ts:613","pc":[3296]},{"teal":2564,"source":"contracts/TownHall.algo.ts:615","pc":[3297,3298]},{"teal":2565,"source":"contracts/TownHall.algo.ts:615","pc":[3299]},{"teal":2566,"source":"contracts/TownHall.algo.ts:615","pc":[3300]},{"teal":2567,"source":"contracts/TownHall.algo.ts:615","pc":[3301]},{"teal":2568,"source":"contracts/TownHall.algo.ts:615","pc":[3302,3303,3304]},{"teal":2573,"source":"contracts/TownHall.algo.ts:618","pc":[3305]},{"teal":2574,"source":"contracts/Constants.ts:28","pc":[3306,3307]},{"teal":2575,"source":"contracts/TownHall.algo.ts:618","pc":[3308]},{"teal":2579,"source":"contracts/TownHall.algo.ts:619","pc":[3309]},{"teal":2584,"source":"contracts/TownHall.algo.ts:622","pc":[3310]},{"teal":2585,"source":"contracts/Constants.ts:22","pc":[3311]},{"teal":2586,"source":"contracts/TownHall.algo.ts:622","pc":[3312]},{"teal":2587,"source":"contracts/TownHall.algo.ts:587","pc":[3313]},{"teal":2592,"source":"contracts/TownHall.algo.ts:625","pc":[3314,3315,3316]},{"teal":2593,"source":"contracts/TownHall.algo.ts:625","pc":[3317,3318,3319]},{"teal":2596,"source":"contracts/TownHall.algo.ts:625","pc":[3320,3321,3322]},{"teal":2597,"source":"contracts/TownHall.algo.ts:625","pc":[3323]},{"teal":2598,"source":"contracts/TownHall.algo.ts:625","pc":[3324]},{"teal":2602,"source":"contracts/TownHall.algo.ts:625","pc":[3325,3326,3327]},{"teal":2609,"source":"contracts/TownHall.algo.ts:627","pc":[3328]},{"teal":2610,"source":"contracts/TownHall.algo.ts:627","pc":[3329]},{"teal":2611,"source":"contracts/Constants.ts:22","pc":[3330]},{"teal":2612,"source":"contracts/TownHall.algo.ts:627","pc":[3331]},{"teal":2615,"source":"contracts/TownHall.algo.ts:626","errorMessage":"Invalid method call: Game is not in Night Stage Maffia Commit state.","pc":[3332]},{"teal":2619,"source":"contracts/TownHall.algo.ts:631","pc":[3333,3334]},{"teal":2620,"source":"contracts/TownHall.algo.ts:631","pc":[3335,3336]},{"teal":2621,"source":"contracts/TownHall.algo.ts:631","pc":[3337]},{"teal":2622,"source":"contracts/TownHall.algo.ts:631","pc":[3338]},{"teal":2625,"source":"contracts/TownHall.algo.ts:631","errorMessage":"Error state: Non-mafia player called method.","pc":[3339]},{"teal":2629,"source":"contracts/TownHall.algo.ts:633","pc":[3340,3341]},{"teal":2630,"source":"contracts/TownHall.algo.ts:633","pc":[3342,3343]},{"teal":2631,"source":"contracts/TownHall.algo.ts:633","pc":[3344]},{"teal":2636,"source":"contracts/TownHall.algo.ts:635","pc":[3345,3346]},{"teal":2637,"source":"contracts/TownHall.algo.ts:635","pc":[3347]},{"teal":2638,"source":"contracts/TownHall.algo.ts:635","pc":[3348,3349]},{"teal":2639,"source":"contracts/TownHall.algo.ts:635","pc":[3350]},{"teal":2640,"source":"contracts/TownHall.algo.ts:635","pc":[3351,3352,3353]},{"teal":2645,"source":"contracts/TownHall.algo.ts:637","pc":[3354]},{"teal":2646,"source":"contracts/Constants.ts:24","pc":[3355,3356]},{"teal":2647,"source":"contracts/TownHall.algo.ts:637","pc":[3357]},{"teal":2648,"source":"contracts/TownHall.algo.ts:635","pc":[3358,3359,3360]},{"teal":2653,"source":"contracts/TownHall.algo.ts:639","pc":[3361]},{"teal":2654,"source":"contracts/Constants.ts:23","pc":[3362,3363]},{"teal":2655,"source":"contracts/TownHall.algo.ts:639","pc":[3364]},{"teal":2658,"source":"contracts/TownHall.algo.ts:625","pc":[3365]},{"teal":2663,"source":"contracts/TownHall.algo.ts:643","pc":[3366,3367,3368]},{"teal":2664,"source":"contracts/TownHall.algo.ts:643","pc":[3369,3370,3371]},{"teal":2667,"source":"contracts/TownHall.algo.ts:643","pc":[3372,3373,3374]},{"teal":2668,"source":"contracts/TownHall.algo.ts:643","pc":[3375]},{"teal":2669,"source":"contracts/TownHall.algo.ts:643","pc":[3376]},{"teal":2673,"source":"contracts/TownHall.algo.ts:643","pc":[3377,3378,3379]},{"teal":2680,"source":"contracts/TownHall.algo.ts:645","pc":[3380]},{"teal":2681,"source":"contracts/TownHall.algo.ts:645","pc":[3381]},{"teal":2682,"source":"contracts/Constants.ts:23","pc":[3382,3383]},{"teal":2683,"source":"contracts/TownHall.algo.ts:645","pc":[3384]},{"teal":2686,"source":"contracts/TownHall.algo.ts:644","errorMessage":"Invalid method call: Game is not in Night Stage Doctor Commit state.","pc":[3385]},{"teal":2690,"source":"contracts/TownHall.algo.ts:649","pc":[3386,3387]},{"teal":2691,"source":"contracts/TownHall.algo.ts:649","pc":[3388,3389]},{"teal":2692,"source":"contracts/TownHall.algo.ts:649","pc":[3390]},{"teal":2693,"source":"contracts/TownHall.algo.ts:649","pc":[3391]},{"teal":2696,"source":"contracts/TownHall.algo.ts:649","errorMessage":"Error state: Non-doctor player called method.","pc":[3392]},{"teal":2703,"source":"contracts/TownHall.algo.ts:651","pc":[3393,3394]},{"teal":2704,"source":"contracts/TownHall.algo.ts:651","pc":[3395]},{"teal":2705,"source":"contracts/TownHall.algo.ts:651","pc":[3396,3397]},{"teal":2706,"source":"contracts/TownHall.algo.ts:651","pc":[3398]},{"teal":2709,"source":"contracts/TownHall.algo.ts:650","errorMessage":"Error state: Doctor is dead, should not have entered this state.","pc":[3399]},{"teal":2713,"source":"contracts/TownHall.algo.ts:655","pc":[3400,3401]},{"teal":2714,"source":"contracts/TownHall.algo.ts:655","pc":[3402,3403]},{"teal":2715,"source":"contracts/TownHall.algo.ts:655","pc":[3404]},{"teal":2719,"source":"contracts/TownHall.algo.ts:657","pc":[3405]},{"teal":2720,"source":"contracts/Constants.ts:24","pc":[3406,3407]},{"teal":2721,"source":"contracts/TownHall.algo.ts:657","pc":[3408]},{"teal":2722,"source":"contracts/TownHall.algo.ts:643","pc":[3409]},{"teal":2727,"source":"contracts/TownHall.algo.ts:660","pc":[3410,3411,3412]},{"teal":2728,"source":"contracts/TownHall.algo.ts:660","pc":[3413]},{"teal":2729,"source":"contracts/TownHall.algo.ts:660","pc":[3414]},{"teal":2730,"source":"contracts/TownHall.algo.ts:660","pc":[3415,3416]},{"teal":2731,"source":"contracts/TownHall.algo.ts:660","pc":[3417]},{"teal":2734,"source":"contracts/TownHall.algo.ts:660","errorMessage":"argument 0 (blinder) for dawnStageMafiaReveal must be a byte[32]","pc":[3418]},{"teal":2737,"source":"contracts/TownHall.algo.ts:660","pc":[3419,3420,3421]},{"teal":2738,"source":"contracts/TownHall.algo.ts:660","pc":[3422]},{"teal":2739,"source":"contracts/TownHall.algo.ts:660","pc":[3423]},{"teal":2740,"source":"contracts/TownHall.algo.ts:660","pc":[3424,3425]},{"teal":2741,"source":"contracts/TownHall.algo.ts:660","pc":[3426]},{"teal":2744,"source":"contracts/TownHall.algo.ts:660","errorMessage":"argument 1 (victimAim) for dawnStageMafiaReveal must be a address","pc":[3427]},{"teal":2747,"source":"contracts/TownHall.algo.ts:660","pc":[3428,3429,3430]},{"teal":2748,"source":"contracts/TownHall.algo.ts:660","pc":[3431]},{"teal":2749,"source":"contracts/TownHall.algo.ts:660","pc":[3432]},{"teal":2753,"source":"contracts/TownHall.algo.ts:660","pc":[3433,3434,3435]},{"teal":2756,"source":"contracts/TownHall.algo.ts:660","pc":[3436,3437]},{"teal":2763,"source":"contracts/TownHall.algo.ts:662","pc":[3438]},{"teal":2764,"source":"contracts/TownHall.algo.ts:662","pc":[3439]},{"teal":2765,"source":"contracts/Constants.ts:24","pc":[3440,3441]},{"teal":2766,"source":"contracts/TownHall.algo.ts:662","pc":[3442]},{"teal":2769,"source":"contracts/TownHall.algo.ts:661","errorMessage":"Invalid method call: Game is not in Dawn Stage Maffia Reveal state.","pc":[3443]},{"teal":2773,"source":"contracts/TownHall.algo.ts:666","pc":[3444,3445]},{"teal":2774,"source":"contracts/TownHall.algo.ts:666","pc":[3446,3447]},{"teal":2775,"source":"contracts/TownHall.algo.ts:666","pc":[3448]},{"teal":2776,"source":"contracts/TownHall.algo.ts:666","pc":[3449]},{"teal":2779,"source":"contracts/TownHall.algo.ts:666","errorMessage":"Error state: Non-mafia player called method.","pc":[3450]},{"teal":2783,"source":"contracts/TownHall.algo.ts:668","pc":[3451,3452]},{"teal":2784,"source":"contracts/TownHall.algo.ts:668","pc":[3453,3454]},{"teal":2785,"source":"contracts/TownHall.algo.ts:668","pc":[3455]},{"teal":2788,"source":"contracts/TownHall.algo.ts:668","errorMessage":"Error state: Victim must be a valid address.","pc":[3456]},{"teal":2792,"source":"contracts/TownHall.algo.ts:672","pc":[3457,3458]},{"teal":2793,"source":"contracts/TownHall.algo.ts:672","pc":[3459,3460]},{"teal":2794,"source":"contracts/TownHall.algo.ts:672","pc":[3461]},{"teal":2795,"source":"contracts/TownHall.algo.ts:672","pc":[3462]},{"teal":2796,"source":"contracts/TownHall.algo.ts:672","pc":[3463,3464]},{"teal":2803,"source":"contracts/TownHall.algo.ts:675","pc":[3465,3466]},{"teal":2804,"source":"contracts/TownHall.algo.ts:675","pc":[3467,3468]},{"teal":2805,"source":"contracts/TownHall.algo.ts:675","pc":[3469]},{"teal":2806,"source":"contracts/TownHall.algo.ts:675","pc":[3470]},{"teal":2809,"source":"contracts/TownHall.algo.ts:674","errorMessage":"Error state: Provided address + blinder does NOT match commitment.","pc":[3471]},{"teal":2814,"source":"contracts/TownHall.algo.ts:679","pc":[3472,3473]},{"teal":2815,"source":"contracts/TownHall.algo.ts:679","pc":[3474]},{"teal":2816,"source":"contracts/TownHall.algo.ts:679","pc":[3475]},{"teal":2817,"source":"contracts/TownHall.algo.ts:679","pc":[3476,3477,3478]},{"teal":2818,"source":"contracts/TownHall.algo.ts:679","pc":[3479]},{"teal":2819,"source":"contracts/TownHall.algo.ts:679","pc":[3480,3481,3482]},{"teal":2824,"source":"contracts/TownHall.algo.ts:680","pc":[3483,3484]},{"teal":2825,"source":"contracts/TownHall.algo.ts:680","pc":[3485]},{"teal":2826,"source":"contracts/TownHall.algo.ts:680","pc":[3486]},{"teal":2827,"source":"contracts/TownHall.algo.ts:680","pc":[3487,3488,3489]},{"teal":2828,"source":"contracts/TownHall.algo.ts:680","pc":[3490]},{"teal":2829,"source":"contracts/TownHall.algo.ts:679","pc":[3491,3492,3493]},{"teal":2834,"source":"contracts/TownHall.algo.ts:681","pc":[3494,3495]},{"teal":2835,"source":"contracts/TownHall.algo.ts:681","pc":[3496]},{"teal":2836,"source":"contracts/TownHall.algo.ts:681","pc":[3497]},{"teal":2837,"source":"contracts/TownHall.algo.ts:681","pc":[3498,3499,3500]},{"teal":2838,"source":"contracts/TownHall.algo.ts:681","pc":[3501]},{"teal":2839,"source":"contracts/TownHall.algo.ts:681","pc":[3502,3503,3504]},{"teal":2844,"source":"contracts/TownHall.algo.ts:682","pc":[3505,3506]},{"teal":2845,"source":"contracts/TownHall.algo.ts:682","pc":[3507]},{"teal":2846,"source":"contracts/TownHall.algo.ts:682","pc":[3508]},{"teal":2847,"source":"contracts/TownHall.algo.ts:682","pc":[3509,3510,3511]},{"teal":2848,"source":"contracts/TownHall.algo.ts:682","pc":[3512]},{"teal":2849,"source":"contracts/TownHall.algo.ts:681","pc":[3513,3514,3515]},{"teal":2854,"source":"contracts/TownHall.algo.ts:683","pc":[3516,3517]},{"teal":2855,"source":"contracts/TownHall.algo.ts:683","pc":[3518,3519]},{"teal":2856,"source":"contracts/TownHall.algo.ts:683","pc":[3520]},{"teal":2857,"source":"contracts/TownHall.algo.ts:683","pc":[3521,3522,3523]},{"teal":2858,"source":"contracts/TownHall.algo.ts:683","pc":[3524]},{"teal":2859,"source":"contracts/TownHall.algo.ts:683","pc":[3525,3526,3527]},{"teal":2864,"source":"contracts/TownHall.algo.ts:684","pc":[3528,3529]},{"teal":2865,"source":"contracts/TownHall.algo.ts:684","pc":[3530,3531]},{"teal":2866,"source":"contracts/TownHall.algo.ts:684","pc":[3532]},{"teal":2867,"source":"contracts/TownHall.algo.ts:684","pc":[3533,3534,3535]},{"teal":2868,"source":"contracts/TownHall.algo.ts:684","pc":[3536]},{"teal":2869,"source":"contracts/TownHall.algo.ts:683","pc":[3537,3538,3539]},{"teal":2874,"source":"contracts/TownHall.algo.ts:685","pc":[3540,3541]},{"teal":2875,"source":"contracts/TownHall.algo.ts:685","pc":[3542,3543]},{"teal":2876,"source":"contracts/TownHall.algo.ts:685","pc":[3544]},{"teal":2877,"source":"contracts/TownHall.algo.ts:685","pc":[3545,3546,3547]},{"teal":2878,"source":"contracts/TownHall.algo.ts:685","pc":[3548]},{"teal":2879,"source":"contracts/TownHall.algo.ts:685","pc":[3549,3550,3551]},{"teal":2884,"source":"contracts/TownHall.algo.ts:686","pc":[3552,3553]},{"teal":2885,"source":"contracts/TownHall.algo.ts:686","pc":[3554,3555]},{"teal":2886,"source":"contracts/TownHall.algo.ts:686","pc":[3556]},{"teal":2887,"source":"contracts/TownHall.algo.ts:686","pc":[3557,3558,3559]},{"teal":2888,"source":"contracts/TownHall.algo.ts:686","pc":[3560]},{"teal":2889,"source":"contracts/TownHall.algo.ts:685","pc":[3561,3562,3563]},{"teal":2894,"source":"contracts/TownHall.algo.ts:687","pc":[3564,3565]},{"teal":2895,"source":"contracts/TownHall.algo.ts:687","pc":[3566,3567]},{"teal":2896,"source":"contracts/TownHall.algo.ts:687","pc":[3568]},{"teal":2897,"source":"contracts/TownHall.algo.ts:687","pc":[3569,3570,3571]},{"teal":2898,"source":"contracts/TownHall.algo.ts:687","pc":[3572]},{"teal":2899,"source":"contracts/TownHall.algo.ts:687","pc":[3573,3574,3575]},{"teal":2904,"source":"contracts/TownHall.algo.ts:688","pc":[3576,3577]},{"teal":2905,"source":"contracts/TownHall.algo.ts:688","pc":[3578,3579]},{"teal":2906,"source":"contracts/TownHall.algo.ts:688","pc":[3580]},{"teal":2907,"source":"contracts/TownHall.algo.ts:688","pc":[3581,3582,3583]},{"teal":2908,"source":"contracts/TownHall.algo.ts:688","pc":[3584]},{"teal":2909,"source":"contracts/TownHall.algo.ts:687","pc":[3585,3586,3587]},{"teal":2914,"source":"contracts/TownHall.algo.ts:689","pc":[3588,3589]},{"teal":2915,"source":"contracts/TownHall.algo.ts:689","pc":[3590,3591]},{"teal":2916,"source":"contracts/TownHall.algo.ts:689","pc":[3592]},{"teal":2917,"source":"contracts/TownHall.algo.ts:689","pc":[3593,3594,3595]},{"teal":2918,"source":"contracts/TownHall.algo.ts:689","pc":[3596]},{"teal":2919,"source":"contracts/TownHall.algo.ts:689","pc":[3597,3598,3599]},{"teal":2924,"source":"contracts/TownHall.algo.ts:690","pc":[3600,3601]},{"teal":2925,"source":"contracts/TownHall.algo.ts:690","pc":[3602,3603]},{"teal":2926,"source":"contracts/TownHall.algo.ts:690","pc":[3604]},{"teal":2927,"source":"contracts/TownHall.algo.ts:690","pc":[3605,3606,3607]},{"teal":2928,"source":"contracts/TownHall.algo.ts:690","pc":[3608]},{"teal":2929,"source":"contracts/TownHall.algo.ts:689","pc":[3609,3610,3611]},{"teal":2934,"source":"contracts/TownHall.algo.ts:692","pc":[3612,3613]},{"teal":2935,"source":"contracts/TownHall.algo.ts:692","pc":[3614,3615]},{"teal":2936,"source":"contracts/TownHall.algo.ts:692","pc":[3616]},{"teal":2942,"source":"contracts/TownHall.algo.ts:698","pc":[3617,3618]},{"teal":2943,"source":"contracts/TownHall.algo.ts:698","pc":[3619]},{"teal":2944,"source":"contracts/TownHall.algo.ts:698","pc":[3620,3621]},{"teal":2945,"source":"contracts/TownHall.algo.ts:698","pc":[3622]},{"teal":2946,"source":"contracts/TownHall.algo.ts:698","pc":[3623,3624,3625]},{"teal":2951,"source":"contracts/TownHall.algo.ts:700","pc":[3626]},{"teal":2952,"source":"contracts/Constants.ts:26","pc":[3627,3628]},{"teal":2953,"source":"contracts/TownHall.algo.ts:700","pc":[3629]},{"teal":2954,"source":"contracts/TownHall.algo.ts:698","pc":[3630,3631,3632]},{"teal":2959,"source":"contracts/TownHall.algo.ts:703","pc":[3633]},{"teal":2960,"source":"contracts/Constants.ts:25","pc":[3634,3635]},{"teal":2961,"source":"contracts/TownHall.algo.ts:703","pc":[3636]},{"teal":2964,"source":"contracts/TownHall.algo.ts:660","pc":[3637]},{"teal":2969,"source":"contracts/TownHall.algo.ts:707","pc":[3638,3639,3640]},{"teal":2970,"source":"contracts/TownHall.algo.ts:707","pc":[3641]},{"teal":2971,"source":"contracts/TownHall.algo.ts:707","pc":[3642]},{"teal":2972,"source":"contracts/TownHall.algo.ts:707","pc":[3643,3644]},{"teal":2973,"source":"contracts/TownHall.algo.ts:707","pc":[3645]},{"teal":2976,"source":"contracts/TownHall.algo.ts:707","errorMessage":"argument 0 (blinder) for dawnStageDoctorReveal must be a byte[32]","pc":[3646]},{"teal":2979,"source":"contracts/TownHall.algo.ts:707","pc":[3647,3648,3649]},{"teal":2980,"source":"contracts/TownHall.algo.ts:707","pc":[3650]},{"teal":2981,"source":"contracts/TownHall.algo.ts:707","pc":[3651]},{"teal":2982,"source":"contracts/TownHall.algo.ts:707","pc":[3652,3653]},{"teal":2983,"source":"contracts/TownHall.algo.ts:707","pc":[3654]},{"teal":2986,"source":"contracts/TownHall.algo.ts:707","errorMessage":"argument 1 (patientAim) for dawnStageDoctorReveal must be a address","pc":[3655]},{"teal":2989,"source":"contracts/TownHall.algo.ts:707","pc":[3656,3657,3658]},{"teal":2990,"source":"contracts/TownHall.algo.ts:707","pc":[3659]},{"teal":2991,"source":"contracts/TownHall.algo.ts:707","pc":[3660]},{"teal":2995,"source":"contracts/TownHall.algo.ts:707","pc":[3661,3662,3663]},{"teal":2998,"source":"contracts/TownHall.algo.ts:707","pc":[3664,3665]},{"teal":3005,"source":"contracts/TownHall.algo.ts:709","pc":[3666]},{"teal":3006,"source":"contracts/TownHall.algo.ts:709","pc":[3667]},{"teal":3007,"source":"contracts/Constants.ts:25","pc":[3668,3669]},{"teal":3008,"source":"contracts/TownHall.algo.ts:709","pc":[3670]},{"teal":3011,"source":"contracts/TownHall.algo.ts:708","errorMessage":"Invalid method call: Game is not in Dawn Stage Doctor Reveal state.","pc":[3671]},{"teal":3015,"source":"contracts/TownHall.algo.ts:713","pc":[3672,3673]},{"teal":3016,"source":"contracts/TownHall.algo.ts:713","pc":[3674,3675]},{"teal":3017,"source":"contracts/TownHall.algo.ts:713","pc":[3676]},{"teal":3018,"source":"contracts/TownHall.algo.ts:713","pc":[3677]},{"teal":3021,"source":"contracts/TownHall.algo.ts:713","errorMessage":"Error state: Non-doctor player called method.","pc":[3678]},{"teal":3025,"source":"contracts/TownHall.algo.ts:715","pc":[3679,3680]},{"teal":3026,"source":"contracts/TownHall.algo.ts:715","pc":[3681]},{"teal":3027,"source":"contracts/TownHall.algo.ts:715","pc":[3682,3683]},{"teal":3028,"source":"contracts/TownHall.algo.ts:715","pc":[3684]},{"teal":3031,"source":"contracts/TownHall.algo.ts:715","errorMessage":"Error state: Doctor has already committed to a patient.","pc":[3685]},{"teal":3035,"source":"contracts/TownHall.algo.ts:717","pc":[3686,3687]},{"teal":3036,"source":"contracts/TownHall.algo.ts:717","pc":[3688,3689]},{"teal":3037,"source":"contracts/TownHall.algo.ts:717","pc":[3690]},{"teal":3040,"source":"contracts/TownHall.algo.ts:717","errorMessage":"Error state: Patient must be a valid address.","pc":[3691]},{"teal":3044,"source":"contracts/TownHall.algo.ts:721","pc":[3692,3693]},{"teal":3045,"source":"contracts/TownHall.algo.ts:721","pc":[3694,3695]},{"teal":3046,"source":"contracts/TownHall.algo.ts:721","pc":[3696]},{"teal":3047,"source":"contracts/TownHall.algo.ts:721","pc":[3697]},{"teal":3048,"source":"contracts/TownHall.algo.ts:721","pc":[3698,3699]},{"teal":3055,"source":"contracts/TownHall.algo.ts:724","pc":[3700,3701]},{"teal":3056,"source":"contracts/TownHall.algo.ts:724","pc":[3702,3703]},{"teal":3057,"source":"contracts/TownHall.algo.ts:724","pc":[3704]},{"teal":3058,"source":"contracts/TownHall.algo.ts:724","pc":[3705]},{"teal":3061,"source":"contracts/TownHall.algo.ts:723","errorMessage":"Error state: Provided address + blinder does NOT match commitment.","pc":[3706]},{"teal":3066,"source":"contracts/TownHall.algo.ts:728","pc":[3707,3708]},{"teal":3067,"source":"contracts/TownHall.algo.ts:728","pc":[3709]},{"teal":3068,"source":"contracts/TownHall.algo.ts:728","pc":[3710]},{"teal":3069,"source":"contracts/TownHall.algo.ts:728","pc":[3711,3712,3713]},{"teal":3070,"source":"contracts/TownHall.algo.ts:728","pc":[3714]},{"teal":3071,"source":"contracts/TownHall.algo.ts:728","pc":[3715,3716,3717]},{"teal":3076,"source":"contracts/TownHall.algo.ts:729","pc":[3718,3719]},{"teal":3077,"source":"contracts/TownHall.algo.ts:729","pc":[3720]},{"teal":3078,"source":"contracts/TownHall.algo.ts:729","pc":[3721]},{"teal":3079,"source":"contracts/TownHall.algo.ts:729","pc":[3722,3723,3724]},{"teal":3080,"source":"contracts/TownHall.algo.ts:729","pc":[3725]},{"teal":3081,"source":"contracts/TownHall.algo.ts:728","pc":[3726,3727,3728]},{"teal":3086,"source":"contracts/TownHall.algo.ts:730","pc":[3729,3730]},{"teal":3087,"source":"contracts/TownHall.algo.ts:730","pc":[3731]},{"teal":3088,"source":"contracts/TownHall.algo.ts:730","pc":[3732]},{"teal":3089,"source":"contracts/TownHall.algo.ts:730","pc":[3733,3734,3735]},{"teal":3090,"source":"contracts/TownHall.algo.ts:730","pc":[3736]},{"teal":3091,"source":"contracts/TownHall.algo.ts:730","pc":[3737,3738,3739]},{"teal":3096,"source":"contracts/TownHall.algo.ts:731","pc":[3740,3741]},{"teal":3097,"source":"contracts/TownHall.algo.ts:731","pc":[3742]},{"teal":3098,"source":"contracts/TownHall.algo.ts:731","pc":[3743]},{"teal":3099,"source":"contracts/TownHall.algo.ts:731","pc":[3744,3745,3746]},{"teal":3100,"source":"contracts/TownHall.algo.ts:731","pc":[3747]},{"teal":3101,"source":"contracts/TownHall.algo.ts:730","pc":[3748,3749,3750]},{"teal":3106,"source":"contracts/TownHall.algo.ts:732","pc":[3751,3752]},{"teal":3107,"source":"contracts/TownHall.algo.ts:732","pc":[3753,3754]},{"teal":3108,"source":"contracts/TownHall.algo.ts:732","pc":[3755]},{"teal":3109,"source":"contracts/TownHall.algo.ts:732","pc":[3756,3757,3758]},{"teal":3110,"source":"contracts/TownHall.algo.ts:732","pc":[3759]},{"teal":3111,"source":"contracts/TownHall.algo.ts:732","pc":[3760,3761,3762]},{"teal":3116,"source":"contracts/TownHall.algo.ts:733","pc":[3763,3764]},{"teal":3117,"source":"contracts/TownHall.algo.ts:733","pc":[3765,3766]},{"teal":3118,"source":"contracts/TownHall.algo.ts:733","pc":[3767]},{"teal":3119,"source":"contracts/TownHall.algo.ts:733","pc":[3768,3769,3770]},{"teal":3120,"source":"contracts/TownHall.algo.ts:733","pc":[3771]},{"teal":3121,"source":"contracts/TownHall.algo.ts:732","pc":[3772,3773,3774]},{"teal":3126,"source":"contracts/TownHall.algo.ts:734","pc":[3775,3776]},{"teal":3127,"source":"contracts/TownHall.algo.ts:734","pc":[3777,3778]},{"teal":3128,"source":"contracts/TownHall.algo.ts:734","pc":[3779]},{"teal":3129,"source":"contracts/TownHall.algo.ts:734","pc":[3780,3781,3782]},{"teal":3130,"source":"contracts/TownHall.algo.ts:734","pc":[3783]},{"teal":3131,"source":"contracts/TownHall.algo.ts:734","pc":[3784,3785,3786]},{"teal":3136,"source":"contracts/TownHall.algo.ts:735","pc":[3787,3788]},{"teal":3137,"source":"contracts/TownHall.algo.ts:735","pc":[3789,3790]},{"teal":3138,"source":"contracts/TownHall.algo.ts:735","pc":[3791]},{"teal":3139,"source":"contracts/TownHall.algo.ts:735","pc":[3792,3793,3794]},{"teal":3140,"source":"contracts/TownHall.algo.ts:735","pc":[3795]},{"teal":3141,"source":"contracts/TownHall.algo.ts:734","pc":[3796,3797,3798]},{"teal":3146,"source":"contracts/TownHall.algo.ts:736","pc":[3799,3800]},{"teal":3147,"source":"contracts/TownHall.algo.ts:736","pc":[3801,3802]},{"teal":3148,"source":"contracts/TownHall.algo.ts:736","pc":[3803]},{"teal":3149,"source":"contracts/TownHall.algo.ts:736","pc":[3804,3805,3806]},{"teal":3150,"source":"contracts/TownHall.algo.ts:736","pc":[3807]},{"teal":3151,"source":"contracts/TownHall.algo.ts:736","pc":[3808,3809,3810]},{"teal":3156,"source":"contracts/TownHall.algo.ts:737","pc":[3811,3812]},{"teal":3157,"source":"contracts/TownHall.algo.ts:737","pc":[3813,3814]},{"teal":3158,"source":"contracts/TownHall.algo.ts:737","pc":[3815]},{"teal":3159,"source":"contracts/TownHall.algo.ts:737","pc":[3816,3817,3818]},{"teal":3160,"source":"contracts/TownHall.algo.ts:737","pc":[3819]},{"teal":3161,"source":"contracts/TownHall.algo.ts:736","pc":[3820,3821,3822]},{"teal":3166,"source":"contracts/TownHall.algo.ts:738","pc":[3823,3824]},{"teal":3167,"source":"contracts/TownHall.algo.ts:738","pc":[3825,3826]},{"teal":3168,"source":"contracts/TownHall.algo.ts:738","pc":[3827]},{"teal":3169,"source":"contracts/TownHall.algo.ts:738","pc":[3828,3829,3830]},{"teal":3170,"source":"contracts/TownHall.algo.ts:738","pc":[3831]},{"teal":3171,"source":"contracts/TownHall.algo.ts:738","pc":[3832,3833,3834]},{"teal":3176,"source":"contracts/TownHall.algo.ts:739","pc":[3835,3836]},{"teal":3177,"source":"contracts/TownHall.algo.ts:739","pc":[3837,3838]},{"teal":3178,"source":"contracts/TownHall.algo.ts:739","pc":[3839]},{"teal":3179,"source":"contracts/TownHall.algo.ts:739","pc":[3840,3841,3842]},{"teal":3180,"source":"contracts/TownHall.algo.ts:739","pc":[3843]},{"teal":3181,"source":"contracts/TownHall.algo.ts:738","pc":[3844,3845,3846]},{"teal":3186,"source":"contracts/TownHall.algo.ts:741","pc":[3847,3848]},{"teal":3187,"source":"contracts/TownHall.algo.ts:741","pc":[3849,3850]},{"teal":3188,"source":"contracts/TownHall.algo.ts:741","pc":[3851]},{"teal":3193,"source":"contracts/TownHall.algo.ts:747","pc":[3852]},{"teal":3194,"source":"contracts/Constants.ts:26","pc":[3853,3854]},{"teal":3195,"source":"contracts/TownHall.algo.ts:747","pc":[3855]},{"teal":3196,"source":"contracts/TownHall.algo.ts:707","pc":[3856]},{"teal":3201,"source":"contracts/TownHall.algo.ts:750","pc":[3857,3858,3859]},{"teal":3202,"source":"contracts/TownHall.algo.ts:750","pc":[3860]},{"teal":3203,"source":"contracts/TownHall.algo.ts:750","pc":[3861]},{"teal":3207,"source":"contracts/TownHall.algo.ts:750","pc":[3862,3863,3864]},{"teal":3214,"source":"contracts/TownHall.algo.ts:752","pc":[3865]},{"teal":3215,"source":"contracts/TownHall.algo.ts:752","pc":[3866]},{"teal":3216,"source":"contracts/Constants.ts:26","pc":[3867,3868]},{"teal":3217,"source":"contracts/TownHall.algo.ts:752","pc":[3869]},{"teal":3220,"source":"contracts/TownHall.algo.ts:751","errorMessage":"Invalid method call: Game is not in Dawn Stage DeadOrSaved? state.","pc":[3870]},{"teal":3225,"source":"contracts/TownHall.algo.ts:756","pc":[3871,3872]},{"teal":3226,"source":"contracts/TownHall.algo.ts:756","pc":[3873]},{"teal":3227,"source":"contracts/TownHall.algo.ts:756","pc":[3874,3875]},{"teal":3228,"source":"contracts/TownHall.algo.ts:756","pc":[3876]},{"teal":3229,"source":"contracts/TownHall.algo.ts:756","pc":[3877]},{"teal":3230,"source":"contracts/TownHall.algo.ts:756","pc":[3878,3879,3880]},{"teal":3231,"source":"contracts/TownHall.algo.ts:756","pc":[3881,3882]},{"teal":3232,"source":"contracts/TownHall.algo.ts:756","pc":[3883]},{"teal":3233,"source":"contracts/TownHall.algo.ts:756","pc":[3884,3885]},{"teal":3234,"source":"contracts/TownHall.algo.ts:756","pc":[3886]},{"teal":3235,"source":"contracts/TownHall.algo.ts:756","pc":[3887]},{"teal":3236,"source":"contracts/TownHall.algo.ts:756","pc":[3888]},{"teal":3239,"source":"contracts/TownHall.algo.ts:756","pc":[3889,3890,3891]},{"teal":3244,"source":"contracts/TownHall.algo.ts:761","pc":[3892,3893]},{"teal":3245,"source":"contracts/TownHall.algo.ts:761","pc":[3894,3895]},{"teal":3246,"source":"contracts/TownHall.algo.ts:761","pc":[3896]},{"teal":3250,"source":"contracts/TownHall.algo.ts:762","pc":[3897,3898]},{"teal":3251,"source":"contracts/TownHall.algo.ts:762","pc":[3899,3900]},{"teal":3252,"source":"contracts/TownHall.algo.ts:762","pc":[3901]},{"teal":3256,"source":"contracts/TownHall.algo.ts:763","pc":[3902]},{"teal":3257,"source":"contracts/Constants.ts:19","pc":[3903,3904]},{"teal":3258,"source":"contracts/TownHall.algo.ts:763","pc":[3905]},{"teal":3262,"source":"contracts/TownHall.algo.ts:764","pc":[3906]},{"teal":3268,"source":"contracts/TownHall.algo.ts:769","pc":[3907,3908]},{"teal":3269,"source":"contracts/TownHall.algo.ts:769","pc":[3909]},{"teal":3270,"source":"contracts/TownHall.algo.ts:769","pc":[3910]},{"teal":3271,"source":"contracts/TownHall.algo.ts:769","pc":[3911]},{"teal":3272,"source":"contracts/TownHall.algo.ts:769","pc":[3912,3913,3914]},{"teal":3273,"source":"contracts/TownHall.algo.ts:769","pc":[3915]},{"teal":3274,"source":"contracts/TownHall.algo.ts:769","pc":[3916,3917,3918]},{"teal":3279,"source":"contracts/TownHall.algo.ts:770","pc":[3919]},{"teal":3280,"source":"contracts/TownHall.algo.ts:770","pc":[3920]},{"teal":3281,"source":"contracts/TownHall.algo.ts:770","pc":[3921]},{"teal":3282,"source":"contracts/TownHall.algo.ts:770","pc":[3922,3923,3924]},{"teal":3283,"source":"contracts/TownHall.algo.ts:770","pc":[3925]},{"teal":3287,"source":"contracts/TownHall.algo.ts:771","pc":[3926]},{"teal":3288,"source":"contracts/TownHall.algo.ts:771","pc":[3927]},{"teal":3289,"source":"contracts/TownHall.algo.ts:771","pc":[3928,3929]},{"teal":3290,"source":"contracts/TownHall.algo.ts:771","pc":[3930,3931]},{"teal":3291,"source":"contracts/TownHall.algo.ts:771","pc":[3932]},{"teal":3292,"source":"contracts/TownHall.algo.ts:771","pc":[3933]},{"teal":3293,"source":"contracts/TownHall.algo.ts:771","pc":[3934]},{"teal":3294,"source":"contracts/TownHall.algo.ts:769","pc":[3935,3936,3937]},{"teal":3299,"source":"contracts/TownHall.algo.ts:772","pc":[3938,3939]},{"teal":3300,"source":"contracts/TownHall.algo.ts:772","pc":[3940]},{"teal":3301,"source":"contracts/TownHall.algo.ts:772","pc":[3941]},{"teal":3302,"source":"contracts/TownHall.algo.ts:772","pc":[3942]},{"teal":3303,"source":"contracts/TownHall.algo.ts:772","pc":[3943,3944,3945]},{"teal":3304,"source":"contracts/TownHall.algo.ts:772","pc":[3946]},{"teal":3305,"source":"contracts/TownHall.algo.ts:772","pc":[3947,3948,3949]},{"teal":3310,"source":"contracts/TownHall.algo.ts:773","pc":[3950]},{"teal":3311,"source":"contracts/TownHall.algo.ts:773","pc":[3951]},{"teal":3312,"source":"contracts/TownHall.algo.ts:773","pc":[3952]},{"teal":3313,"source":"contracts/TownHall.algo.ts:773","pc":[3953,3954,3955]},{"teal":3314,"source":"contracts/TownHall.algo.ts:773","pc":[3956]},{"teal":3318,"source":"contracts/TownHall.algo.ts:774","pc":[3957]},{"teal":3319,"source":"contracts/TownHall.algo.ts:774","pc":[3958]},{"teal":3320,"source":"contracts/TownHall.algo.ts:774","pc":[3959,3960]},{"teal":3321,"source":"contracts/TownHall.algo.ts:774","pc":[3961,3962]},{"teal":3322,"source":"contracts/TownHall.algo.ts:774","pc":[3963]},{"teal":3323,"source":"contracts/TownHall.algo.ts:774","pc":[3964]},{"teal":3324,"source":"contracts/TownHall.algo.ts:774","pc":[3965]},{"teal":3325,"source":"contracts/TownHall.algo.ts:772","pc":[3966,3967,3968]},{"teal":3330,"source":"contracts/TownHall.algo.ts:775","pc":[3969,3970]},{"teal":3331,"source":"contracts/TownHall.algo.ts:775","pc":[3971]},{"teal":3332,"source":"contracts/TownHall.algo.ts:775","pc":[3972,3973]},{"teal":3333,"source":"contracts/TownHall.algo.ts:775","pc":[3974]},{"teal":3334,"source":"contracts/TownHall.algo.ts:775","pc":[3975,3976,3977]},{"teal":3335,"source":"contracts/TownHall.algo.ts:775","pc":[3978]},{"teal":3336,"source":"contracts/TownHall.algo.ts:775","pc":[3979,3980,3981]},{"teal":3341,"source":"contracts/TownHall.algo.ts:776","pc":[3982]},{"teal":3342,"source":"contracts/TownHall.algo.ts:776","pc":[3983,3984]},{"teal":3343,"source":"contracts/TownHall.algo.ts:776","pc":[3985]},{"teal":3344,"source":"contracts/TownHall.algo.ts:776","pc":[3986,3987,3988]},{"teal":3345,"source":"contracts/TownHall.algo.ts:776","pc":[3989]},{"teal":3349,"source":"contracts/TownHall.algo.ts:777","pc":[3990,3991]},{"teal":3350,"source":"contracts/TownHall.algo.ts:777","pc":[3992]},{"teal":3351,"source":"contracts/TownHall.algo.ts:777","pc":[3993,3994]},{"teal":3352,"source":"contracts/TownHall.algo.ts:777","pc":[3995,3996]},{"teal":3353,"source":"contracts/TownHall.algo.ts:777","pc":[3997,3998]},{"teal":3354,"source":"contracts/TownHall.algo.ts:777","pc":[3999]},{"teal":3355,"source":"contracts/TownHall.algo.ts:777","pc":[4000]},{"teal":3356,"source":"contracts/TownHall.algo.ts:775","pc":[4001,4002,4003]},{"teal":3361,"source":"contracts/TownHall.algo.ts:778","pc":[4004,4005]},{"teal":3362,"source":"contracts/TownHall.algo.ts:778","pc":[4006]},{"teal":3363,"source":"contracts/TownHall.algo.ts:778","pc":[4007,4008]},{"teal":3364,"source":"contracts/TownHall.algo.ts:778","pc":[4009]},{"teal":3365,"source":"contracts/TownHall.algo.ts:778","pc":[4010,4011,4012]},{"teal":3366,"source":"contracts/TownHall.algo.ts:778","pc":[4013]},{"teal":3367,"source":"contracts/TownHall.algo.ts:778","pc":[4014,4015,4016]},{"teal":3372,"source":"contracts/TownHall.algo.ts:779","pc":[4017]},{"teal":3373,"source":"contracts/TownHall.algo.ts:779","pc":[4018,4019]},{"teal":3374,"source":"contracts/TownHall.algo.ts:779","pc":[4020]},{"teal":3375,"source":"contracts/TownHall.algo.ts:779","pc":[4021,4022,4023]},{"teal":3376,"source":"contracts/TownHall.algo.ts:779","pc":[4024]},{"teal":3380,"source":"contracts/TownHall.algo.ts:780","pc":[4025,4026]},{"teal":3381,"source":"contracts/TownHall.algo.ts:780","pc":[4027]},{"teal":3382,"source":"contracts/TownHall.algo.ts:780","pc":[4028,4029]},{"teal":3383,"source":"contracts/TownHall.algo.ts:780","pc":[4030,4031]},{"teal":3384,"source":"contracts/TownHall.algo.ts:780","pc":[4032,4033]},{"teal":3385,"source":"contracts/TownHall.algo.ts:780","pc":[4034]},{"teal":3386,"source":"contracts/TownHall.algo.ts:780","pc":[4035]},{"teal":3387,"source":"contracts/TownHall.algo.ts:778","pc":[4036,4037,4038]},{"teal":3392,"source":"contracts/TownHall.algo.ts:781","pc":[4039,4040]},{"teal":3393,"source":"contracts/TownHall.algo.ts:781","pc":[4041]},{"teal":3394,"source":"contracts/TownHall.algo.ts:781","pc":[4042,4043]},{"teal":3395,"source":"contracts/TownHall.algo.ts:781","pc":[4044]},{"teal":3396,"source":"contracts/TownHall.algo.ts:781","pc":[4045,4046,4047]},{"teal":3397,"source":"contracts/TownHall.algo.ts:781","pc":[4048]},{"teal":3398,"source":"contracts/TownHall.algo.ts:781","pc":[4049,4050,4051]},{"teal":3403,"source":"contracts/TownHall.algo.ts:782","pc":[4052]},{"teal":3404,"source":"contracts/TownHall.algo.ts:782","pc":[4053,4054]},{"teal":3405,"source":"contracts/TownHall.algo.ts:782","pc":[4055]},{"teal":3406,"source":"contracts/TownHall.algo.ts:782","pc":[4056,4057,4058]},{"teal":3407,"source":"contracts/TownHall.algo.ts:782","pc":[4059]},{"teal":3411,"source":"contracts/TownHall.algo.ts:783","pc":[4060,4061]},{"teal":3412,"source":"contracts/TownHall.algo.ts:783","pc":[4062]},{"teal":3413,"source":"contracts/TownHall.algo.ts:783","pc":[4063,4064]},{"teal":3414,"source":"contracts/TownHall.algo.ts:783","pc":[4065,4066]},{"teal":3415,"source":"contracts/TownHall.algo.ts:783","pc":[4067,4068]},{"teal":3416,"source":"contracts/TownHall.algo.ts:783","pc":[4069]},{"teal":3417,"source":"contracts/TownHall.algo.ts:783","pc":[4070]},{"teal":3418,"source":"contracts/TownHall.algo.ts:781","pc":[4071,4072,4073]},{"teal":3423,"source":"contracts/TownHall.algo.ts:784","pc":[4074,4075]},{"teal":3424,"source":"contracts/TownHall.algo.ts:784","pc":[4076]},{"teal":3425,"source":"contracts/TownHall.algo.ts:784","pc":[4077,4078]},{"teal":3426,"source":"contracts/TownHall.algo.ts:784","pc":[4079]},{"teal":3427,"source":"contracts/TownHall.algo.ts:784","pc":[4080,4081,4082]},{"teal":3428,"source":"contracts/TownHall.algo.ts:784","pc":[4083]},{"teal":3429,"source":"contracts/TownHall.algo.ts:784","pc":[4084,4085,4086]},{"teal":3434,"source":"contracts/TownHall.algo.ts:785","pc":[4087]},{"teal":3435,"source":"contracts/TownHall.algo.ts:785","pc":[4088,4089]},{"teal":3436,"source":"contracts/TownHall.algo.ts:785","pc":[4090]},{"teal":3437,"source":"contracts/TownHall.algo.ts:785","pc":[4091,4092,4093]},{"teal":3438,"source":"contracts/TownHall.algo.ts:785","pc":[4094]},{"teal":3442,"source":"contracts/TownHall.algo.ts:786","pc":[4095,4096]},{"teal":3443,"source":"contracts/TownHall.algo.ts:786","pc":[4097]},{"teal":3444,"source":"contracts/TownHall.algo.ts:786","pc":[4098,4099]},{"teal":3445,"source":"contracts/TownHall.algo.ts:786","pc":[4100,4101]},{"teal":3446,"source":"contracts/TownHall.algo.ts:786","pc":[4102,4103]},{"teal":3447,"source":"contracts/TownHall.algo.ts:786","pc":[4104]},{"teal":3448,"source":"contracts/TownHall.algo.ts:786","pc":[4105]},{"teal":3449,"source":"contracts/TownHall.algo.ts:784","pc":[4106,4107,4108]},{"teal":3453,"source":"contracts/TownHall.algo.ts:788","errorMessage":"Error state: Victim must be a player! Should not have entered this state.","pc":[4109]},{"teal":3458,"source":"contracts/TownHall.algo.ts:791","pc":[4110,4111]},{"teal":3459,"source":"contracts/TownHall.algo.ts:791","pc":[4112]},{"teal":3460,"source":"contracts/TownHall.algo.ts:791","pc":[4113]},{"teal":3461,"source":"contracts/TownHall.algo.ts:791","pc":[4114]},{"teal":3462,"source":"contracts/TownHall.algo.ts:791","pc":[4115,4116]},{"teal":3463,"source":"contracts/TownHall.algo.ts:791","pc":[4117]},{"teal":3464,"source":"contracts/TownHall.algo.ts:791","pc":[4118]},{"teal":3468,"source":"contracts/TownHall.algo.ts:793","pc":[4119,4120]},{"teal":3469,"source":"contracts/TownHall.algo.ts:793","pc":[4121,4122]},{"teal":3470,"source":"contracts/TownHall.algo.ts:793","pc":[4123]},{"teal":3474,"source":"contracts/TownHall.algo.ts:794","pc":[4124,4125]},{"teal":3475,"source":"contracts/TownHall.algo.ts:794","pc":[4126,4127]},{"teal":3476,"source":"contracts/TownHall.algo.ts:794","pc":[4128]},{"teal":3481,"source":"contracts/TownHall.algo.ts:796","pc":[4129,4130]},{"teal":3482,"source":"contracts/TownHall.algo.ts:796","pc":[4131]},{"teal":3483,"source":"contracts/TownHall.algo.ts:796","pc":[4132]},{"teal":3484,"source":"contracts/TownHall.algo.ts:796","pc":[4133]},{"teal":3485,"source":"contracts/TownHall.algo.ts:796","pc":[4134,4135,4136]},{"teal":3490,"source":"contracts/TownHall.algo.ts:799","pc":[4137]},{"teal":3491,"source":"contracts/Constants.ts:28","pc":[4138,4139]},{"teal":3492,"source":"contracts/TownHall.algo.ts:799","pc":[4140]},{"teal":3496,"source":"contracts/TownHall.algo.ts:800","pc":[4141]},{"teal":3501,"source":"contracts/TownHall.algo.ts:803","pc":[4142]},{"teal":3502,"source":"contracts/Constants.ts:27","pc":[4143,4144]},{"teal":3503,"source":"contracts/TownHall.algo.ts:803","pc":[4145]},{"teal":3504,"source":"contracts/TownHall.algo.ts:750","pc":[4146]},{"teal":3509,"source":"contracts/TownHall.algo.ts:806","pc":[4147,4148,4149]},{"teal":3510,"source":"contracts/TownHall.algo.ts:806","pc":[4150,4151,4152]},{"teal":3513,"source":"contracts/TownHall.algo.ts:806","pc":[4153,4154,4155]},{"teal":3514,"source":"contracts/TownHall.algo.ts:806","pc":[4156]},{"teal":3515,"source":"contracts/TownHall.algo.ts:806","pc":[4157]},{"teal":3519,"source":"contracts/TownHall.algo.ts:806","pc":[4158,4159,4160]},{"teal":3522,"source":"contracts/TownHall.algo.ts:806","pc":[4161,4162]},{"teal":3523,"source":"contracts/TownHall.algo.ts:806","pc":[4163,4164]},{"teal":3530,"source":"contracts/TownHall.algo.ts:813","pc":[4165]},{"teal":3531,"source":"contracts/TownHall.algo.ts:813","pc":[4166]},{"teal":3532,"source":"contracts/Constants.ts:27","pc":[4167,4168]},{"teal":3533,"source":"contracts/TownHall.algo.ts:813","pc":[4169]},{"teal":3536,"source":"contracts/TownHall.algo.ts:812","errorMessage":"Invalid method call: Game is not in Dawn Stage Unmasking state.","pc":[4170]},{"teal":3540,"source":"contracts/TownHall.algo.ts:817","pc":[4171]},{"teal":3541,"source":"contracts/TownHall.algo.ts:817","pc":[4172]},{"teal":3542,"source":"contracts/TownHall.algo.ts:817","pc":[4173,4174]},{"teal":3543,"source":"contracts/TownHall.algo.ts:817","pc":[4175]},{"teal":3546,"source":"contracts/TownHall.algo.ts:817","errorMessage":"Error state: Other player called method.","pc":[4176]},{"teal":3550,"source":"contracts/TownHall.algo.ts:820","pc":[4177,4178]},{"teal":3551,"source":"contracts/TownHall.algo.ts:820","pc":[4179,4180]},{"teal":3552,"source":"contracts/TownHall.algo.ts:820","pc":[4181,4182]},{"teal":3553,"source":"contracts/TownHall.algo.ts:820","pc":[4183,4184]},{"teal":3557,"source":"contracts/TownHall.algo.ts:821","pc":[4185,4186]},{"teal":3558,"source":"contracts/TownHall.algo.ts:821","pc":[4187,4188,4189]},{"teal":3559,"source":"contracts/TownHall.algo.ts:821","pc":[4190,4191]},{"teal":3563,"source":"contracts/TownHall.algo.ts:822","pc":[4192,4193]},{"teal":3564,"source":"contracts/TownHall.algo.ts:822","pc":[4194,4195]},{"teal":3565,"source":"contracts/TownHall.algo.ts:822","pc":[4196,4197]},{"teal":3566,"source":"contracts/TownHall.algo.ts:822","pc":[4198,4199]},{"teal":3571,"source":"contracts/TownHall.algo.ts:824","pc":[4200,4201]},{"teal":3572,"source":"contracts/TownHall.algo.ts:824","pc":[4202,4203]},{"teal":3573,"source":"contracts/TownHall.algo.ts:824","pc":[4204]},{"teal":3574,"source":"contracts/TownHall.algo.ts:824","pc":[4205]},{"teal":3575,"source":"contracts/TownHall.algo.ts:824","pc":[4206,4207,4208]},{"teal":3580,"source":"contracts/TownHall.algo.ts:828","pc":[4209]},{"teal":3581,"source":"contracts/Constants.ts:28","pc":[4210,4211]},{"teal":3582,"source":"contracts/TownHall.algo.ts:828","pc":[4212]},{"teal":3586,"source":"contracts/TownHall.algo.ts:829","pc":[4213,4214]},{"teal":3587,"source":"contracts/TownHall.algo.ts:829","pc":[4215,4216]},{"teal":3588,"source":"contracts/TownHall.algo.ts:829","pc":[4217]},{"teal":3592,"source":"contracts/TownHall.algo.ts:830","pc":[4218]},{"teal":3598,"source":"contracts/TownHall.algo.ts:833","pc":[4219,4220]},{"teal":3599,"source":"contracts/TownHall.algo.ts:833","pc":[4221,4222]},{"teal":3600,"source":"contracts/TownHall.algo.ts:833","pc":[4223]},{"teal":3601,"source":"contracts/TownHall.algo.ts:833","pc":[4224]},{"teal":3602,"source":"contracts/TownHall.algo.ts:833","pc":[4225,4226,4227]},{"teal":3607,"source":"contracts/TownHall.algo.ts:835","pc":[4228,4229]},{"teal":3608,"source":"contracts/TownHall.algo.ts:835","pc":[4230,4231]},{"teal":3609,"source":"contracts/TownHall.algo.ts:835","pc":[4232]},{"teal":3614,"source":"contracts/TownHall.algo.ts:839","pc":[4233]},{"teal":3615,"source":"contracts/TownHall.algo.ts:839","pc":[4234,4235]},{"teal":3616,"source":"contracts/TownHall.algo.ts:839","pc":[4236]},{"teal":3620,"source":"contracts/TownHall.algo.ts:841","pc":[4237]},{"teal":3621,"source":"contracts/Constants.ts:19","pc":[4238,4239]},{"teal":3622,"source":"contracts/TownHall.algo.ts:841","pc":[4240]},{"teal":3623,"source":"contracts/TownHall.algo.ts:806","pc":[4241]},{"teal":3628,"source":"contracts/TownHall.algo.ts:845","pc":[4242,4243,4244]},{"teal":3629,"source":"contracts/TownHall.algo.ts:845","pc":[4245]},{"teal":3630,"source":"contracts/TownHall.algo.ts:845","pc":[4246]},{"teal":3634,"source":"contracts/TownHall.algo.ts:845","pc":[4247,4248,4249]},{"teal":3638,"source":"contracts/TownHall.algo.ts:846","pc":[4250]},{"teal":3639,"source":"contracts/TownHall.algo.ts:846","pc":[4251]},{"teal":3640,"source":"contracts/Constants.ts:28","pc":[4252,4253]},{"teal":3641,"source":"contracts/TownHall.algo.ts:846","pc":[4254]},{"teal":3644,"source":"contracts/TownHall.algo.ts:846","errorMessage":"Invalid method call: Game is not in Game Over state.","pc":[4255]},{"teal":3648,"source":"contracts/TownHall.algo.ts:847","pc":[4256,4257]},{"teal":3649,"source":"contracts/TownHall.algo.ts:847","pc":[4258]},{"teal":3653,"source":"contracts/TownHall.algo.ts:848","pc":[4259,4260]},{"teal":3654,"source":"contracts/TownHall.algo.ts:848","pc":[4261]},{"teal":3655,"source":"contracts/TownHall.algo.ts:848","pc":[4262]},{"teal":3656,"source":"contracts/TownHall.algo.ts:848","pc":[4263]},{"teal":3660,"source":"contracts/TownHall.algo.ts:849","pc":[4264,4265]},{"teal":3661,"source":"contracts/TownHall.algo.ts:849","pc":[4266]},{"teal":3662,"source":"contracts/TownHall.algo.ts:849","pc":[4267]},{"teal":3663,"source":"contracts/TownHall.algo.ts:849","pc":[4268]},{"teal":3667,"source":"contracts/TownHall.algo.ts:850","pc":[4269,4270]},{"teal":3668,"source":"contracts/TownHall.algo.ts:850","pc":[4271]},{"teal":3669,"source":"contracts/TownHall.algo.ts:850","pc":[4272]},{"teal":3670,"source":"contracts/TownHall.algo.ts:850","pc":[4273]},{"teal":3674,"source":"contracts/TownHall.algo.ts:851","pc":[4274,4275]},{"teal":3675,"source":"contracts/TownHall.algo.ts:851","pc":[4276]},{"teal":3676,"source":"contracts/TownHall.algo.ts:851","pc":[4277]},{"teal":3677,"source":"contracts/TownHall.algo.ts:851","pc":[4278]},{"teal":3681,"source":"contracts/TownHall.algo.ts:852","pc":[4279,4280]},{"teal":3682,"source":"contracts/TownHall.algo.ts:852","pc":[4281]},{"teal":3683,"source":"contracts/TownHall.algo.ts:852","pc":[4282]},{"teal":3684,"source":"contracts/TownHall.algo.ts:852","pc":[4283]},{"teal":3688,"source":"contracts/TownHall.algo.ts:853","pc":[4284,4285]},{"teal":3689,"source":"contracts/TownHall.algo.ts:853","pc":[4286]},{"teal":3690,"source":"contracts/TownHall.algo.ts:853","pc":[4287]},{"teal":3691,"source":"contracts/TownHall.algo.ts:853","pc":[4288]},{"teal":3698,"source":"contracts/TownHall.algo.ts:855","pc":[4289]},{"teal":3699,"source":"contracts/TownHall.algo.ts:855","pc":[4290]},{"teal":3700,"source":"contracts/TownHall.algo.ts:855","pc":[4291,4292]},{"teal":3704,"source":"contracts/TownHall.algo.ts:856","pc":[4293,4294]},{"teal":3705,"source":"contracts/TownHall.algo.ts:856","pc":[4295,4296]},{"teal":3709,"source":"contracts/TownHall.algo.ts:857","pc":[4297]},{"teal":3710,"source":"contracts/TownHall.algo.ts:857","pc":[4298]},{"teal":3711,"source":"contracts/TownHall.algo.ts:857","pc":[4299,4300,4301]},{"teal":3712,"source":"contracts/TownHall.algo.ts:857","pc":[4302,4303]},{"teal":3715,"source":"contracts/TownHall.algo.ts:855","pc":[4304]},{"teal":3716,"source":"contracts/TownHall.algo.ts:855","pc":[4305,4306]},{"teal":3719,"source":"contracts/TownHall.algo.ts:855","pc":[4307]},{"teal":3726,"source":"contracts/TownHall.algo.ts:860","pc":[4308]},{"teal":3727,"source":"contracts/TownHall.algo.ts:860","pc":[4309]},{"teal":3728,"source":"contracts/TownHall.algo.ts:860","pc":[4310,4311]},{"teal":3732,"source":"contracts/TownHall.algo.ts:861","pc":[4312,4313]},{"teal":3733,"source":"contracts/TownHall.algo.ts:861","pc":[4314,4315]},{"teal":3737,"source":"contracts/TownHall.algo.ts:862","pc":[4316]},{"teal":3738,"source":"contracts/TownHall.algo.ts:862","pc":[4317]},{"teal":3739,"source":"contracts/TownHall.algo.ts:862","pc":[4318,4319,4320]},{"teal":3740,"source":"contracts/TownHall.algo.ts:862","pc":[4321,4322]},{"teal":3743,"source":"contracts/TownHall.algo.ts:860","pc":[4323]},{"teal":3744,"source":"contracts/TownHall.algo.ts:860","pc":[4324,4325]},{"teal":3747,"source":"contracts/TownHall.algo.ts:860","pc":[4326]},{"teal":3754,"source":"contracts/TownHall.algo.ts:864","pc":[4327]},{"teal":3755,"source":"contracts/TownHall.algo.ts:864","pc":[4328]},{"teal":3756,"source":"contracts/TownHall.algo.ts:864","pc":[4329,4330]},{"teal":3760,"source":"contracts/TownHall.algo.ts:865","pc":[4331,4332]},{"teal":3761,"source":"contracts/TownHall.algo.ts:865","pc":[4333,4334]},{"teal":3765,"source":"contracts/TownHall.algo.ts:866","pc":[4335,4336]},{"teal":3766,"source":"contracts/TownHall.algo.ts:866","pc":[4337]},{"teal":3767,"source":"contracts/TownHall.algo.ts:866","pc":[4338,4339,4340]},{"teal":3768,"source":"contracts/TownHall.algo.ts:866","pc":[4341,4342]},{"teal":3771,"source":"contracts/TownHall.algo.ts:864","pc":[4343]},{"teal":3772,"source":"contracts/TownHall.algo.ts:864","pc":[4344,4345]},{"teal":3775,"source":"contracts/TownHall.algo.ts:864","pc":[4346]},{"teal":3782,"source":"contracts/TownHall.algo.ts:869","pc":[4347]},{"teal":3783,"source":"contracts/TownHall.algo.ts:869","pc":[4348]},{"teal":3784,"source":"contracts/TownHall.algo.ts:869","pc":[4349,4350]},{"teal":3788,"source":"contracts/TownHall.algo.ts:870","pc":[4351,4352]},{"teal":3789,"source":"contracts/TownHall.algo.ts:870","pc":[4353,4354]},{"teal":3793,"source":"contracts/TownHall.algo.ts:871","pc":[4355,4356]},{"teal":3794,"source":"contracts/TownHall.algo.ts:871","pc":[4357]},{"teal":3795,"source":"contracts/TownHall.algo.ts:871","pc":[4358,4359,4360]},{"teal":3796,"source":"contracts/TownHall.algo.ts:871","pc":[4361,4362]},{"teal":3799,"source":"contracts/TownHall.algo.ts:869","pc":[4363]},{"teal":3800,"source":"contracts/TownHall.algo.ts:869","pc":[4364,4365]},{"teal":3803,"source":"contracts/TownHall.algo.ts:869","pc":[4366]},{"teal":3810,"source":"contracts/TownHall.algo.ts:874","pc":[4367]},{"teal":3811,"source":"contracts/TownHall.algo.ts:874","pc":[4368]},{"teal":3812,"source":"contracts/TownHall.algo.ts:874","pc":[4369,4370]},{"teal":3816,"source":"contracts/TownHall.algo.ts:875","pc":[4371,4372]},{"teal":3817,"source":"contracts/TownHall.algo.ts:875","pc":[4373,4374]},{"teal":3821,"source":"contracts/TownHall.algo.ts:876","pc":[4375,4376]},{"teal":3822,"source":"contracts/TownHall.algo.ts:876","pc":[4377]},{"teal":3823,"source":"contracts/TownHall.algo.ts:876","pc":[4378,4379,4380]},{"teal":3824,"source":"contracts/TownHall.algo.ts:876","pc":[4381,4382]},{"teal":3827,"source":"contracts/TownHall.algo.ts:874","pc":[4383]},{"teal":3828,"source":"contracts/TownHall.algo.ts:874","pc":[4384,4385]},{"teal":3831,"source":"contracts/TownHall.algo.ts:874","pc":[4386]},{"teal":3838,"source":"contracts/TownHall.algo.ts:879","pc":[4387]},{"teal":3839,"source":"contracts/TownHall.algo.ts:879","pc":[4388]},{"teal":3840,"source":"contracts/TownHall.algo.ts:879","pc":[4389,4390]},{"teal":3844,"source":"contracts/TownHall.algo.ts:880","pc":[4391,4392]},{"teal":3845,"source":"contracts/TownHall.algo.ts:880","pc":[4393,4394]},{"teal":3849,"source":"contracts/TownHall.algo.ts:881","pc":[4395,4396]},{"teal":3850,"source":"contracts/TownHall.algo.ts:881","pc":[4397]},{"teal":3851,"source":"contracts/TownHall.algo.ts:881","pc":[4398,4399,4400]},{"teal":3852,"source":"contracts/TownHall.algo.ts:881","pc":[4401,4402]},{"teal":3855,"source":"contracts/TownHall.algo.ts:879","pc":[4403]},{"teal":3856,"source":"contracts/TownHall.algo.ts:879","pc":[4404,4405]},{"teal":3859,"source":"contracts/TownHall.algo.ts:879","pc":[4406]},{"teal":3863,"source":"contracts/TownHall.algo.ts:884","pc":[4407]},{"teal":3864,"source":"contracts/TownHall.algo.ts:884","pc":[4408]},{"teal":3865,"source":"contracts/TownHall.algo.ts:884","pc":[4409,4410]},{"teal":3869,"source":"contracts/TownHall.algo.ts:884","pc":[4411,4412]},{"teal":3870,"source":"contracts/TownHall.algo.ts:884","pc":[4413]},{"teal":3871,"source":"contracts/TownHall.algo.ts:884","pc":[4414,4415]},{"teal":3874,"source":"contracts/TownHall.algo.ts:884","pc":[4416]},{"teal":3875,"source":"contracts/TownHall.algo.ts:884","pc":[4417,4418]},{"teal":3878,"source":"contracts/TownHall.algo.ts:884","pc":[4419]},{"teal":3879,"source":"contracts/TownHall.algo.ts:845","pc":[4420]},{"teal":3884,"source":"contracts/TownHall.algo.ts:887","pc":[4421,4422,4423]},{"teal":3885,"source":"contracts/TownHall.algo.ts:887","pc":[4424]},{"teal":3886,"source":"contracts/TownHall.algo.ts:887","pc":[4425]},{"teal":3890,"source":"contracts/TownHall.algo.ts:887","pc":[4426,4427,4428]},{"teal":3894,"source":"contracts/TownHall.algo.ts:888","pc":[4429]},{"teal":3895,"source":"contracts/TownHall.algo.ts:888","pc":[4430]},{"teal":3896,"source":"contracts/Constants.ts:28","pc":[4431,4432]},{"teal":3897,"source":"contracts/TownHall.algo.ts:888","pc":[4433]},{"teal":3900,"source":"contracts/TownHall.algo.ts:888","errorMessage":"Invalid method call: Game is not in Game Over state.","pc":[4434]},{"teal":3901,"source":"contracts/TownHall.algo.ts:887","pc":[4435]},{"teal":3904,"source":"contracts/TownHall.algo.ts:34","pc":[4436,4437,4438,4439,4440,4441]},{"teal":3905,"source":"contracts/TownHall.algo.ts:34","pc":[4442,4443,4444]},{"teal":3906,"source":"contracts/TownHall.algo.ts:34","pc":[4445,4446,4447,4448]},{"teal":3909,"source":"contracts/TownHall.algo.ts:34","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[4449]},{"teal":3912,"source":"contracts/TownHall.algo.ts:34","pc":[4450,4451,4452,4453,4454,4455]},{"teal":3913,"source":"contracts/TownHall.algo.ts:34","pc":[4456,4457,4458,4459,4460,4461]},{"teal":3914,"source":"contracts/TownHall.algo.ts:34","pc":[4462,4463,4464,4465,4466,4467]},{"teal":3915,"source":"contracts/TownHall.algo.ts:34","pc":[4468,4469,4470,4471,4472,4473]},{"teal":3916,"source":"contracts/TownHall.algo.ts:34","pc":[4474,4475,4476,4477,4478,4479]},{"teal":3917,"source":"contracts/TownHall.algo.ts:34","pc":[4480,4481,4482,4483,4484,4485]},{"teal":3918,"source":"contracts/TownHall.algo.ts:34","pc":[4486,4487,4488,4489,4490,4491]},{"teal":3919,"source":"contracts/TownHall.algo.ts:34","pc":[4492,4493,4494,4495,4496,4497]},{"teal":3920,"source":"contracts/TownHall.algo.ts:34","pc":[4498,4499,4500,4501,4502,4503]},{"teal":3921,"source":"contracts/TownHall.algo.ts:34","pc":[4504,4505,4506,4507,4508,4509]},{"teal":3922,"source":"contracts/TownHall.algo.ts:34","pc":[4510,4511,4512,4513,4514,4515]},{"teal":3923,"source":"contracts/TownHall.algo.ts:34","pc":[4516,4517,4518,4519,4520,4521]},{"teal":3924,"source":"contracts/TownHall.algo.ts:34","pc":[4522,4523,4524,4525,4526,4527]},{"teal":3925,"source":"contracts/TownHall.algo.ts:34","pc":[4528,4529,4530,4531,4532,4533]},{"teal":3926,"source":"contracts/TownHall.algo.ts:34","pc":[4534,4535,4536,4537,4538,4539]},{"teal":3927,"source":"contracts/TownHall.algo.ts:34","pc":[4540,4541,4542,4543,4544,4545]},{"teal":3928,"source":"contracts/TownHall.algo.ts:34","pc":[4546,4547,4548,4549,4550,4551]},{"teal":3929,"source":"contracts/TownHall.algo.ts:34","pc":[4552,4553,4554]},{"teal":3930,"source":"contracts/TownHall.algo.ts:34","pc":[4555,4556,4557,4558,4559,4560,4561,4562,4563,4564,4565,4566,4567,4568,4569,4570,4571,4572,4573,4574,4575,4576,4577,4578,4579,4580,4581,4582,4583,4584,4585,4586,4587,4588,4589,4590]},{"teal":3933,"source":"contracts/TownHall.algo.ts:34","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[4591]},{"teal":3936,"source":"contracts/TownHall.algo.ts:34","pc":[4592,4593,4594,4595,4596,4597]},{"teal":3937,"source":"contracts/TownHall.algo.ts:34","pc":[4598,4599,4600]},{"teal":3938,"source":"contracts/TownHall.algo.ts:34","pc":[4601,4602,4603,4604]},{"teal":3941,"source":"contracts/TownHall.algo.ts:34","errorMessage":"this contract does not implement the given ABI method for call DeleteApplication","pc":[4605]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDEw"},"byteCode":{"approval":"CiARAAECBsCEPQMMIAQFBwgKYPCTCQkLJi4JZ2FtZVN0YXRlFGp1c3RFbGltaW5hdGVkUGxheWVyD3BsYXllcjFBbGdvQWRkcg9wbGF5ZXIyQWxnb0FkZHIPcGxheWVyM0FsZ29BZGRyD3BsYXllcjRBbGdvQWRkcg9wbGF5ZXI1QWxnb0FkZHIPcGxheWVyNkFsZ29BZGRyAAttYWZpYVZpY3RpbQgAAAAAAAAAAA1kb2N0b3JQYXRpZW50CAAAAAAAAAABBmRvY3RvcgxwbGF5ZXJzQWxpdmUUcGxheWVyMVJlY2VpdmVkVm90ZXMUcGxheWVyMlJlY2VpdmVkVm90ZXMUcGxheWVyM1JlY2VpdmVkVm90ZXMUcGxheWVyNFJlY2VpdmVkVm90ZXMUcGxheWVyNVJlY2VpdmVkVm90ZXMUcGxheWVyNlJlY2VpdmVkVm90ZXMFbWFmaWERbHNpZ0Z1bmRlckFkZHJlc3MMcGxheWVyc1ZvdGVkDXBsYXllcnNKb2luZWQPcGxheWVyMUhhc1ZvdGVkD3BsYXllcjJIYXNWb3RlZA9wbGF5ZXIzSGFzVm90ZWQPcGxheWVyNEhhc1ZvdGVkD3BsYXllcjVIYXNWb3RlZA9wbGF5ZXI2SGFzVm90ZWQOZG9jdG9yS2V5SW1hZ2UNbWFmaWFLZXlJbWFnZQQVH3x1DmNyZWF0b3JBZGRyZXNzB2J1dGNoZXIHaW5ua2VlcAZmYXJtZXIGZ3JvY2VyYBfx06cxl9eUJpVjjE+prA/DaIxPl3S5BaFOOj8XG6xYbFXoP/l6Gu/7OvAK2yLGuwiz9IHjqqDxoJ4w7XQdiuT89eCV1dAK9gDbGMssBLPt0DzHRKKIiuQMqiMpRsXn4RBkb2N0b3JDb21taXRtZW50D2J1dGNoZXJLZXlJbWFnZQ9pbm5rZWVwS2V5SW1hZ2UPbWFmaWFDb21taXRtZW50DmZhcm1lcktleUltYWdlDmdyb2NlcktleUltYWdlMRgUJQsxGQiNDA5GAAAAAAAAAAAO1A44AAAAAAAAAAAAAACIAAIjQ4oAACciMQBnJxYyA2cqMgMnClBnKzIDJwpQZycEMgMnClBnJwUyAycKUGcnBjIDJwpQZycHMgMnClBnJxUyA2cnDTIDZyclMgNnJyMyA2cnJDIDZycmMgNnJxkiZycaImcnGyJnJxwiZycdImcnHiJnJxciZycPImcnECJnJxEiZycSImcnEyJnJxQiZycXImcnGCJnJw4lZykyA2cnCTIDZycLMgNnKCJniSchNhoBF4gABRZQsCNDigEBi/+JJyE2GgRXAgA2GgNXAgA2GgJXAgA2GgFXAgCIAAuAAQAiTwJUULAjQ4oEAScISYv/i/6L/VBQAowAiwCAIHPtp1MpnX1IMznYCAmh2AVTvaQC//5b/v////8AAAABqowBi/2L/4v84QKL/osB4QLgAhKMAEYBiSchNhoBVwIAiAAMSRUWVwYCTFBQsCNDigEBJwhHAov/AowAiwCAMBoBEeo5f+aaSxuntkNLrNdkd0uE84USv2cw0qD2sPYkHqv//rFT//+5/v////+qq6qMAYsB5QKMAosCjABGAoknIYgABRZQsCNDigABKGSJNhoBSRUhBxJEiAACI0OKAQAoZCISRDEAJyJkEkQnFmQyAxJEi/8yAxNEJxaL/2coI2eJNhoBVwIAMRYjCUk4ECMSRIgAAiNDigIAJwhHAyhkIxJEJxhkJQxEKmRXACAxABJJQAAJK2RXACAxABIRSUAACicEZFcAIDEAEhFJQAAKJwVkVwAgMQASEUlAAAonBmRXACAxABIRSUAACicHZFcAIDEAEhFBAAEAi/84CIGwmEYPRIv+VwBgjACL/ldgYIwBi/5XwGCMAov+gaACIQdYjAOLA4sCiwGLAIj+XEQnCr1MSBRBAAknCiENuUhCAAknCkm9RCENCNMnCr1MSEQnCicYZCENC4sBuycYZCMIJxhMZycWZDIDE0SxI7IQIQ6yCCcWZLIHIrIBsypkVwAgMgMSQQAKKmQiMQBdKkxniStkVwAgMgMSQQAKK2QiMQBdK0xniScEZFcAIDIDEkEADCcEZCIxAF0nBExniScFZFcAIDIDEkEADCcFZCIxAF0nBUxniScGZFcAIDIDEkEADCcGZCIxAF0nBkxniScHZFcAIDIDEkEADycHZCIxAF0nB0xnKCRniQCJMRYjCUk4ECMSRDEWJAlJOBAjEkQxFiEFCUk4ECMSRDEWIQgJSTgQIxJEMRYhCQlJOBAjEkQxFiUJSTgQIxJEMRYhCglJOBAjEkQ2GgVXAgA2GgRXAgA2GgNXAgA2GgJXAgA2GgFXAgCIAAIjQ4oMAChkJBJEi/0BvUxIFESL/QEiuUiL/zEAMgpQEkQnCiKBwAS6i/4SRIv5OACAIMy0KLrYYVmoDh6cpCTro2YS9JHQkKIpBxwDStS/3rrHEkSL+DgAgCDgbmS8APe6ZatS5lSvHEQGO9aA4FTcnnkg1RuiIztUZRJEi/c4AIAgWQdzvDe/ic3M8tMNWKF/1zM6gXacNd8x4B+yrc92KYQSRIv2OACAIF0J8uM94EKFMEusZhjWns+ak589JWxurci61na7oPNrEkSL9TgAgCA/z38vFIZ+jITbGUZ+Fz8CtKp7Y+ZwtsanHefOPLShrhJEi/Q4AIAgAfwQqM86+lJ71xP8FdXCVMG4D/gqbgKRsOAf7RRcRUsSRIv6OAAnFmQSRIv6OAcxABJEi/o4CCEOEkQnFWQyAxJBAAsnFTEAZycgi/1niScNZDIDEkEACycNMQBnJx+L/WeJJyVkMgMSQQALJyUxAGcnLIv9Z4knI2QyAxJBAAsnIzEAZycpi/1niSckZDIDEkEACyckMQBnJyqL/WeJJyZkMgMSQQAPJyYxAGcnLYv9ZyghBWeJAIk2GgEXiAACI0OKAQAoZCEFEkSL/yINSUEABov/IQoMEEQxACpkVwAgEklAAAkxACtkVwAgEhFJQAAKMQAnBGRXACASEUlAAAoxACcFZFcAIBIRSUAACjEAJwZkVwAgEhFJQAAKMQAnB2RXACASERRBAAEAi/8jEklBAAkqZFcAIDIDExBBAAwnD2QjCCcPTGdCAKiL/yQSSUEACStkVwAgMgMTEEEADCcQZCMIJxBMZ0IAiIv/IQUSSUEACicEZFcAIDIDExBBAAwnEWQjCCcRTGdCAGaL/yEIEklBAAonBWRXACAyAxMQQQAMJxJkIwgnEkxnQgBEi/8hCRJJQQAKJwZkVwAgMgMTEEEADCcTZCMIJxNMZ0IAIov/JRJJQQAKJwdkVwAgMgMTEEEADCcUZCMIJxRMZ0IAAQAxACpkVwAgEklBAAYnGWQiEhBBAAcnGSNnQgCRMQArZFcAIBJJQQAGJxpkIhIQQQAHJxojZ0IAdTEAJwRkVwAgEklBAAYnG2QiEhBBAAcnGyNnQgBYMQAnBWRXACASSUEABiccZCISEEEAByccI2dCADsxACcGZFcAIBJJQQAGJx1kIhIQQQAHJx0jZ0IAHjEAJwdkVwAgEklBAAYnHmQiEhBBAAcnHiNnQgABACcXZCMIJxdMZycXZCcOZBJBACAoIQhnJxciZycZImcnGiJnJxsiZyccImcnHSJnJx4iZ4mIAAIjQ4oAACcISShkIQgSRCkyA2cijAAyBiQYIhKMAScPZIsADUlAAA4nD2SLABJJQQADiwEQEUEADCkqZFcAIGcnD2SMACcQZIsADUlAAA4nEGSLABJJQQADiwEQEUEADCkrZFcAIGcnEGSMACcRZIsADUlAAA4nEWSLABJJQQADiwEQEUEADSknBGRXACBnJxFkjAAnEmSLAA1JQAAOJxJkiwASSUEAA4sBEBFBAA0pJwVkVwAgZycSZIwAJxNkiwANSUAADicTZIsAEklBAAOLARARQQANKScGZFcAIGcnE2SMACcUZIsADUlAAA4nFGSLABJJQQADiwEQEUEADSknB2RXACBnJxRkjAApZDIDE0SLACITRClkKmRXACASQQAJKmQnDFwgKkxnKWQrZFcAIBJBAAkrZCcMXCArTGcpZCcEZFcAIBJBAAsnBGQnDFwgJwRMZylkJwVkVwAgEkEACycFZCcMXCAnBUxnKWQnBmRXACASQQALJwZkJwxcICcGTGcpZCcHZFcAIBJBAAsnB2QnDFwgJwdMZycOZCMJJw5MZycPImcnECJnJxEiZycSImcnEyJnJxQiZyghCWeJNhoBVwIAiAACI0OKAQAnCEcCKGQhCRJEKWQxABJEJyeL/+ECjACLAIj3vIwBiwGL/+ECjAKLAicgZBJBAAonFTIDZyghBmeJiwInH2QSQQAFJw0yA2cpMgNnJw5kJA5BAAUoIQZniSglZ4k2GgFXAgCIAAIjQ4oBAChkJRJEMQAnFWQSRCcri/9nJw1kMgMSQQAHKCELZ0IABCghCmeJNhoBVwIAiAACI0OKAQAoZCEKEkQxACcNZBJEJw1kMgMTRCcoi/9nKCELZ4k2GgJJFSEHEkQ2GgFJFSEHEkSIAAIjQ4oCACcIKGQhCxJEMQAnFWQSRIv/MgMTRIv/i/5QAYwAiwAnK2QSRIv/KmRXACASQQALJwkqZFcAIGdCAHuL/ytkVwAgEkEACycJK2RXACBnQgBli/8nBGRXACASQQAMJwknBGRXACBnQgBNi/8nBWRXACASQQAMJwknBWRXACBnQgA1i/8nBmRXACASQQAMJwknBmRXACBnQgAdi/8nB2RXACASQQAMJwknB2RXACBnQgAFJwkyA2cnDWQyAxJBAAcoIQxnQgAEKCEPZ4k2GgJJFSEHEkQ2GgFJFSEHEkSIAAIjQ4oCACcIKGQhDxJEMQAnDWQSRCcLZDIDEkSL/zIDE0SL/4v+UAGMAIsAJyhkEkSL/ypkVwAgEkEACycLKmRXACBnQgB7i/8rZFcAIBJBAAsnCytkVwAgZ0IAZYv/JwRkVwAgEkEADCcLJwRkVwAgZ0IATYv/JwVkVwAgEkEADCcLJwVkVwAgZ0IANYv/JwZkVwAgEkEADCcLJwZkVwAgZ0IAHYv/JwdkVwAgEkEADCcLJwdkVwAgZ0IABScLMgNnKCEMZ4mIAAIjQ4oAAChkIQwSRCcJZDIDEklAAAgnCWQnC2QSEUEADycJMgNnJwsyA2coIQVniScJZCpkVwAgEkEAEykqZFcAIGcqZCcMXCAqTGdCAKwnCWQrZFcAIBJBABMpK2RXACBnK2QnDFwgK0xnQgCNJwlkJwRkVwAgEkEAFiknBGRXACBnJwRkJwxcICcETGdCAGonCWQnBWRXACASQQAWKScFZFcAIGcnBWQnDFwgJwVMZ0IARycJZCcGZFcAIBJBABYpJwZkVwAgZycGZCcMXCAnBkxnQgAkJwlkJwdkVwAgEkEAFiknB2RXACBnJwdkJwxcICcHTGdCAAEAJw5kIwknDkxnJwkyA2cnCzIDZycOZCQOQQAFKCEGZ4koIRBniTYaAVcCAIgAAiNDigEAJwhHAihkIRASRClkMQASRCcni//hAowAiwCI9BCMAYsBi//hAowCiwInIGQSQQAKKCEGZycVMgNniYsCJx9kEkEABScNMgNnKTIDZyghBWeJiAACI0OKAAAoZCEGEkQnCrwnIGQBvCcfZAG8JyxkAbwnKWQBvCcqZAG8Jy1kAbyxI7IQIQSyCCpkVwAgsgcisgGzsSOyECEEsggrZFcAILIHIrIBs7EjshAhBLIIJwRkVwAgsgcisgGzsSOyECEEsggnBWRXACCyByKyAbOxI7IQIQSyCCcGZFcAILIHIrIBs7EjshAhBLIIJwdkVwAgsgcisgGzsSOyECciZLIJIrIBs4mIAAIjQ4oAAChkIQYSRImABLhEezY2GgCOAfG8AIAEcM7qG4AEoBe9jIAE13LNvIAE9UC6LIAE/2MO/YAEVNkr44AEmwe/j4AET7Ehu4AExCNhaYAE7p82GoAEC151hYAEyGRYdYAE7cSGu4AEdzdi5YAEOZXtaoAE72Wml4AEattFODYaAI4R8d7x8vJo8s/y3/MS9Jv2ufjV+pj7A/s3+2P8R/0i/kT+owCABCSHwyw2GgCOAf9IAA==","clear":"Cg=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":4,"minor":0,"patch":2,"commitHash":"6b940281"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


/**
 * The argument types for the TownHall contract
 */
export type TownHallArgs = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication()void': Record<string, never>
    'dummyOpUp(uint64)uint64': {
      i: bigint | number
    }
    'dlog(byte[],byte[],byte[],byte[])bool': {
      g: Uint8Array
      x: Uint8Array
      v: Uint8Array
      z: Uint8Array
    }
    'hashPointToPoint(byte[])byte[]': {
      point: Uint8Array
    }
    'getGameState()uint64': Record<string, never>
    'setLSIGFunderAddress(address)void': {
      funderLSigAddress: string
    }
    'joinGameLobby(pay,byte[])void': {
      depositTxn: AppMethodCallTransactionArgument
      nizkDlog: Uint8Array
    }
    'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void': {
      msg: Uint8Array
      pkAll: Uint8Array
      keyImage: Uint8Array
      sig: Uint8Array
      challenges: Uint8Array
      funderLSigTxn: AppMethodCallTransactionArgument
      ringLSigTxn0: AppMethodCallTransactionArgument
      ringLSigTxn1: AppMethodCallTransactionArgument
      ringLSigTxn2: AppMethodCallTransactionArgument
      ringLSigTxn3: AppMethodCallTransactionArgument
      ringLSigTxn4: AppMethodCallTransactionArgument
      ringLSigTxn5: AppMethodCallTransactionArgument
    }
    'dayStageVote(uint64)void': {
      vote: bigint | number
    }
    'dayStageEliminate()void': Record<string, never>
    'dayStageUnmasking(byte[])void': {
      blsSk: Uint8Array
    }
    'nightStageMafiaCommit(byte[])void': {
      commitment: Uint8Array
    }
    'nightStageDoctorCommit(byte[])void': {
      commitment: Uint8Array
    }
    'dawnStageMafiaReveal(address,byte[32])void': {
      victimAim: string
      blinder: Uint8Array
    }
    'dawnStageDoctorReveal(address,byte[32])void': {
      patientAim: string
      blinder: Uint8Array
    }
    'dawnStageDeadOrSaved()void': Record<string, never>
    'dawnStageUnmasking(byte[])void': {
      blsSk: Uint8Array
    }
    'gameOver()void': Record<string, never>
    'deleteApplication()void': Record<string, never>
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication()void': []
    'dummyOpUp(uint64)uint64': [i: bigint | number]
    'dlog(byte[],byte[],byte[],byte[])bool': [g: Uint8Array, x: Uint8Array, v: Uint8Array, z: Uint8Array]
    'hashPointToPoint(byte[])byte[]': [point: Uint8Array]
    'getGameState()uint64': []
    'setLSIGFunderAddress(address)void': [funderLSigAddress: string]
    'joinGameLobby(pay,byte[])void': [depositTxn: AppMethodCallTransactionArgument, nizkDlog: Uint8Array]
    'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void': [msg: Uint8Array, pkAll: Uint8Array, keyImage: Uint8Array, sig: Uint8Array, challenges: Uint8Array, funderLSigTxn: AppMethodCallTransactionArgument, ringLSigTxn0: AppMethodCallTransactionArgument, ringLSigTxn1: AppMethodCallTransactionArgument, ringLSigTxn2: AppMethodCallTransactionArgument, ringLSigTxn3: AppMethodCallTransactionArgument, ringLSigTxn4: AppMethodCallTransactionArgument, ringLSigTxn5: AppMethodCallTransactionArgument]
    'dayStageVote(uint64)void': [vote: bigint | number]
    'dayStageEliminate()void': []
    'dayStageUnmasking(byte[])void': [blsSk: Uint8Array]
    'nightStageMafiaCommit(byte[])void': [commitment: Uint8Array]
    'nightStageDoctorCommit(byte[])void': [commitment: Uint8Array]
    'dawnStageMafiaReveal(address,byte[32])void': [victimAim: string, blinder: Uint8Array]
    'dawnStageDoctorReveal(address,byte[32])void': [patientAim: string, blinder: Uint8Array]
    'dawnStageDeadOrSaved()void': []
    'dawnStageUnmasking(byte[])void': [blsSk: Uint8Array]
    'gameOver()void': []
    'deleteApplication()void': []
  }
}

/**
 * The return type for each method
 */
export type TownHallReturns = {
  'createApplication()void': void
  'dummyOpUp(uint64)uint64': bigint
  'dlog(byte[],byte[],byte[],byte[])bool': boolean
  'hashPointToPoint(byte[])byte[]': Uint8Array
  'getGameState()uint64': bigint
  'setLSIGFunderAddress(address)void': void
  'joinGameLobby(pay,byte[])void': void
  'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void': void
  'dayStageVote(uint64)void': void
  'dayStageEliminate()void': void
  'dayStageUnmasking(byte[])void': void
  'nightStageMafiaCommit(byte[])void': void
  'nightStageDoctorCommit(byte[])void': void
  'dawnStageMafiaReveal(address,byte[32])void': void
  'dawnStageDoctorReveal(address,byte[32])void': void
  'dawnStageDeadOrSaved()void': void
  'dawnStageUnmasking(byte[])void': void
  'gameOver()void': void
  'deleteApplication()void': void
}

/**
 * Defines the types of available calls and state of the TownHall smart contract.
 */
export type TownHallTypes = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication()void' | 'createApplication', {
      argsObj: TownHallArgs['obj']['createApplication()void']
      argsTuple: TownHallArgs['tuple']['createApplication()void']
      returns: TownHallReturns['createApplication()void']
    }>
    & Record<'dummyOpUp(uint64)uint64' | 'dummyOpUp', {
      argsObj: TownHallArgs['obj']['dummyOpUp(uint64)uint64']
      argsTuple: TownHallArgs['tuple']['dummyOpUp(uint64)uint64']
      /**
       * the number (but we do nothing with it)
       */
      returns: TownHallReturns['dummyOpUp(uint64)uint64']
    }>
    & Record<'dlog(byte[],byte[],byte[],byte[])bool' | 'dlog', {
      argsObj: TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool']
      argsTuple: TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']
      returns: TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool']
    }>
    & Record<'hashPointToPoint(byte[])byte[]' | 'hashPointToPoint', {
      argsObj: TownHallArgs['obj']['hashPointToPoint(byte[])byte[]']
      argsTuple: TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']
      returns: TownHallReturns['hashPointToPoint(byte[])byte[]']
    }>
    & Record<'getGameState()uint64' | 'getGameState', {
      argsObj: TownHallArgs['obj']['getGameState()uint64']
      argsTuple: TownHallArgs['tuple']['getGameState()uint64']
      returns: TownHallReturns['getGameState()uint64']
    }>
    & Record<'setLSIGFunderAddress(address)void' | 'setLSIGFunderAddress', {
      argsObj: TownHallArgs['obj']['setLSIGFunderAddress(address)void']
      argsTuple: TownHallArgs['tuple']['setLSIGFunderAddress(address)void']
      returns: TownHallReturns['setLSIGFunderAddress(address)void']
    }>
    & Record<'joinGameLobby(pay,byte[])void' | 'joinGameLobby', {
      argsObj: TownHallArgs['obj']['joinGameLobby(pay,byte[])void']
      argsTuple: TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']
      returns: TownHallReturns['joinGameLobby(pay,byte[])void']
    }>
    & Record<'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void' | 'assignRole', {
      argsObj: TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']
      argsTuple: TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']
      returns: TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']
    }>
    & Record<'dayStageVote(uint64)void' | 'dayStageVote', {
      argsObj: TownHallArgs['obj']['dayStageVote(uint64)void']
      argsTuple: TownHallArgs['tuple']['dayStageVote(uint64)void']
      returns: TownHallReturns['dayStageVote(uint64)void']
    }>
    & Record<'dayStageEliminate()void' | 'dayStageEliminate', {
      argsObj: TownHallArgs['obj']['dayStageEliminate()void']
      argsTuple: TownHallArgs['tuple']['dayStageEliminate()void']
      returns: TownHallReturns['dayStageEliminate()void']
    }>
    & Record<'dayStageUnmasking(byte[])void' | 'dayStageUnmasking', {
      argsObj: TownHallArgs['obj']['dayStageUnmasking(byte[])void']
      argsTuple: TownHallArgs['tuple']['dayStageUnmasking(byte[])void']
      returns: TownHallReturns['dayStageUnmasking(byte[])void']
    }>
    & Record<'nightStageMafiaCommit(byte[])void' | 'nightStageMafiaCommit', {
      argsObj: TownHallArgs['obj']['nightStageMafiaCommit(byte[])void']
      argsTuple: TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']
      returns: TownHallReturns['nightStageMafiaCommit(byte[])void']
    }>
    & Record<'nightStageDoctorCommit(byte[])void' | 'nightStageDoctorCommit', {
      argsObj: TownHallArgs['obj']['nightStageDoctorCommit(byte[])void']
      argsTuple: TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']
      returns: TownHallReturns['nightStageDoctorCommit(byte[])void']
    }>
    & Record<'dawnStageMafiaReveal(address,byte[32])void' | 'dawnStageMafiaReveal', {
      argsObj: TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void']
      argsTuple: TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']
      returns: TownHallReturns['dawnStageMafiaReveal(address,byte[32])void']
    }>
    & Record<'dawnStageDoctorReveal(address,byte[32])void' | 'dawnStageDoctorReveal', {
      argsObj: TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void']
      argsTuple: TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']
      returns: TownHallReturns['dawnStageDoctorReveal(address,byte[32])void']
    }>
    & Record<'dawnStageDeadOrSaved()void' | 'dawnStageDeadOrSaved', {
      argsObj: TownHallArgs['obj']['dawnStageDeadOrSaved()void']
      argsTuple: TownHallArgs['tuple']['dawnStageDeadOrSaved()void']
      returns: TownHallReturns['dawnStageDeadOrSaved()void']
    }>
    & Record<'dawnStageUnmasking(byte[])void' | 'dawnStageUnmasking', {
      argsObj: TownHallArgs['obj']['dawnStageUnmasking(byte[])void']
      argsTuple: TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']
      returns: TownHallReturns['dawnStageUnmasking(byte[])void']
    }>
    & Record<'gameOver()void' | 'gameOver', {
      argsObj: TownHallArgs['obj']['gameOver()void']
      argsTuple: TownHallArgs['tuple']['gameOver()void']
      returns: TownHallReturns['gameOver()void']
    }>
    & Record<'deleteApplication()void' | 'deleteApplication', {
      argsObj: TownHallArgs['obj']['deleteApplication()void']
      argsTuple: TownHallArgs['tuple']['deleteApplication()void']
      returns: TownHallReturns['deleteApplication()void']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        creatorAddress: string
        player1AlgoAddr: [string, bigint]
        player2AlgoAddr: [string, bigint]
        player3AlgoAddr: [string, bigint]
        player4AlgoAddr: [string, bigint]
        player5AlgoAddr: [string, bigint]
        player6AlgoAddr: [string, bigint]
        mafia: string
        mafiaKeyImage: BinaryState
        doctor: string
        doctorKeyImage: BinaryState
        farmer: string
        farmerKeyImage: BinaryState
        butcher: string
        butcherKeyImage: BinaryState
        innkeep: string
        innkeepKeyImage: BinaryState
        grocer: string
        grocerKeyImage: BinaryState
        lsigFunderAddress: string
        player1HasVoted: bigint
        player1ReceivedVotes: bigint
        player2HasVoted: bigint
        player2ReceivedVotes: bigint
        player3HasVoted: bigint
        player3ReceivedVotes: bigint
        player4HasVoted: bigint
        player4ReceivedVotes: bigint
        player5HasVoted: bigint
        player5ReceivedVotes: bigint
        player6HasVoted: bigint
        player6ReceivedVotes: bigint
        playersVoted: bigint
        playersAlive: bigint
        justEliminatedPlayer: string
        mafiaCommitment: BinaryState
        doctorCommitment: BinaryState
        mafiaVictim: string
        doctorPatient: string
        playersJoined: bigint
        gameState: bigint
      }
      maps: {}
    }
    box: {
      keys: {}
      maps: {
        quickAccessPkBoxes: Map<bigint | number, Uint8Array>
        hashFilter: Map<Uint8Array | string, Uint8Array>
      }
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type TownHallSignatures = keyof TownHallTypes['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type TownHallNonVoidMethodSignatures = keyof TownHallTypes['methods'] extends infer T ? T extends keyof TownHallTypes['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the TownHall smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends TownHallSignatures> = TownHallTypes['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the TownHall smart contract to the method's return type
 */
export type MethodReturn<TSignature extends TownHallSignatures> = TownHallTypes['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = TownHallTypes['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = TownHallTypes['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type TownHallCreateCallParams =
  | Expand<CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & {method: 'createApplication()void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines supported delete method params for this smart contract
 */
export type TownHallDeleteCallParams =
  | Expand<CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication'}>
  | Expand<CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication()void'}>
/**
 * Defines arguments required for the deploy method.
 */
export type TownHallDeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: TownHallCreateCallParams
  /**
   * Delete transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  deleteParams?: TownHallDeleteCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the TownHall smart contract
 */
export abstract class TownHallParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends TownHallCreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication()void':
            return TownHallParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the TownHall smart contract using the createApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Gets available delete ABI call param factories
   */
  static get delete() {
    return {
      _resolveByMethod<TParams extends TownHallDeleteCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'deleteApplication':
          case 'deleteApplication()void':
            return TownHallParamsFactory.delete.deleteApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs delete ABI call params for the TownHall smart contract using the deleteApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      deleteApplication(params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']>): AppClientMethodCallParams {
        return {
          ...params,
          method: 'deleteApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the dummyOpUp(uint64)uint64 ABI method
   *
  * Dummy Op Up
  Dummy operation to get more opcode budget
  - The number to return, necssary to deduplicate the name

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dummyOpUp(params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dummyOpUp(uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.i],
    }
  }
  /**
   * Constructs a no op call for the dlog(byte[],byte[],byte[],byte[])bool ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dlog(params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dlog(byte[],byte[],byte[],byte[])bool' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.g, params.args.x, params.args.v, params.args.z],
    }
  }
  /**
   * Constructs a no op call for the hashPointToPoint(byte[])byte[] ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hashPointToPoint(params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hashPointToPoint(byte[])byte[]' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.point],
    }
  }
  /**
   * Constructs a no op call for the getGameState()uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getGameState(params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getGameState()uint64' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the setLSIGFunderAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setLsigFunderAddress(params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setLSIGFunderAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.funderLSigAddress],
    }
  }
  /**
   * Constructs a no op call for the joinGameLobby(pay,byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static joinGameLobby(params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'joinGameLobby(pay,byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.depositTxn, params.args.nizkDlog],
    }
  }
  /**
   * Constructs a no op call for the assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static assignRole(params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.msg, params.args.pkAll, params.args.keyImage, params.args.sig, params.args.challenges, params.args.funderLSigTxn, params.args.ringLSigTxn0, params.args.ringLSigTxn1, params.args.ringLSigTxn2, params.args.ringLSigTxn3, params.args.ringLSigTxn4, params.args.ringLSigTxn5],
    }
  }
  /**
   * Constructs a no op call for the dayStageVote(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageVote(params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageVote(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.vote],
    }
  }
  /**
   * Constructs a no op call for the dayStageEliminate()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageEliminate(params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageEliminate()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the dayStageUnmasking(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageUnmasking(params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageUnmasking(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.blsSk],
    }
  }
  /**
   * Constructs a no op call for the nightStageMafiaCommit(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static nightStageMafiaCommit(params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'nightStageMafiaCommit(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.commitment],
    }
  }
  /**
   * Constructs a no op call for the nightStageDoctorCommit(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static nightStageDoctorCommit(params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'nightStageDoctorCommit(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.commitment],
    }
  }
  /**
   * Constructs a no op call for the dawnStageMafiaReveal(address,byte[32])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageMafiaReveal(params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageMafiaReveal(address,byte[32])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.victimAim, params.args.blinder],
    }
  }
  /**
   * Constructs a no op call for the dawnStageDoctorReveal(address,byte[32])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageDoctorReveal(params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageDoctorReveal(address,byte[32])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.patientAim, params.args.blinder],
    }
  }
  /**
   * Constructs a no op call for the dawnStageDeadOrSaved()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageDeadOrSaved(params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageDeadOrSaved()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the dawnStageUnmasking(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageUnmasking(params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageUnmasking(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.blsSk],
    }
  }
  /**
   * Constructs a no op call for the gameOver()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static gameOver(params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'gameOver()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the TownHall smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class TownHallFactory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `TownHallFactory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new TownHallClient(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new TownHallClient(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the TownHall smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: TownHallDeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? TownHallParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (TownHallCreateCallParams & { args: Uint8Array[] }) : undefined,
      deleteParams: params.deleteParams?.method ? TownHallParamsFactory.delete._resolveByMethod(params.deleteParams) : params.deleteParams ? params.deleteParams as (TownHallDeleteCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new TownHallClient(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.params.create(TownHallParamsFactory.create.createApplication(params))
      },
    },

    /**
     * Gets available deployDelete methods
     */
    deployDelete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the deleteApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The deployDelete params
       */
      deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appFactory.params.deployDelete(TownHallParamsFactory.delete.deleteApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.createTransaction.create(TownHallParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using an ABI method call using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        const result = await this.appFactory.send.create(TownHallParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | TownHallReturns['createApplication()void']) }, appClient: new TownHallClient(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the TownHall smart contract
 */
export class TownHallClient {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `TownHallClient`
   *
   * @param appClient An `AppClient` instance which has been created with the TownHall app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `TownHallClient`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends TownHallNonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `TownHallClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<TownHallClient> {
    return new TownHallClient(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `TownHallClient` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<TownHallClient> {
    return new TownHallClient(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete params
       */
      deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.params.delete(TownHallParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call params: the number (but we do nothing with it)
     */
    dummyOpUp: (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dummyOpUp(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dlog: (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dlog(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hashPointToPoint: (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.hashPointToPoint(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getGameState: (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.getGameState(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `setLSIGFunderAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setLsigFunderAddress: (params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.setLsigFunderAddress(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(pay,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    joinGameLobby: (params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.joinGameLobby(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    assignRole: (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.assignRole(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageVote: (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageVote(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageEliminate: (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageEliminate(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageUnmasking: (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    nightStageMafiaCommit: (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.nightStageMafiaCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    nightStageDoctorCommit: (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.nightStageDoctorCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageMafiaReveal: (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageDoctorReveal: (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageDeadOrSaved: (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageUnmasking: (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    gameOver: (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.gameOver(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete transaction
       */
      deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.createTransaction.delete(TownHallParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call transaction: the number (but we do nothing with it)
     */
    dummyOpUp: (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dummyOpUp(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dlog: (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dlog(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hashPointToPoint: (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.hashPointToPoint(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getGameState: (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.getGameState(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `setLSIGFunderAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setLsigFunderAddress: (params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.setLsigFunderAddress(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(pay,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    joinGameLobby: (params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.joinGameLobby(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    assignRole: (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.assignRole(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageVote: (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageVote(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageEliminate: (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageEliminate(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageUnmasking: (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    nightStageMafiaCommit: (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.nightStageMafiaCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    nightStageDoctorCommit: (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.nightStageDoctorCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageMafiaReveal: (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageDoctorReveal: (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageDeadOrSaved: (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageUnmasking: (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    gameOver: (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.gameOver(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the TownHall smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete result
       */
      deleteApplication: async (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']> & SendParams = {args: []}) => {
        const result = await this.appClient.send.delete(TownHallParamsFactory.delete.deleteApplication(params))
        return {...result, return: result.return as unknown as (undefined | TownHallReturns['deleteApplication()void'])}
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call result: the number (but we do nothing with it)
     */
    dummyOpUp: async (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dummyOpUp(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dummyOpUp(uint64)uint64'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dlog: async (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dlog(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hashPointToPoint: async (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.hashPointToPoint(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['hashPointToPoint(byte[])byte[]'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getGameState: async (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.getGameState(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['getGameState()uint64'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `setLSIGFunderAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setLsigFunderAddress: async (params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.setLsigFunderAddress(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['setLSIGFunderAddress(address)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(pay,byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    joinGameLobby: async (params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.joinGameLobby(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['joinGameLobby(pay,byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    assignRole: async (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.assignRole(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageVote: async (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageVote(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageVote(uint64)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageEliminate: async (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageEliminate(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageEliminate()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageUnmasking: async (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageUnmasking(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageUnmasking(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    nightStageMafiaCommit: async (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.nightStageMafiaCommit(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['nightStageMafiaCommit(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    nightStageDoctorCommit: async (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.nightStageDoctorCommit(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['nightStageDoctorCommit(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageMafiaReveal: async (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageMafiaReveal(address,byte[32])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageDoctorReveal: async (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageDoctorReveal(address,byte[32])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageDeadOrSaved: async (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageDeadOrSaved()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageUnmasking: async (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageUnmasking(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageUnmasking(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    gameOver: async (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.gameOver(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['gameOver()void'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new TownHallClient(this.appClient.clone(params))
  }

  /**
   * Methods to access state for the current TownHall app
   */
  state = {
    /**
     * Methods to access global state for the current TownHall app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          creatorAddress: result.creatorAddress,
          player1AlgoAddr: result.player1AlgoAddr,
          player2AlgoAddr: result.player2AlgoAddr,
          player3AlgoAddr: result.player3AlgoAddr,
          player4AlgoAddr: result.player4AlgoAddr,
          player5AlgoAddr: result.player5AlgoAddr,
          player6AlgoAddr: result.player6AlgoAddr,
          mafia: result.mafia,
          mafiaKeyImage: new BinaryStateValue(result.mafiaKeyImage),
          doctor: result.doctor,
          doctorKeyImage: new BinaryStateValue(result.doctorKeyImage),
          farmer: result.farmer,
          farmerKeyImage: new BinaryStateValue(result.farmerKeyImage),
          butcher: result.butcher,
          butcherKeyImage: new BinaryStateValue(result.butcherKeyImage),
          innkeep: result.innkeep,
          innkeepKeyImage: new BinaryStateValue(result.innkeepKeyImage),
          grocer: result.grocer,
          grocerKeyImage: new BinaryStateValue(result.grocerKeyImage),
          lsigFunderAddress: result.lsigFunderAddress,
          player1HasVoted: result.player1HasVoted,
          player1ReceivedVotes: result.player1ReceivedVotes,
          player2HasVoted: result.player2HasVoted,
          player2ReceivedVotes: result.player2ReceivedVotes,
          player3HasVoted: result.player3HasVoted,
          player3ReceivedVotes: result.player3ReceivedVotes,
          player4HasVoted: result.player4HasVoted,
          player4ReceivedVotes: result.player4ReceivedVotes,
          player5HasVoted: result.player5HasVoted,
          player5ReceivedVotes: result.player5ReceivedVotes,
          player6HasVoted: result.player6HasVoted,
          player6ReceivedVotes: result.player6ReceivedVotes,
          playersVoted: result.playersVoted,
          playersAlive: result.playersAlive,
          justEliminatedPlayer: result.justEliminatedPlayer,
          mafiaCommitment: new BinaryStateValue(result.mafiaCommitment),
          doctorCommitment: new BinaryStateValue(result.doctorCommitment),
          mafiaVictim: result.mafiaVictim,
          doctorPatient: result.doctorPatient,
          playersJoined: result.playersJoined,
          gameState: result.gameState,
        }
      },
      /**
       * Get the current value of the creatorAddress key in global state
       */
      creatorAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("creatorAddress")) as string | undefined },
      /**
       * Get the current value of the player1AlgoAddr key in global state
       */
      player1AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player1AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player2AlgoAddr key in global state
       */
      player2AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player2AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player3AlgoAddr key in global state
       */
      player3AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player3AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player4AlgoAddr key in global state
       */
      player4AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player4AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player5AlgoAddr key in global state
       */
      player5AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player5AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the player6AlgoAddr key in global state
       */
      player6AlgoAddr: async (): Promise<[string, bigint] | undefined> => { return (await this.appClient.state.global.getValue("player6AlgoAddr")) as [string, bigint] | undefined },
      /**
       * Get the current value of the mafia key in global state
       */
      mafia: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("mafia")) as string | undefined },
      /**
       * Get the current value of the mafiaKeyImage key in global state
       */
      mafiaKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("mafiaKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the doctor key in global state
       */
      doctor: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("doctor")) as string | undefined },
      /**
       * Get the current value of the doctorKeyImage key in global state
       */
      doctorKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("doctorKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the farmer key in global state
       */
      farmer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("farmer")) as string | undefined },
      /**
       * Get the current value of the farmerKeyImage key in global state
       */
      farmerKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("farmerKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the butcher key in global state
       */
      butcher: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("butcher")) as string | undefined },
      /**
       * Get the current value of the butcherKeyImage key in global state
       */
      butcherKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("butcherKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the innkeep key in global state
       */
      innkeep: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("innkeep")) as string | undefined },
      /**
       * Get the current value of the innkeepKeyImage key in global state
       */
      innkeepKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("innkeepKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the grocer key in global state
       */
      grocer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("grocer")) as string | undefined },
      /**
       * Get the current value of the grocerKeyImage key in global state
       */
      grocerKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("grocerKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the lsigFunderAddress key in global state
       */
      lsigFunderAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("lsigFunderAddress")) as string | undefined },
      /**
       * Get the current value of the player1HasVoted key in global state
       */
      player1HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player1HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player1ReceivedVotes key in global state
       */
      player1ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player1ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player2HasVoted key in global state
       */
      player2HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player2HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player2ReceivedVotes key in global state
       */
      player2ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player2ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player3HasVoted key in global state
       */
      player3HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player3HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player3ReceivedVotes key in global state
       */
      player3ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player3ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player4HasVoted key in global state
       */
      player4HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player4HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player4ReceivedVotes key in global state
       */
      player4ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player4ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player5HasVoted key in global state
       */
      player5HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player5HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player5ReceivedVotes key in global state
       */
      player5ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player5ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player6HasVoted key in global state
       */
      player6HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player6HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player6ReceivedVotes key in global state
       */
      player6ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player6ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the playersVoted key in global state
       */
      playersVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersVoted")) as bigint | undefined },
      /**
       * Get the current value of the playersAlive key in global state
       */
      playersAlive: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersAlive")) as bigint | undefined },
      /**
       * Get the current value of the justEliminatedPlayer key in global state
       */
      justEliminatedPlayer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("justEliminatedPlayer")) as string | undefined },
      /**
       * Get the current value of the mafiaCommitment key in global state
       */
      mafiaCommitment: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("mafiaCommitment")) as Uint8Array | undefined) },
      /**
       * Get the current value of the doctorCommitment key in global state
       */
      doctorCommitment: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("doctorCommitment")) as Uint8Array | undefined) },
      /**
       * Get the current value of the mafiaVictim key in global state
       */
      mafiaVictim: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("mafiaVictim")) as string | undefined },
      /**
       * Get the current value of the doctorPatient key in global state
       */
      doctorPatient: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("doctorPatient")) as string | undefined },
      /**
       * Get the current value of the playersJoined key in global state
       */
      playersJoined: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersJoined")) as bigint | undefined },
      /**
       * Get the current value of the gameState key in global state
       */
      gameState: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("gameState")) as bigint | undefined },
    },
    /**
     * Methods to access box state for the current TownHall app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
        }
      },
      /**
       * Get values from the quickAccessPKBoxes map in box state
       */
      quickAccessPkBoxes: {
        /**
         * Get all current values of the quickAccessPKBoxes map in box state
         */
        getMap: async (): Promise<Map<bigint, Uint8Array>> => { return (await this.appClient.state.box.getMap("quickAccessPKBoxes")) as Map<bigint, Uint8Array> },
        /**
         * Get a current value of the quickAccessPKBoxes map by key from box state
         */
        value: async (key: bigint | number): Promise<Uint8Array | undefined> => { return await this.appClient.state.box.getMapValue("quickAccessPKBoxes", key) as Uint8Array | undefined },
      },
      /**
       * Get values from the hashFilter map in box state
       */
      hashFilter: {
        /**
         * Get all current values of the hashFilter map in box state
         */
        getMap: async (): Promise<Map<Uint8Array, Uint8Array>> => { return (await this.appClient.state.box.getMap("hashFilter")) as Map<Uint8Array, Uint8Array> },
        /**
         * Get a current value of the hashFilter map by key from box state
         */
        value: async (key: Uint8Array | string): Promise<Uint8Array | undefined> => { return await this.appClient.state.box.getMapValue("hashFilter", key) as Uint8Array | undefined },
      },
    },
  }

  public newGroup(): TownHallComposer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a dummyOpUp(uint64)uint64 method call against the TownHall contract
       */
      dummyOpUp(params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dummyOpUp(params)))
        resultMappers.push((v) => client.decodeReturnValue('dummyOpUp(uint64)uint64', v))
        return this
      },
      /**
       * Add a dlog(byte[],byte[],byte[],byte[])bool method call against the TownHall contract
       */
      dlog(params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dlog(params)))
        resultMappers.push((v) => client.decodeReturnValue('dlog(byte[],byte[],byte[],byte[])bool', v))
        return this
      },
      /**
       * Add a hashPointToPoint(byte[])byte[] method call against the TownHall contract
       */
      hashPointToPoint(params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hashPointToPoint(params)))
        resultMappers.push((v) => client.decodeReturnValue('hashPointToPoint(byte[])byte[]', v))
        return this
      },
      /**
       * Add a getGameState()uint64 method call against the TownHall contract
       */
      getGameState(params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getGameState(params)))
        resultMappers.push((v) => client.decodeReturnValue('getGameState()uint64', v))
        return this
      },
      /**
       * Add a setLSIGFunderAddress(address)void method call against the TownHall contract
       */
      setLsigFunderAddress(params: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setLsigFunderAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a joinGameLobby(pay,byte[])void method call against the TownHall contract
       */
      joinGameLobby(params: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.joinGameLobby(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void method call against the TownHall contract
       */
      assignRole(params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.assignRole(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageVote(uint64)void method call against the TownHall contract
       */
      dayStageVote(params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageVote(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageEliminate()void method call against the TownHall contract
       */
      dayStageEliminate(params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageEliminate(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageUnmasking(byte[])void method call against the TownHall contract
       */
      dayStageUnmasking(params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageUnmasking(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a nightStageMafiaCommit(byte[])void method call against the TownHall contract
       */
      nightStageMafiaCommit(params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.nightStageMafiaCommit(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a nightStageDoctorCommit(byte[])void method call against the TownHall contract
       */
      nightStageDoctorCommit(params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.nightStageDoctorCommit(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageMafiaReveal(address,byte[32])void method call against the TownHall contract
       */
      dawnStageMafiaReveal(params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageMafiaReveal(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageDoctorReveal(address,byte[32])void method call against the TownHall contract
       */
      dawnStageDoctorReveal(params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageDoctorReveal(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageDeadOrSaved()void method call against the TownHall contract
       */
      dawnStageDeadOrSaved(params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageDeadOrSaved(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageUnmasking(byte[])void method call against the TownHall contract
       */
      dawnStageUnmasking(params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageUnmasking(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a gameOver()void method call against the TownHall contract
       */
      gameOver(params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.gameOver(params)))
        resultMappers.push(undefined)
        return this
      },
      get delete() {
        return {
          deleteApplication: (params: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']>) => {
            promiseChain = promiseChain.then(async () => composer.addAppDeleteMethodCall(await client.params.delete.deleteApplication(params)))
            resultMappers.push(undefined)
            return this
          },
        }
      },
      /**
       * Add a clear state call to the TownHall contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as TownHallComposer
  }
}
export type TownHallComposer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the dummyOpUp(uint64)uint64 ABI method.
   *
  * Dummy Op Up
  Dummy operation to get more opcode budget
  - The number to return, necssary to deduplicate the name

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dummyOpUp(params?: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']>): TownHallComposer<[...TReturns, TownHallReturns['dummyOpUp(uint64)uint64'] | undefined]>

  /**
   * Calls the dlog(byte[],byte[],byte[],byte[])bool ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dlog(params?: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']>): TownHallComposer<[...TReturns, TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool'] | undefined]>

  /**
   * Calls the hashPointToPoint(byte[])byte[] ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hashPointToPoint(params?: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']>): TownHallComposer<[...TReturns, TownHallReturns['hashPointToPoint(byte[])byte[]'] | undefined]>

  /**
   * Calls the getGameState()uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getGameState(params?: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']>): TownHallComposer<[...TReturns, TownHallReturns['getGameState()uint64'] | undefined]>

  /**
   * Calls the setLSIGFunderAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setLsigFunderAddress(params?: CallParams<TownHallArgs['obj']['setLSIGFunderAddress(address)void'] | TownHallArgs['tuple']['setLSIGFunderAddress(address)void']>): TownHallComposer<[...TReturns, TownHallReturns['setLSIGFunderAddress(address)void'] | undefined]>

  /**
   * Calls the joinGameLobby(pay,byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  joinGameLobby(params?: CallParams<TownHallArgs['obj']['joinGameLobby(pay,byte[])void'] | TownHallArgs['tuple']['joinGameLobby(pay,byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['joinGameLobby(pay,byte[])void'] | undefined]>

  /**
   * Calls the assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  assignRole(params?: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void']>): TownHallComposer<[...TReturns, TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay,pay)void'] | undefined]>

  /**
   * Calls the dayStageVote(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageVote(params?: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageVote(uint64)void'] | undefined]>

  /**
   * Calls the dayStageEliminate()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageEliminate(params?: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageEliminate()void'] | undefined]>

  /**
   * Calls the dayStageUnmasking(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageUnmasking(params?: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageUnmasking(byte[])void'] | undefined]>

  /**
   * Calls the nightStageMafiaCommit(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  nightStageMafiaCommit(params?: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['nightStageMafiaCommit(byte[])void'] | undefined]>

  /**
   * Calls the nightStageDoctorCommit(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  nightStageDoctorCommit(params?: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['nightStageDoctorCommit(byte[])void'] | undefined]>

  /**
   * Calls the dawnStageMafiaReveal(address,byte[32])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageMafiaReveal(params?: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageMafiaReveal(address,byte[32])void'] | undefined]>

  /**
   * Calls the dawnStageDoctorReveal(address,byte[32])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageDoctorReveal(params?: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageDoctorReveal(address,byte[32])void'] | undefined]>

  /**
   * Calls the dawnStageDeadOrSaved()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageDeadOrSaved(params?: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageDeadOrSaved()void'] | undefined]>

  /**
   * Calls the dawnStageUnmasking(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageUnmasking(params?: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageUnmasking(byte[])void'] | undefined]>

  /**
   * Calls the gameOver()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  gameOver(params?: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']>): TownHallComposer<[...TReturns, TownHallReturns['gameOver()void'] | undefined]>

  /**
   * Gets available delete methods
   */
  readonly delete: {
    /**
     * Deletes an existing instance of the TownHall smart contract using the deleteApplication()void ABI method.
     *
     * @param args The arguments for the smart contract call
     * @param params Any additional parameters for the call
     * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
     */
    deleteApplication(params?: CallParams<TownHallArgs['obj']['deleteApplication()void'] | TownHallArgs['tuple']['deleteApplication()void']>): TownHallComposer<[...TReturns, TownHallReturns['deleteApplication()void'] | undefined]>
  }

  /**
   * Makes a clear_state call to an existing instance of the TownHall smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): TownHallComposer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): TownHallComposer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<TownHallComposerResults<TReturns>>
}
export type TownHallComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

